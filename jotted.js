(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Jotted = factory());
}(this, (function () { 'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function createCommonjsModule(fn) {
	  var module = { exports: {} };
		return fn(module, module.exports), module.exports;
	}

	function commonjsRequire (target) {
		throw new Error('Could not dynamically require "' + target + '". Please configure the dynamicRequireTargets option of @rollup/plugin-commonjs appropriately for this require call to behave properly.');
	}

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

	var get = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = Object.getOwnPropertyDescriptor(object, property);

	  if (desc === undefined) {
	    var parent = Object.getPrototypeOf(object);

	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;

	    if (getter === undefined) {
	      return undefined;
	    }

	    return getter.call(receiver);
	  }
	};

	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};

	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};

	var slicedToArray = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;

	    try {
	      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);

	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }

	    return _arr;
	  }

	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if (Symbol.iterator in Object(arr)) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

	var toConsumableArray = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

	    return arr2;
	  } else {
	    return Array.from(arr);
	  }
	};

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var runtime = createCommonjsModule(function (module) {
	  !function (global) {

	    var Op = Object.prototype;
	    var hasOwn = Op.hasOwnProperty;
	    var undefined$1; // More compressible than void 0.
	    var $Symbol = typeof Symbol === "function" ? Symbol : {};
	    var iteratorSymbol = $Symbol.iterator || "@@iterator";
	    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
	    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	    var runtime = global.regeneratorRuntime;
	    if (runtime) {
	      {
	        // If regeneratorRuntime is defined globally and we're in a module,
	        // make the exports object identical to regeneratorRuntime.
	        module.exports = runtime;
	      }
	      // Don't bother evaluating the rest of this file if the runtime was
	      // already defined globally.
	      return;
	    }

	    // Define the runtime globally (as expected by generated code) as either
	    // module.exports (if we're in a module) or a new, empty object.
	    runtime = global.regeneratorRuntime =  module.exports ;

	    function wrap(innerFn, outerFn, self, tryLocsList) {
	      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	      var generator = Object.create(protoGenerator.prototype);
	      var context = new Context(tryLocsList || []);

	      // The ._invoke method unifies the implementations of the .next,
	      // .throw, and .return methods.
	      generator._invoke = makeInvokeMethod(innerFn, self, context);

	      return generator;
	    }
	    runtime.wrap = wrap;

	    // Try/catch helper to minimize deoptimizations. Returns a completion
	    // record like context.tryEntries[i].completion. This interface could
	    // have been (and was previously) designed to take a closure to be
	    // invoked without arguments, but in all the cases we care about we
	    // already have an existing method we want to call, so there's no need
	    // to create a new function object. We can even get away with assuming
	    // the method takes exactly one argument, since that happens to be true
	    // in every case, so we don't have to touch the arguments object. The
	    // only additional allocation required is the completion record, which
	    // has a stable shape and so hopefully should be cheap to allocate.
	    function tryCatch(fn, obj, arg) {
	      try {
	        return { type: "normal", arg: fn.call(obj, arg) };
	      } catch (err) {
	        return { type: "throw", arg: err };
	      }
	    }

	    var GenStateSuspendedStart = "suspendedStart";
	    var GenStateSuspendedYield = "suspendedYield";
	    var GenStateExecuting = "executing";
	    var GenStateCompleted = "completed";

	    // Returning this object from the innerFn has the same effect as
	    // breaking out of the dispatch switch statement.
	    var ContinueSentinel = {};

	    // Dummy constructor functions that we use as the .constructor and
	    // .constructor.prototype properties for functions that return Generator
	    // objects. For full spec compliance, you may wish to configure your
	    // minifier not to mangle the names of these two functions.
	    function Generator() {}
	    function GeneratorFunction() {}
	    function GeneratorFunctionPrototype() {}

	    // This is a polyfill for %IteratorPrototype% for environments that
	    // don't natively support it.
	    var IteratorPrototype = {};
	    IteratorPrototype[iteratorSymbol] = function () {
	      return this;
	    };

	    var getProto = Object.getPrototypeOf;
	    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	      // This environment has a native %IteratorPrototype%; use it instead
	      // of the polyfill.
	      IteratorPrototype = NativeIteratorPrototype;
	    }

	    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
	    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	    GeneratorFunctionPrototype.constructor = GeneratorFunction;
	    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

	    // Helper for defining the .next, .throw, and .return methods of the
	    // Iterator interface in terms of a single ._invoke method.
	    function defineIteratorMethods(prototype) {
	      ["next", "throw", "return"].forEach(function (method) {
	        prototype[method] = function (arg) {
	          return this._invoke(method, arg);
	        };
	      });
	    }

	    runtime.isGeneratorFunction = function (genFun) {
	      var ctor = typeof genFun === "function" && genFun.constructor;
	      return ctor ? ctor === GeneratorFunction ||
	      // For the native GeneratorFunction constructor, the best we can
	      // do is to check its .name property.
	      (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
	    };

	    runtime.mark = function (genFun) {
	      if (Object.setPrototypeOf) {
	        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	      } else {
	        genFun.__proto__ = GeneratorFunctionPrototype;
	        if (!(toStringTagSymbol in genFun)) {
	          genFun[toStringTagSymbol] = "GeneratorFunction";
	        }
	      }
	      genFun.prototype = Object.create(Gp);
	      return genFun;
	    };

	    // Within the body of any async function, `await x` is transformed to
	    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	    // `hasOwn.call(value, "__await")` to determine if the yielded value is
	    // meant to be awaited.
	    runtime.awrap = function (arg) {
	      return { __await: arg };
	    };

	    function AsyncIterator(generator) {
	      function invoke(method, arg, resolve, reject) {
	        var record = tryCatch(generator[method], generator, arg);
	        if (record.type === "throw") {
	          reject(record.arg);
	        } else {
	          var result = record.arg;
	          var value = result.value;
	          if (value && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && hasOwn.call(value, "__await")) {
	            return Promise.resolve(value.__await).then(function (value) {
	              invoke("next", value, resolve, reject);
	            }, function (err) {
	              invoke("throw", err, resolve, reject);
	            });
	          }

	          return Promise.resolve(value).then(function (unwrapped) {
	            // When a yielded Promise is resolved, its final value becomes
	            // the .value of the Promise<{value,done}> result for the
	            // current iteration. If the Promise is rejected, however, the
	            // result for this iteration will be rejected with the same
	            // reason. Note that rejections of yielded Promises are not
	            // thrown back into the generator function, as is the case
	            // when an awaited Promise is rejected. This difference in
	            // behavior between yield and await is important, because it
	            // allows the consumer to decide what to do with the yielded
	            // rejection (swallow it and continue, manually .throw it back
	            // into the generator, abandon iteration, whatever). With
	            // await, by contrast, there is no opportunity to examine the
	            // rejection reason outside the generator function, so the
	            // only option is to throw it from the await expression, and
	            // let the generator function handle the exception.
	            result.value = unwrapped;
	            resolve(result);
	          }, reject);
	        }
	      }

	      var previousPromise;

	      function enqueue(method, arg) {
	        function callInvokeWithMethodAndArg() {
	          return new Promise(function (resolve, reject) {
	            invoke(method, arg, resolve, reject);
	          });
	        }

	        return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
	        // Avoid propagating failures to Promises returned by later
	        // invocations of the iterator.
	        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
	      }

	      // Define the unified helper method that is used to implement .next,
	      // .throw, and .return (see defineIteratorMethods).
	      this._invoke = enqueue;
	    }

	    defineIteratorMethods(AsyncIterator.prototype);
	    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
	      return this;
	    };
	    runtime.AsyncIterator = AsyncIterator;

	    // Note that simple async functions are implemented on top of
	    // AsyncIterator objects; they just return a Promise for the value of
	    // the final result produced by the iterator.
	    runtime.async = function (innerFn, outerFn, self, tryLocsList) {
	      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

	      return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function (result) {
	        return result.done ? result.value : iter.next();
	      });
	    };

	    function makeInvokeMethod(innerFn, self, context) {
	      var state = GenStateSuspendedStart;

	      return function invoke(method, arg) {
	        if (state === GenStateExecuting) {
	          throw new Error("Generator is already running");
	        }

	        if (state === GenStateCompleted) {
	          if (method === "throw") {
	            throw arg;
	          }

	          // Be forgiving, per 25.3.3.3.3 of the spec:
	          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	          return doneResult();
	        }

	        context.method = method;
	        context.arg = arg;

	        while (true) {
	          var delegate = context.delegate;
	          if (delegate) {
	            var delegateResult = maybeInvokeDelegate(delegate, context);
	            if (delegateResult) {
	              if (delegateResult === ContinueSentinel) continue;
	              return delegateResult;
	            }
	          }

	          if (context.method === "next") {
	            // Setting context._sent for legacy support of Babel's
	            // function.sent implementation.
	            context.sent = context._sent = context.arg;
	          } else if (context.method === "throw") {
	            if (state === GenStateSuspendedStart) {
	              state = GenStateCompleted;
	              throw context.arg;
	            }

	            context.dispatchException(context.arg);
	          } else if (context.method === "return") {
	            context.abrupt("return", context.arg);
	          }

	          state = GenStateExecuting;

	          var record = tryCatch(innerFn, self, context);
	          if (record.type === "normal") {
	            // If an exception is thrown from innerFn, we leave state ===
	            // GenStateExecuting and loop back for another invocation.
	            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

	            if (record.arg === ContinueSentinel) {
	              continue;
	            }

	            return {
	              value: record.arg,
	              done: context.done
	            };
	          } else if (record.type === "throw") {
	            state = GenStateCompleted;
	            // Dispatch the exception by looping back around to the
	            // context.dispatchException(context.arg) call above.
	            context.method = "throw";
	            context.arg = record.arg;
	          }
	        }
	      };
	    }

	    // Call delegate.iterator[context.method](context.arg) and handle the
	    // result, either by returning a { value, done } result from the
	    // delegate iterator, or by modifying context.method and context.arg,
	    // setting context.delegate to null, and returning the ContinueSentinel.
	    function maybeInvokeDelegate(delegate, context) {
	      var method = delegate.iterator[context.method];
	      if (method === undefined$1) {
	        // A .throw or .return when the delegate iterator has no .throw
	        // method always terminates the yield* loop.
	        context.delegate = null;

	        if (context.method === "throw") {
	          if (delegate.iterator.return) {
	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            context.method = "return";
	            context.arg = undefined$1;
	            maybeInvokeDelegate(delegate, context);

	            if (context.method === "throw") {
	              // If maybeInvokeDelegate(context) changed context.method from
	              // "return" to "throw", let that override the TypeError below.
	              return ContinueSentinel;
	            }
	          }

	          context.method = "throw";
	          context.arg = new TypeError("The iterator does not provide a 'throw' method");
	        }

	        return ContinueSentinel;
	      }

	      var record = tryCatch(method, delegate.iterator, context.arg);

	      if (record.type === "throw") {
	        context.method = "throw";
	        context.arg = record.arg;
	        context.delegate = null;
	        return ContinueSentinel;
	      }

	      var info = record.arg;

	      if (!info) {
	        context.method = "throw";
	        context.arg = new TypeError("iterator result is not an object");
	        context.delegate = null;
	        return ContinueSentinel;
	      }

	      if (info.done) {
	        // Assign the result of the finished delegate to the temporary
	        // variable specified by delegate.resultName (see delegateYield).
	        context[delegate.resultName] = info.value;

	        // Resume execution at the desired location (see delegateYield).
	        context.next = delegate.nextLoc;

	        // If context.method was "throw" but the delegate handled the
	        // exception, let the outer generator proceed normally. If
	        // context.method was "next", forget context.arg since it has been
	        // "consumed" by the delegate iterator. If context.method was
	        // "return", allow the original .return call to continue in the
	        // outer generator.
	        if (context.method !== "return") {
	          context.method = "next";
	          context.arg = undefined$1;
	        }
	      } else {
	        // Re-yield the result returned by the delegate method.
	        return info;
	      }

	      // The delegate iterator is finished, so forget it and continue with
	      // the outer generator.
	      context.delegate = null;
	      return ContinueSentinel;
	    }

	    // Define Generator.prototype.{next,throw,return} in terms of the
	    // unified ._invoke helper method.
	    defineIteratorMethods(Gp);

	    Gp[toStringTagSymbol] = "Generator";

	    // A Generator should always return itself as the iterator object when the
	    // @@iterator function is called on it. Some browsers' implementations of the
	    // iterator prototype chain incorrectly implement this, causing the Generator
	    // object to not be returned from this call. This ensures that doesn't happen.
	    // See https://github.com/facebook/regenerator/issues/274 for more details.
	    Gp[iteratorSymbol] = function () {
	      return this;
	    };

	    Gp.toString = function () {
	      return "[object Generator]";
	    };

	    function pushTryEntry(locs) {
	      var entry = { tryLoc: locs[0] };

	      if (1 in locs) {
	        entry.catchLoc = locs[1];
	      }

	      if (2 in locs) {
	        entry.finallyLoc = locs[2];
	        entry.afterLoc = locs[3];
	      }

	      this.tryEntries.push(entry);
	    }

	    function resetTryEntry(entry) {
	      var record = entry.completion || {};
	      record.type = "normal";
	      delete record.arg;
	      entry.completion = record;
	    }

	    function Context(tryLocsList) {
	      // The root entry object (effectively a try statement without a catch
	      // or a finally block) gives us a place to store values thrown from
	      // locations where there is no enclosing try statement.
	      this.tryEntries = [{ tryLoc: "root" }];
	      tryLocsList.forEach(pushTryEntry, this);
	      this.reset(true);
	    }

	    runtime.keys = function (object) {
	      var keys = [];
	      for (var key in object) {
	        keys.push(key);
	      }
	      keys.reverse();

	      // Rather than returning an object with a next method, we keep
	      // things simple and return the next function itself.
	      return function next() {
	        while (keys.length) {
	          var key = keys.pop();
	          if (key in object) {
	            next.value = key;
	            next.done = false;
	            return next;
	          }
	        }

	        // To avoid creating an additional object, we just hang the .value
	        // and .done properties off the next function object itself. This
	        // also ensures that the minifier will not anonymize the function.
	        next.done = true;
	        return next;
	      };
	    };

	    function values(iterable) {
	      if (iterable) {
	        var iteratorMethod = iterable[iteratorSymbol];
	        if (iteratorMethod) {
	          return iteratorMethod.call(iterable);
	        }

	        if (typeof iterable.next === "function") {
	          return iterable;
	        }

	        if (!isNaN(iterable.length)) {
	          var i = -1,
	              next = function next() {
	            while (++i < iterable.length) {
	              if (hasOwn.call(iterable, i)) {
	                next.value = iterable[i];
	                next.done = false;
	                return next;
	              }
	            }

	            next.value = undefined$1;
	            next.done = true;

	            return next;
	          };

	          return next.next = next;
	        }
	      }

	      // Return an iterator with no values.
	      return { next: doneResult };
	    }
	    runtime.values = values;

	    function doneResult() {
	      return { value: undefined$1, done: true };
	    }

	    Context.prototype = {
	      constructor: Context,

	      reset: function reset(skipTempReset) {
	        this.prev = 0;
	        this.next = 0;
	        // Resetting context._sent for legacy support of Babel's
	        // function.sent implementation.
	        this.sent = this._sent = undefined$1;
	        this.done = false;
	        this.delegate = null;

	        this.method = "next";
	        this.arg = undefined$1;

	        this.tryEntries.forEach(resetTryEntry);

	        if (!skipTempReset) {
	          for (var name in this) {
	            // Not sure about the optimal order of these conditions:
	            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
	              this[name] = undefined$1;
	            }
	          }
	        }
	      },

	      stop: function stop() {
	        this.done = true;

	        var rootEntry = this.tryEntries[0];
	        var rootRecord = rootEntry.completion;
	        if (rootRecord.type === "throw") {
	          throw rootRecord.arg;
	        }

	        return this.rval;
	      },

	      dispatchException: function dispatchException(exception) {
	        if (this.done) {
	          throw exception;
	        }

	        var context = this;
	        function handle(loc, caught) {
	          record.type = "throw";
	          record.arg = exception;
	          context.next = loc;

	          if (caught) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            context.method = "next";
	            context.arg = undefined$1;
	          }

	          return !!caught;
	        }

	        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	          var entry = this.tryEntries[i];
	          var record = entry.completion;

	          if (entry.tryLoc === "root") {
	            // Exception thrown outside of any try block that could handle
	            // it, so set the completion value of the entire function to
	            // throw the exception.
	            return handle("end");
	          }

	          if (entry.tryLoc <= this.prev) {
	            var hasCatch = hasOwn.call(entry, "catchLoc");
	            var hasFinally = hasOwn.call(entry, "finallyLoc");

	            if (hasCatch && hasFinally) {
	              if (this.prev < entry.catchLoc) {
	                return handle(entry.catchLoc, true);
	              } else if (this.prev < entry.finallyLoc) {
	                return handle(entry.finallyLoc);
	              }
	            } else if (hasCatch) {
	              if (this.prev < entry.catchLoc) {
	                return handle(entry.catchLoc, true);
	              }
	            } else if (hasFinally) {
	              if (this.prev < entry.finallyLoc) {
	                return handle(entry.finallyLoc);
	              }
	            } else {
	              throw new Error("try statement without catch or finally");
	            }
	          }
	        }
	      },

	      abrupt: function abrupt(type, arg) {
	        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	          var entry = this.tryEntries[i];
	          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
	            var finallyEntry = entry;
	            break;
	          }
	        }

	        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
	          // Ignore the finally entry if control is not jumping to a
	          // location outside the try/catch block.
	          finallyEntry = null;
	        }

	        var record = finallyEntry ? finallyEntry.completion : {};
	        record.type = type;
	        record.arg = arg;

	        if (finallyEntry) {
	          this.method = "next";
	          this.next = finallyEntry.finallyLoc;
	          return ContinueSentinel;
	        }

	        return this.complete(record);
	      },

	      complete: function complete(record, afterLoc) {
	        if (record.type === "throw") {
	          throw record.arg;
	        }

	        if (record.type === "break" || record.type === "continue") {
	          this.next = record.arg;
	        } else if (record.type === "return") {
	          this.rval = this.arg = record.arg;
	          this.method = "return";
	          this.next = "end";
	        } else if (record.type === "normal" && afterLoc) {
	          this.next = afterLoc;
	        }

	        return ContinueSentinel;
	      },

	      finish: function finish(finallyLoc) {
	        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	          var entry = this.tryEntries[i];
	          if (entry.finallyLoc === finallyLoc) {
	            this.complete(entry.completion, entry.afterLoc);
	            resetTryEntry(entry);
	            return ContinueSentinel;
	          }
	        }
	      },

	      "catch": function _catch(tryLoc) {
	        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	          var entry = this.tryEntries[i];
	          if (entry.tryLoc === tryLoc) {
	            var record = entry.completion;
	            if (record.type === "throw") {
	              var thrown = record.arg;
	              resetTryEntry(entry);
	            }
	            return thrown;
	          }
	        }

	        // The context.catch method must only be called with a location
	        // argument that corresponds to a known catch block.
	        throw new Error("illegal catch attempt");
	      },

	      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
	        this.delegate = {
	          iterator: values(iterable),
	          resultName: resultName,
	          nextLoc: nextLoc
	        };

	        if (this.method === "next") {
	          // Deliberately forget the last sent value so that we don't
	          // accidentally pass it on to the delegate.
	          this.arg = undefined$1;
	        }

	        return ContinueSentinel;
	      }
	    };
	  }(
	  // In sloppy mode, unbound `this` refers to the global object, fallback to
	  // Function constructor if we're in global strict mode. That is sadly a form
	  // of indirect eval which violates Content Security Policy.
	  function () {
	    return this;
	  }() || Function("return this")());
	});

	/* util
	 */

	function extend() {
	  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  var extended = {};
	  // clone object
	  Object.keys(obj).forEach(function (key) {
	    extended[key] = obj[key];
	  });

	  // copy default keys where undefined
	  Object.keys(defaults).forEach(function (key) {
	    if (typeof extended[key] !== 'undefined') {
	      extended[key] = obj[key];
	    } else {
	      extended[key] = defaults[key];
	    }
	  });

	  return extended;
	}

	function fetch(url, callback) {
	  var xhr = new window.XMLHttpRequest();
	  xhr.open('GET', url);
	  xhr.responseType = 'text';

	  xhr.onload = function () {
	    if (xhr.status === 200) {
	      callback(null, xhr.responseText);
	    } else {
	      callback(url, xhr);
	    }
	  };

	  xhr.onerror = function (err) {
	    callback(err);
	  };

	  xhr.send();
	}

	function runCallback(index, params, arr, errors, callback) {
	  return function (err, res) {
	    if (err) {
	      errors.push(err);
	    }

	    index++;
	    if (index < arr.length) {
	      seqRunner(index, res, arr, errors, callback);
	    } else {
	      callback(errors, res);
	    }
	  };
	}

	function seqRunner(index, params, arr, errors, callback) {
	  // async
	  arr[index](params, runCallback.apply(this, arguments));
	}

	function seq(arr, params) {
	  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

	  var errors = [];

	  if (!arr.length) {
	    return callback(errors, params);
	  }

	  seqRunner(0, params, arr, errors, callback);
	}

	function debounce(fn, delay) {
	  var cooldown = null;
	  var multiple = null;
	  return function () {
	    var _this = this,
	        _arguments = arguments;

	    if (cooldown) {
	      multiple = true;
	    } else {
	      fn.apply(this, arguments);
	    }

	    clearTimeout(cooldown);

	    cooldown = setTimeout(function () {
	      if (multiple) {
	        fn.apply(_this, _arguments);
	      }

	      cooldown = null;
	      multiple = null;
	    }, delay);
	  };
	}

	function hasClass(node, className) {
	  if (!node.className) {
	    return false;
	  }
	  var tempClass = ' ' + node.className + ' ';
	  className = ' ' + className + ' ';

	  if (tempClass.indexOf(className) !== -1) {
	    return true;
	  }

	  return false;
	}

	function addClass(node, className) {
	  // class is already added
	  if (hasClass(node, className)) {
	    return node.className;
	  }

	  if (node.className) {
	    className = ' ' + className;
	  }

	  node.className += className;

	  return node.className;
	}

	function removeClass(node, className) {
	  var spaceBefore = ' ' + className;
	  var spaceAfter = className + ' ';

	  if (node.className.indexOf(spaceBefore) !== -1) {
	    node.className = node.className.replace(spaceBefore, '');
	  } else if (node.className.indexOf(spaceAfter) !== -1) {
	    node.className = node.className.replace(spaceAfter, '');
	  } else {
	    node.className = node.className.replace(className, '');
	  }

	  return node.className;
	}

	function data(node, attr) {
	  return node.getAttribute('data-' + attr);
	}

	// mode detection based on content type and file extension
	var defaultModemap = {
	  'html': 'html',
	  'css': 'css',
	  'js': 'javascript',
	  'less': 'less',
	  'styl': 'stylus',
	  'coffee': 'coffeescript',
	  'json': 'application/json',
	  'liquid': 'liquid',
	  'mson': 'json'
	};

	function getMode() {
	  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	  var file = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	  var customModemap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	  var modemap = extend(customModemap, defaultModemap);

	  // try the file extension
	  for (var key in modemap) {
	    var keyLength = key.length;
	    if (file.slice(-keyLength++) === '.' + key) {
	      return modemap[key];
	    }
	  }

	  // try the file type (html/css/js)
	  for (var _key in modemap) {
	    if (type === _key) {
	      return modemap[_key];
	    }
	  }

	  return type;
	}

	/* template
	 */

	function container(type1, type2) {
	  var type3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'json';

	  return '\n    <ul class="jotted-nav">\n      <li class="jotted-nav-item jotted-nav-item-input">\n        <a href="#" data-jotted-type="' + type1 + '">\n          Data\n        </a>\n      </li>\n      <li class="jotted-nav-item jotted-nav-item-template">\n        <a href="#" data-jotted-type="' + type2 + '">\n          Template\n        </a>\n      </li>\n      <li class="jotted-nav-item jotted-nav-item-result">\n        <a href="#" data-jotted-type="result">\n          Result (' + type2 + ')\n        </a>\n      </li>\n    </ul>   \n    <div class="jotted-pane jotted-pane-input" data-jotted-type="' + type1 + '" data-jotted-role="input"></div>\n    <div class="jotted-pane jotted-pane-template" data-jotted-type="' + type2 + '" data-jotted-role="template"></div>\n    <div class="jotted-pane jotted-pane-result" data-jotted-type="' + type3 + '" data-jotted-role="result"><div class="jotted-editor jotted-editor-' + type3 + '"><textarea data-jotted-type="' + type3 + '" data-jotted-role="result" data-jotted-file=""></textarea><div class="jotted-status"></div></div></div>\n  ';
	}

	function paneActiveClass(role) {
	  return 'jotted-pane-active-' + role;
	}

	function containerClass() {
	  return 'jotted';
	}

	function hasFileClass(type) {
	  return 'jotted-has-' + type;
	}

	function editorClass(type) {
	  return 'jotted-editor jotted-editor-' + type;
	}

	function editorContent(type, role) {
	  var fileUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

	  return '\n    <textarea data-jotted-type="' + type + '" data-jotted-role="' + role + '" data-jotted-file="' + fileUrl + '"></textarea>\n    <div class="jotted-status"></div>\n  ';
	}

	function statusMessage(err) {
	  return '\n    <p>' + err + '</p>\n  ';
	}

	function statusClass(type) {
	  return 'jotted-status-' + type;
	}

	function statusActiveClass(type) {
	  return 'jotted-status-active-' + type;
	}

	function pluginClass(name) {
	  return 'jotted-plugin-' + name;
	}

	function statusLoading(url) {
	  return 'Loading <strong>' + url + '</strong>..';
	}

	function statusFetchError(url) {
	  return 'There was an error loading <strong>' + url + '</strong>.';
	}

	/* plugin
	 */

	var plugins = [];

	function find(id) {
	  for (var pluginIndex in plugins) {
	    var plugin = plugins[pluginIndex];
	    if (plugin._id === id) {
	      return plugin;
	    }
	  }

	  // can't find plugin
	  throw new Error('Plugin ' + id + ' is not registered.');
	}

	function register(id, plugin) {
	  // private properties
	  plugin._id = id;
	  plugins.push(plugin);
	}

	// create a new instance of each plugin, on the jotted instance
	function init() {
	  var _this = this;

	  this._get('options').plugins.forEach(function (plugin) {
	    // check if plugin definition is string or object
	    var Plugin = void 0;
	    var pluginName = void 0;
	    var pluginOptions = {};
	    if (typeof plugin === 'string') {
	      pluginName = plugin;
	    } else if ((typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) === 'object') {
	      pluginName = plugin.name;
	      pluginOptions = plugin.options || {};
	    }

	    Plugin = find(pluginName);
	    _this._get('plugins')[pluginName] = new Plugin(_this, pluginOptions);

	    addClass(_this._get('$container'), pluginClass(pluginName));
	  });
	}

	/* pubsoup
	 */

	var PubSoup = function () {
	  function PubSoup() {
	    classCallCheck(this, PubSoup);

	    this.topics = {};
	    this.callbacks = {};
	  }

	  createClass(PubSoup, [{
	    key: 'find',
	    value: function find(query) {
	      this.topics[query] = this.topics[query] || [];
	      return this.topics[query];
	    }
	  }, {
	    key: 'subscribe',
	    value: function subscribe(topic, subscriber) {
	      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 90;

	      var foundTopic = this.find(topic);
	      subscriber._priority = priority;
	      foundTopic.push(subscriber);

	      // sort subscribers on priority
	      foundTopic.sort(function (a, b) {
	        return a._priority > b._priority ? 1 : b._priority > a._priority ? -1 : 0;
	      });
	    }

	    // removes a function from an array

	  }, {
	    key: 'remover',
	    value: function remover(arr, fn) {
	      arr.forEach(function () {
	        // if no fn is specified
	        // clean-up the array
	        if (!fn) {
	          arr.length = 0;
	          return;
	        }

	        // find the fn in the arr
	        var index = [].indexOf.call(arr, fn);

	        // we didn't find it in the array
	        if (index === -1) {
	          return;
	        }

	        arr.splice(index, 1);
	      });
	    }
	  }, {
	    key: 'unsubscribe',
	    value: function unsubscribe(topic, subscriber) {
	      // remove from subscribers
	      var foundTopic = this.find(topic);
	      this.remover(foundTopic, subscriber);

	      // remove from callbacks
	      this.callbacks[topic] = this.callbacks[topic] || [];
	      this.remover(this.callbacks[topic], subscriber);
	    }

	    // sequentially runs a method on all plugins

	  }, {
	    key: 'publish',
	    value: function publish(topic) {
	      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	      var foundTopic = this.find(topic);
	      var runList = [];

	      foundTopic.forEach(function (subscriber) {
	        runList.push(subscriber);
	      });

	      seq(runList, params, this.runCallbacks(topic));
	    }

	    // parallel run all .done callbacks

	  }, {
	    key: 'runCallbacks',
	    value: function runCallbacks(topic) {
	      var _this = this;

	      return function (err, params) {
	        _this.callbacks[topic] = _this.callbacks[topic] || [];

	        _this.callbacks[topic].forEach(function (c) {
	          c(err, params);
	        });
	      };
	    }

	    // attach a callback when a publish[topic] is done

	  }, {
	    key: 'done',
	    value: function done(topic) {
	      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

	      this.callbacks[topic] = this.callbacks[topic] || [];
	      this.callbacks[topic].push(callback);
	    }
	  }]);
	  return PubSoup;
	}();

	var browser=createCommonjsModule(function(module,exports){(function(f){{module.exports=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof commonjsRequire&&commonjsRequire;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof commonjsRequire&&commonjsRequire,i=0;i<t.length;i++){o(t[i]);}return o;}return r;}()({1:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */__export(require("./expressionFunctions"));__export(require("./constant"));__export(require("./expression"));__export(require("./expressionEvaluator"));__export(require("./expressionType"));__export(require("./extensions"));__export(require("./timeZoneConverter"));__export(require("./generated"));__export(require("./commonRegex"));__export(require("./options"));__export(require("./parser"));__export(require("./memory"));__export(require("./regexErrorListener"));__export(require("./datetimeFormatConverter"));__export(require("./functionTable"));__export(require("./converters"));__export(require("./expressionProperties"));var builtinFunctions_1=require("./builtinFunctions");exports.NumberTransformEvaluator=builtinFunctions_1.NumberTransformEvaluator;exports.NumericEvaluator=builtinFunctions_1.NumericEvaluator;exports.StringTransformEvaluator=builtinFunctions_1.StringTransformEvaluator;exports.ComparisonEvaluator=builtinFunctions_1.ComparisonEvaluator;exports.MultivariateNumericEvaluator=builtinFunctions_1.MultivariateNumericEvaluator;exports.TimeTransformEvaluator=builtinFunctions_1.TimeTransformEvaluator;__export(require("./functionUtils"));__export(require("./returnType"));__export(require("./localeInfo"));__export(require("./triggerTrees"));},{"./builtinFunctions":64,"./commonRegex":157,"./constant":158,"./converters":163,"./datetimeFormatConverter":169,"./expression":170,"./expressionEvaluator":171,"./expressionFunctions":172,"./expressionProperties":177,"./expressionType":183,"./extensions":184,"./functionTable":185,"./functionUtils":187,"./generated":190,"./localeInfo":191,"./memory":192,"./options":195,"./parser":200,"./regexErrorListener":203,"./returnType":204,"./timeZoneConverter":205,"./triggerTrees":207}],2:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var simpleObjectMemory_1=require("../memory/simpleObjectMemory");var returnType_1=require("../returnType");/**
	 * Used to access the variable value corresponding to the path.
	 */var Accessor=function(_expressionEvaluator_){inherits(Accessor,_expressionEvaluator_);/**
	     * Initializes a new instance of the [Accessor](xref:adaptive-expressions.Accessor) class.
	     */function Accessor(){classCallCheck(this,Accessor);return possibleConstructorReturn(this,(Accessor.__proto__||Object.getPrototypeOf(Accessor)).call(this,expressionType_1.ExpressionType.Accessor,Accessor.evaluator,returnType_1.ReturnType.Object,Accessor.validator));}/**
	     * @private
	     */createClass(Accessor,null,[{key:'evaluator',value:function evaluator(expression,state,options){var _functionUtils_1$Func=functionUtils_1.FunctionUtils.tryAccumulatePath(expression,state,options),path=_functionUtils_1$Func.path,left=_functionUtils_1$Func.left,error=_functionUtils_1$Func.error;if(error){return {value:undefined,error:error};}if(left==undefined){// fully converted to path, so we just delegate to memory scope
	return {value:functionUtils_internal_1.InternalFunctionUtils.wrapGetValue(state,path,options),error:undefined};}else {var _left$tryEvaluate=left.tryEvaluate(state,options),newScope=_left$tryEvaluate.value,err=_left$tryEvaluate.error;if(err){return {value:undefined,error:err};}return {value:functionUtils_internal_1.InternalFunctionUtils.wrapGetValue(new simpleObjectMemory_1.SimpleObjectMemory(newScope),path,options),error:undefined};}}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){var children=expression.children;if(children.length===0||children[0].type!==expressionType_1.ExpressionType.Constant||children[0].returnType!==returnType_1.ReturnType.String){throw new Error(expression+' must have a string as first argument.');}if(children.length>2){throw new Error(expression+' has more than 2 children.');}if(children.length===2&&(children[1].returnType&returnType_1.ReturnType.Object)===0){throw new Error(expression+' must have an object as its second argument.');}}}]);return Accessor;}(expressionEvaluator_1.ExpressionEvaluator);exports.Accessor=Accessor;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../memory/simpleObjectMemory":193,"../returnType":204}],3:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the result from adding two or more numbers (pure number case) or concatting two or more strings (other case).
	 */var Add=function(_expressionEvaluator_2){inherits(Add,_expressionEvaluator_2);/**
	     * Initializes a new instance of the [Add](xref:adaptive-expressions.Add) class.
	     */function Add(){classCallCheck(this,Add);return possibleConstructorReturn(this,(Add.__proto__||Object.getPrototypeOf(Add)).call(this,expressionType_1.ExpressionType.Add,Add.evaluator(),returnType_1.ReturnType.String|returnType_1.ReturnType.Number,Add.validator));}/**
	     * @private
	     */createClass(Add,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applySequenceWithError(function(args){var value=void 0;var error=void 0;var stringConcat=!functionUtils_1.FunctionUtils.isNumber(args[0])||!functionUtils_1.FunctionUtils.isNumber(args[1]);if((args[0]===null||args[0]===undefined)&&functionUtils_1.FunctionUtils.isNumber(args[1])||(args[1]===null||args[1]===undefined)&&functionUtils_1.FunctionUtils.isNumber(args[0])){error="Operator '+' or add cannot be applied to operands of type 'number' and null object.";}else if(stringConcat){if((args[0]===null||args[0]===undefined)&&(args[1]===null||args[1]===undefined)){value='';}else if(args[0]===null||args[0]===undefined){value=args[1].toString();}else if(args[1]===null||args[1]===undefined){value=args[0].toString();}else {value=args[0].toString()+args[1].toString();}}else {value=args[0]+args[1];}return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyNumberOrStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,Number.MAX_SAFE_INTEGER,returnType_1.ReturnType.String|returnType_1.ReturnType.Number);}}]);return Add;}(expressionEvaluator_1.ExpressionEvaluator);exports.Add=Add;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],4:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionType_1=require("../expressionType");var timeTransformEvaluator_1=require("./timeTransformEvaluator");/**
	 * Add a number of days to a timestamp.
	 */var AddDays=function(_timeTransformEvaluat){inherits(AddDays,_timeTransformEvaluat);/**
	     * Initializes a new instance of the [AddDays](xref:adaptive-expressions.AddDays) class.
	     */function AddDays(){classCallCheck(this,AddDays);return possibleConstructorReturn(this,(AddDays.__proto__||Object.getPrototypeOf(AddDays)).call(this,expressionType_1.ExpressionType.AddDays,function(ts,num){return moment_1.default(ts).utc().add(num,'d').toDate();}));}return AddDays;}(timeTransformEvaluator_1.TimeTransformEvaluator);exports.AddDays=AddDays;},{"../expressionType":183,"./timeTransformEvaluator":139,"moment":514}],5:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionType_1=require("../expressionType");var timeTransformEvaluator_1=require("./timeTransformEvaluator");/**
	 * Add a number of hours to a timestamp.
	 */var AddHours=function(_timeTransformEvaluat2){inherits(AddHours,_timeTransformEvaluat2);/**
	     * Initializes a new instance of the [AddHours](xref:adaptive-expressions.AddHours) class.
	     */function AddHours(){classCallCheck(this,AddHours);return possibleConstructorReturn(this,(AddHours.__proto__||Object.getPrototypeOf(AddHours)).call(this,expressionType_1.ExpressionType.AddHours,function(ts,num){return moment_1.default(ts).utc().add(num,'h').toDate();}));}return AddHours;}(timeTransformEvaluator_1.TimeTransformEvaluator);exports.AddHours=AddHours;},{"../expressionType":183,"./timeTransformEvaluator":139,"moment":514}],6:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionType_1=require("../expressionType");var timeTransformEvaluator_1=require("./timeTransformEvaluator");/**
	 * Add a number of minutes to a timestamp.
	 */var AddMinutes=function(_timeTransformEvaluat3){inherits(AddMinutes,_timeTransformEvaluat3);/**
	     * Initializes a new instance of the [AddMinutes](xref:adaptive-expressions.AddMinutes) class.
	     */function AddMinutes(){classCallCheck(this,AddMinutes);return possibleConstructorReturn(this,(AddMinutes.__proto__||Object.getPrototypeOf(AddMinutes)).call(this,expressionType_1.ExpressionType.AddMinutes,function(ts,num){return moment_1.default(ts).utc().add(num,'minutes').toDate();}));}return AddMinutes;}(timeTransformEvaluator_1.TimeTransformEvaluator);exports.AddMinutes=AddMinutes;},{"../expressionType":183,"./timeTransformEvaluator":139,"moment":514}],7:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the ordinal number of the input number.
	 */var AddOrdinal=function(_expressionEvaluator_3){inherits(AddOrdinal,_expressionEvaluator_3);/**
	     * Initializes a new instance of the [AddOrdinal](xref:adaptive-expressions.AddOrdinal) class.
	     */function AddOrdinal(){classCallCheck(this,AddOrdinal);return possibleConstructorReturn(this,(AddOrdinal.__proto__||Object.getPrototypeOf(AddOrdinal)).call(this,expressionType_1.ExpressionType.AddOrdinal,AddOrdinal.evaluator(),returnType_1.ReturnType.String,AddOrdinal.validator));}/**
	     * @private
	     */createClass(AddOrdinal,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return AddOrdinal.evalAddOrdinal(args[0]);},functionUtils_1.FunctionUtils.verifyInteger);}/**
	     * @private
	     */},{key:'evalAddOrdinal',value:function evalAddOrdinal(num){var hasResult=false;var ordinalResult=num.toString();if(num>0){switch(num%100){case 11:case 12:case 13:ordinalResult+='th';hasResult=true;break;}if(!hasResult){switch(num%10){case 1:ordinalResult+='st';break;case 2:ordinalResult+='nd';break;case 3:ordinalResult+='rd';break;default:ordinalResult+='th';break;}}}return ordinalResult;}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,1,1,returnType_1.ReturnType.Number);}}]);return AddOrdinal;}(expressionEvaluator_1.ExpressionEvaluator);exports.AddOrdinal=AddOrdinal;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],8:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Add a property and its value, or name-value pair, to a JSON object, and return the updated object.
	 * If the object already exists at runtime the function throws an error.
	 */var AddProperty=function(_expressionEvaluator_4){inherits(AddProperty,_expressionEvaluator_4);/**
	     * Initializes a new instance of the [AddProperty](xref:adaptive-expressions.AddProperty) class.
	     */function AddProperty(){classCallCheck(this,AddProperty);return possibleConstructorReturn(this,(AddProperty.__proto__||Object.getPrototypeOf(AddProperty)).call(this,expressionType_1.ExpressionType.AddProperty,AddProperty.evaluator(),returnType_1.ReturnType.Object,AddProperty.validator));}/**
	     * @private
	     */createClass(AddProperty,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var temp=args[0];var prop=String(args[1]);if(prop in temp){error=prop+' already exists';}else {temp[String(args[1])]=args[2];}return {value:temp,error:error};});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.Object,returnType_1.ReturnType.String,returnType_1.ReturnType.Object);}}]);return AddProperty;}(expressionEvaluator_1.ExpressionEvaluator);exports.AddProperty=AddProperty;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],9:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionType_1=require("../expressionType");var timeTransformEvaluator_1=require("./timeTransformEvaluator");/**
	 * Add a number of seconds to a timestamp.
	 */var AddSeconds=function(_timeTransformEvaluat4){inherits(AddSeconds,_timeTransformEvaluat4);/**
	     * Initializes a new instance of the [AddSeconds](xref:adaptive-expressions.AddSeconds) class.
	     */function AddSeconds(){classCallCheck(this,AddSeconds);return possibleConstructorReturn(this,(AddSeconds.__proto__||Object.getPrototypeOf(AddSeconds)).call(this,expressionType_1.ExpressionType.AddSeconds,function(ts,num){return moment_1.default(ts).utc().add(num,'seconds').toDate();}));}return AddSeconds;}(timeTransformEvaluator_1.TimeTransformEvaluator);exports.AddSeconds=AddSeconds;},{"../expressionType":183,"./timeTransformEvaluator":139,"moment":514}],10:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Add a number of time units to a timestamp.
	 */var AddToTime=function(_expressionEvaluator_5){inherits(AddToTime,_expressionEvaluator_5);/**
	     * Initializes a new instance of the [AddToTime](xref:adaptive-expressions.AddToTime) class.
	     */function AddToTime(){classCallCheck(this,AddToTime);return possibleConstructorReturn(this,(AddToTime.__proto__||Object.getPrototypeOf(AddToTime)).call(this,expressionType_1.ExpressionType.AddToTime,AddToTime.evaluator,returnType_1.ReturnType.String,AddToTime.validator));}/**
	     * @private
	     */createClass(AddToTime,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func2=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func2.args,childrenError=_functionUtils_1$Func2.error;var error=childrenError;if(!error){var format=args.length===4?functionUtils_1.FunctionUtils.timestampFormatter(args[3]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;if(typeof args[0]==='string'&&Number.isInteger(args[1])&&typeof args[2]==='string'){var _AddToTime$evalAddToT=AddToTime.evalAddToTime(args[0],args[1],args[2],format);value=_AddToTime$evalAddToT.value;error=_AddToTime$evalAddToT.error;}else {error=expression+' should contain an ISO format timestamp, a time interval integer, a string unit of time and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalAddToTime',value:function evalAddToTime(timeStamp,interval,timeUnit,format){var result=void 0;var _functionUtils_intern=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(timeStamp),parsed=_functionUtils_intern.value,parseError=_functionUtils_intern.error;var error=parseError;if(!error){var dt=moment_1.default(parsed).utc();var addedTime=dt;var timeUnitMark=void 0;switch(timeUnit){case'Second':{timeUnitMark='s';break;}case'Minute':{timeUnitMark='m';break;}case'Hour':{timeUnitMark='h';break;}case'Day':{timeUnitMark='d';break;}case'Week':{timeUnitMark='week';break;}case'Month':{timeUnitMark='month';break;}case'Year':{timeUnitMark='year';break;}default:{error=timeUnit+' is not valid time unit';break;}}if(!error){addedTime=dt.add(interval,timeUnitMark);var _functionUtils_intern2=functionUtils_internal_1.InternalFunctionUtils.returnFormattedTimeStampStr(addedTime,format);result=_functionUtils_intern2.value;error=_functionUtils_intern2.error;}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number,returnType_1.ReturnType.String);}}]);return AddToTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.AddToTime=AddToTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],11:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * Return true if all expressions are true or return false if at least one expression is false.
	 */var And=function(_expressionEvaluator_6){inherits(And,_expressionEvaluator_6);/**
	     * Initializes a new instance of the [And](xref:adaptive-expressions.And) class.
	     */function And(){classCallCheck(this,And);return possibleConstructorReturn(this,(And.__proto__||Object.getPrototypeOf(And)).call(this,expressionType_1.ExpressionType.And,And.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(And,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=true;var error=void 0;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=expression.children[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var child=_step.value;var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _child$tryEvaluate=child.tryEvaluate(state,newOptions);result=_child$tryEvaluate.value;error=_child$tryEvaluate.error;if(!error){if(functionUtils_internal_1.InternalFunctionUtils.isLogicTrue(result)){result=true;}else {result=false;break;}}else {result=false;error=undefined;break;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return {value:result,error:error};}}]);return And;}(expressionEvaluator_1.ExpressionEvaluator);exports.And=And;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../options":195,"../returnType":204}],12:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the average of a numeric array.
	 */var Average=function(_expressionEvaluator_7){inherits(Average,_expressionEvaluator_7);/**
	     * Initializes a new instance of the [Average](xref:adaptive-expressions.Average) class.
	     */function Average(){classCallCheck(this,Average);return possibleConstructorReturn(this,(Average.__proto__||Object.getPrototypeOf(Average)).call(this,expressionType_1.ExpressionType.Average,Average.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Average,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return args[0].reduce(function(x,y){return x+y;})/args[0].length;},functionUtils_1.FunctionUtils.verifyNumericList);}}]);return Average;}(expressionEvaluator_1.ExpressionEvaluator);exports.Average=Average;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],13:[function(require,module,exports){(function(Buffer){(function(){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the base64-encoded version of a string or byte array.
	 */var Base64=function(_expressionEvaluator_8){inherits(Base64,_expressionEvaluator_8);/**
	     * Initializes a new instance of the [Base64](xref:adaptive-expressions.Base64) class.
	     */function Base64(){classCallCheck(this,Base64);return possibleConstructorReturn(this,(Base64.__proto__||Object.getPrototypeOf(Base64)).call(this,expressionType_1.ExpressionType.Base64,Base64.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Base64,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var result=void 0;if(typeof args[0]==='string'){result=Buffer.from(args[0]).toString('base64');}if(args[0]instanceof Uint8Array){result=Buffer.from(args[0]).toString('base64');}return result;});}}]);return Base64;}(expressionEvaluator_1.ExpressionEvaluator);exports.Base64=Base64;}).call(this);}).call(this,require("buffer").Buffer);},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"buffer":368}],14:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");var atob=require("atob-lite");/**
	 * Return the binary array of a base64-encoded string.
	 */var Base64ToBinary=function(_expressionEvaluator_9){inherits(Base64ToBinary,_expressionEvaluator_9);/**
	     * Initializes a new instance of the [Base64ToBinary](xref:adaptive-expressions.Base64ToBinary) class.
	     */function Base64ToBinary(){classCallCheck(this,Base64ToBinary);return possibleConstructorReturn(this,(Base64ToBinary.__proto__||Object.getPrototypeOf(Base64ToBinary)).call(this,expressionType_1.ExpressionType.Base64ToBinary,Base64ToBinary.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Base64ToBinary,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var raw=atob(args[0].toString());return functionUtils_internal_1.InternalFunctionUtils.toBinary(raw);},functionUtils_1.FunctionUtils.verifyString);}}]);return Base64ToBinary;}(expressionEvaluator_1.ExpressionEvaluator);exports.Base64ToBinary=Base64ToBinary;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"atob-lite":365}],15:[function(require,module,exports){(function(Buffer){(function(){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the string version of a base64-encoded string, effectively decoding the base64 string.
	 */var Base64ToString=function(_expressionEvaluator_10){inherits(Base64ToString,_expressionEvaluator_10);/**
	     * Initializes a new instance of the [Base64ToString](xref:adaptive-expressions.Base64ToString) class.
	     */function Base64ToString(){classCallCheck(this,Base64ToString);return possibleConstructorReturn(this,(Base64ToString.__proto__||Object.getPrototypeOf(Base64ToString)).call(this,expressionType_1.ExpressionType.Base64ToString,Base64ToString.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Base64ToString,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return Buffer.from(args[0],'base64').toString();},functionUtils_1.FunctionUtils.verifyString);}}]);return Base64ToString;}(expressionEvaluator_1.ExpressionEvaluator);exports.Base64ToString=Base64ToString;}).call(this);}).call(this,require("buffer").Buffer);},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"buffer":368}],16:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the binary version of a string.
	 */var Binary=function(_expressionEvaluator_11){inherits(Binary,_expressionEvaluator_11);/**
	     * Initializes a new instance of the [Binary](xref:adaptive-expressions.Binary) class.
	     */function Binary(){classCallCheck(this,Binary);return possibleConstructorReturn(this,(Binary.__proto__||Object.getPrototypeOf(Binary)).call(this,expressionType_1.ExpressionType.Binary,Binary.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Binary,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.toBinary(args[0]);},functionUtils_1.FunctionUtils.verifyString);}}]);return Binary;}(expressionEvaluator_1.ExpressionEvaluator);exports.Binary=Binary;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],17:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Return the Boolean version of a value.
	 */var Bool=function(_comparisonEvaluator_){inherits(Bool,_comparisonEvaluator_);/**
	     * Initializes a new instance of the [Bool](xref:adaptive-expressions.Bool) class.
	     */function Bool(){classCallCheck(this,Bool);return possibleConstructorReturn(this,(Bool.__proto__||Object.getPrototypeOf(Bool)).call(this,expressionType_1.ExpressionType.Bool,Bool.func,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Bool,null,[{key:'func',value:function func(args){return functionUtils_internal_1.InternalFunctionUtils.isLogicTrue(args[0]);}}]);return Bool;}(comparisonEvaluator_1.ComparisonEvaluator);exports.Bool=Bool;},{"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"./comparisonEvaluator":20}],18:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var numberTransformEvaluator_1=require("./numberTransformEvaluator");/**
	 * Returns the smallest integral value that is greater than or equal to the specified number.
	 */var Ceiling=function(_numberTransformEvalu){inherits(Ceiling,_numberTransformEvalu);/**
	     * Initializes a new instance of the [Ceiling](xref:adaptive-expressions.Ceiling) class.
	     */function Ceiling(){classCallCheck(this,Ceiling);return possibleConstructorReturn(this,(Ceiling.__proto__||Object.getPrototypeOf(Ceiling)).call(this,expressionType_1.ExpressionType.Ceiling,Ceiling.func));}/**
	     * @private
	     */createClass(Ceiling,null,[{key:'func',value:function func(args){return Math.ceil(args[0]);}}]);return Ceiling;}(numberTransformEvaluator_1.NumberTransformEvaluator);exports.Ceiling=Ceiling;},{"../expressionType":183,"./numberTransformEvaluator":103}],19:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the first non-null value from one or more parameters.
	 * Empty strings, empty arrays, and empty objects are not null.
	 */var Coalesce=function(_expressionEvaluator_12){inherits(Coalesce,_expressionEvaluator_12);/**
	     * Initializes a new instance of the [Coalesce](xref:adaptive-expressions.Coalesce) class.
	     */function Coalesce(){classCallCheck(this,Coalesce);return possibleConstructorReturn(this,(Coalesce.__proto__||Object.getPrototypeOf(Coalesce)).call(this,expressionType_1.ExpressionType.Coalesce,Coalesce.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(Coalesce,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return Coalesce.evalCoalesce(args);});}/**
	     * @private
	     */},{key:'evalCoalesce',value:function evalCoalesce(objectList){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=objectList[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var obj=_step2.value;if(obj!==null&&obj!==undefined){return obj;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return undefined;}}]);return Coalesce;}(expressionEvaluator_1.ExpressionEvaluator);exports.Coalesce=Coalesce;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],20:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var __1=require("../");var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Comparison operators.
	 * A comparison operator returns false if the comparison is false, or there is an error.  This prevents errors from short-circuiting boolean expressions.
	 */var ComparisonEvaluator=function(_expressionEvaluator_13){inherits(ComparisonEvaluator,_expressionEvaluator_13);/**
	     * Initializes a new instance of the [ComparisonEvaluator](xref:adaptive-expressions.ComparisonEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The comparison function, it takes a list of objects and returns a boolean.
	     * @param validator [ValidateExpressionDelegate](xref:adaptive-expressions.ValidateExpressionDelegate) for input arguments.
	     * @param verify Optional. [VerifyExpression](xref:adaptive-expressions.VerifyExpression) function to verify each child's result.
	     */function ComparisonEvaluator(type,func,validator,verify){classCallCheck(this,ComparisonEvaluator);return possibleConstructorReturn(this,(ComparisonEvaluator.__proto__||Object.getPrototypeOf(ComparisonEvaluator)).call(this,type,ComparisonEvaluator.evaluator(func,verify),returnType_1.ReturnType.Boolean,validator));}/**
	     * @private
	     */createClass(ComparisonEvaluator,null,[{key:'evaluator',value:function evaluator(func,verify){return function(expression,state,options){var result=false;var newOptions=new __1.Options(options);newOptions.nullSubstitution=undefined;var _functionUtils_1$Func3=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,newOptions,verify),args=_functionUtils_1$Func3.args,childrenError=_functionUtils_1$Func3.error;var error=childrenError;if(!error){var isNumber=args&&args.length>0&&typeof args[0]==='number';var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=args[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var arg=_step3.value;if(arg&&typeof arg==='number'!==isNumber){error='Arguments must either all be numbers or strings in '+expression;break;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}if(!error){try{result=func(args);}catch(e){// NOTE: This should not happen in normal execution
	error=e.message;}}}else {error=undefined;}return {value:result,error:error};};}}]);return ComparisonEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.ComparisonEvaluator=ComparisonEvaluator;},{"../":1,"../expressionEvaluator":171,"../functionUtils":187,"../returnType":204}],21:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Combine two or more strings, and return the combined string.
	 */var Concat=function(_expressionEvaluator_14){inherits(Concat,_expressionEvaluator_14);/**
	     * Initializes a new instance of the [Concat](xref:adaptive-expressions.Concat) class.
	     */function Concat(){classCallCheck(this,Concat);return possibleConstructorReturn(this,(Concat.__proto__||Object.getPrototypeOf(Concat)).call(this,expressionType_1.ExpressionType.Concat,Concat.evaluator(),returnType_1.ReturnType.String|returnType_1.ReturnType.Array,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(Concat,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applySequence(function(args){var firstItem=args[0];var secondItem=args[1];var isFirstList=Array.isArray(firstItem);var isSecondList=Array.isArray(secondItem);if((firstItem===null||firstItem===undefined)&&(secondItem===null||secondItem===undefined)){return undefined;}else if((firstItem===null||firstItem===undefined)&&isSecondList){return secondItem;}else if((secondItem===null||secondItem===undefined)&&isFirstList){return firstItem;}else if(isFirstList&&isSecondList){return firstItem.concat(secondItem);}else {return Concat.commonStringify(firstItem)+Concat.commonStringify(secondItem);}});}/**
	     * @private
	     */},{key:'commonStringify',value:function commonStringify(input){if(input===null||input===undefined){return '';}if(Array.isArray(input)){return input.toString();}else if((typeof input==='undefined'?'undefined':_typeof(input))==='object'){return JSON.stringify(input);}else {return input.toString();}}}]);return Concat;}(expressionEvaluator_1.ExpressionEvaluator);exports.Concat=Concat;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],22:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Check whether a collection has a specific item. Return true if the item is found, or return false if not found.
	 * This function is case-sensitive.
	 */var Contains=function(_expressionEvaluator_15){inherits(Contains,_expressionEvaluator_15);/**
	     * Initializes a new instance of the [Contains](xref:adaptive-expressions.Contains) class.
	     */function Contains(){classCallCheck(this,Contains);return possibleConstructorReturn(this,(Contains.__proto__||Object.getPrototypeOf(Contains)).call(this,expressionType_1.ExpressionType.Contains,Contains.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateBinary));}/**
	     * @private
	     */createClass(Contains,null,[{key:'evaluator',value:function evaluator(expression,state,options){var found=false;var _functionUtils_1$Func4=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func4.args,childrenError=_functionUtils_1$Func4.error;var error=childrenError;if(!error){if(typeof args[0]==='string'&&typeof args[1]==='string'||Array.isArray(args[0])){found=args[0].includes(args[1]);}else if(args[0]instanceof Map){found=args[0].get(args[1])!==undefined;}else if(typeof args[1]==='string'){var value=void 0;var _functionUtils_intern3=functionUtils_internal_1.InternalFunctionUtils.accessProperty(args[0],args[1]);value=_functionUtils_intern3.value;error=_functionUtils_intern3.error;found=!error&&value!==undefined;}}return {value:found,error:undefined};}}]);return Contains;}(expressionEvaluator_1.ExpressionEvaluator);exports.Contains=Contains;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],23:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var moment_timezone_1=require("moment-timezone");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");var timeZoneConverter_1=require("../timeZoneConverter");/**
	 * Convert a timestamp from Universal Time Coordinated (UTC) to a target time zone.
	 */var ConvertFromUTC=function(_expressionEvaluator_16){inherits(ConvertFromUTC,_expressionEvaluator_16);/**
	     * Initializes a new instance of the [ConvertFromUTC](xref:adaptive-expressions.ConvertFromUTC) class.
	     */function ConvertFromUTC(){classCallCheck(this,ConvertFromUTC);return possibleConstructorReturn(this,(ConvertFromUTC.__proto__||Object.getPrototypeOf(ConvertFromUTC)).call(this,expressionType_1.ExpressionType.ConvertFromUTC,ConvertFromUTC.evaluator,returnType_1.ReturnType.String,ConvertFromUTC.validator));}/**
	     * @private
	     */createClass(ConvertFromUTC,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func5=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func5.args,childrenError=_functionUtils_1$Func5.error;var error=childrenError;if(!error){var format=args.length===3?functionUtils_1.FunctionUtils.timestampFormatter(args[2]):ConvertFromUTC.NoneUtcDefaultDateTimeFormat;if(typeof args[0]==='string'&&typeof args[1]==='string'){var _ConvertFromUTC$evalC=ConvertFromUTC.evalConvertFromUTC(args[0],args[1],format);value=_ConvertFromUTC$evalC.value;error=_ConvertFromUTC$evalC.error;}else {error=expression+' should contain an ISO format timestamp, an origin time zone string and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalConvertFromUTC',value:function evalConvertFromUTC(timeStamp,destinationTimeZone,format){var result=void 0;var error=void 0;error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(timeStamp);var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(destinationTimeZone);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=destinationTimeZone+' is not a valid timezone';}if(!error){try{result=moment_timezone_1.tz(timeStamp,timeZone).format(format);}catch(e){error=format+' is not a valid timestamp format';}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.String);}}]);return ConvertFromUTC;}(expressionEvaluator_1.ExpressionEvaluator);ConvertFromUTC.NoneUtcDefaultDateTimeFormat='YYYY-MM-DDTHH:mm:ss.SSSZ';exports.ConvertFromUTC=ConvertFromUTC;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"../timeZoneConverter":205,"moment-timezone":512}],24:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var moment_timezone_1=require("moment-timezone");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");var timeZoneConverter_1=require("../timeZoneConverter");/**
	 * Convert a timestamp to Universal Time Coordinated (UTC) from the source time zone.
	 */var ConvertToUTC=function(_expressionEvaluator_17){inherits(ConvertToUTC,_expressionEvaluator_17);/**
	     * Initializes a new instance of the [ConvertToUTC](xref:adaptive-expressions.ConvertToUTC) class.
	     */function ConvertToUTC(){classCallCheck(this,ConvertToUTC);return possibleConstructorReturn(this,(ConvertToUTC.__proto__||Object.getPrototypeOf(ConvertToUTC)).call(this,expressionType_1.ExpressionType.ConvertToUTC,ConvertToUTC.evaluator,returnType_1.ReturnType.String,ConvertToUTC.validator));}/**
	     * @private
	     */createClass(ConvertToUTC,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func6=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func6.args,childrenError=_functionUtils_1$Func6.error;var error=childrenError;if(!error){var format=args.length===3?functionUtils_1.FunctionUtils.timestampFormatter(args[2]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;if(typeof args[0]==='string'&&typeof args[1]==='string'){var _ConvertToUTC$evalCon=ConvertToUTC.evalConvertToUTC(args[0],args[1],format);value=_ConvertToUTC$evalCon.value;error=_ConvertToUTC$evalCon.error;}else {error=expression+' should contain an ISO format timestamp, a destination time zone string and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'verifyTimeStamp',value:function verifyTimeStamp(timeStamp){var parsed=moment_1.default(timeStamp);if(parsed.toString()==='Invalid date'){return timeStamp+' is a invalid datetime';}return undefined;}/**
	     * @private
	     */},{key:'evalConvertToUTC',value:function evalConvertToUTC(timeStamp,sourceTimezone,format){var result=void 0;var error=void 0;var formattedSourceTime=void 0;var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(sourceTimezone);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=sourceTimezone+' is not a valid timezone';}if(!error){error=this.verifyTimeStamp(timeStamp);if(!error){try{var sourceTime=moment_timezone_1.tz(timeStamp,timeZone);formattedSourceTime=sourceTime.format();}catch(e){error=timeStamp+' with '+timeZone+' is not a valid timestamp with specified timeZone:';}if(!error){try{result=moment_timezone_1.tz(formattedSourceTime,'Etc/UTC').format(format);}catch(e){error=format+' is not a valid timestamp format';}}}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,[returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.String);}}]);return ConvertToUTC;}(expressionEvaluator_1.ExpressionEvaluator);exports.ConvertToUTC=ConvertToUTC;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"../timeZoneConverter":205,"moment":514,"moment-timezone":512}],25:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the number of items in a collection.
	 */var Count=function(_expressionEvaluator_18){inherits(Count,_expressionEvaluator_18);/**
	     * Initializes a new instance of the [Count](xref:adaptive-expressions.Count) class.
	     */function Count(){classCallCheck(this,Count);return possibleConstructorReturn(this,(Count.__proto__||Object.getPrototypeOf(Count)).call(this,expressionType_1.ExpressionType.Count,Count.evaluator(),returnType_1.ReturnType.Number,Count.validator));}/**
	     * @private
	     */createClass(Count,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var count=void 0;if(typeof args[0]==='string'||Array.isArray(args[0])){count=args[0].length;}else if(args[0]instanceof Map){count=args[0].size;}else if(_typeof(args[0])=='object'){count=Object.keys(args[0]).length;}return count;},functionUtils_1.FunctionUtils.verifyContainer);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.String|returnType_1.ReturnType.Array);}}]);return Count;}(expressionEvaluator_1.ExpressionEvaluator);exports.Count=Count;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],26:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the number of words in a string.
	 */var CountWord=function(_expressionEvaluator_19){inherits(CountWord,_expressionEvaluator_19);/**
	     * Initializes a new instance of the [CountWord](xref:adaptive-expressions.CountWord) class.
	     */function CountWord(){classCallCheck(this,CountWord);return possibleConstructorReturn(this,(CountWord.__proto__||Object.getPrototypeOf(CountWord)).call(this,expressionType_1.ExpressionType.CountWord,CountWord.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(CountWord,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).trim().split(/\s+/).length;},functionUtils_1.FunctionUtils.verifyStringOrNull);}}]);return CountWord;}(expressionEvaluator_1.ExpressionEvaluator);exports.CountWord=CountWord;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],27:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return an array from multiple inputs.
	 */var CreateArray=function(_expressionEvaluator_20){inherits(CreateArray,_expressionEvaluator_20);/**
	     * Initializes a new instance of the [CreateArray](xref:adaptive-expressions.CreateArray) class.
	     */function CreateArray(){classCallCheck(this,CreateArray);return possibleConstructorReturn(this,(CreateArray.__proto__||Object.getPrototypeOf(CreateArray)).call(this,expressionType_1.ExpressionType.CreateArray,CreateArray.evaluator(),returnType_1.ReturnType.Array));}/**
	     * @private
	     */createClass(CreateArray,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return Array.from(args);});}}]);return CreateArray;}(expressionEvaluator_1.ExpressionEvaluator);exports.CreateArray=CreateArray;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],28:[function(require,module,exports){(function(Buffer){(function(){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a data uniform resource identifier (URI) of a string.
	 */var DataUri=function(_expressionEvaluator_21){inherits(DataUri,_expressionEvaluator_21);/**
	     * Initializes a new instance of the [DataUri](xref:adaptive-expressions.DataUri) class.
	     */function DataUri(){classCallCheck(this,DataUri);return possibleConstructorReturn(this,(DataUri.__proto__||Object.getPrototypeOf(DataUri)).call(this,expressionType_1.ExpressionType.DataUri,DataUri.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(DataUri,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return 'data:text/plain;charset=utf-8;base64,'.concat(Buffer.from(args[0]).toString('base64'));},functionUtils_1.FunctionUtils.verifyString);}}]);return DataUri;}(expressionEvaluator_1.ExpressionEvaluator);exports.DataUri=DataUri;}).call(this);}).call(this,require("buffer").Buffer);},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"buffer":368}],29:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the binary version of a data uniform resource identifier (URI).
	 */var DataUriToBinary=function(_expressionEvaluator_22){inherits(DataUriToBinary,_expressionEvaluator_22);/**
	     * Initializes a new instance of the [DataUriToBinary](xref:adaptive-expressions.DataUriToBinary) class.
	     */function DataUriToBinary(){classCallCheck(this,DataUriToBinary);return possibleConstructorReturn(this,(DataUriToBinary.__proto__||Object.getPrototypeOf(DataUriToBinary)).call(this,expressionType_1.ExpressionType.DataUriToBinary,DataUriToBinary.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(DataUriToBinary,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.toBinary(args[0]);},functionUtils_1.FunctionUtils.verifyString);}}]);return DataUriToBinary;}(expressionEvaluator_1.ExpressionEvaluator);exports.DataUriToBinary=DataUriToBinary;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],30:[function(require,module,exports){(function(Buffer){(function(){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the string version of a data uniform resource identifier (URI).
	 */var DataUriToString=function(_expressionEvaluator_23){inherits(DataUriToString,_expressionEvaluator_23);/**
	     * Initializes a new instance of the [DataUriToString](xref:adaptive-expressions.DataUriToString) class.
	     */function DataUriToString(){classCallCheck(this,DataUriToString);return possibleConstructorReturn(this,(DataUriToString.__proto__||Object.getPrototypeOf(DataUriToString)).call(this,expressionType_1.ExpressionType.DataUriToString,DataUriToString.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(DataUriToString,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return Buffer.from(args[0].slice(args[0].indexOf(',')+1),'base64').toString();},functionUtils_1.FunctionUtils.verifyString);}}]);return DataUriToString;}(expressionEvaluator_1.ExpressionEvaluator);exports.DataUriToString=DataUriToString;}).call(this);}).call(this,require("buffer").Buffer);},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"buffer":368}],31:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the date of a specified timestamp in m/dd/yyyy format.
	 */var DateFunc=function(_expressionEvaluator_24){inherits(DateFunc,_expressionEvaluator_24);/**
	     * Initializes a new instance of the [DateFunc](xref:adaptive-expressions.DateFunc) class.
	     */function DateFunc(){classCallCheck(this,DateFunc);return possibleConstructorReturn(this,(DateFunc.__proto__||Object.getPrototypeOf(DateFunc)).call(this,expressionType_1.ExpressionType.Date,DateFunc.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(DateFunc,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return moment_1.default(timestamp).utc().format('M/DD/YYYY');});},functionUtils_1.FunctionUtils.verifyString);}}]);return DateFunc;}(expressionEvaluator_1.ExpressionEvaluator);exports.DateFunc=DateFunc;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],32:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Uses the date-time library to provide a date readback.
	 */var DateReadBack=function(_expressionEvaluator_25){inherits(DateReadBack,_expressionEvaluator_25);/**
	     * Initializes a new instance of the [DateReadBack](xref:adaptive-expressions.DateReadBack) class.
	     */function DateReadBack(){classCallCheck(this,DateReadBack);return possibleConstructorReturn(this,(DateReadBack.__proto__||Object.getPrototypeOf(DateReadBack)).call(this,expressionType_1.ExpressionType.DateReadBack,DateReadBack.evaluator(),returnType_1.ReturnType.String,DateReadBack.validator));}/**
	     * @private
	     */createClass(DateReadBack,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var value=void 0;var error=void 0;var dateFormat='YYYY-MM-DD';var _functionUtils_intern4=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0]);value=_functionUtils_intern4.value;error=_functionUtils_intern4.error;if(!error){var timestamp1=new Date(value.format(dateFormat));var _functionUtils_intern5=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[1]);value=_functionUtils_intern5.value;error=_functionUtils_intern5.error;var timestamp2=value.format(dateFormat);var timex=new recognizers_text_data_types_timex_expression_1.TimexProperty(timestamp2);return {value:timex.toNaturalLanguage(timestamp1),error:error};}},functionUtils_1.FunctionUtils.verifyString);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.String,returnType_1.ReturnType.String);}}]);return DateReadBack;}(expressionEvaluator_1.ExpressionEvaluator);exports.DateReadBack=DateReadBack;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"@microsoft/recognizers-text-data-types-timex-expression":213}],33:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return a number of ticks that the two timestamps differ.
	 */var DateTimeDiff=function(_expressionEvaluator_26){inherits(DateTimeDiff,_expressionEvaluator_26);/**
	     * Initializes a new instance of the [DateTimeDiff](xref:adaptive-expressions.DateTimeDiff) class.
	     */function DateTimeDiff(){classCallCheck(this,DateTimeDiff);return possibleConstructorReturn(this,(DateTimeDiff.__proto__||Object.getPrototypeOf(DateTimeDiff)).call(this,expressionType_1.ExpressionType.DateTimeDiff,DateTimeDiff.evaluator,returnType_1.ReturnType.Number,DateTimeDiff.validator));}/**
	     * @private
	     */createClass(DateTimeDiff,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var dateTimeStart=void 0;var dateTimeEnd=void 0;var _functionUtils_1$Func7=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func7.args,childrenError=_functionUtils_1$Func7.error;var error=childrenError;if(!error){var _functionUtils_intern6=functionUtils_internal_1.InternalFunctionUtils.ticks(args[0]);dateTimeStart=_functionUtils_intern6.value;error=_functionUtils_intern6.error;if(!error){var _functionUtils_intern7=functionUtils_internal_1.InternalFunctionUtils.ticks(args[1]);dateTimeEnd=_functionUtils_intern7.value;error=_functionUtils_intern7.error;}}if(!error){value=dateTimeStart-dateTimeEnd;}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.String);}}]);return DateTimeDiff;}(expressionEvaluator_1.ExpressionEvaluator);exports.DateTimeDiff=DateTimeDiff;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],34:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the day of the month from a timestamp.
	 */var DayOfMonth=function(_expressionEvaluator_27){inherits(DayOfMonth,_expressionEvaluator_27);/**
	     * Initializes a new instance of the [DayOfMonth](xref:adaptive-expressions.DayOfMonth) class.
	     */function DayOfMonth(){classCallCheck(this,DayOfMonth);return possibleConstructorReturn(this,(DayOfMonth.__proto__||Object.getPrototypeOf(DayOfMonth)).call(this,expressionType_1.ExpressionType.DayOfMonth,DayOfMonth.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(DayOfMonth,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return timestamp.getUTCDate();});},functionUtils_1.FunctionUtils.verifyString);}}]);return DayOfMonth;}(expressionEvaluator_1.ExpressionEvaluator);exports.DayOfMonth=DayOfMonth;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],35:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the day of the week from a timestamp.
	 */var DayOfWeek=function(_expressionEvaluator_28){inherits(DayOfWeek,_expressionEvaluator_28);/**
	     * Initializes a new instance of the [DayOfWeek](xref:adaptive-expressions.DayOfWeek) class.
	     */function DayOfWeek(){classCallCheck(this,DayOfWeek);return possibleConstructorReturn(this,(DayOfWeek.__proto__||Object.getPrototypeOf(DayOfWeek)).call(this,expressionType_1.ExpressionType.DayOfWeek,DayOfWeek.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(DayOfWeek,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return timestamp.getUTCDay();});},functionUtils_1.FunctionUtils.verifyString);}}]);return DayOfWeek;}(expressionEvaluator_1.ExpressionEvaluator);exports.DayOfWeek=DayOfWeek;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],36:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the day of the year from a timestamp.
	 */var DayOfYear=function(_expressionEvaluator_29){inherits(DayOfYear,_expressionEvaluator_29);/**
	     * Initializes a new instance of the [DayOfYear](xref:adaptive-expressions.DayOfYear) class.
	     */function DayOfYear(){classCallCheck(this,DayOfYear);return possibleConstructorReturn(this,(DayOfYear.__proto__||Object.getPrototypeOf(DayOfYear)).call(this,expressionType_1.ExpressionType.DayOfYear,DayOfYear.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(DayOfYear,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return moment_1.default(timestamp).utc().dayOfYear();});},functionUtils_1.FunctionUtils.verifyString);}}]);return DayOfYear;}(expressionEvaluator_1.ExpressionEvaluator);exports.DayOfYear=DayOfYear;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],37:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var multivariateNumericEvaluator_1=require("./multivariateNumericEvaluator");/**
	 * Return the integer result from dividing two numbers.
	 */var Divide=function(_multivariateNumericE){inherits(Divide,_multivariateNumericE);/**
	     * Initializes a new instance of the [Divide](xref:adaptive-expressions.Divide) class.
	     */function Divide(){classCallCheck(this,Divide);return possibleConstructorReturn(this,(Divide.__proto__||Object.getPrototypeOf(Divide)).call(this,expressionType_1.ExpressionType.Divide,Divide.func,Divide.verify));}/**
	     * @private
	     */createClass(Divide,null,[{key:'func',value:function func(args){return Math.floor(Number(args[0])/Number(args[1]));}/**
	     * @private
	     */},{key:'verify',value:function verify(val,expression,pos){var error=functionUtils_1.FunctionUtils.verifyNumber(val,expression,pos);if(!error&&pos>0&&Number(val)===0){error='Cannot divide by 0 from '+expression;}return error;}}]);return Divide;}(multivariateNumericEvaluator_1.MultivariateNumericEvaluator);exports.Divide=Divide;},{"../expressionType":183,"../functionUtils":187,"./multivariateNumericEvaluator":99}],38:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * The indexing operator ([ ]) selects a single element from a sequence.
	 * Support number index for list or string index for object.
	 */var Element=function(_expressionEvaluator_30){inherits(Element,_expressionEvaluator_30);/**
	     * Initializes a new instance of the [Element](xref:adaptive-expressions.Element) class.
	     */function Element(){classCallCheck(this,Element);return possibleConstructorReturn(this,(Element.__proto__||Object.getPrototypeOf(Element)).call(this,expressionType_1.ExpressionType.Element,Element.evaluator,returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateBinary));}/**
	     * @private
	     */createClass(Element,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var instance=expression.children[0];var index=expression.children[1];var _instance$tryEvaluate=instance.tryEvaluate(state,options),inst=_instance$tryEvaluate.value,evalError=_instance$tryEvaluate.error;var error=evalError;if(!error){var idxValue=void 0;var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _index$tryEvaluate=index.tryEvaluate(state,newOptions);idxValue=_index$tryEvaluate.value;error=_index$tryEvaluate.error;if(!error){if(Number.isInteger(idxValue)){var _functionUtils_intern8=functionUtils_internal_1.InternalFunctionUtils.accessIndex(inst,Number(idxValue));value=_functionUtils_intern8.value;error=_functionUtils_intern8.error;}else if(typeof idxValue==='string'){var _functionUtils_intern9=functionUtils_internal_1.InternalFunctionUtils.accessProperty(inst,idxValue.toString());value=_functionUtils_intern9.value;error=_functionUtils_intern9.error;}else {error='Could not coerce '+index+' to an int or string.';}return {value:value,error:error};}}}}]);return Element;}(expressionEvaluator_1.ExpressionEvaluator);exports.Element=Element;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../options":195,"../returnType":204}],39:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether an instance is empty. Return true if the input is empty. Empty means:
	 * 1.Input is null or undefined.
	 * 2.Input is a null or empty string.
	 * 3.Input is zero size collection.
	 * 4.Input is an object with no property.
	 */var Empty=function(_comparisonEvaluator_2){inherits(Empty,_comparisonEvaluator_2);/**
	     * Initializes a new instance of the [Empty](xref:adaptive-expressions.Empty) class.
	     */function Empty(){classCallCheck(this,Empty);return possibleConstructorReturn(this,(Empty.__proto__||Object.getPrototypeOf(Empty)).call(this,expressionType_1.ExpressionType.Empty,Empty.func,functionUtils_1.FunctionUtils.validateUnary,functionUtils_1.FunctionUtils.verifyContainer));}/**
	     * @private
	     */createClass(Empty,null,[{key:'func',value:function func(args){return Empty.isEmpty(args[0]);}/**
	     * @private
	     */},{key:'isEmpty',value:function isEmpty(instance){var result=void 0;if(instance===undefined){result=true;}else if(typeof instance==='string'){result=instance==='';}else if(Array.isArray(instance)){result=instance.length===0;}else if(instance instanceof Map){result=instance.size===0;}else {result=Object.keys(instance).length===0;}return result;}}]);return Empty;}(comparisonEvaluator_1.ComparisonEvaluator);exports.Empty=Empty;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],40:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Check whether a string ends with a specific substring. Return true if the substring is found, or return false if not found.
	 * This function is case-insensitive.
	 */var EndsWith=function(_expressionEvaluator_31){inherits(EndsWith,_expressionEvaluator_31);/**
	     * Initializes a new instance of the [EndsWith](xref:adaptive-expressions.EndsWith) class.
	     */function EndsWith(){classCallCheck(this,EndsWith);return possibleConstructorReturn(this,(EndsWith.__proto__||Object.getPrototypeOf(EndsWith)).call(this,expressionType_1.ExpressionType.EndsWith,EndsWith.evaluator(),returnType_1.ReturnType.Boolean,EndsWith.validator));}/**
	     * @private
	     */createClass(EndsWith,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).endsWith(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]));},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.String);}}]);return EndsWith;}(expressionEvaluator_1.ExpressionEvaluator);exports.EndsWith=EndsWith;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],41:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether both values, expressions, or objects are equivalent.
	 * Return true if both are equivalent, or return false if they're not equivalent.
	 */var Equal=function(_comparisonEvaluator_3){inherits(Equal,_comparisonEvaluator_3);/**
	     * Initializes a new instance of the [Equal](xref:adaptive-expressions.Equal) class.
	     */function Equal(){classCallCheck(this,Equal);return possibleConstructorReturn(this,(Equal.__proto__||Object.getPrototypeOf(Equal)).call(this,expressionType_1.ExpressionType.Equal,functionUtils_internal_1.InternalFunctionUtils.isEqual,functionUtils_1.FunctionUtils.validateBinary));}return Equal;}(comparisonEvaluator_1.ComparisonEvaluator);exports.Equal=Equal;},{"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"./comparisonEvaluator":20}],42:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Evaluates an expression for truthiness.
	 */var Exists=function(_comparisonEvaluator_4){inherits(Exists,_comparisonEvaluator_4);/**
	     * Initializes a new instance of the [Exists](xref:adaptive-expressions.Exists) class.
	     */function Exists(){classCallCheck(this,Exists);return possibleConstructorReturn(this,(Exists.__proto__||Object.getPrototypeOf(Exists)).call(this,expressionType_1.ExpressionType.Exists,Exists.func,functionUtils_1.FunctionUtils.validateUnary,functionUtils_1.FunctionUtils.verifyNotNull));}/**
	     * @private
	     */createClass(Exists,null,[{key:'func',value:function func(args){return args[0]!==undefined&&args[0]!==null;}}]);return Exists;}(comparisonEvaluator_1.ComparisonEvaluator);exports.Exists=Exists;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],43:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the first item from a string or array.
	 */var First=function(_expressionEvaluator_32){inherits(First,_expressionEvaluator_32);/**
	     * Initializes a new instance of the [First](xref:adaptive-expressions.First) class.
	     */function First(){classCallCheck(this,First);return possibleConstructorReturn(this,(First.__proto__||Object.getPrototypeOf(First)).call(this,expressionType_1.ExpressionType.First,First.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(First,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var first=void 0;if(typeof args[0]==='string'&&args[0].length>0){first=args[0][0];}if(Array.isArray(args[0])&&args[0].length>0){first=functionUtils_internal_1.InternalFunctionUtils.accessIndex(args[0],0).value;}return first;});}}]);return First;}(expressionEvaluator_1.ExpressionEvaluator);exports.First=First;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],44:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 *  Flatten an array into non-array values. You can optionally set the maximum depth to flatten to.
	 */var Flatten=function(_expressionEvaluator_33){inherits(Flatten,_expressionEvaluator_33);/**
	     * Initializes a new instance of the [Flatten](xref:adaptive-expressions.Flatten) class.
	     */function Flatten(){classCallCheck(this,Flatten);return possibleConstructorReturn(this,(Flatten.__proto__||Object.getPrototypeOf(Flatten)).call(this,expressionType_1.ExpressionType.Flatten,Flatten.evaluator(),returnType_1.ReturnType.Array,Flatten.validator));}/**
	     * @private
	     */createClass(Flatten,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var array=args[0];var depth=args.length>1?args[1]:100;return Flatten.evalFlatten(array,depth);});}/**
	     * @private
	     */},{key:'evalFlatten',value:function evalFlatten(arr,dept){if(!functionUtils_1.FunctionUtils.isNumber(dept)||dept<1){dept=1;}var res=JSON.parse(JSON.stringify(arr));var reduceArr=function reduceArr(_arr){return _arr.reduce(function(prevItem,curItem){return prevItem.concat(curItem);},[]);};for(var i=0;i<dept;i++){var hasArrayItem=res.some(function(item){return Array.isArray(item);});if(hasArrayItem){res=reduceArr(res);}else {break;}}return res;}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.Number],returnType_1.ReturnType.Array);}}]);return Flatten;}(expressionEvaluator_1.ExpressionEvaluator);exports.Flatten=Flatten;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],45:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Convert the string version of a floating-point number to a floating-point number.
	 */var Float=function(_expressionEvaluator_34){inherits(Float,_expressionEvaluator_34);/**
	     * Initializes a new instance of the [Float](xref:adaptive-expressions.Float) class.
	     */function Float(){classCallCheck(this,Float);return possibleConstructorReturn(this,(Float.__proto__||Object.getPrototypeOf(Float)).call(this,expressionType_1.ExpressionType.Float,Float.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Float,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var value=parseFloat(args[0]);if(!functionUtils_1.FunctionUtils.isNumber(value)){error='parameter '+args[0]+' is not a valid number string.';}return {value:value,error:error};});}}]);return Float;}(expressionEvaluator_1.ExpressionEvaluator);exports.Float=Float;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],46:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var numberTransformEvaluator_1=require("./numberTransformEvaluator");/**
	 * Returns the largest integer less than or equal to the specified number.
	 */var Floor=function(_numberTransformEvalu2){inherits(Floor,_numberTransformEvalu2);/**
	     * Initializes a new instance of the [Floor](xref:adaptive-expressions.Floor) class.
	     */function Floor(){classCallCheck(this,Floor);return possibleConstructorReturn(this,(Floor.__proto__||Object.getPrototypeOf(Floor)).call(this,expressionType_1.ExpressionType.Floor,Floor.func));}/**
	     * @private
	     */createClass(Floor,null,[{key:'func',value:function func(args){return Math.floor(args[0]);}}]);return Floor;}(numberTransformEvaluator_1.NumberTransformEvaluator);exports.Floor=Floor;},{"../expressionType":183,"./numberTransformEvaluator":103}],47:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Operate on each element and return the new collection.
	 */var Foreach=function(_expressionEvaluator_35){inherits(Foreach,_expressionEvaluator_35);/**
	     * Initializes a new instance of the [Foreach](xref:adaptive-expressions.Foreach) class.
	     */function Foreach(){classCallCheck(this,Foreach);return possibleConstructorReturn(this,(Foreach.__proto__||Object.getPrototypeOf(Foreach)).call(this,expressionType_1.ExpressionType.Foreach,functionUtils_internal_1.InternalFunctionUtils.foreach,returnType_1.ReturnType.Array,functionUtils_internal_1.InternalFunctionUtils.validateForeach));}return Foreach;}(expressionEvaluator_1.ExpressionEvaluator);exports.Foreach=Foreach;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils.internal":186,"../returnType":204}],48:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return a timestamp in the specified format.
	 * Format reference: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
	 */var FormatDateTime=function(_expressionEvaluator_36){inherits(FormatDateTime,_expressionEvaluator_36);/**
	     * Initializes a new instance of the [FormatDateTime](xref:adaptive-expressions.FormatDateTime) class.
	     */function FormatDateTime(){classCallCheck(this,FormatDateTime);return possibleConstructorReturn(this,(FormatDateTime.__proto__||Object.getPrototypeOf(FormatDateTime)).call(this,expressionType_1.ExpressionType.FormatDateTime,FormatDateTime.evaluator(),returnType_1.ReturnType.String,FormatDateTime.validator));}/**
	     * @private
	     */createClass(FormatDateTime,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var arg=args[0];if(typeof arg==='string'){error=functionUtils_internal_1.InternalFunctionUtils.verifyTimestamp(arg.toString());}else {arg=arg.toString();}var value=void 0;if(!error){var dateString=new Date(arg).toISOString();value=args.length===2?moment_1.default(dateString).format(functionUtils_1.FunctionUtils.timestampFormatter(args[1])):dateString;}return {value:value,error:error};});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String);}}]);return FormatDateTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.FormatDateTime=FormatDateTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],49:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a timestamp in the specified format from UNIX time (also know as Epoch time, POSIX time, UNIX Epoch time).
	 */var FormatEpoch=function(_expressionEvaluator_37){inherits(FormatEpoch,_expressionEvaluator_37);/**
	     * Initializes a new instance of the [FormatEpoch](xref:adaptive-expressions.FormatEpoch) class.
	     */function FormatEpoch(){classCallCheck(this,FormatEpoch);return possibleConstructorReturn(this,(FormatEpoch.__proto__||Object.getPrototypeOf(FormatEpoch)).call(this,expressionType_1.ExpressionType.FormatEpoch,FormatEpoch.evaluator(),returnType_1.ReturnType.String,FormatEpoch.validator));}/**
	     * @private
	     */createClass(FormatEpoch,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var arg=args[0];if(typeof arg!=='number'){error='formatEpoch first argument '+arg+' must be a number';}else {// Convert to ms
	arg=arg*1000;}var value=void 0;if(!error){var dateString=new Date(arg).toISOString();value=args.length===2?moment_1.default(dateString).format(functionUtils_1.FunctionUtils.timestampFormatter(args[1])):dateString;}return {value:value,error:error};});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Number);}}]);return FormatEpoch;}(expressionEvaluator_1.ExpressionEvaluator);exports.FormatEpoch=FormatEpoch;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"moment":514}],50:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var d3_format_1=require("d3-format");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");var localeInfo_1=require("../localeInfo");/**
	 * Format number into required decimal numbers.
	 */var FormatNumber=function(_expressionEvaluator_38){inherits(FormatNumber,_expressionEvaluator_38);/**
	     * Initializes a new instance of the [FormatNumber](xref:adaptive-expressions.FormatNumber) class.
	     */function FormatNumber(){classCallCheck(this,FormatNumber);return possibleConstructorReturn(this,(FormatNumber.__proto__||Object.getPrototypeOf(FormatNumber)).call(this,expressionType_1.ExpressionType.FormatNumber,FormatNumber.evaluator(),returnType_1.ReturnType.String,FormatNumber.validator));}/**
	     * @private
	     */createClass(FormatNumber,null,[{key:'evaluator',value:function evaluator(){var _this50=this;return functionUtils_1.FunctionUtils.applyWithOptionsAndError(function(args,options){var value=null;var error=void 0;var number=args[0];var precision=args[1];var locale=options.locale;locale=functionUtils_1.FunctionUtils.determineLocale(args,3,locale);if(typeof number!=='number'){error='formatNumber first argument '+number+' must be a number';}else if(typeof precision!=='number'){error='formatNumber second argument '+precision+' must be a number';}else if(locale&&typeof locale!=='string'){error='formatNubmer third argument '+locale+' is not a valid locale';}else {var fixedNotation=',.'+precision+'f';var roundedNumber=_this50.roundToPrecision(number,precision);var formatLocale=localeInfo_1.localeInfo[locale];if(formatLocale!==undefined){value=d3_format_1.formatLocale(formatLocale).format(fixedNotation)(roundedNumber);}else {value=d3_format_1.format(fixedNotation)(roundedNumber);}}return {value:value,error:error};});}},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,[returnType_1.ReturnType.String],returnType_1.ReturnType.Number,returnType_1.ReturnType.Number);}}]);return FormatNumber;}(expressionEvaluator_1.ExpressionEvaluator);FormatNumber.roundToPrecision=function(num,digits){return Math.round(num*Math.pow(10,digits))/Math.pow(10,digits);};exports.FormatNumber=FormatNumber;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../localeInfo":191,"../returnType":204,"d3-format":369}],51:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var big_integer_1=__importDefault(require("big-integer"));var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return a timestamp in the specified format from ticks.
	 */var FormatTicks=function(_expressionEvaluator_39){inherits(FormatTicks,_expressionEvaluator_39);/**
	     * Initializes a new instance of the [FormatTicks](xref:adaptive-expressions.FormatTicks) class.
	     */function FormatTicks(){classCallCheck(this,FormatTicks);return possibleConstructorReturn(this,(FormatTicks.__proto__||Object.getPrototypeOf(FormatTicks)).call(this,expressionType_1.ExpressionType.FormatTicks,FormatTicks.evaluator(),returnType_1.ReturnType.String,FormatTicks.validator));}/**
	     * @private
	     */createClass(FormatTicks,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var arg=args[0];if(typeof arg==='number'){arg=big_integer_1.default(arg);}if(typeof arg==='string'){arg=big_integer_1.default(arg);}if(!big_integer_1.default.isInstance(arg)){error='formatTicks first argument '+arg+' is not a number, numeric string or bigInt';}else {// Convert to ms
	arg=arg.subtract(functionUtils_internal_1.InternalFunctionUtils.UnixMilliSecondToTicksConstant).divide(functionUtils_internal_1.InternalFunctionUtils.MillisecondToTickConstant).toJSNumber();}var value=void 0;if(!error){var dateString=new Date(arg).toISOString();value=args.length===2?moment_1.default(dateString).format(functionUtils_1.FunctionUtils.timestampFormatter(args[1])):dateString;}return {value:value,error:error};});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Number);}}]);return FormatTicks;}(expressionEvaluator_1.ExpressionEvaluator);exports.FormatTicks=FormatTicks;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"big-integer":367,"moment":514}],52:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the current timestamp plus the specified time units.
	 */var GetFutureTime=function(_expressionEvaluator_40){inherits(GetFutureTime,_expressionEvaluator_40);/**
	     * Initializes a new instance of the [GetFutureTime](xref:adaptive-expressions.GetFutureTime) class.
	     */function GetFutureTime(){classCallCheck(this,GetFutureTime);return possibleConstructorReturn(this,(GetFutureTime.__proto__||Object.getPrototypeOf(GetFutureTime)).call(this,expressionType_1.ExpressionType.GetFutureTime,GetFutureTime.evaluator,returnType_1.ReturnType.String,GetFutureTime.validator));}/**
	     * @private
	     */createClass(GetFutureTime,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func8=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func8.args,childrenError=_functionUtils_1$Func8.error;var error=childrenError;if(!error){if(Number.isInteger(args[0])&&typeof args[1]==='string'){var format=args.length===3?functionUtils_1.FunctionUtils.timestampFormatter(args[2]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;var _functionUtils_intern10=functionUtils_internal_1.InternalFunctionUtils.timeUnitTransformer(args[0],args[1]),duration=_functionUtils_intern10.duration,tsStr=_functionUtils_intern10.tsStr;if(tsStr===undefined){error=args[2]+' is not a valid time unit.';}else {var dur=duration;var _functionUtils_intern11=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(new Date().toISOString(),function(dt){return moment_1.default(dt).utc().add(dur,tsStr).format(format);});value=_functionUtils_intern11.value;error=_functionUtils_intern11.error;}}else {error=expression+' should contain a time interval integer, a string unit of time and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Number,returnType_1.ReturnType.String);}}]);return GetFutureTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetFutureTime=GetFutureTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],53:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var returnType_1=require("../returnType");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var timeZoneConverter_1=require("../timeZoneConverter");var moment_timezone_1=require("moment-timezone");var moment_1=__importDefault(require("moment"));var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");/**
	 * Return the next viable date of a timex expression based on the current date and user's timezone.
	 */var GetNextViableDate=function(_expressionEvaluator_41){inherits(GetNextViableDate,_expressionEvaluator_41);/**
	     * Initializes a new instance of the [GetNextViableDate](xref:adaptive-expressions.GetNextViableDate) class.
	     */function GetNextViableDate(){classCallCheck(this,GetNextViableDate);return possibleConstructorReturn(this,(GetNextViableDate.__proto__||Object.getPrototypeOf(GetNextViableDate)).call(this,expressionType_1.ExpressionType.GetNextViableDate,GetNextViableDate.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString));}/**
	     * @private
	     */createClass(GetNextViableDate,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var currentTime=moment_1.default(new Date().toISOString());var validYear=0;var validMonth=0;var validDay=0;var convertedDateTime=void 0;var _functionUtils_1$Func9=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func9.args,childrenError=_functionUtils_1$Func9.error;var error=childrenError;if(!error){var _functionUtils_intern12=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern12.timexProperty;error=_functionUtils_intern12.error;}if(parsed&&!error){if(parsed.year||!parsed.month||!parsed.dayOfMonth){error=args[0]+' must be a timex string which only contains month and day-of-month, for example: \'XXXX-10-31\'.';}}if(!error){if(args.length===2&&typeof args[1]==='string'){var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=args[1]+' is not a valid timezone';}if(!error){convertedDateTime=moment_timezone_1.tz(currentTime.utc(),timeZone);}}else {convertedDateTime=currentTime.utc();}}if(!error){var year=convertedDateTime.year();var month=convertedDateTime.month()+1;var dayOfMonth=convertedDateTime.date();if(parsed.month>month||parsed.month===month&&parsed.dayOfMonth>=dayOfMonth){validYear=year;}else {validYear=year+1;}validMonth=parsed.month;validDay=parsed.dayOfMonth;if(validMonth===2&&validDay===29){while(!GetNextViableDate.leapYear(validYear)){validYear+=1;}}}var value=recognizers_text_data_types_timex_expression_1.TimexProperty.fromDate(new Date(validYear,validMonth-1,validDay)).timex;return {value:value,error:error};}/**
	     * @private
	     */},{key:'leapYear',value:function leapYear(year){return year%4==0&&year%100!=0||year%400==0;}}]);return GetNextViableDate;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetNextViableDate=GetNextViableDate;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"../timeZoneConverter":205,"@microsoft/recognizers-text-data-types-timex-expression":213,"moment":514,"moment-timezone":512}],54:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var returnType_1=require("../returnType");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var timeZoneConverter_1=require("../timeZoneConverter");var moment_timezone_1=require("moment-timezone");var moment_1=__importDefault(require("moment"));var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");/**
	 * Return the next viable time of a timex expression based on the current time and user's timezone.
	 */var GetNextViableTime=function(_expressionEvaluator_42){inherits(GetNextViableTime,_expressionEvaluator_42);/**
	     * Initializes a new instance of the [GetNextViableTime](xref:adaptive-expressions.GetNextViableTime) class.
	     */function GetNextViableTime(){classCallCheck(this,GetNextViableTime);return possibleConstructorReturn(this,(GetNextViableTime.__proto__||Object.getPrototypeOf(GetNextViableTime)).call(this,expressionType_1.ExpressionType.GetNextViableTime,GetNextViableTime.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString));}/**
	     * @private
	     */createClass(GetNextViableTime,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var currentTime=moment_1.default(new Date().toISOString());var validHour=0;var validMinute=0;var validSecond=0;var convertedDateTime=void 0;var formatRegex=/TXX:[0-5][0-9]:[0-5][0-9]/g;var _functionUtils_1$Func10=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func10.args,childrenError=_functionUtils_1$Func10.error;var error=childrenError;if(!error){if(!formatRegex.test(args[0])){error=args[0]+'  must be a timex string which only contains minutes and seconds, for example: \'TXX:15:28\'';}}if(!error){if(args.length===2&&typeof args[1]==='string'){var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=args[1]+' is not a valid timezone';}if(!error){convertedDateTime=moment_timezone_1.tz(currentTime.utc(),timeZone);}}else {convertedDateTime=currentTime.utc();}}if(!error){var _functionUtils_intern13=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0].replace('XX','00'));parsed=_functionUtils_intern13.timexProperty;error=_functionUtils_intern13.error;}if(!error){var hour=convertedDateTime.hour();var minute=convertedDateTime.minute();var second=convertedDateTime.second();if(parsed.minute>minute||parsed.minute===minute&&parsed.second>=second){validHour=hour;}else {validHour=hour+1;}if(validHour>=24){validHour-=24;}validMinute=parsed.minute;validSecond=parsed.second;}var value=recognizers_text_data_types_timex_expression_1.TimexProperty.fromTime(new recognizers_text_data_types_timex_expression_1.Time(validHour,validMinute,validSecond)).timex;return {value:value,error:error};}}]);return GetNextViableTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetNextViableTime=GetNextViableTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"../timeZoneConverter":205,"@microsoft/recognizers-text-data-types-timex-expression":213,"moment":514,"moment-timezone":512}],55:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the current timestamp minus the specified time units.
	 */var GetPastTime=function(_expressionEvaluator_43){inherits(GetPastTime,_expressionEvaluator_43);/**
	     * Initializes a new instance of the [GetPastTime](xref:adaptive-expressions.GetPastTime) class.
	     */function GetPastTime(){classCallCheck(this,GetPastTime);return possibleConstructorReturn(this,(GetPastTime.__proto__||Object.getPrototypeOf(GetPastTime)).call(this,expressionType_1.ExpressionType.GetPastTime,GetPastTime.evaluator,returnType_1.ReturnType.String,GetPastTime.validator));}/**
	     * @private
	     */createClass(GetPastTime,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func11=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func11.args,childrenError=_functionUtils_1$Func11.error;var error=childrenError;if(!error){if(Number.isInteger(args[0])&&typeof args[1]==='string'){var format=args.length===3?functionUtils_1.FunctionUtils.timestampFormatter(args[2]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;var _functionUtils_intern14=functionUtils_internal_1.InternalFunctionUtils.timeUnitTransformer(args[0],args[1]),duration=_functionUtils_intern14.duration,tsStr=_functionUtils_intern14.tsStr;if(tsStr===undefined){error=args[2]+' is not a valid time unit.';}else {var dur=duration;var _functionUtils_intern15=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(new Date().toISOString(),function(dt){return moment_1.default(dt).utc().subtract(dur,tsStr).format(format);});value=_functionUtils_intern15.value;error=_functionUtils_intern15.error;}}else {error=expression+' should contain a time interval integer, a string unit of time and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Number,returnType_1.ReturnType.String);}}]);return GetPastTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetPastTime=GetPastTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],56:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var returnType_1=require("../returnType");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var timeZoneConverter_1=require("../timeZoneConverter");var moment_timezone_1=require("moment-timezone");var moment_1=__importDefault(require("moment"));var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");/**
	 * Return the previous viable date of a timex expression based on the current date and user's timezone.
	 */var GetPreviousViableDate=function(_expressionEvaluator_44){inherits(GetPreviousViableDate,_expressionEvaluator_44);/**
	     * Initializes a new instance of the [GetPreviousViableDate](xref:adaptive-expressions.GetPreviousViableDate) class.
	     */function GetPreviousViableDate(){classCallCheck(this,GetPreviousViableDate);return possibleConstructorReturn(this,(GetPreviousViableDate.__proto__||Object.getPrototypeOf(GetPreviousViableDate)).call(this,expressionType_1.ExpressionType.GetPreviousViableDate,GetPreviousViableDate.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString));}/**
	     * @private
	     */createClass(GetPreviousViableDate,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var currentTime=moment_1.default(new Date().toISOString());var validYear=0;var validMonth=0;var validDay=0;var convertedDateTime=void 0;var _functionUtils_1$Func12=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func12.args,childrenError=_functionUtils_1$Func12.error;var error=childrenError;if(!error){var _functionUtils_intern16=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern16.timexProperty;error=_functionUtils_intern16.error;}if(parsed&&!error){if(parsed.year||!parsed.month||!parsed.dayOfMonth){error=args[0]+' must be a timex string which only contains month and day-of-month, for example: \'XXXX-10-31\'.';}}if(!error){if(args.length===2&&typeof args[1]==='string'){var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=args[1]+' is not a valid timezone';}if(!error){convertedDateTime=moment_timezone_1.tz(currentTime.utc(),timeZone);}}else {convertedDateTime=currentTime.utc();}}if(!error){var year=convertedDateTime.year();var month=convertedDateTime.month()+1;var dayOfMonth=convertedDateTime.date();if(parsed.month<month||parsed.month===month&&parsed.dayOfMonth<dayOfMonth){validYear=year;}else {validYear=year-1;}validMonth=parsed.month;validDay=parsed.dayOfMonth;if(validMonth===2&&validDay===29){while(!GetPreviousViableDate.leapYear(validYear)){validYear-=1;}}}var value=recognizers_text_data_types_timex_expression_1.TimexProperty.fromDate(new Date(validYear,validMonth-1,validDay)).timex;return {value:value,error:error};}/**
	     * @private
	     */},{key:'leapYear',value:function leapYear(year){return year%4==0&&year%100!=0||year%400==0;}}]);return GetPreviousViableDate;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetPreviousViableDate=GetPreviousViableDate;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"../timeZoneConverter":205,"@microsoft/recognizers-text-data-types-timex-expression":213,"moment":514,"moment-timezone":512}],57:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var returnType_1=require("../returnType");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var timeZoneConverter_1=require("../timeZoneConverter");var moment_timezone_1=require("moment-timezone");var moment_1=__importDefault(require("moment"));var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");/**
	 * Return the previous viable time of a timex expression based on the current time and user's timezone.
	 */var GetPreviousViableTime=function(_expressionEvaluator_45){inherits(GetPreviousViableTime,_expressionEvaluator_45);/**
	     * Initializes a new instance of the [GetPreviousViableTime](xref:adaptive-expressions.GetPreviousViableTime) class.
	     */function GetPreviousViableTime(){classCallCheck(this,GetPreviousViableTime);return possibleConstructorReturn(this,(GetPreviousViableTime.__proto__||Object.getPrototypeOf(GetPreviousViableTime)).call(this,expressionType_1.ExpressionType.GetPreviousViableTime,GetPreviousViableTime.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryOrBinaryString));}/**
	     * @private
	     */createClass(GetPreviousViableTime,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var currentTime=moment_1.default(new Date().toISOString());var validHour=0;var validMinute=0;var validSecond=0;var convertedDateTime=void 0;var formatRegex=/TXX:[0-5][0-9]:[0-5][0-9]/g;var _functionUtils_1$Func13=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func13.args,childrenError=_functionUtils_1$Func13.error;var error=childrenError;if(!error){if(!formatRegex.test(args[0])){error=args[0]+'  must be a timex string which only contains minutes and seconds, for example: \'TXX:15:28\'';}}if(!error){if(args.length===2&&typeof args[1]==='string'){var timeZone=timeZoneConverter_1.TimeZoneConverter.windowsToIana(args[1]);if(!timeZoneConverter_1.TimeZoneConverter.verifyTimeZoneStr(timeZone)){error=args[1]+' is not a valid timezone';}if(!error){convertedDateTime=moment_timezone_1.tz(currentTime.utc(),timeZone);}}else {convertedDateTime=currentTime.utc();}}if(!error){var _functionUtils_intern17=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0].replace('XX','00'));parsed=_functionUtils_intern17.timexProperty;error=_functionUtils_intern17.error;}if(!error){var hour=convertedDateTime.hour();var minute=convertedDateTime.minute();var second=convertedDateTime.second();if(parsed.minute<minute||parsed.minute===minute&&parsed.second<second){validHour=hour;}else {validHour=hour-1;}if(validHour<0){validHour+=24;}validMinute=parsed.minute;validSecond=parsed.second;}var value=recognizers_text_data_types_timex_expression_1.TimexProperty.fromTime(new recognizers_text_data_types_timex_expression_1.Time(validHour,validMinute,validSecond)).timex;return {value:value,error:error};}}]);return GetPreviousViableTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetPreviousViableTime=GetPreviousViableTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"../timeZoneConverter":205,"@microsoft/recognizers-text-data-types-timex-expression":213,"moment":514,"moment-timezone":512}],58:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var simpleObjectMemory_1=require("../memory/simpleObjectMemory");var returnType_1=require("../returnType");/**
	 * Retrieve the value of the specified property from the JSON object.
	 */var GetProperty=function(_expressionEvaluator_46){inherits(GetProperty,_expressionEvaluator_46);/**
	     * Initializes a new instance of the [GetProperty](xref:adaptive-expressions.GetProperty) class.
	     */function GetProperty(){classCallCheck(this,GetProperty);return possibleConstructorReturn(this,(GetProperty.__proto__||Object.getPrototypeOf(GetProperty)).call(this,expressionType_1.ExpressionType.GetProperty,GetProperty.evaluator,returnType_1.ReturnType.Object,GetProperty.validator));}/**
	     * @private
	     */createClass(GetProperty,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var property=void 0;var children=expression.children;var _children$0$tryEvalua=children[0].tryEvaluate(state,options),firstItem=_children$0$tryEvalua.value,childrenError=_children$0$tryEvalua.error;var error=childrenError;if(!error){if(children.length===1){// get root value from memory
	if(typeof firstItem==='string'){value=functionUtils_internal_1.InternalFunctionUtils.wrapGetValue(state,firstItem,options);}else {error='"Single parameter '+children[0]+' is not a string."';}}else {var _children$1$tryEvalua=children[1].tryEvaluate(state,options);// get the peoperty value from the instance
	property=_children$1$tryEvalua.value;error=_children$1$tryEvalua.error;if(!error){value=functionUtils_internal_1.InternalFunctionUtils.wrapGetValue(new simpleObjectMemory_1.SimpleObjectMemory(firstItem),property.toString(),options);}}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Object);}}]);return GetProperty;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetProperty=GetProperty;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../memory/simpleObjectMemory":193,"../returnType":204}],59:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var moment_1=require("moment");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Returns time of day for a given timestamp.
	 */var GetTimeOfDay=function(_expressionEvaluator_47){inherits(GetTimeOfDay,_expressionEvaluator_47);/**
	     * Initializes a new instance of the [GetTimeOfDay](xref:adaptive-expressions.GetTimeOfDay) class.
	     */function GetTimeOfDay(){classCallCheck(this,GetTimeOfDay);return possibleConstructorReturn(this,(GetTimeOfDay.__proto__||Object.getPrototypeOf(GetTimeOfDay)).call(this,expressionType_1.ExpressionType.GetTimeOfDay,GetTimeOfDay.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(GetTimeOfDay,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var value=void 0;var error=functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(args[0]);if(!error){var thisTime=moment_1.parseZone(args[0]).hour()*100+moment_1.parseZone(args[0]).minute();if(thisTime===0){value='midnight';}else if(thisTime>0&&thisTime<1200){value='morning';}else if(thisTime===1200){value='noon';}else if(thisTime>1200&&thisTime<1800){value='afternoon';}else if(thisTime>=1800&&thisTime<=2200){value='evening';}else if(thisTime>2200&&thisTime<=2359){value='night';}}return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyString);}}]);return GetTimeOfDay;}(expressionEvaluator_1.ExpressionEvaluator);exports.GetTimeOfDay=GetTimeOfDay;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],60:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether the first value is greater than the second value.
	 * Return true if the first value is more, or return false if less.
	 */var GreaterThan=function(_comparisonEvaluator_5){inherits(GreaterThan,_comparisonEvaluator_5);/**
	     * Initializes a new instance of the [GreaterThan](xref:adaptive-expressions.GreaterThan) class.
	     */function GreaterThan(){classCallCheck(this,GreaterThan);return possibleConstructorReturn(this,(GreaterThan.__proto__||Object.getPrototypeOf(GreaterThan)).call(this,expressionType_1.ExpressionType.GreaterThan,GreaterThan.func,functionUtils_1.FunctionUtils.validateBinaryNumberOrString,functionUtils_1.FunctionUtils.verifyNumberOrString));}/**
	     * @private
	     */createClass(GreaterThan,null,[{key:'func',value:function func(args){return args[0]>args[1];}}]);return GreaterThan;}(comparisonEvaluator_1.ComparisonEvaluator);exports.GreaterThan=GreaterThan;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],61:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether the first value is greater than or equal to the second value. Return true when the first value is greater or equal,
	 * or return false if the first value is less.
	 */var GreaterThanOrEqual=function(_comparisonEvaluator_6){inherits(GreaterThanOrEqual,_comparisonEvaluator_6);/**
	     * Initializes a new instance of the [GreaterThanOrEqual](xref:adaptive-expressions.GreaterThanOrEqual) class.
	     */function GreaterThanOrEqual(){classCallCheck(this,GreaterThanOrEqual);return possibleConstructorReturn(this,(GreaterThanOrEqual.__proto__||Object.getPrototypeOf(GreaterThanOrEqual)).call(this,expressionType_1.ExpressionType.GreaterThanOrEqual,GreaterThanOrEqual.func,functionUtils_1.FunctionUtils.validateBinaryNumberOrString,functionUtils_1.FunctionUtils.verifyNumberOrString));}/**
	     * @private
	     */createClass(GreaterThanOrEqual,null,[{key:'func',value:function func(args){return args[0]>=args[1];}}]);return GreaterThanOrEqual;}(comparisonEvaluator_1.ComparisonEvaluator);exports.GreaterThanOrEqual=GreaterThanOrEqual;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],62:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * Check whether an expression is true or false. Based on the result, return a specified value.
	 */var If=function(_expressionEvaluator_48){inherits(If,_expressionEvaluator_48);/**
	     * Initializes a new instance of the [If](xref:adaptive-expressions.If) class.
	     */function If(){classCallCheck(this,If);return possibleConstructorReturn(this,(If.__proto__||Object.getPrototypeOf(If)).call(this,expressionType_1.ExpressionType.If,If.evaluator,returnType_1.ReturnType.Object,If.validator));}/**
	     * @private
	     */createClass(If,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var error=void 0;var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _expression$children$=expression.children[0].tryEvaluate(state,newOptions);result=_expression$children$.value;error=_expression$children$.error;if(!error&&functionUtils_internal_1.InternalFunctionUtils.isLogicTrue(result)){var _expression$children$2=expression.children[1].tryEvaluate(state,options);result=_expression$children$2.value;error=_expression$children$2.error;}else {var _expression$children$3=expression.children[2].tryEvaluate(state,options);result=_expression$children$3.value;error=_expression$children$3.error;}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateArityAndAnyType(expr,3,3);}}]);return If;}(expressionEvaluator_1.ExpressionEvaluator);exports.If=If;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../options":195,"../returnType":204}],63:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Mark a clause so that MostSpecificSelector will ignore it.
	 * MostSpecificSelector considers A &amp; B to be more specific than A, but some clauses are unique and incomparable.
	 *
	 */var Ignore=function(_expressionEvaluator_49){inherits(Ignore,_expressionEvaluator_49);/**
	     * Initializes a new instance of the [Ignore](xref:adaptive-expressions.Ignore) class.
	     */function Ignore(){classCallCheck(this,Ignore);var _this63=possibleConstructorReturn(this,(Ignore.__proto__||Object.getPrototypeOf(Ignore)).call(this,expressionType_1.ExpressionType.Ignore,Ignore.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnaryBoolean));_this63.negation=_this63;return _this63;}/**
	     * @private
	     */createClass(Ignore,null,[{key:'evaluator',value:function evaluator(expression,state,options){return expression.children[0].tryEvaluate(state,options);}}]);return Ignore;}(expressionEvaluator_1.ExpressionEvaluator);exports.Ignore=Ignore;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],64:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});__export(require("./accessor"));__export(require("./add"));__export(require("./addDays"));__export(require("./addHours"));__export(require("./addMinutes"));__export(require("./addOrdinal"));__export(require("./addProperty"));__export(require("./addSeconds"));__export(require("./addToTime"));__export(require("./and"));__export(require("./average"));__export(require("./base64"));__export(require("./base64ToBinary"));__export(require("./base64ToString"));__export(require("./binary"));__export(require("./bool"));__export(require("./ceiling"));__export(require("./coalesce"));__export(require("./comparisonEvaluator"));__export(require("./concat"));__export(require("./contains"));__export(require("./convertFromUTC"));__export(require("./convertToUTC"));__export(require("./count"));__export(require("./countWord"));__export(require("./createArray"));__export(require("./dataUri"));__export(require("./dataUriToBinary"));__export(require("./dataUriToString"));__export(require("./dateFunc"));__export(require("./dateReadBack"));__export(require("./dateTimeDiff"));__export(require("./dayOfMonth"));__export(require("./dayOfWeek"));__export(require("./dayOfYear"));__export(require("./divide"));__export(require("./element"));__export(require("./empty"));__export(require("./endsWith"));__export(require("./equal"));__export(require("./exists"));__export(require("./flatten"));__export(require("./first"));__export(require("./float"));__export(require("./floor"));__export(require("./foreach"));__export(require("./formatDateTime"));__export(require("./formatEpoch"));__export(require("./formatNumber"));__export(require("./formatTicks"));__export(require("./getFutureTime"));__export(require("./getNextViableDate"));__export(require("./getNextViableTime"));__export(require("./getPastTime"));__export(require("./getPreviousViableDate"));__export(require("./getPreviousViableTime"));__export(require("./getPastTime"));__export(require("./getProperty"));__export(require("./getTimeOfDay"));__export(require("./greaterThan"));__export(require("./greaterThanOrEqual"));__export(require("./if"));__export(require("./ignore"));__export(require("./indexOf"));__export(require("./indicesAndValues"));__export(require("./int"));__export(require("./intersection"));__export(require("./isArray"));__export(require("./isBoolean"));__export(require("./isDate"));__export(require("./isDateRange"));__export(require("./isDateTime"));__export(require("./isDefinite"));__export(require("./isDuration"));__export(require("./isFloat"));__export(require("./isInteger"));__export(require("./isMatch"));__export(require("./isObject"));__export(require("./isPresent"));__export(require("./isString"));__export(require("./isTime"));__export(require("./isTimeRange"));__export(require("./join"));__export(require("./jPath"));__export(require("./json"));__export(require("./jsonStringify"));__export(require("./last"));__export(require("./lastIndexOf"));__export(require("./length"));__export(require("./lessThan"));__export(require("./lessThanOrEqual"));__export(require("./max"));__export(require("./merge"));__export(require("./min"));__export(require("./mod"));__export(require("./month"));__export(require("./multiply"));__export(require("./multivariateNumericEvaluator"));__export(require("./newGuid"));__export(require("./not"));__export(require("./notEqual"));__export(require("./numberTransformEvaluator"));__export(require("./numericEvaluator"));__export(require("./optional"));__export(require("./or"));__export(require("./power"));__export(require("./rand"));__export(require("./range"));__export(require("./removeProperty"));__export(require("./replace"));__export(require("./replaceIgnoreCase"));__export(require("./reverse"));__export(require("./round"));__export(require("./select"));__export(require("./sentenceCase"));__export(require("./setPathToValue"));__export(require("./setProperty"));__export(require("./skip"));__export(require("./sortBy"));__export(require("./sortByDescending"));__export(require("./split"));__export(require("./startOfDay"));__export(require("./startOfHour"));__export(require("./startOfMonth"));__export(require("./startsWith"));__export(require("./string"));__export(require("./stringTransformEvaluator"));__export(require("./subArray"));__export(require("./substring"));__export(require("./subtract"));__export(require("./subtractFromTime"));__export(require("./sum"));__export(require("./take"));__export(require("./ticks"));__export(require("./ticksToDays"));__export(require("./ticksToHours"));__export(require("./ticksToMinutes"));__export(require("./timeTransformEvaluator"));__export(require("./titleCase"));__export(require("./toLower"));__export(require("./toUpper"));__export(require("./trim"));__export(require("./union"));__export(require("./unique"));__export(require("./uriComponent"));__export(require("./uriComponentToString"));__export(require("./uriHost"));__export(require("./uriPath"));__export(require("./uriPathAndQuery"));__export(require("./uriPort"));__export(require("./uriQuery"));__export(require("./uriScheme"));__export(require("./utcNow"));__export(require("./where"));__export(require("./year"));},{"./accessor":2,"./add":3,"./addDays":4,"./addHours":5,"./addMinutes":6,"./addOrdinal":7,"./addProperty":8,"./addSeconds":9,"./addToTime":10,"./and":11,"./average":12,"./base64":13,"./base64ToBinary":14,"./base64ToString":15,"./binary":16,"./bool":17,"./ceiling":18,"./coalesce":19,"./comparisonEvaluator":20,"./concat":21,"./contains":22,"./convertFromUTC":23,"./convertToUTC":24,"./count":25,"./countWord":26,"./createArray":27,"./dataUri":28,"./dataUriToBinary":29,"./dataUriToString":30,"./dateFunc":31,"./dateReadBack":32,"./dateTimeDiff":33,"./dayOfMonth":34,"./dayOfWeek":35,"./dayOfYear":36,"./divide":37,"./element":38,"./empty":39,"./endsWith":40,"./equal":41,"./exists":42,"./first":43,"./flatten":44,"./float":45,"./floor":46,"./foreach":47,"./formatDateTime":48,"./formatEpoch":49,"./formatNumber":50,"./formatTicks":51,"./getFutureTime":52,"./getNextViableDate":53,"./getNextViableTime":54,"./getPastTime":55,"./getPreviousViableDate":56,"./getPreviousViableTime":57,"./getProperty":58,"./getTimeOfDay":59,"./greaterThan":60,"./greaterThanOrEqual":61,"./if":62,"./ignore":63,"./indexOf":65,"./indicesAndValues":66,"./int":67,"./intersection":68,"./isArray":69,"./isBoolean":70,"./isDate":71,"./isDateRange":72,"./isDateTime":73,"./isDefinite":74,"./isDuration":75,"./isFloat":76,"./isInteger":77,"./isMatch":78,"./isObject":79,"./isPresent":80,"./isString":81,"./isTime":82,"./isTimeRange":83,"./jPath":84,"./join":85,"./json":86,"./jsonStringify":87,"./last":88,"./lastIndexOf":89,"./length":90,"./lessThan":91,"./lessThanOrEqual":92,"./max":93,"./merge":94,"./min":95,"./mod":96,"./month":97,"./multiply":98,"./multivariateNumericEvaluator":99,"./newGuid":100,"./not":101,"./notEqual":102,"./numberTransformEvaluator":103,"./numericEvaluator":104,"./optional":105,"./or":106,"./power":107,"./rand":108,"./range":109,"./removeProperty":110,"./replace":111,"./replaceIgnoreCase":112,"./reverse":113,"./round":114,"./select":115,"./sentenceCase":116,"./setPathToValue":117,"./setProperty":118,"./skip":119,"./sortBy":120,"./sortByDescending":121,"./split":122,"./startOfDay":123,"./startOfHour":124,"./startOfMonth":125,"./startsWith":126,"./string":127,"./stringTransformEvaluator":128,"./subArray":129,"./substring":130,"./subtract":131,"./subtractFromTime":132,"./sum":133,"./take":134,"./ticks":135,"./ticksToDays":136,"./ticksToHours":137,"./ticksToMinutes":138,"./timeTransformEvaluator":139,"./titleCase":140,"./toLower":141,"./toUpper":142,"./trim":143,"./union":144,"./unique":145,"./uriComponent":146,"./uriComponentToString":147,"./uriHost":148,"./uriPath":149,"./uriPathAndQuery":150,"./uriPort":151,"./uriQuery":152,"./uriScheme":153,"./utcNow":154,"./where":155,"./year":156}],65:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Returns the index of the first occurrence of a value in an array.
	 * The zero-based index position of value if that value is found, or -1 if it is not.
	 */var IndexOf=function(_expressionEvaluator_50){inherits(IndexOf,_expressionEvaluator_50);/**
	     * Initializes a new instance of the [IndexOf](xref:adaptive-expressions.IndexOf) class.
	     */function IndexOf(){classCallCheck(this,IndexOf);return possibleConstructorReturn(this,(IndexOf.__proto__||Object.getPrototypeOf(IndexOf)).call(this,expressionType_1.ExpressionType.IndexOf,IndexOf.evaluator,returnType_1.ReturnType.Number,IndexOf.validator));}/**
	     * @private
	     */createClass(IndexOf,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=-1;var _functionUtils_1$Func14=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func14.args,childrenError=_functionUtils_1$Func14.error;var error=childrenError;if(!error){if(args[0]==undefined||typeof args[0]==='string'){if(args[1]===undefined||typeof args[1]==='string'){value=functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).indexOf(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]));}else {error='Can only look for indexof string in '+expression;}}else if(Array.isArray(args[0])){value=args[0].indexOf(args[1]);}else {error=expression+' works only on string or list.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.String|returnType_1.ReturnType.Array,returnType_1.ReturnType.Object);}}]);return IndexOf;}(expressionEvaluator_1.ExpressionEvaluator);exports.IndexOf=IndexOf;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],66:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Turn an array or object into an array of objects with index and value properties.
	 * For arrays, the index is the position in the array.
	 * For objects, it is the key for the value.
	 */var IndicesAndValues=function(_expressionEvaluator_51){inherits(IndicesAndValues,_expressionEvaluator_51);/**
	     * Initializes a new instance of the [IndicesAndValues](xref:adaptive-expressions.IndicesAndValues) class.
	     */function IndicesAndValues(){classCallCheck(this,IndicesAndValues);return possibleConstructorReturn(this,(IndicesAndValues.__proto__||Object.getPrototypeOf(IndicesAndValues)).call(this,expressionType_1.ExpressionType.IndicesAndValues,IndicesAndValues.evaluator,returnType_1.ReturnType.Array,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IndicesAndValues,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=undefined;var error=undefined;var value=undefined;var _expression$children$4=expression.children[0].tryEvaluate(state,options);value=_expression$children$4.value;error=_expression$children$4.error;if(error===undefined){if(Array.isArray(value)){var tempList=[];for(var i=0;i<value.length;i++){tempList.push({index:i,value:value[i]});}result=tempList;}else if((typeof value==='undefined'?'undefined':_typeof(value))==='object'){var _tempList=[];var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=Object.entries(value)[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var _step4$value=slicedToArray(_step4.value,2),index=_step4$value[0],val=_step4$value[1];_tempList.push({index:index,value:val});}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}result=_tempList;}else {error=expression.children[0]+' is not array or object.';}}return {value:result,error:error};}}]);return IndicesAndValues;}(expressionEvaluator_1.ExpressionEvaluator);exports.IndicesAndValues=IndicesAndValues;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],67:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the integer version of a string.
	 */var Int=function(_expressionEvaluator_52){inherits(Int,_expressionEvaluator_52);/**
	     * Initializes a new instance of the [Int](xref:adaptive-expressions.Int) class.
	     */function Int(){classCallCheck(this,Int);return possibleConstructorReturn(this,(Int.__proto__||Object.getPrototypeOf(Int)).call(this,expressionType_1.ExpressionType.Int,Int.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Int,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var value=parseInt(args[0],10);if(!functionUtils_1.FunctionUtils.isNumber(value)){error='parameter '+args[0]+' is not a valid number string.';}return {value:value,error:error};});}}]);return Int;}(expressionEvaluator_1.ExpressionEvaluator);exports.Int=Int;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],68:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a collection that has only the common items across the specified collections.
	 * To appear in the result, an item must appear in all the collections passed to this function.
	 * If one or more items have the same name,
	 * the last item with that name appears in the result.
	 */var Intersection=function(_expressionEvaluator_53){inherits(Intersection,_expressionEvaluator_53);/**
	     * Initializes a new instance of the [Intersection](xref:adaptive-expressions.Intersection) class.
	     */function Intersection(){classCallCheck(this,Intersection);return possibleConstructorReturn(this,(Intersection.__proto__||Object.getPrototypeOf(Intersection)).call(this,expressionType_1.ExpressionType.Intersection,Intersection.evaluator(),returnType_1.ReturnType.Array,Intersection.validator));}/**
	     * @private
	     */createClass(Intersection,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var result=args[0];var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{var _loop=function _loop(){var arg=_step5.value;result=result.filter(function(e){return arg.indexOf(e)>-1;});};for(var _iterator5=args[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){_loop();}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return Array.from(new Set(result));},functionUtils_1.FunctionUtils.verifyList);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,1,Number.MAX_SAFE_INTEGER,returnType_1.ReturnType.Array);}}]);return Intersection;}(expressionEvaluator_1.ExpressionEvaluator);exports.Intersection=Intersection;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],69:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is an array.
	 */var IsArray=function(_expressionEvaluator_54){inherits(IsArray,_expressionEvaluator_54);/**
	     * Initializes a new instance of the [IsArray](xref:adaptive-expressions.IsArray) class.
	     */function IsArray(){classCallCheck(this,IsArray);return possibleConstructorReturn(this,(IsArray.__proto__||Object.getPrototypeOf(IsArray)).call(this,expressionType_1.ExpressionType.IsArray,IsArray.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsArray,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return Array.isArray(args[0]);});}}]);return IsArray;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsArray=IsArray;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],70:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is a Boolean.
	 */var IsBoolean=function(_expressionEvaluator_55){inherits(IsBoolean,_expressionEvaluator_55);/**
	     * Initializes a new instance of the [IsBoolean](xref:adaptive-expressions.IsBoolean) class.
	     */function IsBoolean(){classCallCheck(this,IsBoolean);return possibleConstructorReturn(this,(IsBoolean.__proto__||Object.getPrototypeOf(IsBoolean)).call(this,expressionType_1.ExpressionType.IsBoolean,IsBoolean.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsBoolean,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return typeof args[0]==='boolean';});}}]);return IsBoolean;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsBoolean=IsBoolean;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],71:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given `TimexProperty` or timex string refers to a valid date.
	 * Valid dates contain the month and dayOfMonth, or contain the dayOfWeek.
	 */var IsDate=function(_expressionEvaluator_56){inherits(IsDate,_expressionEvaluator_56);/**
	     * Initializes a new instance of the [IsDate](xref:adaptive-expressions.IsDate) class.
	     */function IsDate(){classCallCheck(this,IsDate);return possibleConstructorReturn(this,(IsDate.__proto__||Object.getPrototypeOf(IsDate)).call(this,expressionType_1.ExpressionType.IsDate,IsDate.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsDate,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func15=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func15.args,childrenError=_functionUtils_1$Func15.error;var error=childrenError;if(!error){var _functionUtils_intern18=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern18.timexProperty;error=_functionUtils_intern18.error;}if(parsed&&!error){value=parsed.month!==undefined&&parsed.dayOfMonth!==undefined||parsed.dayOfWeek!==undefined;}return {value:value,error:error};}}]);return IsDate;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsDate=IsDate;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],72:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given TimexProperty or Timex expression refers to a valid date range.
	 */var IsDateRange=function(_expressionEvaluator_57){inherits(IsDateRange,_expressionEvaluator_57);/**
	     * Initializes a new instance of the [IsDateRange](xref:adaptive-expressions.IsDateRange) class.
	     */function IsDateRange(){classCallCheck(this,IsDateRange);return possibleConstructorReturn(this,(IsDateRange.__proto__||Object.getPrototypeOf(IsDateRange)).call(this,expressionType_1.ExpressionType.IsDateRange,IsDateRange.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsDateRange,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func16=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func16.args,childrenError=_functionUtils_1$Func16.error;var error=childrenError;if(!error){var _functionUtils_intern19=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern19.timexProperty;error=_functionUtils_intern19.error;}if(parsed&&!error){value=parsed.year!==undefined&&parsed.dayOfMonth===undefined||parsed.year!==undefined&&parsed.month!==undefined&&parsed.dayOfMonth===undefined||parsed.month!==undefined&&parsed.dayOfMonth===undefined||parsed.season!==undefined||parsed.weekOfYear!==undefined||parsed.weekOfMonth!==undefined;}return {value:value,error:error};}}]);return IsDateRange;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsDateRange=IsDateRange;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],73:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given input is a UTC ISO format (YYYY-MM-DDTHH:mm:ss.fffZ) timestamp string.
	 */var IsDateTime=function(_expressionEvaluator_58){inherits(IsDateTime,_expressionEvaluator_58);/**
	     * Initializes a new instance of the [IsDateTime](xref:adaptive-expressions.IsDateTime) class.
	     */function IsDateTime(){classCallCheck(this,IsDateTime);return possibleConstructorReturn(this,(IsDateTime.__proto__||Object.getPrototypeOf(IsDateTime)).call(this,expressionType_1.ExpressionType.IsDateTime,IsDateTime.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsDateTime,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return typeof args[0]==='string'&&functionUtils_internal_1.InternalFunctionUtils.verifyISOTimestamp(args[0])===undefined;});}}]);return IsDateTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsDateTime=IsDateTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],74:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given TimexProperty or Timex expression refers to a valid date. Valid dates contain the year, month and dayOfMonth.
	 */var IsDefinite=function(_expressionEvaluator_59){inherits(IsDefinite,_expressionEvaluator_59);/**
	     * Initializes a new instance of the [IsDefinite](xref:adaptive-expressions.IsDefinite) class.
	     */function IsDefinite(){classCallCheck(this,IsDefinite);return possibleConstructorReturn(this,(IsDefinite.__proto__||Object.getPrototypeOf(IsDefinite)).call(this,expressionType_1.ExpressionType.IsDefinite,IsDefinite.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsDefinite,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func17=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func17.args,childrenError=_functionUtils_1$Func17.error;var error=childrenError;if(!error){var _functionUtils_intern20=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern20.timexProperty;error=_functionUtils_intern20.error;}if(!error){value=parsed!=undefined&&parsed.year!==undefined&&parsed.month!==undefined&&parsed.dayOfMonth!==undefined;}return {value:value,error:error};}}]);return IsDefinite;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsDefinite=IsDefinite;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],75:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given TimexProperty or Timex expression refers to a valid duration.
	 */var IsDuration=function(_expressionEvaluator_60){inherits(IsDuration,_expressionEvaluator_60);/**
	     * Initializes a new instance of the [IsDuration](xref:adaptive-expressions.IsDuration) class.
	     */function IsDuration(){classCallCheck(this,IsDuration);return possibleConstructorReturn(this,(IsDuration.__proto__||Object.getPrototypeOf(IsDuration)).call(this,expressionType_1.ExpressionType.IsDuration,IsDuration.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsDuration,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func18=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func18.args,childrenError=_functionUtils_1$Func18.error;var error=childrenError;if(!error){var _functionUtils_intern21=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern21.timexProperty;error=_functionUtils_intern21.error;}if(parsed&&!error){value=parsed.years!==undefined||parsed.months!==undefined||parsed.weeks!==undefined||parsed.days!==undefined||parsed.hours!==undefined||parsed.minutes!==undefined||parsed.seconds!==undefined;}return {value:value,error:error};}}]);return IsDuration;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsDuration=IsDuration;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],76:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is a floating-point number.
	 * Due to the alignment between C# and JavaScript, a number with an non-zero residue of its modulo 1 will be treated as a floating-point number.
	 */var IsFloat=function(_expressionEvaluator_61){inherits(IsFloat,_expressionEvaluator_61);/**
	     * Initializes a new instance of the [IsFloat](xref:adaptive-expressions.IsFloat) class.
	     */function IsFloat(){classCallCheck(this,IsFloat);return possibleConstructorReturn(this,(IsFloat.__proto__||Object.getPrototypeOf(IsFloat)).call(this,expressionType_1.ExpressionType.IsFloat,IsFloat.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsFloat,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_1.FunctionUtils.isNumber(args[0])&&!Number.isInteger(args[0]);});}}]);return IsFloat;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsFloat=IsFloat;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],77:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is an integer number. Due to the alignment between C# and JavaScript, a number with a zero residue of its modulo 1 will be treated as an integer number.
	 */var IsInteger=function(_expressionEvaluator_62){inherits(IsInteger,_expressionEvaluator_62);/**
	     * Initializes a new instance of the [IsInteger](xref:adaptive-expressions.IsInteger) class.
	     */function IsInteger(){classCallCheck(this,IsInteger);return possibleConstructorReturn(this,(IsInteger.__proto__||Object.getPrototypeOf(IsInteger)).call(this,expressionType_1.ExpressionType.IsInteger,IsInteger.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsInteger,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_1.FunctionUtils.isNumber(args[0])&&Number.isInteger(args[0]);});}}]);return IsInteger;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsInteger=IsInteger;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],78:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var commonRegex_1=require("../commonRegex");var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given string matches a specified regular expression pattern.
	 */var IsMatch=function(_expressionEvaluator_63){inherits(IsMatch,_expressionEvaluator_63);/**
	     * Initializes a new instance of the [IsMatch](xref:adaptive-expressions.IsMatch) class.
	     */function IsMatch(){classCallCheck(this,IsMatch);return possibleConstructorReturn(this,(IsMatch.__proto__||Object.getPrototypeOf(IsMatch)).call(this,expressionType_1.ExpressionType.IsMatch,IsMatch.evaluator(),returnType_1.ReturnType.Boolean,IsMatch.validator));}/**
	     * @private
	     */createClass(IsMatch,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var value=false;var error=void 0;if(args[0]===undefined||args[0]===''){value=false;error='regular expression is empty.';}else {var regex=commonRegex_1.CommonRegex.CreateRegex(args[1].toString());value=regex.test(args[0].toString());}return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.String);var second=expression.children[1];if(second.returnType===returnType_1.ReturnType.String&&second.type===expressionType_1.ExpressionType.Constant){commonRegex_1.CommonRegex.CreateRegex(second.value.toString());}}}]);return IsMatch;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsMatch=IsMatch;},{"../commonRegex":157,"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],79:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is a complex object or return false if it is a primitive object.
	 * Primitive objects include strings, numbers, and Booleans;
	 * complex types, contain properties.
	 */var IsObject=function(_expressionEvaluator_64){inherits(IsObject,_expressionEvaluator_64);/**
	     * Initializes a new instance of the [IsObject](xref:adaptive-expressions.IsObject) class.
	     */function IsObject(){classCallCheck(this,IsObject);return possibleConstructorReturn(this,(IsObject.__proto__||Object.getPrototypeOf(IsObject)).call(this,expressionType_1.ExpressionType.IsObject,IsObject.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsObject,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return _typeof(args[0])==='object';});}}]);return IsObject;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsObject=IsObject;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],80:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given TimexProperty or Timex expression refers to the present.
	 */var IsPresent=function(_expressionEvaluator_65){inherits(IsPresent,_expressionEvaluator_65);/**
	     * Initializes a new instance of the [IsPresent](xref:adaptive-expressions.IsPresent) class.
	     */function IsPresent(){classCallCheck(this,IsPresent);return possibleConstructorReturn(this,(IsPresent.__proto__||Object.getPrototypeOf(IsPresent)).call(this,expressionType_1.ExpressionType.IsPresent,IsPresent.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsPresent,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func19=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func19.args,childrenError=_functionUtils_1$Func19.error;var error=childrenError;if(!error){var _functionUtils_intern22=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern22.timexProperty;error=_functionUtils_intern22.error;}if(parsed&&!error){value=parsed.now!==undefined;}return {value:value,error:error};}}]);return IsPresent;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsPresent=IsPresent;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],81:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return true if a given input is a string.
	 */var IsString=function(_expressionEvaluator_66){inherits(IsString,_expressionEvaluator_66);/**
	     * Initializes a new instance of the [IsString](xref:adaptive-expressions.IsString) class.
	     */function IsString(){classCallCheck(this,IsString);return possibleConstructorReturn(this,(IsString.__proto__||Object.getPrototypeOf(IsString)).call(this,expressionType_1.ExpressionType.IsString,IsString.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsString,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return typeof args[0]==='string';});}}]);return IsString;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsString=IsString;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],82:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given TimexProperty or Timex expression refers to a valid time.
	 * Valid time contains hours, minutes and seconds.
	 */var IsTime=function(_expressionEvaluator_67){inherits(IsTime,_expressionEvaluator_67);/**
	     * Initializes a new instance of the [IsTime](xref:adaptive-expressions.IsTime) class.
	     */function IsTime(){classCallCheck(this,IsTime);return possibleConstructorReturn(this,(IsTime.__proto__||Object.getPrototypeOf(IsTime)).call(this,expressionType_1.ExpressionType.IsTime,IsTime.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsTime,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func20=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func20.args,childrenError=_functionUtils_1$Func20.error;var error=childrenError;if(!error){var _functionUtils_intern23=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern23.timexProperty;error=_functionUtils_intern23.error;}if(parsed&&!error){value=parsed.hour!==undefined&&parsed.minute!==undefined&&parsed.second!==undefined;}return {value:value,error:error};}}]);return IsTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsTime=IsTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],83:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return true if a given `TimexProperty` or Timex string refers to a valid time range Valid time ranges contain partOfDay.
	 */var IsTimeRange=function(_expressionEvaluator_68){inherits(IsTimeRange,_expressionEvaluator_68);/**
	     * Initializes a new instance of the [IsTimeRange](xref:adaptive-expressions.IsTimeRange) class.
	     */function IsTimeRange(){classCallCheck(this,IsTimeRange);return possibleConstructorReturn(this,(IsTimeRange.__proto__||Object.getPrototypeOf(IsTimeRange)).call(this,expressionType_1.ExpressionType.IsTimeRange,IsTimeRange.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(IsTimeRange,null,[{key:'evaluator',value:function evaluator(expr,state,options){var parsed=void 0;var value=false;var _functionUtils_1$Func21=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func21.args,childrenError=_functionUtils_1$Func21.error;var error=childrenError;if(!error){var _functionUtils_intern24=functionUtils_internal_1.InternalFunctionUtils.parseTimexProperty(args[0]);parsed=_functionUtils_intern24.timexProperty;error=_functionUtils_intern24.error;}if(parsed&&!error){value=parsed.partOfDay!==undefined;}return {value:value,error:error};}}]);return IsTimeRange;}(expressionEvaluator_1.ExpressionEvaluator);exports.IsTimeRange=IsTimeRange;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],84:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});var jsPath=__importStar(require("jspath"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Check JSON or a JSON string for nodes or values that match a path expression, and return the matching nodes.
	 */var JPath=function(_expressionEvaluator_69){inherits(JPath,_expressionEvaluator_69);/**
	     * Initializes a new instance of the [JPath](xref:adaptive-expressions.JPath) class.
	     */function JPath(){classCallCheck(this,JPath);return possibleConstructorReturn(this,(JPath.__proto__||Object.getPrototypeOf(JPath)).call(this,expressionType_1.ExpressionType.JPath,JPath.evaluator(),returnType_1.ReturnType.Object,JPath.validator));}/**
	     * @private
	     */createClass(JPath,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return JPath.evalJPath(args[0],args[1].toString());});}/**
	     * @private
	     */},{key:'evalJPath',value:function evalJPath(jsonEntity,path){var error=void 0;var evaled=void 0;var json=void 0;if(typeof jsonEntity==='string'){try{json=JSON.parse(jsonEntity);}catch(e){error=jsonEntity+' is not a valid json string';}}else if((typeof jsonEntity==='undefined'?'undefined':_typeof(jsonEntity))==='object'){json=jsonEntity;}else {error='the first parameter should be either an object or a string';}if(!error){try{evaled=jsPath.apply(path,json);}catch(e){error=path+' is not a valid path + '+e;}}return {value:evaled,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,undefined,returnType_1.ReturnType.Object,returnType_1.ReturnType.String);}}]);return JPath;}(expressionEvaluator_1.ExpressionEvaluator);exports.JPath=JPath;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"jspath":372}],85:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a string that has all the items from an array, with each character separated by a delimiter.
	 */var Join=function(_expressionEvaluator_70){inherits(Join,_expressionEvaluator_70);/**
	     * Initializes a new instance of the Join class.
	     */function Join(){classCallCheck(this,Join);return possibleConstructorReturn(this,(Join.__proto__||Object.getPrototypeOf(Join)).call(this,expressionType_1.ExpressionType.Join,Join.evaluator,returnType_1.ReturnType.String,Join.validator));}/**
	     * @private
	     */createClass(Join,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func22=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func22.args,childrenError=_functionUtils_1$Func22.error;var error=childrenError;if(!error){if(!Array.isArray(args[0])){error=expression.children[0]+' evaluates to '+args[0]+' which is not a list.';}else {if(args.length===2){value=args[0].join(args[1]);}else {if(args[0].length<3){value=args[0].join(args[2]);}else {var firstPart=args[0].slice(0,args[0].length-1).join(args[1]);value=firstPart.concat(args[2],args[0][args[0].length-1]);}}}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Array,returnType_1.ReturnType.String);}}]);return Join;}(expressionEvaluator_1.ExpressionEvaluator);exports.Join=Join;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],86:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the JavaScript Object Notation (JSON) type value or object of a string or XML.
	 */var Json=function(_expressionEvaluator_71){inherits(Json,_expressionEvaluator_71);/**
	     * Initializes a new instance of the [Json](xref:adaptive-expressions.Json) class.
	     */function Json(){classCallCheck(this,Json);return possibleConstructorReturn(this,(Json.__proto__||Object.getPrototypeOf(Json)).call(this,expressionType_1.ExpressionType.Json,Json.evaluator(),returnType_1.ReturnType.Object,Json.validator));}/**
	     * @private
	     */createClass(Json,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return JSON.parse(args[0].trim());});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.String);}}]);return Json;}(expressionEvaluator_1.ExpressionEvaluator);exports.Json=Json;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],87:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the string version of a value.
	 */var JsonStringify=function(_expressionEvaluator_72){inherits(JsonStringify,_expressionEvaluator_72);/**
	     * Initializes a new instance of the [JsonStringify](xref:adaptive-expressions.JsonStringify) class.
	     */function JsonStringify(){classCallCheck(this,JsonStringify);return possibleConstructorReturn(this,(JsonStringify.__proto__||Object.getPrototypeOf(JsonStringify)).call(this,expressionType_1.ExpressionType.JsonStringify,JsonStringify.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(JsonStringify,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return JSON.stringify(args[0]);});}}]);return JsonStringify;}(expressionEvaluator_1.ExpressionEvaluator);exports.JsonStringify=JsonStringify;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],88:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the last item from a collection.
	 */var Last=function(_expressionEvaluator_73){inherits(Last,_expressionEvaluator_73);/**
	     * Initializes a new instance of the [Last](xref:adaptive-expressions.Last) class.
	     */function Last(){classCallCheck(this,Last);return possibleConstructorReturn(this,(Last.__proto__||Object.getPrototypeOf(Last)).call(this,expressionType_1.ExpressionType.Last,Last.evaluator(),returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Last,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var last=void 0;if(typeof args[0]==='string'&&args[0].length>0){last=args[0][args[0].length-1];}if(Array.isArray(args[0])&&args[0].length>0){last=functionUtils_internal_1.InternalFunctionUtils.accessIndex(args[0],args[0].length-1).value;}return last;});}}]);return Last;}(expressionEvaluator_1.ExpressionEvaluator);exports.Last=Last;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],89:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Returns the index of the last occurrence of a specified value in an array.
	 * The zero-based index position of value if that value is found, or -1 if it is not.
	 */var LastIndexOf=function(_expressionEvaluator_74){inherits(LastIndexOf,_expressionEvaluator_74);/**
	     * Initializes a new instance of the [LastIndexOf](xref:adaptive-expressions.LastIndexOf) class.
	     */function LastIndexOf(){classCallCheck(this,LastIndexOf);return possibleConstructorReturn(this,(LastIndexOf.__proto__||Object.getPrototypeOf(LastIndexOf)).call(this,expressionType_1.ExpressionType.LastIndexOf,LastIndexOf.evaluator,returnType_1.ReturnType.Number,LastIndexOf.validator));}/**
	     * @private
	     */createClass(LastIndexOf,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=-1;var _functionUtils_1$Func23=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func23.args,childrenError=_functionUtils_1$Func23.error;var error=childrenError;if(!error){if(args[0]==undefined||typeof args[0]==='string'){if(args[1]===undefined||typeof args[1]==='string'){var str=functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]);var searchValue=functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]);value=str.lastIndexOf(searchValue,str.length-1);}else {error='Can only look for indexof string in '+expression;}}else if(Array.isArray(args[0])){value=args[0].lastIndexOf(args[1]);}else {error=expression+' works only on string or list.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.String|returnType_1.ReturnType.Array,returnType_1.ReturnType.Object);}}]);return LastIndexOf;}(expressionEvaluator_1.ExpressionEvaluator);exports.LastIndexOf=LastIndexOf;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],90:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the length of a string.
	 */var Length=function(_expressionEvaluator_75){inherits(Length,_expressionEvaluator_75);/**
	     * Initializes a new instance of the [Length](xref:adaptive-expressions.Length) class.
	     */function Length(){classCallCheck(this,Length);return possibleConstructorReturn(this,(Length.__proto__||Object.getPrototypeOf(Length)).call(this,expressionType_1.ExpressionType.Length,Length.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(Length,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).length;},functionUtils_1.FunctionUtils.verifyStringOrNull);}}]);return Length;}(expressionEvaluator_1.ExpressionEvaluator);exports.Length=Length;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],91:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether the first value is less than the second value.
	 * Return true if the first value is less, or return false if the first value is more.
	 */var LessThan=function(_comparisonEvaluator_7){inherits(LessThan,_comparisonEvaluator_7);/**
	     * Initializes a new instance of the [LessThan](xref:adaptive-expressions.LessThan) class.
	     */function LessThan(){classCallCheck(this,LessThan);return possibleConstructorReturn(this,(LessThan.__proto__||Object.getPrototypeOf(LessThan)).call(this,expressionType_1.ExpressionType.LessThan,LessThan.func,functionUtils_1.FunctionUtils.validateBinaryNumberOrString,functionUtils_1.FunctionUtils.verifyNumberOrString));}/**
	     * @private
	     */createClass(LessThan,null,[{key:'func',value:function func(args){return args[0]<args[1];}}]);return LessThan;}(comparisonEvaluator_1.ComparisonEvaluator);exports.LessThan=LessThan;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],92:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Check whether the first value is less than or equal to the second value.
	 * Return true if the first value is less than or equal, or return false if the first value is more.
	 */var LessThanOrEqual=function(_comparisonEvaluator_8){inherits(LessThanOrEqual,_comparisonEvaluator_8);/**
	     * Initializes a new instance of the [LessThanOrEqual](xref:adaptive-expressions.LessThanOrEqual) class.
	     */function LessThanOrEqual(){classCallCheck(this,LessThanOrEqual);return possibleConstructorReturn(this,(LessThanOrEqual.__proto__||Object.getPrototypeOf(LessThanOrEqual)).call(this,expressionType_1.ExpressionType.LessThanOrEqual,LessThanOrEqual.func,functionUtils_1.FunctionUtils.validateBinaryNumberOrString,functionUtils_1.FunctionUtils.verifyNumberOrString));}/**
	     * @private
	     */createClass(LessThanOrEqual,null,[{key:'func',value:function func(args){return args[0]<=args[1];}}]);return LessThanOrEqual;}(comparisonEvaluator_1.ComparisonEvaluator);exports.LessThanOrEqual=LessThanOrEqual;},{"../expressionType":183,"../functionUtils":187,"./comparisonEvaluator":20}],93:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 *  Return the highest value from an array. The array is inclusive at both ends.
	 */var Max=function(_expressionEvaluator_76){inherits(Max,_expressionEvaluator_76);/**
	     * Initializes a new instance of the [Max](xref:adaptive-expressions.Max) class.
	     */function Max(){classCallCheck(this,Max);return possibleConstructorReturn(this,(Max.__proto__||Object.getPrototypeOf(Max)).call(this,expressionType_1.ExpressionType.Max,Max.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(Max,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var result=Number.NEGATIVE_INFINITY;if(args.length===1){if(Array.isArray(args[0])){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=args[0][Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var value=_step6.value;result=Math.max(result,value);}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}}else {result=Math.max(result,args[0]);}}else {var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=args[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var _arg=_step7.value;if(Array.isArray(_arg)){var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=_arg[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var _value2=_step8.value;result=Math.max(result,_value2);}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}}else {result=Math.max(result,_arg);}}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}}return result;},functionUtils_1.FunctionUtils.verifyNumberOrNumericList);}}]);return Max;}(expressionEvaluator_1.ExpressionEvaluator);exports.Max=Max;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],94:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Merge two JSON objects into one JSON object.
	 */var Merge=function(_expressionEvaluator_77){inherits(Merge,_expressionEvaluator_77);/**
	     * Initializes a new instance of the [Merge](xref:adaptive-expressions.Merge) class.
	     */function Merge(){classCallCheck(this,Merge);return possibleConstructorReturn(this,(Merge.__proto__||Object.getPrototypeOf(Merge)).call(this,expressionType_1.ExpressionType.Merge,Merge.evaluator(),returnType_1.ReturnType.Object,Merge.validator));}/**
	     * @private
	     */createClass(Merge,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applySequenceWithError(function(args){var value=void 0;var error=void 0;if(_typeof(args[0])==='object'&&!Array.isArray(args[0])&&_typeof(args[1])==='object'&&!Array.isArray(args[1])){Object.assign(args[0],args[1]);value=args[0];}else {error='The argumets '+args[0]+' and '+args[1]+' must be JSON objects.';}return {value:value,error:error};});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,Number.MAX_SAFE_INTEGER);}}]);return Merge;}(expressionEvaluator_1.ExpressionEvaluator);exports.Merge=Merge;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],95:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the lowest value from a set of numbers in an array.
	 */var Min=function(_expressionEvaluator_78){inherits(Min,_expressionEvaluator_78);/**
	     * Initializes a new instance of the [Min](xref:adaptive-expressions.Min) class.
	     */function Min(){classCallCheck(this,Min);return possibleConstructorReturn(this,(Min.__proto__||Object.getPrototypeOf(Min)).call(this,expressionType_1.ExpressionType.Min,Min.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(Min,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var result=Number.POSITIVE_INFINITY;if(args.length===1){if(Array.isArray(args[0])){var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=args[0][Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var value=_step9.value;result=Math.min(result,value);}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}}else {result=Math.min(result,args[0]);}}else {var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=args[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var _arg2=_step10.value;if(Array.isArray(_arg2)){var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=_arg2[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var _value3=_step11.value;result=Math.min(result,_value3);}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}}else {result=Math.min(result,_arg2);}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}}return result;},functionUtils_1.FunctionUtils.verifyNumberOrNumericList);}}]);return Min;}(expressionEvaluator_1.ExpressionEvaluator);exports.Min=Min;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],96:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the remainder from dividing two numbers.
	 */var Mod=function(_expressionEvaluator_79){inherits(Mod,_expressionEvaluator_79);/**
	     * Initializes a new instance of the [Mod](xref:adaptive-expressions.Mod) class.
	     */function Mod(){classCallCheck(this,Mod);return possibleConstructorReturn(this,(Mod.__proto__||Object.getPrototypeOf(Mod)).call(this,expressionType_1.ExpressionType.Mod,Mod.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateBinaryNumber));}/**
	     * @private
	     */createClass(Mod,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;var value=void 0;if(Number(args[1])===0){error='Cannot mod by 0.';}else {value=args[0]%args[1];}return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyInteger);}}]);return Mod;}(expressionEvaluator_1.ExpressionEvaluator);exports.Mod=Mod;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],97:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the month of the specified timestamp.
	 */var Month=function(_expressionEvaluator_80){inherits(Month,_expressionEvaluator_80);/**
	     * Initializes a new instance of the [Month](xref:adaptive-expressions.Month) class.
	     */function Month(){classCallCheck(this,Month);return possibleConstructorReturn(this,(Month.__proto__||Object.getPrototypeOf(Month)).call(this,expressionType_1.ExpressionType.Month,Month.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(Month,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return timestamp.getUTCMonth()+1;});},functionUtils_1.FunctionUtils.verifyString);}}]);return Month;}(expressionEvaluator_1.ExpressionEvaluator);exports.Month=Month;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],98:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var multivariateNumericEvaluator_1=require("./multivariateNumericEvaluator");/**
	 * Return the product from multiplying any number of numbers.
	 */var Multiply=function(_multivariateNumericE2){inherits(Multiply,_multivariateNumericE2);/**
	     * Initializes a new instance of the [Multiply](xref:adaptive-expressions.Multiply) class.
	     */function Multiply(){classCallCheck(this,Multiply);return possibleConstructorReturn(this,(Multiply.__proto__||Object.getPrototypeOf(Multiply)).call(this,expressionType_1.ExpressionType.Multiply,Multiply.func));}/**
	     * @private
	     */createClass(Multiply,null,[{key:'func',value:function func(args){return Number(args[0])*Number(args[1]);}}]);return Multiply;}(multivariateNumericEvaluator_1.MultivariateNumericEvaluator);exports.Multiply=Multiply;},{"../expressionType":183,"./multivariateNumericEvaluator":99}],99:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Numeric operators that can have 2 or more args.
	 */var MultivariateNumericEvaluator=function(_expressionEvaluator_81){inherits(MultivariateNumericEvaluator,_expressionEvaluator_81);/**
	     * Initializes a new instance of the [MultivariateNumericEvaluator](xref:adaptive-expressions.MultivariateNumericEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The evaluation function, it takes a list of objects and returns a number.
	     * @param verify Optional. [VerifyExpression](xref:adaptive-expressions.VerifyExpression) function to verify each child's result.
	     */function MultivariateNumericEvaluator(type,func,verify){classCallCheck(this,MultivariateNumericEvaluator);return possibleConstructorReturn(this,(MultivariateNumericEvaluator.__proto__||Object.getPrototypeOf(MultivariateNumericEvaluator)).call(this,type,MultivariateNumericEvaluator.evaluator(func,verify),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateTwoOrMoreThanTwoNumbers));}/**
	     * @private
	     */createClass(MultivariateNumericEvaluator,null,[{key:'evaluator',value:function evaluator(func,verify){return functionUtils_1.FunctionUtils.applySequence(func,verify||functionUtils_1.FunctionUtils.verifyNumber);}}]);return MultivariateNumericEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.MultivariateNumericEvaluator=MultivariateNumericEvaluator;},{"../expressionEvaluator":171,"../functionUtils":187,"../returnType":204}],100:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a new Guid string.
	 */var NewGuid=function(_expressionEvaluator_82){inherits(NewGuid,_expressionEvaluator_82);/**
	     * Initializes a new instance of the [NewGuid](xref:adaptive-expressions.NewGuid) class.
	     */function NewGuid(){classCallCheck(this,NewGuid);return possibleConstructorReturn(this,(NewGuid.__proto__||Object.getPrototypeOf(NewGuid)).call(this,expressionType_1.ExpressionType.NewGuid,NewGuid.evaluator(),returnType_1.ReturnType.String,NewGuid.validator));}/**
	     * @private
	     */createClass(NewGuid,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(){return NewGuid.evalNewGuid();});}/**
	     * @private
	     */},{key:'evalNewGuid',value:function evalNewGuid(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0;var v=c==='x'?r:r&0x3|0x8;return v.toString(16);});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,0,0);}}]);return NewGuid;}(expressionEvaluator_1.ExpressionEvaluator);exports.NewGuid=NewGuid;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],101:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * Check whether an expression is false.
	 * Return true if the expression is false, or return false if true.
	 */var Not=function(_expressionEvaluator_83){inherits(Not,_expressionEvaluator_83);/**
	     * Initializes a new instance of the [Not](xref:adaptive-expressions.Not) class.
	     */function Not(){classCallCheck(this,Not);return possibleConstructorReturn(this,(Not.__proto__||Object.getPrototypeOf(Not)).call(this,expressionType_1.ExpressionType.Not,Not.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(Not,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=false;var error=void 0;var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _expression$children$5=expression.children[0].tryEvaluate(state,newOptions);result=_expression$children$5.value;error=_expression$children$5.error;if(!error){result=!functionUtils_internal_1.InternalFunctionUtils.isLogicTrue(result);}else {error=undefined;result=true;}return {value:result,error:error};}}]);return Not;}(expressionEvaluator_1.ExpressionEvaluator);exports.Not=Not;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../options":195,"../returnType":204}],102:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var comparisonEvaluator_1=require("./comparisonEvaluator");/**
	 * Return true if the two items are not equal.
	 */var NotEqual=function(_comparisonEvaluator_9){inherits(NotEqual,_comparisonEvaluator_9);/**
	     * Initializes a new instance of the [NotEqual](xref:adaptive-expressions.NotEqual) class.
	     */function NotEqual(){classCallCheck(this,NotEqual);return possibleConstructorReturn(this,(NotEqual.__proto__||Object.getPrototypeOf(NotEqual)).call(this,expressionType_1.ExpressionType.NotEqual,NotEqual.func,functionUtils_1.FunctionUtils.validateBinary));}/**
	     * @private
	     */createClass(NotEqual,null,[{key:'func',value:function func(args){return !functionUtils_internal_1.InternalFunctionUtils.isEqual(args);}}]);return NotEqual;}(comparisonEvaluator_1.ComparisonEvaluator);exports.NotEqual=NotEqual;},{"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"./comparisonEvaluator":20}],103:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Evaluator that transforms a number to another number.
	 */var NumberTransformEvaluator=function(_expressionEvaluator_84){inherits(NumberTransformEvaluator,_expressionEvaluator_84);/**
	     * Initializes a new instance of the [NumberTransformEvaluator](xref:adaptive-expressions.NumberTransformEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The evaluation function, it takes a list of objects and returns a number.
	     */function NumberTransformEvaluator(type,func){classCallCheck(this,NumberTransformEvaluator);return possibleConstructorReturn(this,(NumberTransformEvaluator.__proto__||Object.getPrototypeOf(NumberTransformEvaluator)).call(this,type,NumberTransformEvaluator.evaluator(func),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryNumber));}/**
	     * @private
	     */createClass(NumberTransformEvaluator,null,[{key:'evaluator',value:function evaluator(func){return functionUtils_1.FunctionUtils.apply(func,functionUtils_1.FunctionUtils.verifyNumber);}}]);return NumberTransformEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.NumberTransformEvaluator=NumberTransformEvaluator;},{"../expressionEvaluator":171,"../functionUtils":187,"../returnType":204}],104:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Numeric operators that can have 1 or more args.
	 */var NumericEvaluator=function(_expressionEvaluator_85){inherits(NumericEvaluator,_expressionEvaluator_85);/**
	     * Initializes a new instance of the [NumericEvaluator](xref:adaptive-expressions.NumericEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The evaluation function, it takes a list of objects and returns a number.
	     */function NumericEvaluator(type,func){classCallCheck(this,NumericEvaluator);return possibleConstructorReturn(this,(NumericEvaluator.__proto__||Object.getPrototypeOf(NumericEvaluator)).call(this,type,NumericEvaluator.evaluator(func),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateNumber));}/**
	     * @private
	     */createClass(NumericEvaluator,null,[{key:'evaluator',value:function evaluator(func){return functionUtils_1.FunctionUtils.applySequence(func,functionUtils_1.FunctionUtils.verifyNumber);}}]);return NumericEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.NumericEvaluator=NumericEvaluator;},{"../expressionEvaluator":171,"../functionUtils":187,"../returnType":204}],105:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * For the MostSpecificSelector, this is a short hand so that instead of having to do A &amp; B || A you can do A &amp; optional(B) to mean the same thing.
	 */var Optional=function(_expressionEvaluator_86){inherits(Optional,_expressionEvaluator_86);/**
	     * Initializes a new instance of the [Optional](xref:adaptive-expressions.Optional) class.
	     */function Optional(){classCallCheck(this,Optional);var _this104=possibleConstructorReturn(this,(Optional.__proto__||Object.getPrototypeOf(Optional)).call(this,expressionType_1.ExpressionType.Optional,Optional.evaluator(),returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateUnaryBoolean));_this104.negation=_this104;return _this104;}/**
	     * @private
	     */createClass(Optional,null,[{key:'evaluator',value:function evaluator(){return undefined;}}]);return Optional;}(expressionEvaluator_1.ExpressionEvaluator);exports.Optional=Optional;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],106:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * Check whether at least one expression is true.
	 * Return true if at least one expression is true, or return false if all are false.
	 */var Or=function(_expressionEvaluator_87){inherits(Or,_expressionEvaluator_87);/**
	     * Initializes a new instance of the [Or](xref:adaptive-expressions.Or) class.
	     */function Or(){classCallCheck(this,Or);return possibleConstructorReturn(this,(Or.__proto__||Object.getPrototypeOf(Or)).call(this,expressionType_1.ExpressionType.Or,Or.evaluator,returnType_1.ReturnType.Boolean,functionUtils_1.FunctionUtils.validateAtLeastOne));}/**
	     * @private
	     */createClass(Or,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=false;var error=void 0;var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=expression.children[Symbol.iterator](),_step12;!(_iteratorNormalCompletion12=(_step12=_iterator12.next()).done);_iteratorNormalCompletion12=true){var child=_step12.value;var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _child$tryEvaluate2=child.tryEvaluate(state,newOptions);result=_child$tryEvaluate2.value;error=_child$tryEvaluate2.error;if(!error){if(functionUtils_internal_1.InternalFunctionUtils.isLogicTrue(result)){result=true;break;}}else {error=undefined;}}}catch(err){_didIteratorError12=true;_iteratorError12=err;}finally{try{if(!_iteratorNormalCompletion12&&_iterator12.return){_iterator12.return();}}finally{if(_didIteratorError12){throw _iteratorError12;}}}return {value:result,error:error};}}]);return Or;}(expressionEvaluator_1.ExpressionEvaluator);exports.Or=Or;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../options":195,"../returnType":204}],107:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var multivariateNumericEvaluator_1=require("./multivariateNumericEvaluator");/**
	 * Return exponentiation of one number to another.
	 */var Power=function(_multivariateNumericE3){inherits(Power,_multivariateNumericE3);/**
	     * Initializes a new instance of the [Power](xref:adaptive-expressions.Power) class.
	     */function Power(){classCallCheck(this,Power);return possibleConstructorReturn(this,(Power.__proto__||Object.getPrototypeOf(Power)).call(this,expressionType_1.ExpressionType.Power,Power.func,functionUtils_1.FunctionUtils.verifyNumberOrNumericList));}/**
	     * @private
	     */createClass(Power,null,[{key:'func',value:function func(args){return Math.pow(args[0],args[1]);}}]);return Power;}(multivariateNumericEvaluator_1.MultivariateNumericEvaluator);exports.Power=Power;},{"../expressionType":183,"../functionUtils":187,"./multivariateNumericEvaluator":99}],108:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a random integer from a specified range, which is inclusive only at the starting end.
	 */var Rand=function(_expressionEvaluator_88){inherits(Rand,_expressionEvaluator_88);/**
	     * Initializes a new instance of the [Rand](xref:adaptive-expressions.Rand) class.
	     */function Rand(){classCallCheck(this,Rand);return possibleConstructorReturn(this,(Rand.__proto__||Object.getPrototypeOf(Rand)).call(this,expressionType_1.ExpressionType.Rand,Rand.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateBinaryNumber));}/**
	     * @private
	     */createClass(Rand,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;if(args[0]>args[1]){error='Min value '+args[0]+' cannot be greater than max value '+args[1]+'.';}var value=Math.floor(Math.random()*(Number(args[1])-Number(args[0]))+Number(args[0]));return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyInteger);}}]);return Rand;}(expressionEvaluator_1.ExpressionEvaluator);exports.Rand=Rand;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],109:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return an integer array that starts from a specified integer with the given length.
	 */var Range=function(_expressionEvaluator_89){inherits(Range,_expressionEvaluator_89);/**
	     * Initializes a new instance of the [Range](xref:adaptive-expressions.Range) class.
	     */function Range(){classCallCheck(this,Range);return possibleConstructorReturn(this,(Range.__proto__||Object.getPrototypeOf(Range)).call(this,expressionType_1.ExpressionType.Range,Range.evaluator(),returnType_1.ReturnType.Array,functionUtils_1.FunctionUtils.validateBinaryNumber));}/**
	     * @private
	     */createClass(Range,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=void 0;if(args[1]<=0){error='Second paramter must be more than zero';}var result=[].concat(toConsumableArray(Array(args[1]).keys())).map(function(u){return u+Number(args[0]);});return {value:result,error:error};},functionUtils_1.FunctionUtils.verifyInteger);}}]);return Range;}(expressionEvaluator_1.ExpressionEvaluator);exports.Range=Range;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],110:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Remove a property from an object and return the updated object.
	 */var RemoveProperty=function(_expressionEvaluator_90){inherits(RemoveProperty,_expressionEvaluator_90);/**
	     * Initializes a new instance of the [RemoveProperty](xref:adaptive-expressions.RemoveProperty) class.
	     */function RemoveProperty(){classCallCheck(this,RemoveProperty);return possibleConstructorReturn(this,(RemoveProperty.__proto__||Object.getPrototypeOf(RemoveProperty)).call(this,expressionType_1.ExpressionType.RemoveProperty,RemoveProperty.evaluator(),returnType_1.ReturnType.Object,RemoveProperty.validator));}/**
	     * @private
	     */createClass(RemoveProperty,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var temp=args[0];delete temp[String(args[1])];return temp;});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.Object,returnType_1.ReturnType.String);}}]);return RemoveProperty;}(expressionEvaluator_1.ExpressionEvaluator);exports.RemoveProperty=RemoveProperty;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],111:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Replace a substring with the specified string, and return the result string.
	 * This function is case-sensitive.
	 */var Replace=function(_expressionEvaluator_91){inherits(Replace,_expressionEvaluator_91);/**
	     * Initializes a new instance of the [Replace](xref:adaptive-expressions.Replace) class.
	     */function Replace(){classCallCheck(this,Replace);return possibleConstructorReturn(this,(Replace.__proto__||Object.getPrototypeOf(Replace)).call(this,expressionType_1.ExpressionType.Replace,Replace.evaluator(),returnType_1.ReturnType.String,Replace.validator));}/**
	     * @private
	     */createClass(Replace,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=undefined;var result=undefined;if(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]).length===0){error=args[1]+' should be a string with length at least 1';}if(!error){result=functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).split(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1])).join(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[2]));}return {value:result,error:error};},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,3,3,returnType_1.ReturnType.String);}}]);return Replace;}(expressionEvaluator_1.ExpressionEvaluator);exports.Replace=Replace;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],112:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Replace a substring with the specified string, and return the result string.
	 * This function is case-insensitive.
	 */var ReplaceIgnoreCase=function(_expressionEvaluator_92){inherits(ReplaceIgnoreCase,_expressionEvaluator_92);/**
	     * Initializes a new instance of the [ReplaceIgnoreCase](xref:adaptive-expressions.ReplaceIgnoreCase) class.
	     */function ReplaceIgnoreCase(){classCallCheck(this,ReplaceIgnoreCase);return possibleConstructorReturn(this,(ReplaceIgnoreCase.__proto__||Object.getPrototypeOf(ReplaceIgnoreCase)).call(this,expressionType_1.ExpressionType.ReplaceIgnoreCase,ReplaceIgnoreCase.evaluator(),returnType_1.ReturnType.String,ReplaceIgnoreCase.validator));}/**
	     * @private
	     */createClass(ReplaceIgnoreCase,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var error=undefined;var result=undefined;if(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]).length===0){error=args[1]+' should be a string with length at least 1';}if(!error){result=functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).replace(new RegExp(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]),'gi'),functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[2]));}return {value:result,error:error};},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,3,3,returnType_1.ReturnType.String);}}]);return ReplaceIgnoreCase;}(expressionEvaluator_1.ExpressionEvaluator);exports.ReplaceIgnoreCase=ReplaceIgnoreCase;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],113:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Reverses the order of the elements in a String or Array.
	 */var Reverse=function(_expressionEvaluator_93){inherits(Reverse,_expressionEvaluator_93);/**
	     * Initializes a new instance of the `Reverse` class.
	     */function Reverse(){classCallCheck(this,Reverse);return possibleConstructorReturn(this,(Reverse.__proto__||Object.getPrototypeOf(Reverse)).call(this,expressionType_1.ExpressionType.Reverse,Reverse.evaluator(),returnType_1.ReturnType.String|returnType_1.ReturnType.Array,Reverse.validator));}/**
	     * @private
	     */createClass(Reverse,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var value=undefined;var error=undefined;if(typeof args[0]==='string'){value=args[0].split('').reverse().join('');}else if(Array.isArray(args[0])){value=args[0].reverse();}else {error=args[0]+' is not a string or list.';}return {value:value,error:error};},functionUtils_1.FunctionUtils.verifyContainer);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.String|returnType_1.ReturnType.Array);}}]);return Reverse;}(expressionEvaluator_1.ExpressionEvaluator);exports.Reverse=Reverse;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],114:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Rounds a number value to the nearest integer.
	 */var Round=function(_expressionEvaluator_94){inherits(Round,_expressionEvaluator_94);/**
	     * Initializes a new instance of the [Round](xref:adaptive-expressions.Round) class.
	     */function Round(){classCallCheck(this,Round);return possibleConstructorReturn(this,(Round.__proto__||Object.getPrototypeOf(Round)).call(this,expressionType_1.ExpressionType.Round,Round.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryOrBinaryNumber));}/**
	     * @private
	     */createClass(Round,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){var result=void 0;var error=void 0;if(args.length===2&&!Number.isInteger(args[1])){error='The second parameter '+args[1]+' must be an integer.';}if(!error){var digits=args.length===2?args[1]:0;if(digits<0||digits>15){error='The second parameter '+args[1]+' must be an integer between 0 and 15;';}else {result=Round.roundToPrecision(args[0],digits);}}return {value:result,error:error};},functionUtils_1.FunctionUtils.verifyNumber);}}]);return Round;}(expressionEvaluator_1.ExpressionEvaluator);Round.roundToPrecision=function(num,digits){return Math.round(num*Math.pow(10,digits))/Math.pow(10,digits);};exports.Round=Round;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],115:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Operate on each element and return the new collection of transformed elements.
	 */var Select=function(_expressionEvaluator_95){inherits(Select,_expressionEvaluator_95);/**
	     * Initializes a new instance of the [Select](xref:adaptive-expressions.Select) class.
	     */function Select(){classCallCheck(this,Select);return possibleConstructorReturn(this,(Select.__proto__||Object.getPrototypeOf(Select)).call(this,expressionType_1.ExpressionType.Select,functionUtils_internal_1.InternalFunctionUtils.foreach,returnType_1.ReturnType.Array,functionUtils_internal_1.InternalFunctionUtils.validateForeach));}return Select;}(expressionEvaluator_1.ExpressionEvaluator);exports.Select=Select;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils.internal":186,"../returnType":204}],116:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var stringTransformEvaluator_1=require("./stringTransformEvaluator");/**
	 * Capitalizing only the first word and leave others lowercase.
	 */var SentenceCase=function(_stringTransformEvalu){inherits(SentenceCase,_stringTransformEvalu);/**
	     * Initializes a new instance of the [SentenceCase](xref:adaptive-expressions.SentenceCase) class.
	     */function SentenceCase(){classCallCheck(this,SentenceCase);return possibleConstructorReturn(this,(SentenceCase.__proto__||Object.getPrototypeOf(SentenceCase)).call(this,expressionType_1.ExpressionType.SentenceCase,SentenceCase.evaluator));}/**
	     * @private
	     */createClass(SentenceCase,null,[{key:'evaluator',value:function evaluator(args){var inputStr=String(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0])).toLowerCase();if(inputStr===''){return inputStr;}else {return inputStr.charAt(0).toUpperCase()+inputStr.substr(1).toLowerCase();}}}]);return SentenceCase;}(stringTransformEvaluator_1.StringTransformEvaluator);exports.SentenceCase=SentenceCase;},{"../expressionType":183,"../functionUtils.internal":186,"./stringTransformEvaluator":128}],117:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Set path in a JSON object to value.
	 */var SetPathToValue=function(_expressionEvaluator_96){inherits(SetPathToValue,_expressionEvaluator_96);/**
	     * Initializes a new instance of the [SetPathToValue](xref:adaptive-expressions.SetPathToValue) class.
	     */function SetPathToValue(){classCallCheck(this,SetPathToValue);return possibleConstructorReturn(this,(SetPathToValue.__proto__||Object.getPrototypeOf(SetPathToValue)).call(this,expressionType_1.ExpressionType.SetPathToValue,SetPathToValue.evaluator,returnType_1.ReturnType.Object,functionUtils_1.FunctionUtils.validateBinary));}/**
	     * @private
	     */createClass(SetPathToValue,null,[{key:'evaluator',value:function evaluator(expression,state,options){var _functionUtils_1$Func24=functionUtils_1.FunctionUtils.tryAccumulatePath(expression.children[0],state,options),path=_functionUtils_1$Func24.path,left=_functionUtils_1$Func24.left,error=_functionUtils_1$Func24.error;if(error!==undefined){return {value:undefined,error:error};}if(left){// the expression can't be fully merged as a path
	return {value:undefined,error:expression.children[0].toString()+' is not a valid path to set value'};}var _expression$children$6=expression.children[1].tryEvaluate(state,options),value=_expression$children$6.value,err=_expression$children$6.error;if(err){return {value:undefined,error:err};}state.setValue(path,value);return {value:value,error:undefined};}}]);return SetPathToValue;}(expressionEvaluator_1.ExpressionEvaluator);exports.SetPathToValue=SetPathToValue;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],118:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Set the value of an object's property and return the updated object.
	 */var SetProperty=function(_expressionEvaluator_97){inherits(SetProperty,_expressionEvaluator_97);/**
	     * Initializes a new instance of the [SetProperty](xref:adaptive-expressions.SetProperty) class.
	     */function SetProperty(){classCallCheck(this,SetProperty);return possibleConstructorReturn(this,(SetProperty.__proto__||Object.getPrototypeOf(SetProperty)).call(this,expressionType_1.ExpressionType.SetProperty,SetProperty.evaluator(),returnType_1.ReturnType.Object,SetProperty.validator));}/**
	     * @private
	     */createClass(SetProperty,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var temp=args[0];temp[String(args[1])]=args[2];return temp;});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.Object,returnType_1.ReturnType.String,returnType_1.ReturnType.Object);}}]);return SetProperty;}(expressionEvaluator_1.ExpressionEvaluator);exports.SetProperty=SetProperty;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],119:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Remove items from the front of a collection, and return all the other items.
	 */var Skip=function(_expressionEvaluator_98){inherits(Skip,_expressionEvaluator_98);/**
	     * Initializes a new instance of the [Skip](xref:adaptive-expressions.Skip) class.
	     */function Skip(){classCallCheck(this,Skip);return possibleConstructorReturn(this,(Skip.__proto__||Object.getPrototypeOf(Skip)).call(this,expressionType_1.ExpressionType.Skip,Skip.evaluator,returnType_1.ReturnType.Array,Skip.validator));}/**
	     * @private
	     */createClass(Skip,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var _expression$children$7=expression.children[0].tryEvaluate(state,options),arr=_expression$children$7.value,childrenError=_expression$children$7.error;var error=childrenError;if(!error){if(Array.isArray(arr)){var start=void 0;var startExpr=expression.children[1];var _startExpr$tryEvaluat=startExpr.tryEvaluate(state,options);start=_startExpr$tryEvaluat.value;error=_startExpr$tryEvaluat.error;if(!error&&!Number.isInteger(start)){error=startExpr+' is not an integer.';}else if(start<0||start>=arr.length){error=startExpr+'='+start+' which is out of range for '+arr;}if(!error){result=arr.slice(start);}}else {error=expression.children[0]+' is not array.';}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.Array,returnType_1.ReturnType.Number);}}]);return Skip;}(expressionEvaluator_1.ExpressionEvaluator);exports.Skip=Skip;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],120:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Sort elements in the collection in ascending order and return the sorted collection.
	 */var SortBy=function(_expressionEvaluator_99){inherits(SortBy,_expressionEvaluator_99);/**
	     * Initializes a new instance of the [SortBy](xref:adaptive-expressions.SortBy) class.
	     */function SortBy(){classCallCheck(this,SortBy);return possibleConstructorReturn(this,(SortBy.__proto__||Object.getPrototypeOf(SortBy)).call(this,expressionType_1.ExpressionType.SortBy,functionUtils_internal_1.InternalFunctionUtils.sortBy(false),returnType_1.ReturnType.Array,SortBy.validator));}/**
	     * @private
	     */createClass(SortBy,null,[{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Array);}}]);return SortBy;}(expressionEvaluator_1.ExpressionEvaluator);exports.SortBy=SortBy;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],121:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Sort elements in the collection in descending order, and return the sorted collection.
	 */var SortByDescending=function(_expressionEvaluator_100){inherits(SortByDescending,_expressionEvaluator_100);/**
	     * Initializes a new instance of the [SortByDescending](xref:adaptive-expressions.SortByDescending) class.
	     */function SortByDescending(){classCallCheck(this,SortByDescending);return possibleConstructorReturn(this,(SortByDescending.__proto__||Object.getPrototypeOf(SortByDescending)).call(this,expressionType_1.ExpressionType.SortByDescending,functionUtils_internal_1.InternalFunctionUtils.sortBy(true),returnType_1.ReturnType.Array,SortByDescending.validator));}/**
	     * @private
	     */createClass(SortByDescending,null,[{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.Array);}}]);return SortByDescending;}(expressionEvaluator_1.ExpressionEvaluator);exports.SortByDescending=SortByDescending;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],122:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return an array that contains substrings, separated by commas, based on the specified delimiter character in the original string.
	 */var Split=function(_expressionEvaluator_101){inherits(Split,_expressionEvaluator_101);/**
	     * Initializes a new instance of the [Split](xref:adaptive-expressions.Split) class.
	     */function Split(){classCallCheck(this,Split);return possibleConstructorReturn(this,(Split.__proto__||Object.getPrototypeOf(Split)).call(this,expressionType_1.ExpressionType.Split,Split.evaluator(),returnType_1.ReturnType.Array,Split.validator));}/**
	     * @private
	     */createClass(Split,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).split(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]||''));},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,1,2,returnType_1.ReturnType.String);}}]);return Split;}(expressionEvaluator_1.ExpressionEvaluator);exports.Split=Split;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],123:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the start of the day for a timestamp.
	 */var StartOfDay=function(_expressionEvaluator_102){inherits(StartOfDay,_expressionEvaluator_102);/**
	     * Initializes a new instance of the [StartOfDay](xref:adaptive-expressions.StartOfDay) class.
	     */function StartOfDay(){classCallCheck(this,StartOfDay);return possibleConstructorReturn(this,(StartOfDay.__proto__||Object.getPrototypeOf(StartOfDay)).call(this,expressionType_1.ExpressionType.StartOfDay,StartOfDay.evaluator,returnType_1.ReturnType.String,StartOfDay.validator));}/**
	     * @private
	     */createClass(StartOfDay,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func25=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func25.args,childrenError=_functionUtils_1$Func25.error;var error=childrenError;if(!error){var format=args.length===2?functionUtils_1.FunctionUtils.timestampFormatter(args[1]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;if(typeof args[0]==='string'){var _StartOfDay$evalStart=StartOfDay.evalStartOfDay(args[0],format);value=_StartOfDay$evalStart.value;error=_StartOfDay$evalStart.error;}else {error=expression+' should contain an ISO format timestamp and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalStartOfDay',value:function evalStartOfDay(timeStamp,format){var result=void 0;var _functionUtils_intern25=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(timeStamp),parsed=_functionUtils_intern25.value,parseError=_functionUtils_intern25.error;var error=parseError;if(!error){var startOfDay=moment_1.default(parsed).utc().hours(0).minutes(0).second(0).millisecond(0);var _functionUtils_intern26=functionUtils_internal_1.InternalFunctionUtils.returnFormattedTimeStampStr(startOfDay,format);result=_functionUtils_intern26.value;error=_functionUtils_intern26.error;}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String);}}]);return StartOfDay;}(expressionEvaluator_1.ExpressionEvaluator);exports.StartOfDay=StartOfDay;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],124:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the start of the hour for a timestamp.
	 */var StartOfHour=function(_expressionEvaluator_103){inherits(StartOfHour,_expressionEvaluator_103);/**
	     * Initializes a new instance of the [StartOfHour](xref:adaptive-expressions.StartOfHour) class.
	     */function StartOfHour(){classCallCheck(this,StartOfHour);return possibleConstructorReturn(this,(StartOfHour.__proto__||Object.getPrototypeOf(StartOfHour)).call(this,expressionType_1.ExpressionType.StartOfHour,StartOfHour.evaluator,returnType_1.ReturnType.String,StartOfHour.validator));}/**
	     * @private
	     */createClass(StartOfHour,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func26=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func26.args,childrenError=_functionUtils_1$Func26.error;var error=childrenError;if(!error){var format=args.length===2?functionUtils_1.FunctionUtils.timestampFormatter(args[1]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;if(typeof args[0]==='string'){var _StartOfHour$evalStar=StartOfHour.evalStartOfHour(args[0],format);value=_StartOfHour$evalStar.value;error=_StartOfHour$evalStar.error;}else {error=expr+' should contain an ISO format timestamp and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalStartOfHour',value:function evalStartOfHour(timeStamp,format){var result=void 0;var _functionUtils_intern27=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(timeStamp),parsed=_functionUtils_intern27.value,parseError=_functionUtils_intern27.error;var error=parseError;if(!error){var startofHour=moment_1.default(parsed).utc().minutes(0).second(0).millisecond(0);var _functionUtils_intern28=functionUtils_internal_1.InternalFunctionUtils.returnFormattedTimeStampStr(startofHour,format);result=_functionUtils_intern28.value;error=_functionUtils_intern28.error;}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,[returnType_1.ReturnType.String],returnType_1.ReturnType.String);}}]);return StartOfHour;}(expressionEvaluator_1.ExpressionEvaluator);exports.StartOfHour=StartOfHour;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],125:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the start of the month for a timestamp.
	 */var StartOfMonth=function(_expressionEvaluator_104){inherits(StartOfMonth,_expressionEvaluator_104);/**
	     * Initializes a new instance of the [StartOfMonth](xref:adaptive-expressions.StartOfMonth) class.
	     */function StartOfMonth(){classCallCheck(this,StartOfMonth);return possibleConstructorReturn(this,(StartOfMonth.__proto__||Object.getPrototypeOf(StartOfMonth)).call(this,expressionType_1.ExpressionType.StartOfMonth,StartOfMonth.evaluator,returnType_1.ReturnType.String,StartOfMonth.validator));}/**
	     * @private
	     */createClass(StartOfMonth,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func27=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func27.args,childrenError=_functionUtils_1$Func27.error;var error=childrenError;if(!error){var format=args.length===2?functionUtils_1.FunctionUtils.timestampFormatter(args[1]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;if(typeof args[0]==='string'){var _StartOfMonth$evalSta=StartOfMonth.evalStartOfMonth(args[0],format);value=_StartOfMonth$evalSta.value;error=_StartOfMonth$evalSta.error;}else {error=expr+' should contain an ISO format timestamp and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalStartOfMonth',value:function evalStartOfMonth(timeStamp,format){var result=void 0;var _functionUtils_intern29=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(timeStamp),parsed=_functionUtils_intern29.value,parseError=_functionUtils_intern29.error;var error=parseError;if(!error){var startofMonth=moment_1.default(parsed).utc().date(1).hours(0).minutes(0).second(0).millisecond(0);var _functionUtils_intern30=functionUtils_internal_1.InternalFunctionUtils.returnFormattedTimeStampStr(startofMonth,format);result=_functionUtils_intern30.value;error=_functionUtils_intern30.error;}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expr){functionUtils_1.FunctionUtils.validateOrder(expr,[returnType_1.ReturnType.String],returnType_1.ReturnType.String);}}]);return StartOfMonth;}(expressionEvaluator_1.ExpressionEvaluator);exports.StartOfMonth=StartOfMonth;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],126:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Check whether a string starts with a specific substring. Return true if the substring is found, or return false if not found.
	 * This function is case-insensitive.
	 */var StartsWith=function(_expressionEvaluator_105){inherits(StartsWith,_expressionEvaluator_105);/**
	     * Initializes a new instance of the [StartsWith](xref:adaptive-expressions.StartsWith) class.
	     */function StartsWith(){classCallCheck(this,StartsWith);return possibleConstructorReturn(this,(StartsWith.__proto__||Object.getPrototypeOf(StartsWith)).call(this,expressionType_1.ExpressionType.StartsWith,StartsWith.evaluator(),returnType_1.ReturnType.Boolean,StartsWith.validator));}/**
	     * @private
	     */createClass(StartsWith,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0]).startsWith(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[1]));},functionUtils_1.FunctionUtils.verifyStringOrNull);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.String);}}]);return StartsWith;}(expressionEvaluator_1.ExpressionEvaluator);exports.StartsWith=StartsWith;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],127:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the string version of a value.
	 */var String=function(_expressionEvaluator_106){inherits(String,_expressionEvaluator_106);/**
	     * Initializes a new instance of the [String](xref:adaptive-expressions.String) class.
	     */function String(){classCallCheck(this,String);return possibleConstructorReturn(this,(String.__proto__||Object.getPrototypeOf(String)).call(this,expressionType_1.ExpressionType.String,String.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(String,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){if(typeof args[0]==='string'){return args[0];}return JSON.stringify(args[0]).replace(/(^\'*)/g,'').replace(/(\'*$)/g,'').replace(/(^\"*)/g,'').replace(/(\"*$)/g,'');});}}]);return String;}(expressionEvaluator_1.ExpressionEvaluator);exports.String=String;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],128:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Evaluator that transforms a string to another string.
	 */var StringTransformEvaluator=function(_expressionEvaluator_107){inherits(StringTransformEvaluator,_expressionEvaluator_107);/**
	     * Initializes a new instance of the [StringTransformEvaluator](xref:adaptive-expressions.StringTransformEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The string transformation function, it takes a list of objects and returns an string.
	     */function StringTransformEvaluator(type,func){classCallCheck(this,StringTransformEvaluator);return possibleConstructorReturn(this,(StringTransformEvaluator.__proto__||Object.getPrototypeOf(StringTransformEvaluator)).call(this,type,functionUtils_1.FunctionUtils.apply(func,functionUtils_1.FunctionUtils.verifyStringOrNull),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnaryString));}return StringTransformEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.StringTransformEvaluator=StringTransformEvaluator;},{"../expressionEvaluator":171,"../functionUtils":187,"../returnType":204}],129:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Returns a subarray from specified start and end positions. Index values start with the number 0.
	 */var SubArray=function(_expressionEvaluator_108){inherits(SubArray,_expressionEvaluator_108);/**
	     * Initializes a new instance of the [SubArray](xref:adaptive-expressions.SubArray) class.
	     */function SubArray(){classCallCheck(this,SubArray);return possibleConstructorReturn(this,(SubArray.__proto__||Object.getPrototypeOf(SubArray)).call(this,expressionType_1.ExpressionType.SubArray,SubArray.evaluator,returnType_1.ReturnType.Array,SubArray.validator));}/**
	     * @private
	     */createClass(SubArray,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var _expression$children$8=expression.children[0].tryEvaluate(state,options),arr=_expression$children$8.value,childrenError=_expression$children$8.error;var error=childrenError;if(!error){if(Array.isArray(arr)){var start=void 0;var startExpr=expression.children[1];var _startExpr$tryEvaluat2=startExpr.tryEvaluate(state,options);start=_startExpr$tryEvaluat2.value;error=_startExpr$tryEvaluat2.error;if(!error&&!Number.isInteger(start)){error=startExpr+' is not an integer.';}else if(start<0||start>=arr.length){error=startExpr+'='+start+' which is out of range for '+arr;}if(!error){var end=void 0;if(expression.children.length===2){end=arr.length;}else {var endExpr=expression.children[2];var _endExpr$tryEvaluate=endExpr.tryEvaluate(state,options);end=_endExpr$tryEvaluate.value;error=_endExpr$tryEvaluate.error;if(!error&&!Number.isInteger(end)){error=endExpr+' is not an integer';}else if(end<0||end>arr.length){error=endExpr+'='+end+' which is out of range for '+arr;}}if(!error){result=arr.slice(start,end);}}}else {error=expression.children[0]+' is not array.';}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.Number],returnType_1.ReturnType.Array,returnType_1.ReturnType.Number);}}]);return SubArray;}(expressionEvaluator_1.ExpressionEvaluator);exports.SubArray=SubArray;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],130:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return characters from a string, starting from the specified position or index. Index values start with the number 0.
	 */var Substring=function(_expressionEvaluator_109){inherits(Substring,_expressionEvaluator_109);/**
	     * Initializes a new instance of the [Substring](xref:adaptive-expressions.Substring) class.
	     */function Substring(){classCallCheck(this,Substring);return possibleConstructorReturn(this,(Substring.__proto__||Object.getPrototypeOf(Substring)).call(this,expressionType_1.ExpressionType.Substring,Substring.evaluator,returnType_1.ReturnType.String,Substring.validator));}/**
	     * @private
	     */createClass(Substring,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var _expression$children$9=expression.children[0].tryEvaluate(state,options),str=_expression$children$9.value,childrenError=_expression$children$9.error;var error=childrenError;if(!error){if(typeof str==='string'){var start=void 0;var startExpr=expression.children[1];var _startExpr$tryEvaluat3=startExpr.tryEvaluate(state,options);start=_startExpr$tryEvaluat3.value;error=_startExpr$tryEvaluat3.error;if(!error&&!Number.isInteger(start)){error=startExpr+' is not an integer.';}else if(start<0||start>=str.length){error=startExpr+'='+start+' which is out of range for '+str;}if(!error){var length=void 0;if(expression.children.length===2){// Without length, compute to end
	length=str.length-start;}else {var lengthExpr=expression.children[2];var _lengthExpr$tryEvalua=lengthExpr.tryEvaluate(state,options);length=_lengthExpr$tryEvalua.value;error=_lengthExpr$tryEvalua.error;if(!error&&!Number.isInteger(length)){error=lengthExpr+' is not an integer';}else if(length<0||Number(start)+Number(length)>str.length){error=lengthExpr+'='+length+' which is out of range for '+str;}}if(!error){result=str.substr(start,length);}}}else if(str===undefined){result='';}else {error=expression.children[0]+' is neither a string nor a null object.';}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.Number],returnType_1.ReturnType.String,returnType_1.ReturnType.Number);}}]);return Substring;}(expressionEvaluator_1.ExpressionEvaluator);exports.Substring=Substring;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],131:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var multivariateNumericEvaluator_1=require("./multivariateNumericEvaluator");/**
	 * Return the result from subtracting the next number from the previous number.
	 */var Subtract=function(_multivariateNumericE4){inherits(Subtract,_multivariateNumericE4);/**
	     * Initializes a new instance of the [Subtract](xref:adaptive-expressions.Subtract) class.
	     */function Subtract(){classCallCheck(this,Subtract);return possibleConstructorReturn(this,(Subtract.__proto__||Object.getPrototypeOf(Subtract)).call(this,expressionType_1.ExpressionType.Subtract,Subtract.func));}/**
	     * @private
	     */createClass(Subtract,null,[{key:'func',value:function func(args){return Number(args[0])-Number(args[1]);}}]);return Subtract;}(multivariateNumericEvaluator_1.MultivariateNumericEvaluator);exports.Subtract=Subtract;},{"../expressionType":183,"./multivariateNumericEvaluator":99}],132:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Subtract a number of time units from a timestamp.
	 */var SubtractFromTime=function(_expressionEvaluator_110){inherits(SubtractFromTime,_expressionEvaluator_110);/**
	     * Initializes a new instance of the [SubtractFromTime](xref:adaptive-expressions.SubtractFromTime) class.
	     */function SubtractFromTime(){classCallCheck(this,SubtractFromTime);return possibleConstructorReturn(this,(SubtractFromTime.__proto__||Object.getPrototypeOf(SubtractFromTime)).call(this,expressionType_1.ExpressionType.SubtractFromTime,SubtractFromTime.evaluator,returnType_1.ReturnType.String,SubtractFromTime.validator));}/**
	     * @private
	     */createClass(SubtractFromTime,null,[{key:'evaluator',value:function evaluator(expression,state,options){var value=void 0;var _functionUtils_1$Func28=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func28.args,childrenError=_functionUtils_1$Func28.error;var error=childrenError;if(!error){if(typeof args[0]==='string'&&Number.isInteger(args[1])&&typeof args[2]==='string'){var format=args.length===4?functionUtils_1.FunctionUtils.timestampFormatter(args[3]):functionUtils_1.FunctionUtils.DefaultDateTimeFormat;var _functionUtils_intern31=functionUtils_internal_1.InternalFunctionUtils.timeUnitTransformer(args[1],args[2]),duration=_functionUtils_intern31.duration,tsStr=_functionUtils_intern31.tsStr;if(tsStr===undefined){error=args[2]+' is not a valid time unit.';}else {var dur=duration;var _functionUtils_intern32=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(dt){return args.length===4?moment_1.default(dt).utc().subtract(dur,tsStr).format(format):moment_1.default(dt).utc().subtract(dur,tsStr).toISOString();});value=_functionUtils_intern32.value;error=_functionUtils_intern32.error;}}else {error=expression+' should contain an ISO format timestamp, a time interval integer, a string unit of time and an optional output format string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number,returnType_1.ReturnType.String);}}]);return SubtractFromTime;}(expressionEvaluator_1.ExpressionEvaluator);exports.SubtractFromTime=SubtractFromTime;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],133:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the result from adding numbers in an array.
	 */var Sum=function(_expressionEvaluator_111){inherits(Sum,_expressionEvaluator_111);/**
	     * Initializes a new instance of the [Sum](xref:adaptive-expressions.Sum) class.
	     */function Sum(){classCallCheck(this,Sum);return possibleConstructorReturn(this,(Sum.__proto__||Object.getPrototypeOf(Sum)).call(this,expressionType_1.ExpressionType.Sum,Sum.evaluator(),returnType_1.ReturnType.Number,Sum.validator));}/**
	     * @private
	     */createClass(Sum,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return args[0].reduce(function(x,y){return x+y;});},functionUtils_1.FunctionUtils.verifyNumericList);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.Array);}}]);return Sum;}(expressionEvaluator_1.ExpressionEvaluator);exports.Sum=Sum;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],134:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return items from the front of an array.
	 */var Take=function(_expressionEvaluator_112){inherits(Take,_expressionEvaluator_112);/**
	     * Initializes a new instance of the [Take](xref:adaptive-expressions.Take) class.
	     */function Take(){classCallCheck(this,Take);return possibleConstructorReturn(this,(Take.__proto__||Object.getPrototypeOf(Take)).call(this,expressionType_1.ExpressionType.Take,Take.evaluator,returnType_1.ReturnType.Array,Take.validator));}/**
	     * @private
	     */createClass(Take,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var _expression$children$10=expression.children[0].tryEvaluate(state,options),arr=_expression$children$10.value,childrenError=_expression$children$10.error;var error=childrenError;if(!error){if(Array.isArray(arr)||typeof arr==='string'){var start=void 0;var startExpr=expression.children[1];var _startExpr$tryEvaluat4=startExpr.tryEvaluate(state,options);start=_startExpr$tryEvaluat4.value;error=_startExpr$tryEvaluat4.error;if(!error&&!Number.isInteger(start)){error=startExpr+' is not an integer.';}else if(start<0||start>=arr.length){error=startExpr+'='+start+' which is out of range for '+arr;}if(!error){result=arr.slice(0,start);}}else {error=expression.children[0]+' is not array or string.';}}return {value:result,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.Array,returnType_1.ReturnType.Number);}}]);return Take;}(expressionEvaluator_1.ExpressionEvaluator);exports.Take=Take;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],135:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the ticks property value of a specified timestamp. A tick is 100-nanosecond interval.
	 */var Ticks=function(_expressionEvaluator_113){inherits(Ticks,_expressionEvaluator_113);/**
	     * Initializes a new instance of the [Ticks](xref:adaptive-expressions.Ticks) class.
	     */function Ticks(){classCallCheck(this,Ticks);return possibleConstructorReturn(this,(Ticks.__proto__||Object.getPrototypeOf(Ticks)).call(this,expressionType_1.ExpressionType.Ticks,Ticks.evaluator,returnType_1.ReturnType.Number,Ticks.validator));}/**
	     * @private
	     */createClass(Ticks,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func29=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func29.args,childrenError=_functionUtils_1$Func29.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _functionUtils_intern33=functionUtils_internal_1.InternalFunctionUtils.ticks(args[0]);value=_functionUtils_intern33.value;error=_functionUtils_intern33.error;}else {error=expr+' should contain an ISO format timestamp.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,1,1,returnType_1.ReturnType.String);}}]);return Ticks;}(expressionEvaluator_1.ExpressionEvaluator);exports.Ticks=Ticks;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],136:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Convert ticks to number of days.
	 */var TicksToDays=function(_expressionEvaluator_114){inherits(TicksToDays,_expressionEvaluator_114);/**
	     * Initializes a new instance of the [TicksToDays](xref:adaptive-expressions.TicksToDays) class.
	     */function TicksToDays(){classCallCheck(this,TicksToDays);return possibleConstructorReturn(this,(TicksToDays.__proto__||Object.getPrototypeOf(TicksToDays)).call(this,expressionType_1.ExpressionType.TicksToDays,TicksToDays.evaluator,returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryNumber));}/**
	     * @private
	     */createClass(TicksToDays,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func30=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func30.args,childrenError=_functionUtils_1$Func30.error;var error=childrenError;if(!error){if(Number.isInteger(args[0])){value=args[0]/TicksToDays.TicksPerDay;}else {error=expr+' should contain an integer of ticks';}}return {value:value,error:error};}}]);return TicksToDays;}(expressionEvaluator_1.ExpressionEvaluator);TicksToDays.TicksPerDay=24*60*60*10000000;exports.TicksToDays=TicksToDays;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],137:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Convert ticks to number of hours.
	 */var TicksToHours=function(_expressionEvaluator_115){inherits(TicksToHours,_expressionEvaluator_115);/**
	     * Initializes a new instance of the [TicksToHours](xref:adaptive-expressions.TicksToHours) class.
	     */function TicksToHours(){classCallCheck(this,TicksToHours);return possibleConstructorReturn(this,(TicksToHours.__proto__||Object.getPrototypeOf(TicksToHours)).call(this,expressionType_1.ExpressionType.TicksToHours,TicksToHours.evaluator,returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryNumber));}/**
	     * @private
	     */createClass(TicksToHours,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func31=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func31.args,childrenError=_functionUtils_1$Func31.error;var error=childrenError;if(!error){if(Number.isInteger(args[0])){value=args[0]/TicksToHours.TicksPerHour;}else {error=expr+' should contain an integer of ticks';}}return {value:value,error:error};}}]);return TicksToHours;}(expressionEvaluator_1.ExpressionEvaluator);TicksToHours.TicksPerHour=60*60*10000000;exports.TicksToHours=TicksToHours;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],138:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Convert ticks to number of minutes.
	 */var TicksToMinutes=function(_expressionEvaluator_116){inherits(TicksToMinutes,_expressionEvaluator_116);/**
	     * Initializes a new instance of the [TicksToMinutes](xref:adaptive-expressions.TicksToMinutes) class.
	     */function TicksToMinutes(){classCallCheck(this,TicksToMinutes);return possibleConstructorReturn(this,(TicksToMinutes.__proto__||Object.getPrototypeOf(TicksToMinutes)).call(this,expressionType_1.ExpressionType.TicksToMinutes,TicksToMinutes.evaluator,returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryNumber));}/**
	     * @private
	     */createClass(TicksToMinutes,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func32=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func32.args,childrenError=_functionUtils_1$Func32.error;var error=childrenError;if(!error){if(Number.isInteger(args[0])){value=args[0]/TicksToMinutes.TicksPerMinute;}else {error=expr+' should contain an integer of ticks';}}return {value:value,error:error};}}]);return TicksToMinutes;}(expressionEvaluator_1.ExpressionEvaluator);TicksToMinutes.TicksPerMinute=60*10000000;exports.TicksToMinutes=TicksToMinutes;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],139:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Evaluator that transforms a datetime to another datetime.
	 */var TimeTransformEvaluator=function(_expressionEvaluator_117){inherits(TimeTransformEvaluator,_expressionEvaluator_117);/**
	     * Initializes a new instance of the [TimeTransformEvaluator](xref:adaptive-expressions.TimeTransformEvaluator) class.
	     * @param type Name of the built-in function.
	     * @param func The evaluation function, it takes a timestamp and the number of transformation, and returns a `Date`.
	     */function TimeTransformEvaluator(type,func){classCallCheck(this,TimeTransformEvaluator);return possibleConstructorReturn(this,(TimeTransformEvaluator.__proto__||Object.getPrototypeOf(TimeTransformEvaluator)).call(this,type,TimeTransformEvaluator.evaluator(func),returnType_1.ReturnType.String,TimeTransformEvaluator.validator));}/**
	     * @private
	     */createClass(TimeTransformEvaluator,null,[{key:'evaluator',value:function evaluator(func){return function(expression,state,options){var result=void 0;var value=void 0;var _functionUtils_1$Func33=functionUtils_1.FunctionUtils.evaluateChildren(expression,state,options),args=_functionUtils_1$Func33.args,childrenError=_functionUtils_1$Func33.error;var error=childrenError;if(!error){if(typeof args[0]==='string'&&typeof args[1]==='number'){var _functionUtils_intern34=functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0]);value=_functionUtils_intern34.value;error=_functionUtils_intern34.error;if(!error){if(args.length===3&&typeof args[2]==='string'){result=moment_1.default(func(value,args[1])).utc().format(functionUtils_1.FunctionUtils.timestampFormatter(args[2]));}else {result=func(value,args[1]).toISOString();}}}else {error=expression+' should contain an ISO format timestamp and a time interval integer.';}}return {value:result,error:error};};}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String],returnType_1.ReturnType.String,returnType_1.ReturnType.Number);}}]);return TimeTransformEvaluator;}(expressionEvaluator_1.ExpressionEvaluator);exports.TimeTransformEvaluator=TimeTransformEvaluator;},{"../expressionEvaluator":171,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204,"moment":514}],140:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var stringTransformEvaluator_1=require("./stringTransformEvaluator");/**
	 * Converts the specified string to title case.
	 */var TitleCase=function(_stringTransformEvalu2){inherits(TitleCase,_stringTransformEvalu2);/**
	     * Initializes a new instance of the [TitleCase](xref:adaptive-expressions.TitleCase) class.
	     */function TitleCase(){classCallCheck(this,TitleCase);return possibleConstructorReturn(this,(TitleCase.__proto__||Object.getPrototypeOf(TitleCase)).call(this,expressionType_1.ExpressionType.TitleCase,TitleCase.evaluator));}/**
	     * @private
	     */createClass(TitleCase,null,[{key:'evaluator',value:function evaluator(args){var inputStr=String(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0])).toLowerCase();if(inputStr===''){return inputStr;}else {return inputStr.replace(/\w\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase();});}}}]);return TitleCase;}(stringTransformEvaluator_1.StringTransformEvaluator);exports.TitleCase=TitleCase;},{"../expressionType":183,"../functionUtils.internal":186,"./stringTransformEvaluator":128}],141:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var stringTransformEvaluator_1=require("./stringTransformEvaluator");/**
	 * Return a string in lowercase format.
	 * If a character in the string doesn't have a lowercase version, that character stays unchanged in the returned string.
	 */var ToLower=function(_stringTransformEvalu3){inherits(ToLower,_stringTransformEvalu3);/**
	     * Initializes a new instance of the [ToLower](xref:adaptive-expressions.ToLower) class.
	     */function ToLower(){classCallCheck(this,ToLower);return possibleConstructorReturn(this,(ToLower.__proto__||Object.getPrototypeOf(ToLower)).call(this,expressionType_1.ExpressionType.ToLower,ToLower.evaluator));}/**
	     * @private
	     */createClass(ToLower,null,[{key:'evaluator',value:function evaluator(args){return String(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0])).toLowerCase();}}]);return ToLower;}(stringTransformEvaluator_1.StringTransformEvaluator);exports.ToLower=ToLower;},{"../expressionType":183,"../functionUtils.internal":186,"./stringTransformEvaluator":128}],142:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var stringTransformEvaluator_1=require("./stringTransformEvaluator");/**
	 * Return a string in uppercase format.
	 * If a character in the string doesn't have an uppercase version, that character stays unchanged in the returned string.
	 */var ToUpper=function(_stringTransformEvalu4){inherits(ToUpper,_stringTransformEvalu4);/**
	     * Initializes a new instance of the [ToUpper](xref:adaptive-expressions.ToUpper) class.
	     */function ToUpper(){classCallCheck(this,ToUpper);return possibleConstructorReturn(this,(ToUpper.__proto__||Object.getPrototypeOf(ToUpper)).call(this,expressionType_1.ExpressionType.ToUpper,ToUpper.evaluator));}/**
	     * @private
	     */createClass(ToUpper,null,[{key:'evaluator',value:function evaluator(args){return String(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0])).toUpperCase();}}]);return ToUpper;}(stringTransformEvaluator_1.StringTransformEvaluator);exports.ToUpper=ToUpper;},{"../expressionType":183,"../functionUtils.internal":186,"./stringTransformEvaluator":128}],143:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var stringTransformEvaluator_1=require("./stringTransformEvaluator");/**
	 * Remove leading and trailing whitespace from a string, and return the updated string.
	 */var Trim=function(_stringTransformEvalu5){inherits(Trim,_stringTransformEvalu5);/**
	     * Initializes a new instance of the [Trim](xref:adaptive-expressions.Trim) class.
	     */function Trim(){classCallCheck(this,Trim);return possibleConstructorReturn(this,(Trim.__proto__||Object.getPrototypeOf(Trim)).call(this,expressionType_1.ExpressionType.Trim,Trim.evaluator));}/**
	     * @private
	     */createClass(Trim,null,[{key:'evaluator',value:function evaluator(args){return String(functionUtils_internal_1.InternalFunctionUtils.parseStringOrUndefined(args[0])).trim();}}]);return Trim;}(stringTransformEvaluator_1.StringTransformEvaluator);exports.Trim=Trim;},{"../expressionType":183,"../functionUtils.internal":186,"./stringTransformEvaluator":128}],144:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return a collection that has all the items from the specified collections.
	 * To appear in the result, an item can appear in any collection passed to this function.
	 * If one or more items have the same name, the last item with that name appears in the result.
	 */var Union=function(_expressionEvaluator_118){inherits(Union,_expressionEvaluator_118);/**
	     * Initializes a new instance of the [Union](xref:adaptive-expressions.Union) class.
	     */function Union(){classCallCheck(this,Union);return possibleConstructorReturn(this,(Union.__proto__||Object.getPrototypeOf(Union)).call(this,expressionType_1.ExpressionType.Union,Union.evaluator(),returnType_1.ReturnType.Array,Union.validator));}/**
	     * @private
	     */createClass(Union,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){var result=[];var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=args[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13=(_step13=_iterator13.next()).done);_iteratorNormalCompletion13=true){var _arg3=_step13.value;result=result.concat(_arg3);}}catch(err){_didIteratorError13=true;_iteratorError13=err;}finally{try{if(!_iteratorNormalCompletion13&&_iterator13.return){_iterator13.return();}}finally{if(_didIteratorError13){throw _iteratorError13;}}}return Array.from(new Set(result));},functionUtils_1.FunctionUtils.verifyList);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateArityAndAnyType(expression,1,Number.MAX_SAFE_INTEGER,returnType_1.ReturnType.Array);}}]);return Union;}(expressionEvaluator_1.ExpressionEvaluator);exports.Union=Union;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],145:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Remove all duplicates from an array.
	 */var Unique=function(_expressionEvaluator_119){inherits(Unique,_expressionEvaluator_119);/**
	     * Initializes a new instance of the [Unique](xref:adaptive-expressions.Unique) class.
	     */function Unique(){classCallCheck(this,Unique);return possibleConstructorReturn(this,(Unique.__proto__||Object.getPrototypeOf(Unique)).call(this,expressionType_1.ExpressionType.Unique,Unique.evaluator(),returnType_1.ReturnType.Array,Unique.validator));}/**
	     * @private
	     */createClass(Unique,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return [].concat(toConsumableArray(new Set(args[0])));});}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[],returnType_1.ReturnType.Array);}}]);return Unique;}(expressionEvaluator_1.ExpressionEvaluator);exports.Unique=Unique;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],146:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the binary version of a uniform resource identifier (URI) component.
	 */var UriComponent=function(_expressionEvaluator_120){inherits(UriComponent,_expressionEvaluator_120);/**
	     * Initializes a new instance of the [UriComponent](xref:adaptive-expressions.UriComponent) class.
	     */function UriComponent(){classCallCheck(this,UriComponent);return possibleConstructorReturn(this,(UriComponent.__proto__||Object.getPrototypeOf(UriComponent)).call(this,expressionType_1.ExpressionType.UriComponent,UriComponent.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriComponent,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return encodeURIComponent(args[0]);},functionUtils_1.FunctionUtils.verifyString);}}]);return UriComponent;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriComponent=UriComponent;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],147:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the string version of a uniform resource identifier (URI) encoded string, effectively decoding the URI-encoded string.
	 */var UriComponentToString=function(_expressionEvaluator_121){inherits(UriComponentToString,_expressionEvaluator_121);/**
	     * Initializes a new instance of the [UriComponentToString](xref:adaptive-expressions.UriComponentToString) class.
	     */function UriComponentToString(){classCallCheck(this,UriComponentToString);return possibleConstructorReturn(this,(UriComponentToString.__proto__||Object.getPrototypeOf(UriComponentToString)).call(this,expressionType_1.ExpressionType.UriComponentToString,UriComponentToString.evaluator(),returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriComponentToString,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return decodeURIComponent(args[0]);},functionUtils_1.FunctionUtils.verifyString);}}]);return UriComponentToString;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriComponentToString=UriComponentToString;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204}],148:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the host value of a unified resource identifier (URI).
	 */var UriHost=function(_expressionEvaluator_122){inherits(UriHost,_expressionEvaluator_122);/**
	     * Initializes a new instance of the [UriHost](xref:adaptive-expressions.UriHost) class.
	     */function UriHost(){classCallCheck(this,UriHost);return possibleConstructorReturn(this,(UriHost.__proto__||Object.getPrototypeOf(UriHost)).call(this,expressionType_1.ExpressionType.UriHost,UriHost.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriHost,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func34=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func34.args,childrenError=_functionUtils_1$Func34.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriHost$evalUriHost=UriHost.evalUriHost(args[0]);value=_UriHost$evalUriHost.value;error=_UriHost$evalUriHost.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriHost',value:function evalUriHost(uri){var result=void 0;var _functionUtils_intern35=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri),parsed=_functionUtils_intern35.value,parseError=_functionUtils_intern35.error;var error=parseError;if(!error){try{result=parsed.hostname;}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriHost;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriHost=UriHost;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],149:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the path value of a unified resource identifier (URI).
	 */var UriPath=function(_expressionEvaluator_123){inherits(UriPath,_expressionEvaluator_123);/**
	     * Initializes a new instance of the [UriPath](xref:adaptive-expressions.UriPath) class.
	     */function UriPath(){classCallCheck(this,UriPath);return possibleConstructorReturn(this,(UriPath.__proto__||Object.getPrototypeOf(UriPath)).call(this,expressionType_1.ExpressionType.UriPath,UriPath.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriPath,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func35=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func35.args,childrenError=_functionUtils_1$Func35.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriPath$evalUriPath=UriPath.evalUriPath(args[0]);value=_UriPath$evalUriPath.value;error=_UriPath$evalUriPath.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriPath',value:function evalUriPath(uri){var result=void 0;var error=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri).error;if(!error){try{var uriObj=new URL(uri);result=uriObj.pathname;}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriPath;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriPath=UriPath;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],150:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the path and query value of a unified resource identifier (URI).
	 */var UriPathAndQuery=function(_expressionEvaluator_124){inherits(UriPathAndQuery,_expressionEvaluator_124);/**
	     * Initializes a new instance of the [UriPathAndQuery](xref:adaptive-expressions.UriPathAndQuery) class.
	     */function UriPathAndQuery(){classCallCheck(this,UriPathAndQuery);return possibleConstructorReturn(this,(UriPathAndQuery.__proto__||Object.getPrototypeOf(UriPathAndQuery)).call(this,expressionType_1.ExpressionType.UriPathAndQuery,UriPathAndQuery.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriPathAndQuery,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func36=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func36.args,childrenError=_functionUtils_1$Func36.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriPathAndQuery$eval=UriPathAndQuery.evalUriPathAndQuery(args[0]);value=_UriPathAndQuery$eval.value;error=_UriPathAndQuery$eval.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriPathAndQuery',value:function evalUriPathAndQuery(uri){var result=void 0;var _functionUtils_intern36=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri),parsed=_functionUtils_intern36.value,parseError=_functionUtils_intern36.error;var error=parseError;if(!error){try{result=parsed.pathname+parsed.search;}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriPathAndQuery;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriPathAndQuery=UriPathAndQuery;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],151:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the port value of a unified resource identifier (URI).
	 */var UriPort=function(_expressionEvaluator_125){inherits(UriPort,_expressionEvaluator_125);/**
	     * Initializes a new instance of the [UriPort](xref:adaptive-expressions.UriPort) class.
	     */function UriPort(){classCallCheck(this,UriPort);return possibleConstructorReturn(this,(UriPort.__proto__||Object.getPrototypeOf(UriPort)).call(this,expressionType_1.ExpressionType.UriPort,UriPort.evaluator,returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriPort,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func37=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func37.args,childrenError=_functionUtils_1$Func37.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriPort$evalUriPort=UriPort.evalUriPort(args[0]);value=_UriPort$evalUriPort.value;error=_UriPort$evalUriPort.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriPort',value:function evalUriPort(uri){var result=void 0;var _functionUtils_intern37=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri),parsed=_functionUtils_intern37.value,parseError=_functionUtils_intern37.error;var error=parseError;if(!error){try{result=parsed.port;}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriPort;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriPort=UriPort;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],152:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the query value of a unified resource identifier (URI).
	 */var UriQuery=function(_expressionEvaluator_126){inherits(UriQuery,_expressionEvaluator_126);/**
	     * Initializes a new instance of the [UriQuery](xref:adaptive-expressions.UriQuery) class.
	     */function UriQuery(){classCallCheck(this,UriQuery);return possibleConstructorReturn(this,(UriQuery.__proto__||Object.getPrototypeOf(UriQuery)).call(this,expressionType_1.ExpressionType.UriQuery,UriQuery.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriQuery,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func38=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func38.args,childrenError=_functionUtils_1$Func38.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriQuery$evalUriQuer=UriQuery.evalUriQuery(args[0]);value=_UriQuery$evalUriQuer.value;error=_UriQuery$evalUriQuer.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriQuery',value:function evalUriQuery(uri){var result=void 0;var _functionUtils_intern38=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri),parsed=_functionUtils_intern38.value,parseError=_functionUtils_intern38.error;var error=parseError;if(!error){try{result=parsed.search;}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriQuery;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriQuery=UriQuery;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],153:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the scheme value of a unified resource identifier (URI).
	 */var UriScheme=function(_expressionEvaluator_127){inherits(UriScheme,_expressionEvaluator_127);/**
	     * Initializes a new instance of the [UriScheme](xref:adaptive-expressions.UriScheme) class.
	     */function UriScheme(){classCallCheck(this,UriScheme);return possibleConstructorReturn(this,(UriScheme.__proto__||Object.getPrototypeOf(UriScheme)).call(this,expressionType_1.ExpressionType.UriScheme,UriScheme.evaluator,returnType_1.ReturnType.String,functionUtils_1.FunctionUtils.validateUnary));}/**
	     * @private
	     */createClass(UriScheme,null,[{key:'evaluator',value:function evaluator(expr,state,options){var value=void 0;var _functionUtils_1$Func39=functionUtils_1.FunctionUtils.evaluateChildren(expr,state,options),args=_functionUtils_1$Func39.args,childrenError=_functionUtils_1$Func39.error;var error=childrenError;if(!error){if(typeof args[0]==='string'){var _UriScheme$evalUriSch=UriScheme.evalUriScheme(args[0]);value=_UriScheme$evalUriSch.value;error=_UriScheme$evalUriSch.error;}else {error=expr+' should contain a URI string.';}}return {value:value,error:error};}/**
	     * @private
	     */},{key:'evalUriScheme',value:function evalUriScheme(uri){var result=void 0;var _functionUtils_intern39=functionUtils_internal_1.InternalFunctionUtils.parseUri(uri),parsed=_functionUtils_intern39.value,parseError=_functionUtils_intern39.error;var error=parseError;if(!error){try{result=parsed.protocol.replace(':','');}catch(e){error='invalid operation, input uri should be an absolute URI';}}return {value:result,error:error};}}]);return UriScheme;}(expressionEvaluator_1.ExpressionEvaluator);exports.UriScheme=UriScheme;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],154:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var moment_1=__importDefault(require("moment"));var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var returnType_1=require("../returnType");/**
	 * Return the current timestamp.
	 */var UtcNow=function(_expressionEvaluator_128){inherits(UtcNow,_expressionEvaluator_128);/**
	     * Initializes a new instance of the [UtcNow](xref:adaptive-expressions.UtcNow) class.
	     */function UtcNow(){classCallCheck(this,UtcNow);return possibleConstructorReturn(this,(UtcNow.__proto__||Object.getPrototypeOf(UtcNow)).call(this,expressionType_1.ExpressionType.UtcNow,UtcNow.evaluator(),returnType_1.ReturnType.String,UtcNow.validator));}/**
	     * @private
	     */createClass(UtcNow,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.apply(function(args){return args.length===1?moment_1.default(new Date()).utc().format(args[0]):new Date().toISOString();},functionUtils_1.FunctionUtils.verifyString);}/**
	     * @private
	     */},{key:'validator',value:function validator(expression){functionUtils_1.FunctionUtils.validateOrder(expression,[returnType_1.ReturnType.String]);}}]);return UtcNow;}(expressionEvaluator_1.ExpressionEvaluator);exports.UtcNow=UtcNow;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../returnType":204,"moment":514}],155:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_internal_1=require("../functionUtils.internal");var simpleObjectMemory_1=require("../memory/simpleObjectMemory");var stackedMemory_1=require("../memory/stackedMemory");var options_1=require("../options");var returnType_1=require("../returnType");/**
	 * Filter on each element and return the new collection of filtered elements which match a specific condition.
	 */var Where=function(_expressionEvaluator_129){inherits(Where,_expressionEvaluator_129);/**
	     * Initializes a new instance of the [Where](xref:adaptive-expressions.Where) class.
	     */function Where(){classCallCheck(this,Where);return possibleConstructorReturn(this,(Where.__proto__||Object.getPrototypeOf(Where)).call(this,expressionType_1.ExpressionType.Where,Where.evaluator,returnType_1.ReturnType.Array,functionUtils_internal_1.InternalFunctionUtils.validateForeach));}/**
	     * @private
	     */createClass(Where,null,[{key:'evaluator',value:function evaluator(expression,state,options){var result=void 0;var _expression$children$11=expression.children[0].tryEvaluate(state,options),instance=_expression$children$11.value,childrenError=_expression$children$11.error;var error=childrenError;if(!error){var iteratorName=expression.children[1].children[0].value;var arr=[];var isInstanceArray=false;if(Array.isArray(instance)){arr=instance;isInstanceArray=true;}else if((typeof instance==='undefined'?'undefined':_typeof(instance))==='object'){Object.keys(instance).forEach(function(u){return arr.push({key:u,value:instance[u]});});}else {error=expression.children[0]+' is not a collection or structure object to run foreach';}if(!error){var stackedMemory=stackedMemory_1.StackedMemory.wrap(state);var arrResult=[];var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{for(var _iterator14=arr[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14=(_step14=_iterator14.next()).done);_iteratorNormalCompletion14=true){var _item=_step14.value;var local=new Map([[iteratorName,_item]]);stackedMemory.push(simpleObjectMemory_1.SimpleObjectMemory.wrap(local));var newOptions=new options_1.Options(options);newOptions.nullSubstitution=undefined;var _expression$children$12=expression.children[2].tryEvaluate(stackedMemory,newOptions),r=_expression$children$12.value,e=_expression$children$12.error;stackedMemory.pop();if(e!==undefined){return {value:undefined,error:e};}if(r){arrResult.push(local.get(iteratorName));}}//reconstruct object if instance is object, otherwise, return array result
	}catch(err){_didIteratorError14=true;_iteratorError14=err;}finally{try{if(!_iteratorNormalCompletion14&&_iterator14.return){_iterator14.return();}}finally{if(_didIteratorError14){throw _iteratorError14;}}}if(!isInstanceArray){var objResult={};var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=arrResult[Symbol.iterator](),_step15;!(_iteratorNormalCompletion15=(_step15=_iterator15.next()).done);_iteratorNormalCompletion15=true){var item=_step15.value;objResult[item.key]=item.value;}}catch(err){_didIteratorError15=true;_iteratorError15=err;}finally{try{if(!_iteratorNormalCompletion15&&_iterator15.return){_iterator15.return();}}finally{if(_didIteratorError15){throw _iteratorError15;}}}result=objResult;}else {result=arrResult;}}}return {value:result,error:error};}}]);return Where;}(expressionEvaluator_1.ExpressionEvaluator);exports.Where=Where;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils.internal":186,"../memory/simpleObjectMemory":193,"../memory/stackedMemory":194,"../options":195,"../returnType":204}],156:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("../expressionEvaluator");var expressionType_1=require("../expressionType");var functionUtils_1=require("../functionUtils");var functionUtils_internal_1=require("../functionUtils.internal");var returnType_1=require("../returnType");/**
	 * Return the year of the specified timestamp.
	 */var Year=function(_expressionEvaluator_130){inherits(Year,_expressionEvaluator_130);/**
	     * Initializes a new instance of the [Year](xref:adaptive-expressions.Year) class.
	     */function Year(){classCallCheck(this,Year);return possibleConstructorReturn(this,(Year.__proto__||Object.getPrototypeOf(Year)).call(this,expressionType_1.ExpressionType.Year,Year.evaluator(),returnType_1.ReturnType.Number,functionUtils_1.FunctionUtils.validateUnaryString));}/**
	     * @private
	     */createClass(Year,null,[{key:'evaluator',value:function evaluator(){return functionUtils_1.FunctionUtils.applyWithError(function(args){return functionUtils_internal_1.InternalFunctionUtils.parseTimestamp(args[0],function(timestamp){return timestamp.getUTCFullYear();});},functionUtils_1.FunctionUtils.verifyString);}}]);return Year;}(expressionEvaluator_1.ExpressionEvaluator);exports.Year=Year;},{"../expressionEvaluator":171,"../expressionType":183,"../functionUtils":187,"../functionUtils.internal":186,"../returnType":204}],157:[function(require,module,exports){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var antlr4ts_1=require("antlr4ts");var lru_cache_1=__importDefault(require("lru-cache"));var generated_1=require("./generated");var regexErrorListener_1=require("./regexErrorListener");// tslint:disable-next-line: completed-docs
	/**
	 * Convert PCRE regex string to RegExp
	 * PCRE ref: http://www.pcre.org/.
	 * PCRE antlr g4 file: CommonRegex.g4.
	 */var CommonRegex=function(){function CommonRegex(){classCallCheck(this,CommonRegex);}createClass(CommonRegex,null,[{key:'CreateRegex',/**
	     * Create RegExp object from PCRE pattern string.
	     * @param pattern PCRE pattern string.
	     * @returns RegExp object.
	     */value:function CreateRegex(pattern){var result=void 0;if(pattern&&this.regexCache.has(pattern)){result=this.regexCache.get(pattern);}else {if(!pattern||!this.isCommonRegex(pattern)){throw new Error('\''+pattern+'\' is not a valid regex.');}result=this.getRegExpFromString(pattern);this.regexCache.set(pattern,result);}return result;}/**
	     * @private
	     */},{key:'getRegExpFromString',value:function getRegExpFromString(pattern){var flags=['(?i)','(?m)','(?s)'];var flag='';flags.forEach(function(e){if(pattern.includes(e)){flag+=e.substr(2,1);pattern=pattern.replace(e,'');}});var regexp=void 0;if(flag){regexp=new RegExp(''+pattern,flag);}else {regexp=new RegExp(''+pattern);}return regexp;}/**
	     * @private
	     */},{key:'isCommonRegex',value:function isCommonRegex(pattern){try{this.antlrParse(pattern);}catch(Exception){return false;}return true;}/**
	     * @private
	     */},{key:'antlrParse',value:function antlrParse(pattern){var inputStream=new antlr4ts_1.ANTLRInputStream(pattern);var lexer=new generated_1.CommonRegexLexer(inputStream);lexer.removeErrorListeners();var tokenStream=new antlr4ts_1.CommonTokenStream(lexer);var parser=new generated_1.CommonRegexParser(tokenStream);parser.removeErrorListeners();// tslint:disable-next-line: no-use-before-declare
	parser.addErrorListener(regexErrorListener_1.RegexErrorListener.Instance);parser.buildParseTree=true;return parser.parse();}}]);return CommonRegex;}();CommonRegex.regexCache=new lru_cache_1.default(15);exports.CommonRegex=CommonRegex;},{"./generated":190,"./regexErrorListener":203,"antlr4ts":320,"lru-cache":510}],158:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expression_1=require("./expression");var returnType_1=require("./returnType");var expressionEvaluator_1=require("./expressionEvaluator");var expressionType_1=require("./expressionType");/**
	 * Construct an expression constant.
	 */var Constant=function(_expression_1$Express){inherits(Constant,_expression_1$Express);/**
	     * Initializes a new instance of the [Constant](xref:adaptive-expressions.Constant) class.
	     * Constructs an expression constant.
	     * @param value Constant value.
	     */function Constant(value){classCallCheck(this,Constant);// original regex: (?<!\\)'
	var _this156=possibleConstructorReturn(this,(Constant.__proto__||Object.getPrototypeOf(Constant)).call(this,expressionType_1.ExpressionType.Constant,new expressionEvaluator_1.ExpressionEvaluator(expressionType_1.ExpressionType.Constant,function(expression){return {value:expression.value,error:undefined};})));_this156.singleQuotRegex=new RegExp(/'(?!\\)/g);_this156.value=value;return _this156;}/**
	     * Constant value.
	     */createClass(Constant,[{key:'deepEquals',/**
	     * Determines if the current [Expression](xref:adaptive-expressions.Expression) instance is deep equal to another one.
	     * @param other The other [Expression](xref:adaptive-expressions.Expression) instance to compare.
	     * @returns A boolean value indicating whether the two expressions are deep equal (`true`) or not (`false`).
	     */value:function deepEquals(other){var eq=void 0;if(!other||other.type!==this.type){eq=false;}else {var otherVal=other.value;eq=this.value===otherVal;}return eq;}/**
	     * Returns a string that represents the current constant object.
	     * @returns A string that represents the current constant object.
	     */},{key:'toString',value:function toString(){if(this.value===undefined){return 'undefined';}else if(this.value===null){return 'null';}else if(typeof this.value==='string'){var result=this.value;result=result.replace(/\\/g,'\\\\');result=this.reverseString(this.reverseString(result).replace(this.singleQuotRegex,function(){return "'\\";}));return '\''+result+'\'';}else if(typeof this.value==='number'){return this.value.toString();}else if(_typeof(this.value)==='object'){return JSON.stringify(this.value);}return this.value.toString();}/**
	     * @private
	     */},{key:'reverseString',value:function reverseString(str){if(!str){return str;}return str.split('').reverse().join('');}},{key:'value',get:function get(){return this._value;}/**
	     * Sets constant value.
	     */,set:function set(theValue){this.evaluator.returnType=typeof theValue==='string'?returnType_1.ReturnType.String:typeof theValue==='boolean'?returnType_1.ReturnType.Boolean:typeof theValue==='number'&&!Number.isNaN(theValue)?returnType_1.ReturnType.Number:Array.isArray(theValue)?returnType_1.ReturnType.Array:returnType_1.ReturnType.Object;this._value=theValue;}}]);return Constant;}(expression_1.Expression);exports.Constant=Constant;},{"./expression":170,"./expressionEvaluator":171,"./expressionType":183,"./returnType":204}],159:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `array` to json [ArrayExpression](xref:adaptive-expressions.ArrayExpression) converter.
	 * @typeparam T The type of the items of the array.
	 */var ArrayExpressionConverter=function(){function ArrayExpressionConverter(){classCallCheck(this,ArrayExpressionConverter);}createClass(ArrayExpressionConverter,[{key:'convert',/**
	     * Converts an array into an [ArrayExpression](xref:adaptive-expressions.ArrayExpression).
	     * @param value `array` to convert.
	     * @returns The [ArrayExpression](xref:adaptive-expressions.ArrayExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.ArrayExpression?value:new expressionProperties_1.ArrayExpression(value);}}]);return ArrayExpressionConverter;}();exports.ArrayExpressionConverter=ArrayExpressionConverter;},{"../expressionProperties":177}],160:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `any` value to json [BoolExpression](xref:adaptive-expressions.BoolExpression) converter.
	 */var BoolExpressionConverter=function(){function BoolExpressionConverter(){classCallCheck(this,BoolExpressionConverter);}createClass(BoolExpressionConverter,[{key:'convert',/**
	     * Converts `any` value into a [BoolExpression](xref:adaptive-expressions.BoolExpression).
	     * @param value `any` value to convert.
	     * @returns The [BoolExpression](xref:adaptive-expressions.BoolExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.BoolExpression?value:new expressionProperties_1.BoolExpression(value);}}]);return BoolExpressionConverter;}();exports.BoolExpressionConverter=BoolExpressionConverter;},{"../expressionProperties":177}],161:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `string` to json [EnumExpression](xref:adaptive-expressions.EnumExpression) converter.
	 */var EnumExpressionConverter=function(){/**
	     * Initializes a new instance of the [EnumExpressionConverter](xref:adaptive-expressions.EnumExpressionConverter) class.
	     * @param enumValue The enum value of the `string` to convert.
	     */function EnumExpressionConverter(enumValue){classCallCheck(this,EnumExpressionConverter);this._enumValue=enumValue;}/**
	     * Converts a `string` into an [EnumExpression](xref:adaptive-expressions.EnumExpression).
	     * @param value `string` to convert.
	     * @returns The [EnumExpression](xref:adaptive-expressions.EnumExpression).
	     */createClass(EnumExpressionConverter,[{key:'convert',value:function convert(value){if(value instanceof expressionProperties_1.EnumExpression){return value;}if(typeof value=='string'){if(Object.prototype.hasOwnProperty.call(this._enumValue,value)){return new expressionProperties_1.EnumExpression(this._enumValue[value]);}return new expressionProperties_1.EnumExpression('='+value);}return new expressionProperties_1.EnumExpression(value);}}]);return EnumExpressionConverter;}();exports.EnumExpressionConverter=EnumExpressionConverter;},{"../expressionProperties":177}],162:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expression_1=require("../expression");/**
	 * `string` to json [Expression](xref:adaptive-expressions.Expression) converter.
	 */var ExpressionConverter=function(){function ExpressionConverter(){classCallCheck(this,ExpressionConverter);}createClass(ExpressionConverter,[{key:'convert',/**
	     * Converts a `string` into an [Expression](xref:adaptive-expressions.Expression).
	     * @param value `string` to convert.
	     * @returns The [Expression](xref:adaptive-expressions.Expression).
	     */value:function convert(value){return value instanceof expression_1.Expression?value:expression_1.Expression.parse(value);}}]);return ExpressionConverter;}();exports.ExpressionConverter=ExpressionConverter;},{"../expression":170}],163:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});__export(require("./arrayExpressionConverter"));__export(require("./boolExpressionConverter"));__export(require("./enumExpressionConverter"));__export(require("./expressionConverter"));__export(require("./intExpressionConverter"));__export(require("./numberExpressionConverter"));__export(require("./objectExpressionConverter"));__export(require("./stringExpressionConveter"));__export(require("./valueExpressionConverter"));},{"./arrayExpressionConverter":159,"./boolExpressionConverter":160,"./enumExpressionConverter":161,"./expressionConverter":162,"./intExpressionConverter":164,"./numberExpressionConverter":165,"./objectExpressionConverter":166,"./stringExpressionConveter":167,"./valueExpressionConverter":168}],164:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `string` or `number` to json [IntExpression](xref:adaptive-expressions.IntExpression) converter.
	 */var IntExpressionConverter=function(){function IntExpressionConverter(){classCallCheck(this,IntExpressionConverter);}createClass(IntExpressionConverter,[{key:'convert',/**
	     * Converts a `string` or `number` into an [IntExpression](xref:adaptive-expressions.IntExpression).
	     * @param value `string` or `number` to convert.
	     * @returns The [IntExpression](xref:adaptive-expressions.IntExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.IntExpression?value:new expressionProperties_1.IntExpression(value);}}]);return IntExpressionConverter;}();exports.IntExpressionConverter=IntExpressionConverter;},{"../expressionProperties":177}],165:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `string` or `number` to json [NumberExpression](xref:adaptive-expressions.NumberExpression) converter.
	 */var NumberExpressionConverter=function(){function NumberExpressionConverter(){classCallCheck(this,NumberExpressionConverter);}createClass(NumberExpressionConverter,[{key:'convert',/**
	     * Converts a `string` or `number` into a [NumberExpression](xref:adaptive-expressions.NumberExpression).
	     * @param value `string` or `number` to convert.
	     * @returns The [NumberExpression](xref:adaptive-expressions.NumberExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.NumberExpression?value:new expressionProperties_1.NumberExpression(value);}}]);return NumberExpressionConverter;}();exports.NumberExpressionConverter=NumberExpressionConverter;},{"../expressionProperties":177}],166:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `any` value to json [ObjectExpressionConverter](xref:adaptive-expressions.ObjectExpressionConverter) converter.
	 * @typeparam T The type of the value.
	 */var ObjectExpressionConverter=function(){function ObjectExpressionConverter(){classCallCheck(this,ObjectExpressionConverter);}createClass(ObjectExpressionConverter,[{key:'convert',/**
	     * Converts value of type `T` into an [ObjectExpression](xref:adaptive-expressions.ObjectExpression).
	     * @param value Value of type `T` to convert.
	     * @returns The [ObjectExpression](xref:adaptive-expressions.ObjectExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.ObjectExpression?value:new expressionProperties_1.ObjectExpression(value);}}]);return ObjectExpressionConverter;}();exports.ObjectExpressionConverter=ObjectExpressionConverter;},{"../expressionProperties":177}],167:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `string` to json [StringExpression](xref:adaptive-expressions.StringExpression) converter.
	 */var StringExpressionConverter=function(){function StringExpressionConverter(){classCallCheck(this,StringExpressionConverter);}createClass(StringExpressionConverter,[{key:'convert',/**
	     * Converts a string into an [StringExpression](xref:adaptive-expressions.StringExpression).
	     * @param value `string` to convert.
	     * @returns The [StringExpression](xref:adaptive-expressions.StringExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.StringExpression?value:new expressionProperties_1.StringExpression(value);}}]);return StringExpressionConverter;}();exports.StringExpressionConverter=StringExpressionConverter;},{"../expressionProperties":177}],168:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperties_1=require("../expressionProperties");/**
	 * `any` value to json [ValueExpression](xref:adaptive-expressions.ValueExpression) converter.
	 */var ValueExpressionConverter=function(){function ValueExpressionConverter(){classCallCheck(this,ValueExpressionConverter);}createClass(ValueExpressionConverter,[{key:'convert',/**
	     * Converts `any` value into a [ValueExpression](xref:adaptive-expressions.ValueExpression).
	     * @param value `any` value to convert.
	     * @returns The [ValueExpression](xref:adaptive-expressions.ValueExpression).
	     */value:function convert(value){return value instanceof expressionProperties_1.ValueExpression?value:new expressionProperties_1.ValueExpression(value);}}]);return ValueExpressionConverter;}();exports.ValueExpressionConverter=ValueExpressionConverter;},{"../expressionProperties":177}],169:[function(require,module,exports){/* eslint-disable @typescript-eslint/no-unused-vars *//**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var State;(function(State){State[State["None"]=0]="None";State[State["LowerD1"]=1]="LowerD1";State[State["LowerD2"]=2]="LowerD2";State[State["LowerD3"]=3]="LowerD3";State[State["LowerD4"]=4]="LowerD4";State[State["LowerF1"]=5]="LowerF1";State[State["LowerF2"]=6]="LowerF2";State[State["LowerF3"]=7]="LowerF3";State[State["LowerF4"]=8]="LowerF4";State[State["LowerF5"]=9]="LowerF5";State[State["LowerF6"]=10]="LowerF6";State[State["LowerF7"]=11]="LowerF7";State[State["CapitalF1"]=12]="CapitalF1";State[State["CapitalF2"]=13]="CapitalF2";State[State["CapitalF3"]=14]="CapitalF3";State[State["CapitalF4"]=15]="CapitalF4";State[State["CapitalF5"]=16]="CapitalF5";State[State["CapitalF6"]=17]="CapitalF6";State[State["CapitalF7"]=18]="CapitalF7";State[State["LowerG"]=19]="LowerG";State[State["LowerH1"]=20]="LowerH1";State[State["LowerH2"]=21]="LowerH2";State[State["CapitalH1"]=22]="CapitalH1";State[State["CapitalH2"]=23]="CapitalH2";State[State["CapitalK"]=24]="CapitalK";State[State["LowerM1"]=25]="LowerM1";State[State["LowerM2"]=26]="LowerM2";State[State["CapitalM1"]=27]="CapitalM1";State[State["CapitalM2"]=28]="CapitalM2";State[State["CapitalM3"]=29]="CapitalM3";State[State["CapitalM4"]=30]="CapitalM4";State[State["LowerS1"]=31]="LowerS1";State[State["LowerS2"]=32]="LowerS2";State[State["LowerT1"]=33]="LowerT1";State[State["LowerT2"]=34]="LowerT2";State[State["LowerY1"]=35]="LowerY1";State[State["LowerY2"]=36]="LowerY2";State[State["LowerY3"]=37]="LowerY3";State[State["LowerY4"]=38]="LowerY4";State[State["LowerY5"]=39]="LowerY5";State[State["LowerZ1"]=40]="LowerZ1";State[State["LowerZ2"]=41]="LowerZ2";State[State["LowerZ3"]=42]="LowerZ3";State[State["InSingleQuoteLiteral"]=43]="InSingleQuoteLiteral";State[State["InDoubleQuoteLiteral"]=44]="InDoubleQuoteLiteral";State[State["EscapeSequence"]=45]="EscapeSequence";})(State||(State={}));/**
	 * Convert a CSharp style datetime format string to a Moment.js style datetime format string. Ref: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
	 * @param fmtString A CSharp style datetime format string. Ref: https://devhints.io/moment
	 * @returns A Momengt.js style datetime format string.
	 */function convertCSharpDateTimeToMomentJS(fmtString){var fmtResult='';var fmtState=State.None;var lTokenBuffer='';if(fmtString.length===0){return fmtResult;}if(fmtString.length===1){switch(fmtString){case'R':case'r':throw Error('RFC 1123 not supported  in MomentJS');case'O':case'o':fmtString='YYYY-MM-DDTHH:mm:ss.SSSSSSSZ';break;case'U':throw new Error('Universal Fulll Format not supported in MomentJS');case'u':throw new Error('Universal Sortable Format not supported in MomentJS');}}var changeState=function changeState(newState){switch(fmtState){case State.LowerD1:fmtResult+='D';break;case State.LowerD2:fmtResult+='DD';break;case State.LowerD3:fmtResult+='ddd';break;case State.LowerD4:fmtResult+='dddd';break;case State.LowerF1:case State.CapitalF1:fmtResult+='S';break;case State.LowerF2:case State.CapitalF2:fmtResult+='SS';break;case State.LowerF3:case State.CapitalF3:fmtResult+='SSS';break;case State.LowerF4:case State.CapitalF4:fmtResult+='SSSS';break;case State.LowerF5:case State.CapitalF5:fmtResult+='SSSSS';break;case State.LowerF6:case State.CapitalF6:fmtResult+='SSSSSS';break;case State.LowerF7:case State.CapitalF7:fmtResult+='SSSSSSS';break;case State.LowerG:throw Error('Era not supported in MomentJS');case State.LowerH1:fmtResult+='h';break;case State.LowerH2:fmtResult+='hh';break;case State.CapitalH1:fmtResult+='H';break;case State.CapitalH2:fmtResult+='HH';break;case State.LowerM1:fmtResult+='m';break;case State.LowerM2:fmtResult+='mm';break;case State.CapitalM1:fmtResult+='M';break;case State.CapitalM2:fmtResult+='MM';break;case State.CapitalM3:fmtResult+='MMM';break;case State.CapitalM4:fmtResult+='MMMM';break;case State.LowerS1:fmtResult+='s';break;case State.LowerS2:fmtResult+='ss';break;case State.LowerT1:fmtResult+='A';break;case State.LowerT2:fmtResult+='A';break;case State.LowerY1:fmtResult+='YY';break;case State.LowerY2:fmtResult+='YY';break;case State.LowerY3:fmtResult+='YYYY';break;case State.LowerY4:fmtResult+='YYYY';break;case State.LowerY5:fmtResult+='Y';break;case State.LowerZ1:case State.LowerZ2:fmtResult+='ZZ';break;case State.LowerZ3:fmtResult+='Z';break;case State.InSingleQuoteLiteral:case State.InDoubleQuoteLiteral:case State.EscapeSequence:var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=lTokenBuffer[Symbol.iterator](),_step16;!(_iteratorNormalCompletion16=(_step16=_iterator16.next()).done);_iteratorNormalCompletion16=true){var lCharacter=_step16.value;fmtResult+=lCharacter;}}catch(err){_didIteratorError16=true;_iteratorError16=err;}finally{try{if(!_iteratorNormalCompletion16&&_iterator16.return){_iterator16.return();}}finally{if(_didIteratorError16){throw _iteratorError16;}}}break;}lTokenBuffer='';fmtState=newState;};var _iteratorNormalCompletion17=true;var _didIteratorError17=false;var _iteratorError17=undefined;try{for(var _iterator17=fmtString[Symbol.iterator](),_step17;!(_iteratorNormalCompletion17=(_step17=_iterator17.next()).done);_iteratorNormalCompletion17=true){var character=_step17.value;if(fmtState===State.EscapeSequence){lTokenBuffer+=character;changeState(State.None);}else if(fmtState===State.InDoubleQuoteLiteral){if(character=='`'){changeState(State.None);}else {lTokenBuffer+=character;}}else if(fmtState==State.InSingleQuoteLiteral){if(character=="'"){changeState(State.None);}else {lTokenBuffer+=character;}}else {switch(character){case'd':switch(fmtState){case State.LowerD1:fmtState=State.LowerD2;break;case State.LowerD2:fmtState=State.LowerD3;break;case State.LowerD3:fmtState=State.LowerD4;break;case State.LowerD4:break;default:changeState(State.LowerD1);break;}break;case'f':switch(fmtState){case State.LowerF1:fmtState=State.LowerF2;break;case State.LowerF2:fmtState=State.LowerF3;break;case State.LowerF3:fmtState=State.LowerF4;break;case State.LowerF4:fmtState=State.LowerF5;break;case State.LowerF5:fmtState=State.LowerF6;break;case State.LowerF6:fmtState=State.LowerF7;break;case State.LowerF7:break;default:changeState(State.LowerF1);break;}break;case'F':switch(fmtState){case State.CapitalF1:fmtState=State.CapitalF2;break;case State.CapitalF2:fmtState=State.CapitalF3;break;case State.CapitalF3:fmtState=State.CapitalF4;break;case State.CapitalF4:fmtState=State.CapitalF5;break;case State.CapitalF5:fmtState=State.CapitalF6;break;case State.CapitalF6:fmtState=State.CapitalF7;break;case State.CapitalF7:break;default:changeState(State.CapitalF1);break;}break;case'g':switch(fmtState){case State.LowerG:break;default:changeState(State.LowerG);break;}break;case'h':switch(fmtState){case State.LowerH1:fmtState=State.LowerH2;break;case State.LowerH2:break;default:changeState(State.LowerH1);break;}break;case'H':switch(fmtState){case State.CapitalH1:fmtState=State.CapitalH2;break;case State.CapitalH2:break;default:changeState(State.CapitalH1);break;}break;case'K':changeState(State.None);fmtResult+='Z';break;case'm':switch(fmtState){case State.LowerM1:fmtState=State.LowerM2;break;case State.LowerM2:break;default:changeState(State.LowerM1);break;}break;case'M':switch(fmtState){case State.CapitalM1:fmtState=State.CapitalM2;break;case State.CapitalM2:fmtState=State.CapitalM3;break;case State.CapitalM3:fmtState=State.CapitalM4;break;case State.CapitalM4:break;default:changeState(State.CapitalM1);break;}break;case's':switch(fmtState){case State.LowerS1:fmtState=State.LowerS2;break;case State.LowerS2:break;default:changeState(State.LowerS1);break;}break;case't':switch(fmtState){case State.LowerT1:fmtState=State.LowerT2;break;case State.LowerT2:break;default:changeState(State.LowerT1);break;}break;case'y':switch(fmtState){case State.LowerY1:fmtState=State.LowerY2;break;case State.LowerY2:fmtState=State.LowerY3;break;case State.LowerY3:fmtState=State.LowerY4;break;case State.LowerY4:fmtState=State.LowerY5;break;case State.LowerY5:break;default:changeState(State.LowerY1);break;}break;case'z':switch(fmtState){case State.LowerZ1:fmtState=State.LowerZ2;break;case State.LowerZ2:fmtState=State.LowerZ3;break;case State.LowerZ3:break;default:changeState(State.LowerZ1);break;}break;case':':changeState(State.None);fmtResult+=':';break;case'/':changeState(State.None);fmtResult+='/';break;case'`':changeState(State.InDoubleQuoteLiteral);break;case"'":changeState(State.InSingleQuoteLiteral);break;case'%':changeState(State.None);break;case'\\':changeState(State.EscapeSequence);break;default:changeState(State.None);fmtResult+=character;break;}}}}catch(err){_didIteratorError17=true;_iteratorError17=err;}finally{try{if(!_iteratorNormalCompletion17&&_iterator17.return){_iterator17.return();}}finally{if(_didIteratorError17){throw _iteratorError17;}}}if(fmtState==State.EscapeSequence||fmtState==State.InDoubleQuoteLiteral||fmtState==State.InSingleQuoteLiteral){throw Error('Invalid Format String');}changeState(State.None);return fmtResult;}exports.convertCSharpDateTimeToMomentJS=convertCSharpDateTimeToMomentJS;},{}],170:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var constant_1=require("./constant");var expressionEvaluator_1=require("./expressionEvaluator");var expressionType_1=require("./expressionType");var extensions_1=require("./extensions");var functionTable_1=require("./functionTable");var memory_1=require("./memory");var options_1=require("./options");var parser_1=require("./parser");var returnType_1=require("./returnType");/**
	 * An expression which can be analyzed or evaluated to produce a value.
	 * This provides an open-ended wrapper that supports a number of built-in functions and can also be extended at runtime.
	 * It also supports validation of the correctness of an expression and evaluation that should be exception free.
	 */var Expression=function(){/**
	     * expression constructor.
	     * @param type Type of expression from ExpressionType
	     * @param evaluator Information about how to validate and evaluate expression.
	     * @param children Child expressions.
	     */function Expression(type,evaluator){var _this157=this;classCallCheck(this,Expression);/**
	         * Validate immediate expression.
	         */// tslint:disable-next-line: no-void-expression
	this.validate=function(){return _this157.evaluator.validateExpression(_this157);};for(var _len=arguments.length,children=Array(_len>2?_len-2:0),_key2=2;_key2<_len;_key2++){children[_key2-2]=arguments[_key2];}if(evaluator){this.evaluator=evaluator;this.children=children;}else if(type!==undefined){if(!Expression.functions.get(type)){throw Error(type+' does not have an evaluator, it\'s not a built-in function or a custom function.');}this.evaluator=Expression.functions.get(type);this.children=children;}}/**
	     * Expected result of evaluating expression.
	     */createClass(Expression,[{key:'deepEquals',/**
	     * Do a deep equality between expressions.
	     * @param other Other expression.
	     * @returns True if expressions are the same.
	     */value:function deepEquals(other){var eq=false;if(other){eq=this.type===other.type;if(eq){eq=this.children.length===other.children.length;if(this.type===expressionType_1.ExpressionType.And||this.type===expressionType_1.ExpressionType.Or){// And/Or do not depand on order
	for(var i=0;eq&&i<this.children.length;i++){var primary=this.children[0];var found=false;for(var j=0;j<this.children.length;j++){if(primary.deepEquals(other.children[j])){found=true;break;}}eq=found;}}else {for(var _i=0;eq&&_i<this.children.length;_i++){eq=this.children[_i].deepEquals(other.children[_i]);}}}}return eq;}/**
	     * Return the static reference paths to memory.
	     * Return all static paths to memory.  If there is a computed element index, then the path is terminated there,
	     * but you might get other paths from the computed part as well.
	     * @param expression Expression to get references from.
	     * @returns List of the static reference paths.
	     */},{key:'references',value:function references(){var _referenceWalk=this.referenceWalk(this),path=_referenceWalk.path,refs=_referenceWalk.refs;if(path!==undefined){refs.add(path);}return Array.from(refs);}/**
	     * Walking function for identifying static memory references in an expression.
	     * @param expression Expression to analyze.
	     * @param references Tracking for references found.
	     * @param extension If present, called to override lookup for things like template expansion.
	     * @returns Accessor path of expression.
	     */},{key:'referenceWalk',value:function referenceWalk(expression,extension){var path=void 0;var refs=new Set();if(extension===undefined||!extension(expression)){var children=expression.children;if(expression.type===expressionType_1.ExpressionType.Accessor){var prop=children[0].value;if(children.length===1){path=prop;}if(children.length===2){var _referenceWalk2=this.referenceWalk(children[1],extension);path=_referenceWalk2.path;refs=_referenceWalk2.refs;if(path!==undefined){path=path.concat('.',prop);}// if path is null we still keep it null, won't append prop
	// because for example, first(items).x should not return x as refs
	}}else if(expression.type===expressionType_1.ExpressionType.Element){var _referenceWalk3=this.referenceWalk(children[0],extension);path=_referenceWalk3.path;refs=_referenceWalk3.refs;if(path!==undefined){if(children[1]instanceof constant_1.Constant){var cnst=children[1];if(cnst.returnType===returnType_1.ReturnType.String){path+='.'+cnst.value;}else {path+='['+cnst.value+']';}}else {refs.add(path);}}var result=this.referenceWalk(children[1],extension);var idxPath=result.path;var refs1=result.refs;refs=new Set([].concat(toConsumableArray(refs),toConsumableArray(refs1)));if(idxPath!==undefined){refs.add(idxPath);}}else if(expression.type===expressionType_1.ExpressionType.Foreach||expression.type===expressionType_1.ExpressionType.Where||expression.type===expressionType_1.ExpressionType.Select){var _result=this.referenceWalk(children[0],extension);var child0Path=_result.path;var refs0=_result.refs;if(child0Path!==undefined){refs0.add(child0Path);}_result=this.referenceWalk(children[2],extension);var child2Path=_result.path;var refs2=_result.refs;if(child2Path!==undefined){refs2.add(child2Path);}var iteratorName=children[1].children[0].value;var nonLocalRefs2=Array.from(refs2).filter(function(x){return !(x===iteratorName||x.startsWith(iteratorName+'.')||x.startsWith(iteratorName+'['));});refs=new Set([].concat(toConsumableArray(refs),toConsumableArray(refs0),toConsumableArray(nonLocalRefs2)));}else {var _iteratorNormalCompletion18=true;var _didIteratorError18=false;var _iteratorError18=undefined;try{for(var _iterator18=expression.children[Symbol.iterator](),_step18;!(_iteratorNormalCompletion18=(_step18=_iterator18.next()).done);_iteratorNormalCompletion18=true){var child=_step18.value;var _result2=this.referenceWalk(child,extension);var childPath=_result2.path;var _refs=_result2.refs;refs=new Set([].concat(toConsumableArray(refs),toConsumableArray(_refs)));if(childPath!==undefined){refs.add(childPath);}}}catch(err){_didIteratorError18=true;_iteratorError18=err;}finally{try{if(!_iteratorNormalCompletion18&&_iterator18.return){_iterator18.return();}}finally{if(_didIteratorError18){throw _iteratorError18;}}}}}return {path:path,refs:refs};}/**
	     * Parse an expression string into an [Expression](xref:adaptive-expressions.Expression) object.
	     * @param expression Expression string.
	     * @param lookup Optional. [EvaluatorLookup](xref:adaptive-expressions.EvaluatorLookup) function lookup when parsing the expression. Default is [Expression.lookup](xref:adaptive-expressions.Expression.lookup) which uses [Expression.functions](xref:adaptive-expressions.Expression.functions) table.
	     * @returns The expression object.
	     */},{key:'validateTree',/**
	     * Recursively validate the expression tree.
	     */value:function validateTree(){this.validate();var _iteratorNormalCompletion19=true;var _didIteratorError19=false;var _iteratorError19=undefined;try{for(var _iterator19=this.children[Symbol.iterator](),_step19;!(_iteratorNormalCompletion19=(_step19=_iterator19.next()).done);_iteratorNormalCompletion19=true){var child=_step19.value;child.validateTree();}}catch(err){_didIteratorError19=true;_iteratorError19=err;}finally{try{if(!_iteratorNormalCompletion19&&_iterator19.return){_iterator19.return();}}finally{if(_didIteratorError19){throw _iteratorError19;}}}}/**
	     * Evaluate the expression.
	     * Global state to evaluate accessor expressions against.  Can Dictionary be otherwise reflection is used to access property and then indexer.
	     * @param state
	     */},{key:'tryEvaluate',value:function tryEvaluate(state){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;if(!extensions_1.Extensions.isMemoryInterface(state)){state=memory_1.SimpleObjectMemory.wrap(state);}options=options?options:new options_1.Options();return this.evaluator.tryEvaluate(this,state,options);}/**
	     * Returns a string that represents the current [Expression](xref:adaptive-expressions.Expression) object.
	     * @returns A string that represents the current [Expression](xref:adaptive-expressions.Expression) object.
	     */},{key:'toString',value:function toString(){var builder='';var valid=false;// Special support for memory paths
	if(this.type===expressionType_1.ExpressionType.Accessor&&this.children.length>=1){if(this.children[0]instanceof constant_1.Constant){var prop=this.children[0].value;if(typeof prop==='string'){if(this.children.length===1){valid=true;builder=builder.concat(prop);}else if(this.children.length===2){valid=true;builder=builder.concat(this.children[1].toString(),'.',prop);}}}}else if(this.type===expressionType_1.ExpressionType.Element&&this.children.length===2){valid=true;builder=builder.concat(this.children[0].toString(),'[',this.children[1].toString(),']');}if(!valid){var infix=this.type.length>0&&!new RegExp(/[a-z]/i).test(this.type[0])&&this.children.length>=2;if(!infix){builder=builder.concat(this.type);}builder=builder.concat('(');var first=true;var _iteratorNormalCompletion20=true;var _didIteratorError20=false;var _iteratorError20=undefined;try{for(var _iterator20=this.children[Symbol.iterator](),_step20;!(_iteratorNormalCompletion20=(_step20=_iterator20.next()).done);_iteratorNormalCompletion20=true){var child=_step20.value;if(first){first=false;}else {if(infix){builder=builder.concat(' ',this.type,' ');}else {builder=builder.concat(', ');}}builder=builder.concat(child.toString());}}catch(err){_didIteratorError20=true;_iteratorError20=err;}finally{try{if(!_iteratorNormalCompletion20&&_iterator20.return){_iterator20.return();}}finally{if(_didIteratorError20){throw _iteratorError20;}}}builder=builder.concat(')');}return builder;}},{key:'returnType',get:function get(){return this.evaluator.returnType;}/**
	     * Type of expression.
	     */},{key:'type',get:function get(){return this.evaluator.type;}}],[{key:'parse',value:function parse(expression,lookup){return new parser_1.ExpressionParser(lookup||Expression.lookup).parse(expression);}/**
	     * Lookup an [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) function by name.
	     * @param functionName Name of function to lookup.
	     * @returns An [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) corresponding to the function name.
	     */},{key:'lookup',value:function lookup(functionName){var exprEvaluator=Expression.functions.get(functionName);if(!exprEvaluator){return undefined;}return exprEvaluator;}/**
	     * Make an expression and validate it.
	     * @param type Type of expression from ExpressionType.
	     * @param evaluator Information about how to validate and evaluate expression.
	     * @param children Child expressions.
	     */},{key:'makeExpression',value:function makeExpression(type,evaluator){for(var _len2=arguments.length,children=Array(_len2>2?_len2-2:0),_key3=2;_key3<_len2;_key3++){children[_key3-2]=arguments[_key3];}var expr=new(Function.prototype.bind.apply(Expression,[null].concat([type,evaluator],children)))();expr.validate();return expr;}/**
	     * Construct an expression from a EvaluateExpressionDelegate
	     * @param func Function to create an expression from.
	     */},{key:'lambaExpression',value:function lambaExpression(func){return new Expression(expressionType_1.ExpressionType.Lambda,new expressionEvaluator_1.ExpressionEvaluator(expressionType_1.ExpressionType.Lambda,func));}/**
	     * Construct an expression from a lamba expression over the state.
	     * Exceptions will be caught and surfaced as an error string.
	     * @param func ambda expression to evaluate.
	     * @returns New expression.
	     */},{key:'lambda',value:function lambda(func){return new Expression(expressionType_1.ExpressionType.Lambda,new expressionEvaluator_1.ExpressionEvaluator(expressionType_1.ExpressionType.Lambda,// eslint-disable-next-line @typescript-eslint/no-unused-vars
	function(_expression,state,_){var value=void 0;var error=void 0;try{value=func(state);}catch(funcError){error=funcError;}return {value:value,error:error};}));}/**
	     * Construct and validate an Set a property expression to a value expression.
	     * @param property property expression.
	     * @param value value expression.
	     * @returns New expression.
	     */},{key:'setPathToValue',value:function setPathToValue(property,value){if(value instanceof Expression){return Expression.makeExpression(expressionType_1.ExpressionType.SetPathToValue,undefined,property,value);}else {return Expression.makeExpression(expressionType_1.ExpressionType.SetPathToValue,undefined,property,new constant_1.Constant(value));}}/**
	     * Construct and validate an Equals expression.
	     * @param children Child clauses.
	     * @returns New expression.
	     */},{key:'equalsExpression',value:function equalsExpression(){for(var _len3=arguments.length,children=Array(_len3),_key4=0;_key4<_len3;_key4++){children[_key4]=arguments[_key4];}return Expression.makeExpression.apply(Expression,[expressionType_1.ExpressionType.Equal,undefined].concat(children));}/**
	     * Construct and validate an And expression.
	     * @param children Child clauses.
	     * @returns New expression.
	     */},{key:'andExpression',value:function andExpression(){for(var _len4=arguments.length,children=Array(_len4),_key5=0;_key5<_len4;_key5++){children[_key5]=arguments[_key5];}if(children.length>1){return Expression.makeExpression.apply(Expression,[expressionType_1.ExpressionType.And,undefined].concat(children));}else {return children[0];}}/**
	     * Construct and validate an Or expression.
	     * @param children Child clauses.
	     * @returns New expression.
	     */},{key:'orExpression',value:function orExpression(){for(var _len5=arguments.length,children=Array(_len5),_key6=0;_key6<_len5;_key6++){children[_key6]=arguments[_key6];}if(children.length>1){return Expression.makeExpression.apply(Expression,[expressionType_1.ExpressionType.Or,undefined].concat(children));}else {return children[0];}}/**
	     * Construct and validate an Not expression.
	     * @param children Child clauses.
	     * @returns New expression.
	     */},{key:'notExpression',value:function notExpression(child){return Expression.makeExpression(expressionType_1.ExpressionType.Not,undefined,child);}}]);return Expression;}();/**
	 * Dictionary of function => ExpressionEvaluator.
	 * This is all available functions, you can add custom functions to it, but you cannot
	 * replace builtin functions.  If you clear the dictionary, it will be reset to the built in functions.
	 */Expression.functions=new functionTable_1.FunctionTable();exports.Expression=Expression;},{"./constant":158,"./expressionEvaluator":171,"./expressionType":183,"./extensions":184,"./functionTable":185,"./memory":192,"./options":195,"./parser":200,"./returnType":204}],171:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});var returnType_1=require("./returnType");/**
	 * Information on how to evaluate an expression.
	 */var ExpressionEvaluator=function(){/**
	     * Initializes a new instance of the <see cref="ExpressionEvaluator"/> class.
	     * @param type Expression type.
	     * @param evaluator Delegate to evaluate an expression.
	     * @param returnType Type expected from evaluation.
	     * @param validator Static validation of expression.
	     */function ExpressionEvaluator(type,evaluator){var _this158=this;var returnType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:returnType_1.ReturnType.Object;var validator=arguments[3];classCallCheck(this,ExpressionEvaluator);/**
	         * Evaluate an expression.
	         * @param expression Expression to evaluate.
	         * @param state Global state information.
	         */this.tryEvaluate=function(expression,state,options){return _this158._evaluator(expression,state,options);};/**
	         * Validate an expression.
	         * @param expression Expression to validate.
	         */this.validateExpression=function(expression){return _this158._validator(expression);};this.type=type;this._evaluator=evaluator;this.returnType=returnType;this._validator=validator||// eslint-disable-next-line @typescript-eslint/no-unused-vars
	function(_expr){//noop
	};}/**
	     * Gets the evaluator that is a negation of this one.
	     */createClass(ExpressionEvaluator,[{key:'negation',get:function get(){return this._negation;}/**
	     * Sets the evaluator that is a negation of this one.
	     */,set:function set(value){value._negation=this;this._negation=value;}}]);return ExpressionEvaluator;}();exports.ExpressionEvaluator=ExpressionEvaluator;},{"./returnType":204}],172:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 */var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var BuiltinFunctions=__importStar(require("./builtinFunctions"));var expressionType_1=require("./expressionType");/**
	 *  <summary>
	 *  Definition of default built-in functions for expressions.
	 *  </summary>
	 *  <remarks>
	 *  These functions are largely from WDL https://docs.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference
	 *  with a few extensions like infix operators for math, logic and comparisons.
	 *  This class also has some methods that are useful to use when defining custom functions.
	 *  You can always construct a <see cref="ExpressionEvaluator"/> directly which gives the maximum amount of control over validation and evaluation.
	 *  Validators are static checkers that should throw an exception if something is not valid statically.
	 *  Evaluators are called to evaluate an expression and should try not to throw.
	 *  There are some evaluators in this file that take in a verifier that is called at runtime to verify arguments are proper.
	 *  </remarks>
	 */var ExpressionFunctions=function(){function ExpressionFunctions(){classCallCheck(this,ExpressionFunctions);}createClass(ExpressionFunctions,null,[{key:'getStandardFunctions',/**
	     * @private
	     */value:function getStandardFunctions(){var functions=[new BuiltinFunctions.Accessor(),new BuiltinFunctions.Add(),new BuiltinFunctions.AddDays(),new BuiltinFunctions.AddHours(),new BuiltinFunctions.AddMinutes(),new BuiltinFunctions.AddOrdinal(),new BuiltinFunctions.AddProperty(),new BuiltinFunctions.AddSeconds(),new BuiltinFunctions.AddToTime(),new BuiltinFunctions.And(),new BuiltinFunctions.Average(),new BuiltinFunctions.Base64(),new BuiltinFunctions.Base64ToBinary(),new BuiltinFunctions.Base64ToString(),new BuiltinFunctions.Binary(),new BuiltinFunctions.Bool(),new BuiltinFunctions.Ceiling(),new BuiltinFunctions.Coalesce(),new BuiltinFunctions.Concat(),new BuiltinFunctions.Contains(),new BuiltinFunctions.ConvertFromUTC(),new BuiltinFunctions.ConvertToUTC(),new BuiltinFunctions.Count(),new BuiltinFunctions.CountWord(),new BuiltinFunctions.CreateArray(),new BuiltinFunctions.DataUri(),new BuiltinFunctions.DataUriToBinary(),new BuiltinFunctions.DataUriToString(),new BuiltinFunctions.DateFunc(),new BuiltinFunctions.DateReadBack(),new BuiltinFunctions.DateTimeDiff(),new BuiltinFunctions.DayOfMonth(),new BuiltinFunctions.DayOfWeek(),new BuiltinFunctions.DayOfYear(),new BuiltinFunctions.Divide(),new BuiltinFunctions.Element(),new BuiltinFunctions.Empty(),new BuiltinFunctions.EndsWith(),new BuiltinFunctions.Equal(),new BuiltinFunctions.Exists(),new BuiltinFunctions.Flatten(),new BuiltinFunctions.First(),new BuiltinFunctions.Float(),new BuiltinFunctions.Floor(),new BuiltinFunctions.Foreach(),new BuiltinFunctions.FormatDateTime(),new BuiltinFunctions.FormatEpoch(),new BuiltinFunctions.FormatNumber(),new BuiltinFunctions.FormatTicks(),new BuiltinFunctions.GetFutureTime(),new BuiltinFunctions.GetNextViableDate(),new BuiltinFunctions.GetNextViableTime(),new BuiltinFunctions.GetPastTime(),new BuiltinFunctions.GetPreviousViableDate(),new BuiltinFunctions.GetPreviousViableTime(),new BuiltinFunctions.GetPastTime(),new BuiltinFunctions.GetProperty(),new BuiltinFunctions.GetTimeOfDay(),new BuiltinFunctions.GreaterThan(),new BuiltinFunctions.GreaterThanOrEqual(),new BuiltinFunctions.If(),new BuiltinFunctions.Ignore(),new BuiltinFunctions.IndexOf(),new BuiltinFunctions.IndicesAndValues(),new BuiltinFunctions.Int(),new BuiltinFunctions.Intersection(),new BuiltinFunctions.IsArray(),new BuiltinFunctions.IsBoolean(),new BuiltinFunctions.IsDate(),new BuiltinFunctions.IsDateRange(),new BuiltinFunctions.IsDateTime(),new BuiltinFunctions.IsDefinite(),new BuiltinFunctions.IsDuration(),new BuiltinFunctions.IsFloat(),new BuiltinFunctions.IsInteger(),new BuiltinFunctions.IsMatch(),new BuiltinFunctions.IsObject(),new BuiltinFunctions.IsPresent(),new BuiltinFunctions.IsString(),new BuiltinFunctions.IsTime(),new BuiltinFunctions.IsTimeRange(),new BuiltinFunctions.Join(),new BuiltinFunctions.JPath(),new BuiltinFunctions.Json(),new BuiltinFunctions.JsonStringify(),new BuiltinFunctions.Last(),new BuiltinFunctions.LastIndexOf(),new BuiltinFunctions.Length(),new BuiltinFunctions.LessThan(),new BuiltinFunctions.LessThanOrEqual(),new BuiltinFunctions.Max(),new BuiltinFunctions.Merge(),new BuiltinFunctions.Min(),new BuiltinFunctions.Mod(),new BuiltinFunctions.Month(),new BuiltinFunctions.Multiply(),new BuiltinFunctions.NewGuid(),new BuiltinFunctions.Not(),new BuiltinFunctions.NotEqual(),new BuiltinFunctions.Optional(),new BuiltinFunctions.Or(),new BuiltinFunctions.Power(),new BuiltinFunctions.Rand(),new BuiltinFunctions.Range(),new BuiltinFunctions.RemoveProperty(),new BuiltinFunctions.Replace(),new BuiltinFunctions.ReplaceIgnoreCase(),new BuiltinFunctions.Reverse(),new BuiltinFunctions.Round(),new BuiltinFunctions.Select(),new BuiltinFunctions.SentenceCase(),new BuiltinFunctions.SetPathToValue(),new BuiltinFunctions.SetProperty(),new BuiltinFunctions.Skip(),new BuiltinFunctions.SortBy(),new BuiltinFunctions.SortByDescending(),new BuiltinFunctions.Split(),new BuiltinFunctions.StartOfDay(),new BuiltinFunctions.StartOfHour(),new BuiltinFunctions.StartOfMonth(),new BuiltinFunctions.StartsWith(),new BuiltinFunctions.String(),new BuiltinFunctions.SubArray(),new BuiltinFunctions.Substring(),new BuiltinFunctions.Subtract(),new BuiltinFunctions.SubtractFromTime(),new BuiltinFunctions.Sum(),new BuiltinFunctions.Take(),new BuiltinFunctions.Ticks(),new BuiltinFunctions.TicksToDays(),new BuiltinFunctions.TicksToHours(),new BuiltinFunctions.TicksToMinutes(),new BuiltinFunctions.TitleCase(),new BuiltinFunctions.ToLower(),new BuiltinFunctions.ToUpper(),new BuiltinFunctions.Trim(),new BuiltinFunctions.Union(),new BuiltinFunctions.Unique(),new BuiltinFunctions.UriComponent(),new BuiltinFunctions.UriComponentToString(),new BuiltinFunctions.UriHost(),new BuiltinFunctions.UriPath(),new BuiltinFunctions.UriPathAndQuery(),new BuiltinFunctions.UriPort(),new BuiltinFunctions.UriQuery(),new BuiltinFunctions.UriScheme(),new BuiltinFunctions.UtcNow(),new BuiltinFunctions.Where(),new BuiltinFunctions.Year()];var lookup=new Map();functions.forEach(function(func){lookup.set(func.type,func);});// Attach negations
	lookup.get(expressionType_1.ExpressionType.LessThan).negation=lookup.get(expressionType_1.ExpressionType.GreaterThanOrEqual);lookup.get(expressionType_1.ExpressionType.LessThanOrEqual).negation=lookup.get(expressionType_1.ExpressionType.GreaterThan);lookup.get(expressionType_1.ExpressionType.Equal).negation=lookup.get(expressionType_1.ExpressionType.NotEqual);// Math aliases
	lookup.set('add',lookup.get(expressionType_1.ExpressionType.Add));// more than 1 param
	lookup.set('mul',lookup.get(expressionType_1.ExpressionType.Multiply));// more than 1 param
	lookup.set('div',lookup.get(expressionType_1.ExpressionType.Divide));// more than 1 param
	lookup.set('sub',lookup.get(expressionType_1.ExpressionType.Subtract));// more than 1 param
	lookup.set('exp',lookup.get(expressionType_1.ExpressionType.Power));// more than 1 param
	lookup.set('mod',lookup.get(expressionType_1.ExpressionType.Mod));// Comparison aliases
	lookup.set('and',lookup.get(expressionType_1.ExpressionType.And));lookup.set('equals',lookup.get(expressionType_1.ExpressionType.Equal));lookup.set('greater',lookup.get(expressionType_1.ExpressionType.GreaterThan));lookup.set('greaterOrEquals',lookup.get(expressionType_1.ExpressionType.GreaterThanOrEqual));lookup.set('less',lookup.get(expressionType_1.ExpressionType.LessThan));lookup.set('lessOrEquals',lookup.get(expressionType_1.ExpressionType.LessThanOrEqual));lookup.set('not',lookup.get(expressionType_1.ExpressionType.Not));lookup.set('or',lookup.get(expressionType_1.ExpressionType.Or));lookup.set('&',lookup.get(expressionType_1.ExpressionType.Concat));lookup.set('??',lookup.get(expressionType_1.ExpressionType.Coalesce));return lookup;}}]);return ExpressionFunctions;}();/**
	 * Read only Dictionary of built in functions.
	 */ExpressionFunctions.standardFunctions=ExpressionFunctions.getStandardFunctions();exports.ExpressionFunctions=ExpressionFunctions;},{"./builtinFunctions":64,"./expressionType":183}],173:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is either a value of array of T or a string expression to bind to a
	 * array of T.
	 * @remarks
	 * String values are always interpreted as an expression, whether it has '=' prefix or not.
	 * @param T Type of object in the array.
	 */var ArrayExpression=function(_expressionProperty_){inherits(ArrayExpression,_expressionProperty_);/**
	     * Initializes a new instance of the [ArrayExpression<T>](xref:adaptive-expressions.ArrayExpression) class.
	     * @param value Value of `T[]` or a `string` expression to bind to a `T[]`.
	     */function ArrayExpression(value){classCallCheck(this,ArrayExpression);return possibleConstructorReturn(this,(ArrayExpression.__proto__||Object.getPrototypeOf(ArrayExpression)).call(this,value));}return ArrayExpression;}(expressionProperty_1.ExpressionProperty);exports.ArrayExpression=ArrayExpression;},{"./expressionProperty":176}],174:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is either a boolean or a string expression which resolves to a boolean.
	 * @remarks
	 * String values are always interpreted as an expression, whether it has '=' prefix or not.
	 */var BoolExpression=function(_expressionProperty_2){inherits(BoolExpression,_expressionProperty_2);/**
	     * Initializes a new instance of the [BoolExpression](xref:adaptive-expressions.BoolExpression) class.
	     * @param value A `boolean` or a `string` expression which resolves to a `boolean`.
	     */function BoolExpression(value){classCallCheck(this,BoolExpression);return possibleConstructorReturn(this,(BoolExpression.__proto__||Object.getPrototypeOf(BoolExpression)).call(this,value,false));}return BoolExpression;}(expressionProperty_1.ExpressionProperty);exports.BoolExpression=BoolExpression;},{"./expressionProperty":176}],175:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionProperty_1=require("./expressionProperty");/**
	 * EnumExpression - represents a property which is either an enum of T or a string expression which resolves to an enum.
	 * @remarks
	 * String values are always interpreted as an expression whether it has '=' prefix or not, as string values cannot be parsed to enum values.
	 */var EnumExpression=function(_expressionProperty_3){inherits(EnumExpression,_expressionProperty_3);/**
	     * Initializes a new instance of the [EnumExpression<T>](xref:adaptive-expressions.EnumExpression) class.
	     * @param value An enum of `T` or a `string` expression which resolves to an `enum`.
	     */function EnumExpression(value){classCallCheck(this,EnumExpression);return possibleConstructorReturn(this,(EnumExpression.__proto__||Object.getPrototypeOf(EnumExpression)).call(this,value));}/**
	     * Set an enum value.
	     * @param value value to set.
	     */createClass(EnumExpression,[{key:'setValue',value:function setValue(value){get(EnumExpression.prototype.__proto__||Object.getPrototypeOf(EnumExpression.prototype),'setValue',this).call(this,undefined);if(typeof value=='string'&&!value.startsWith('=')){// Initialize value
	this.value=value;return;}get(EnumExpression.prototype.__proto__||Object.getPrototypeOf(EnumExpression.prototype),'setValue',this).call(this,value);}}]);return EnumExpression;}(expressionProperty_1.ExpressionProperty);exports.EnumExpression=EnumExpression;},{"./expressionProperty":176}],176:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expression_1=require("../expression");/**
	 * Base class which defines an Expression or value for a property.
	 * @typeparam T Type of value of the expression property.
	 */var ExpressionProperty=function(){/**
	     * Initializes a new instance of the [ExpressionProperty<T>](xref:adaptive-expressions.ExpressionProperty) class.
	     * @param value Optional. Raw value of the expression property.
	     * @param defaultValue Optional. Default value for the property.
	     */function ExpressionProperty(value,defaultValue){classCallCheck(this,ExpressionProperty);this.defaultValue=defaultValue;this.setValue(value);}/**
	     * Convert an expression property to string.
	     */createClass(ExpressionProperty,[{key:'toString',value:function toString(){if(this.expressionText){return '='+this.expressionText.replace(/^=/,'');}return this.value?this.value.toString():'';}/**
	     * This will return the existing expression if the value is non-complex type.
	     */},{key:'toExpression',value:function toExpression(){if(this.expression){return this.expression;}if(this.expressionText){this.expression=expression_1.Expression.parse(this.expressionText.replace(/^=/,''));return this.expression;}// Generate expression
	switch(_typeof(this.value)){case'string':case'number':case'boolean':this.expression=expression_1.Expression.parse(this.value.toString());break;default:if(this.value===undefined){this.expression=expression_1.Expression.parse('undefined');}else if(this.value===null){this.expression=expression_1.Expression.parse('null');}else {this.expression=expression_1.Expression.parse('json('+JSON.stringify(this.value)+')');}break;}return this.expression;}/**
	     * Get the value.
	     * @remarks
	     * An error will be thrown if value is an invalid expression.
	     * @param data Data to use for expression binding.
	     * @returns The value.
	     */},{key:'getValue',value:function getValue(data){var _tryGetValue=this.tryGetValue(data),value=_tryGetValue.value,error=_tryGetValue.error;if(error){throw error;}return value;}/**
	     * Try to Get the value.
	     * @param data Data to use for expression binding.
	     * @returns the value or an error.
	     */},{key:'tryGetValue',value:function tryGetValue(data){if(!this.expression&&this.expressionText){this.expression=expression_1.Expression.parse(this.expressionText.replace(/^=/,''));}if(this.expression){return this.expression.tryEvaluate(data);}return {value:this.value,error:undefined};}/**
	     * Set the value.
	     * @param value Value to set.
	     */},{key:'setValue',value:function setValue(value){this.value=this.defaultValue;this.expression=undefined;this.expressionText=undefined;if(typeof value=='string'){this.expressionText=value.replace(/^=/,'');}else if(value instanceof expression_1.Expression){this.expression=value;this.expressionText=value.toString();}else if(value!==undefined){this.value=value;}}}]);return ExpressionProperty;}();exports.ExpressionProperty=ExpressionProperty;},{"../expression":170}],177:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */__export(require("./arrayExpression"));__export(require("./boolExpression"));__export(require("./enumExpression"));__export(require("./expressionProperty"));__export(require("./intExpression"));__export(require("./numberExpression"));__export(require("./objectExpression"));__export(require("./stringExpression"));__export(require("./valueExpression"));},{"./arrayExpression":173,"./boolExpression":174,"./enumExpression":175,"./expressionProperty":176,"./intExpression":178,"./numberExpression":179,"./objectExpression":180,"./stringExpression":181,"./valueExpression":182}],178:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is either a int or a string expression which resolves to a int.
	 * @remarks
	 * String values are always interpreted as an expression, whether it has '=' prefix or not.
	 */var IntExpression=function(_expressionProperty_4){inherits(IntExpression,_expressionProperty_4);/**
	     * Initializes a new instance of the [IntExpression](xref:adaptive-expressions.IntExpression) class.
	     * @param value An int `number` or `string` expression which resolves to an int `number`.
	     */function IntExpression(value){classCallCheck(this,IntExpression);return possibleConstructorReturn(this,(IntExpression.__proto__||Object.getPrototypeOf(IntExpression)).call(this,value,0));}/**
	     * Try to get the value.
	     * @param data Data to use for expression binding.
	     * @returns Value of int number
	     */createClass(IntExpression,[{key:'tryGetValue',value:function tryGetValue(data){var result=get(IntExpression.prototype.__proto__||Object.getPrototypeOf(IntExpression.prototype),'tryGetValue',this).call(this,data);if(typeof result.value=='number'){// Ensure returned value is an int.
	result.value=Math.trunc(result.value);}return result;}}]);return IntExpression;}(expressionProperty_1.ExpressionProperty);exports.IntExpression=IntExpression;},{"./expressionProperty":176}],179:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is either a float or a string expression which resolves to a float.
	 * @remarks
	 * String values are always interpreted as an expression, whether it has '=' prefix or not.
	 */var NumberExpression=function(_expressionProperty_5){inherits(NumberExpression,_expressionProperty_5);/**
	     * Initializes a new instance of the [NumberExpression](xref:adaptive-expressions.NumberExpression) class.
	     * @param value A float `number` or `string` expression which resolves to a float `number`.
	     */function NumberExpression(value){classCallCheck(this,NumberExpression);return possibleConstructorReturn(this,(NumberExpression.__proto__||Object.getPrototypeOf(NumberExpression)).call(this,value,0));}return NumberExpression;}(expressionProperty_1.ExpressionProperty);exports.NumberExpression=NumberExpression;},{"./expressionProperty":176}],180:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is either an object of type T or a string expression which resolves
	 * to a object of type T.
	 * @remarks
	 * String values are always interpreted as an expression, whether it has '=' prefix or not.
	 * @param T The type of object.
	 */var ObjectExpression=function(_expressionProperty_6){inherits(ObjectExpression,_expressionProperty_6);/**
	     * Initializes a new instance of the [ObjectExpression<T>](xref:adaptive-expressions.ObjectExpression) class.
	     * @param value An object of type `T` or a `string` expression which resolves to a object of type `T`.
	     */function ObjectExpression(value){classCallCheck(this,ObjectExpression);return possibleConstructorReturn(this,(ObjectExpression.__proto__||Object.getPrototypeOf(ObjectExpression)).call(this,value));}return ObjectExpression;}(expressionProperty_1.ExpressionProperty);exports.ObjectExpression=ObjectExpression;},{"./expressionProperty":176}],181:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");var expression_1=require("../expression");/**
	 * Represents a property which is either a string value or a string expression.
	 * @remarks
	 * If the value is
	 * - a string with '=' prefix then the string is treated as an expression to resolve to a string.
	 * - a string without '=' then value is treated as string with string interpolation.
	 * - You can escape the '=' prefix by putting a backslash.
	 * Examples:
	 *     prop = "Hello @{user.name}" => "Hello Joe"
	 *     prop = "=length(user.name)" => "3"
	 *     prop = "=user.name" => "Joe"
	 *     prop = "\=user" => "=user".
	 */var StringExpression=function(_expressionProperty_7){inherits(StringExpression,_expressionProperty_7);/**
	     * Initializes a new instance of the [StringExpression](xref:adaptive-expressions.StringExpression) class.
	     * @param value A `string` value or a `string` expression.
	     */function StringExpression(value){classCallCheck(this,StringExpression);return possibleConstructorReturn(this,(StringExpression.__proto__||Object.getPrototypeOf(StringExpression)).call(this,value));}/**
	     * Set a string value.
	     * @param value Value to set.
	     */createClass(StringExpression,[{key:'setValue',value:function setValue(value){// reset state to no value or expression
	get(StringExpression.prototype.__proto__||Object.getPrototypeOf(StringExpression.prototype),'setValue',this).call(this,undefined);if(value instanceof expression_1.Expression){get(StringExpression.prototype.__proto__||Object.getPrototypeOf(StringExpression.prototype),'setValue',this).call(this,value);return;}if(typeof value=='string'){if(value.startsWith('=')){this.expressionText=value;return;}else if(value.startsWith('\\=')){// Trim off the escape char for equals (\=foo) should simply be the string (=foo).
	value=value.substr(1);}// keep the string as quoted expression, which will be literal unless string interpolation is used.
	this.expressionText='=`'+value.replace(/\\/g,'\\\\').replace('`','\\`')+'`';return;}}}]);return StringExpression;}(expressionProperty_1.ExpressionProperty);exports.StringExpression=StringExpression;},{"../expression":170,"./expressionProperty":176}],182:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var expressionProperty_1=require("./expressionProperty");/**
	 * Represents a property which is an object of any kind or a string expression.
	 * @remarks
	 * If the value is
	 * - a string with '=' prefix then the string is treated as an expression to resolve to a string.
	 * - a string without '=' then value is treated as string with string interpolation.
	 * - You can escape the '=' prefix by putting a backslash.
	 * Examples:
	 *     prop = "Hello @{user.name}" => "Hello Joe"
	 *     prop = "=length(user.name)" => "3"
	 *     prop = "=user.name" => "Joe"
	 *     prop = "\=user" => "=user".
	 */var ValueExpression=function(_expressionProperty_8){inherits(ValueExpression,_expressionProperty_8);/**
	     * Initializes a new instance of the [ValueExpression](xref:adaptive-expressions.ValueExpression) class.
	     * @param value An object of `any` kind or a `string` expression.
	     */function ValueExpression(value){classCallCheck(this,ValueExpression);return possibleConstructorReturn(this,(ValueExpression.__proto__||Object.getPrototypeOf(ValueExpression)).call(this,value));}/**
	     * Set value as value expression.
	     * @param value Value to set.
	     */createClass(ValueExpression,[{key:'setValue',value:function setValue(value){get(ValueExpression.prototype.__proto__||Object.getPrototypeOf(ValueExpression.prototype),'setValue',this).call(this,undefined);if(typeof value=='string'){if(value.startsWith('=')){this.expressionText=value;return;}else if(value.startsWith('\\=')){// Trim off the escape char for equals (\=foo) should simply be the string (=foo).
	value=value.substr(1);}// keep the string as quoted expression, which will be literal unless string interpolation is used.
	this.expressionText='=`'+value.replace(/\\/g,'\\\\').replace('`','\\`')+'`';return;}get(ValueExpression.prototype.__proto__||Object.getPrototypeOf(ValueExpression.prototype),'setValue',this).call(this,value);}}]);return ValueExpression;}(expressionProperty_1.ExpressionProperty);exports.ValueExpression=ValueExpression;},{"./expressionProperty":176}],183:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Built-in expression types.
	 */var ExpressionType=function ExpressionType(){classCallCheck(this,ExpressionType);};// Math
	ExpressionType.Add='+';ExpressionType.Subtract='-';ExpressionType.Multiply='*';ExpressionType.Divide='/';ExpressionType.Min='min';ExpressionType.Max='max';ExpressionType.Power='^';ExpressionType.Mod='%';ExpressionType.Average='average';ExpressionType.Sum='sum';ExpressionType.Count='count';ExpressionType.Range='range';ExpressionType.Floor='floor';ExpressionType.Ceiling='ceiling';ExpressionType.Round='round';// Comparisons
	ExpressionType.LessThan='<';ExpressionType.LessThanOrEqual='<=';ExpressionType.Equal='==';ExpressionType.NotEqual='!=';ExpressionType.GreaterThan='>';ExpressionType.GreaterThanOrEqual='>=';ExpressionType.Exists='exists';ExpressionType.Contains='contains';ExpressionType.Empty='empty';// Logic
	ExpressionType.And='&&';ExpressionType.Or='||';ExpressionType.Not='!';// String
	ExpressionType.Concat='concat';ExpressionType.Length='length';ExpressionType.Replace='replace';ExpressionType.ReplaceIgnoreCase='replaceIgnoreCase';ExpressionType.Split='split';ExpressionType.Substring='substring';ExpressionType.ToLower='toLower';ExpressionType.ToUpper='toUpper';ExpressionType.Trim='trim';ExpressionType.Join='join';ExpressionType.EndsWith='endsWith';ExpressionType.StartsWith='startsWith';ExpressionType.CountWord='countWord';ExpressionType.AddOrdinal='addOrdinal';ExpressionType.NewGuid='newGuid';ExpressionType.IndexOf='indexOf';ExpressionType.LastIndexOf='lastIndexOf';ExpressionType.SentenceCase='sentenceCase';ExpressionType.TitleCase='titleCase';// DateTime
	ExpressionType.AddDays='addDays';ExpressionType.AddHours='addHours';ExpressionType.AddMinutes='addMinutes';ExpressionType.AddSeconds='addSeconds';ExpressionType.DayOfMonth='dayOfMonth';ExpressionType.DayOfWeek='dayOfWeek';ExpressionType.DayOfYear='dayOfYear';ExpressionType.Month='month';ExpressionType.Date='date';ExpressionType.Year='year';ExpressionType.UtcNow='utcNow';ExpressionType.FormatDateTime='formatDateTime';ExpressionType.FormatEpoch='formatEpoch';ExpressionType.FormatTicks='formatTicks';ExpressionType.SubtractFromTime='subtractFromTime';ExpressionType.DateReadBack='dateReadBack';ExpressionType.GetTimeOfDay='getTimeOfDay';ExpressionType.GetFutureTime='getFutureTime';ExpressionType.GetPastTime='getPastTime';ExpressionType.ConvertFromUTC='convertFromUTC';ExpressionType.ConvertToUTC='convertToUTC';ExpressionType.AddToTime='addToTime';ExpressionType.StartOfDay='startOfDay';ExpressionType.StartOfHour='startOfHour';ExpressionType.StartOfMonth='startOfMonth';ExpressionType.Ticks='ticks';ExpressionType.TicksToDays='ticksToDays';ExpressionType.TicksToHours='ticksToHours';ExpressionType.TicksToMinutes='ticksToMinutes';ExpressionType.DateTimeDiff='dateTimeDiff';// timex
	ExpressionType.IsDefinite='isDefinite';ExpressionType.IsTime='isTime';ExpressionType.IsDuration='isDuration';ExpressionType.IsDate='isDate';ExpressionType.IsTimeRange='isTimeRange';ExpressionType.IsDateRange='isDateRange';ExpressionType.IsPresent='isPresent';ExpressionType.GetNextViableDate='getNextViableDate';ExpressionType.GetPreviousViableDate='getPreviousViableDate';ExpressionType.GetNextViableTime='getNextViableTime';ExpressionType.GetPreviousViableTime='getPreviousViableTime';// Conversions
	ExpressionType.Float='float';ExpressionType.Int='int';ExpressionType.String='string';ExpressionType.Bool='bool';ExpressionType.Binary='binary';ExpressionType.Base64='base64';ExpressionType.Base64ToBinary='base64ToBinary';ExpressionType.Base64ToString='base64ToString';ExpressionType.DataUri='dataUri';ExpressionType.DataUriToBinary='dataUriToBinary';ExpressionType.DataUriToString='dataUriToString';ExpressionType.UriComponent='uriComponent';ExpressionType.UriComponentToString='uriComponentToString';ExpressionType.FormatNumber='formatNumber';ExpressionType.JsonStringify='jsonStringify';// Memory
	ExpressionType.Accessor='Accessor';ExpressionType.Element='Element';ExpressionType.CreateArray='createArray';// Collection
	ExpressionType.First='first';ExpressionType.Last='last';ExpressionType.Foreach='foreach';ExpressionType.Select='select';ExpressionType.Where='where';ExpressionType.Union='union';ExpressionType.Intersection='intersection';ExpressionType.Skip='skip';ExpressionType.Take='take';ExpressionType.FilterNotEqual='filterNotEqual';ExpressionType.SubArray='subArray';ExpressionType.SortBy='sortBy';ExpressionType.SortByDescending='sortByDescending';ExpressionType.IndicesAndValues='indicesAndValues';ExpressionType.Flatten='flatten';ExpressionType.Unique='unique';ExpressionType.Reverse='reverse';// Misc
	ExpressionType.Constant='Constant';ExpressionType.Lambda='Lambda';ExpressionType.If='if';ExpressionType.Rand='rand';// Object manipulation and construction functions
	ExpressionType.Json='json';ExpressionType.AddProperty='addProperty';ExpressionType.RemoveProperty='removeProperty';ExpressionType.SetProperty='setProperty';ExpressionType.GetProperty='getProperty';ExpressionType.Coalesce='coalesce';ExpressionType.JPath='jPath';ExpressionType.SetPathToValue='setPathToValue';ExpressionType.Merge='merge';// URI parsing functions
	ExpressionType.UriHost='uriHost';ExpressionType.UriPath='uriPath';ExpressionType.UriPathAndQuery='uriPathAndQuery';ExpressionType.UriPort='uriPort';ExpressionType.UriQuery='uriQuery';ExpressionType.UriScheme='uriScheme';// Regar expression
	ExpressionType.IsMatch='isMatch';//Type Checking
	ExpressionType.IsString='isString';ExpressionType.IsInteger='isInteger';ExpressionType.IsArray='isArray';ExpressionType.IsObject='isObject';ExpressionType.IsFloat='isFloat';ExpressionType.IsDateTime='isDateTime';ExpressionType.IsBoolean='isBoolean';ExpressionType.Ignore='ignore';ExpressionType.Optional='optional';exports.ExpressionType=ExpressionType;},{}],184:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Some util and extension functions
	 */var Extensions=function(){function Extensions(){classCallCheck(this,Extensions);}createClass(Extensions,null,[{key:'isMemoryInterface',/**
	     * Patch method
	     * TODO: is there any better solution?
	     * To judge if an object is implements MemoryInterface. Same with 'is MemoryInterface' in C#
	     */value:function isMemoryInterface(obj){if(obj===undefined){return false;}if((typeof obj==='undefined'?'undefined':_typeof(obj))!=='object'){return false;}return 'getValue'in obj&&'setValue'in obj&&'version'in obj&&typeof obj.getValue==='function'&&typeof obj.setValue==='function'&&typeof obj.version==='function';}}]);return Extensions;}();exports.Extensions=Extensions;},{}],185:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expressionEvaluator_1=require("./expressionEvaluator");var expressionFunctions_1=require("./expressionFunctions");var functionUtils_1=require("./functionUtils");/**
	 * FunctionTable is a dictionary which merges BuiltinFunctions.Functions with a CustomDictionary.
	 */var FunctionTable=function(){function FunctionTable(){classCallCheck(this,FunctionTable);this.customFunctions=new Map();}/**
	     * Gets a collection of string values that represent the keys of the [ExpressionFunctions.standardFunctions](xref:adaptive-expressions.ExpressionFunctions.standardFunctions).
	     * @returns A list of string values.
	     */createClass(FunctionTable,[{key:'keys',value:function keys(){var keysOfAllFunctions=Array.from(expressionFunctions_1.ExpressionFunctions.standardFunctions.keys()).concat(Array.from(this.customFunctions.keys()));return keysOfAllFunctions[Symbol.iterator]();}/**
	     * Gets a collection of [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) which is the value of the StandardFunctions.
	     * @returns A list of [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator).
	     */},{key:'values',value:function values(){var valuesOfAllFunctions=Array.from(expressionFunctions_1.ExpressionFunctions.standardFunctions.values()).concat(Array.from(this.customFunctions.values()));return valuesOfAllFunctions[Symbol.iterator]();}/**
	     * Gets the total number of [ExpressionFunctions.standardFunctions](xref:adaptive-expressions.ExpressionFunctions.standardFunctions) and user [customFunctions](xref:adaptive-expressions.FunctionTable.customFunctions).
	     * @returns An integer value.
	     */},{key:'get',/**
	     * Gets a value of [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) corresponding to the given key.
	     * @param key A string value of function name.
	     * @returns An [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator).
	     */value:function get(key){if(expressionFunctions_1.ExpressionFunctions.standardFunctions.get(key)){return expressionFunctions_1.ExpressionFunctions.standardFunctions.get(key);}if(this.customFunctions.get(key)){return this.customFunctions.get(key);}return undefined;}/**
	     * Sets a value of [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) corresponding to the given key.
	     * @param key A string value of function name.
	     * @param value The value to set for the [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator).
	     */},{key:'set',value:function set(key,value){if(expressionFunctions_1.ExpressionFunctions.standardFunctions.get(key)){throw Error('You can\'t overwrite a built in function.');}this.customFunctions.set(key,value);return this;}/**
	     * Inserts a mapping of a string key to [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) into [FunctionTable](xref:adaptive-expressions.FunctionTable).
	     * @param param1 Key-Value pair for the [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) or the function name to be added.
	     * @param param2 Value of the [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator) to be added or value of the user customized function to be added.
	     */},{key:'add',value:function add(param1,param2){if(arguments.length===1){if(param1 instanceof Object){this.set(param1.key,param1.value);}}else {if(typeof param1==='string'){if(param2 instanceof expressionEvaluator_1.ExpressionEvaluator){this.set(param1,param2);}else {this.set(param1,new expressionEvaluator_1.ExpressionEvaluator(param1,functionUtils_1.FunctionUtils.apply(param2)));}}}}/**
	     * Clears the user [customFunctions](xref:adaptive-expressions.FunctionTable.customFunctions).
	     */},{key:'clear',value:function clear(){this.customFunctions.clear();}/**
	     * Determines if the [FunctionTable](xref:adaptive-expressions.FunctionTable) has a given string key.
	     * @param key A string key.
	     * @returns `True` if the key is contained, otherwise returns `False`.
	     */},{key:'has',value:function has(key){return expressionFunctions_1.ExpressionFunctions.standardFunctions.has(key)||this.customFunctions.has(key);}/**
	     * Deletes a specified key from user [customFunctions](xref:adaptive-expressions.FunctionTable.customFunctions).
	     * @param key A string key of function name.
	     * @returns A boolean value indicating whether the key is successfully deleted.
	     */},{key:'delete',value:function _delete(key){return this.customFunctions.delete(key);}/**
	     * Operates on each element of the [ExpressionFunctions.standardFunctions](xref:adaptive-expressions.ExpressionFunctions.standardFunctions).
	     * Not implemented.
	     * @param _callbackfn Callback function.
	     * @param thisArg Optional. This args.
	     */// eslint-disable-next-line @typescript-eslint/no-unused-vars
	},{key:'forEach',value:function forEach(_callbackfn,thisArg){throw Error('forEach function not implemented');}/**
	     * Returns an iterable of key, value pairs for every entry in the map.
	     * Not implemented.
	     */},{key:'entries',value:function entries(){throw Error('entries function not implemented');}/**
	     * Returns an iterable of key, value pairs.
	     * Not implemented.
	     */},{key:'size',get:function get(){return expressionFunctions_1.ExpressionFunctions.standardFunctions.size+this.customFunctions.size;}/**
	     * Gets a value indicating whether the [FunctionTable](xref:adaptive-expressions.FunctionTable) is readonly.
	     * @returns A boolean value indicating whether the [FunctionTable](xref:adaptive-expressions.FunctionTable) is readonly.
	     */},{key:'isReadOnly',get:function get(){return false;}},{key:Symbol.iterator,get:function get(){throw Error('Symbol.iterator function not implemented');}/**
	     * Returns a string value.
	     * Not implemented.
	     */},{key:Symbol.toStringTag,get:function get(){throw Error('Symbol.toStringTag function not implemented');}}]);return FunctionTable;}();exports.FunctionTable=FunctionTable;},{"./expressionEvaluator":171,"./expressionFunctions":172,"./functionUtils":187}],186:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});var sortBy_1=__importDefault(require("lodash/sortBy"));var moment_1=__importDefault(require("moment"));var expressionType_1=require("./expressionType");var memory_1=require("./memory");var recognizers_text_data_types_timex_expression_1=require("@microsoft/recognizers-text-data-types-timex-expression");var bigInt=require("big-integer");/**
	 * Utility functions only used internal
	 */var InternalFunctionUtils=function(){function InternalFunctionUtils(){classCallCheck(this,InternalFunctionUtils);}createClass(InternalFunctionUtils,null,[{key:'parseTimexProperty',/**
	     * Parse timex funcition.
	     * @param timexExpr String or TimexProperty input.
	     * @returns TimexProperty and error.
	     */value:function parseTimexProperty(timexExpr){var parsed=void 0;if(timexExpr instanceof recognizers_text_data_types_timex_expression_1.TimexProperty){parsed=timexExpr;}else if(typeof timexExpr==='string'){parsed=new recognizers_text_data_types_timex_expression_1.TimexProperty(timexExpr);}else {parsed=new recognizers_text_data_types_timex_expression_1.TimexProperty(timexExpr);if(parsed===undefined||Object.keys(parsed).length===0){return {timexProperty:parsed,error:timexExpr+' requires a TimexProperty or a string as a argument'};}}return {timexProperty:parsed,error:undefined};}/**
	     * Convert string into Uint8Array object.
	     * @param stringToConvert Input string.
	     */},{key:'toBinary',value:function toBinary(stringToConvert){var result=new ArrayBuffer(stringToConvert.length);var bufferView=new Uint8Array(result);for(var i=0;i<stringToConvert.length;i++){bufferView[i]=stringToConvert.charCodeAt(i);}return bufferView;}/**
	     * Sort helper function.
	     * @param isDescending Descending flag.
	     */},{key:'sortBy',value:function sortBy(isDescending){return function(expression,state,options){var result=void 0;var _expression$children$13=expression.children[0].tryEvaluate(state,options),oriArr=_expression$children$13.value,childrenError=_expression$children$13.error;var error=childrenError;if(!error){if(Array.isArray(oriArr)){var arr=oriArr.slice(0);if(expression.children.length===1){if(isDescending){result=arr.sort().reverse();}else {result=arr.sort();}}else {var propertyName=void 0;var _expression$children$14=expression.children[1].tryEvaluate(state,options);propertyName=_expression$children$14.value;error=_expression$children$14.error;if(!error){propertyName=propertyName||'';}if(isDescending){result=sortBy_1.default(arr,propertyName).reverse();}else {result=sortBy_1.default(arr,propertyName);}}}else {error=expression.children[0]+' is not an array';}}return {value:result,error:error};};}/**
	     * Lookup a string or number index of an Object.
	     * @param instance Instance with property.
	     * @param property Property to lookup.
	     * @returns Value and error information if any.
	     */},{key:'accessIndex',value:function accessIndex(instance,index){// NOTE: This returns undefined rather than an error if property is not present
	if(instance===null||instance===undefined){return {value:undefined,error:undefined};}var value=void 0;var error=void 0;if(Array.isArray(instance)){if(index>=0&&index<instance.length){value=instance[index];}else {error=index+' is out of range for '+instance;}}else {error=instance+' is not a collection.';}return {value:value,error:error};}/**
	     * Verify a timestamp string is valid timestamp format.
	     * @param value Timestamp string to check.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyTimestamp',value:function verifyTimestamp(value){var error=void 0;try{var parsedData=new Date(value);if(Number.isNaN(parsedData.getTime())){error=value+' is not a valid datetime string.';}}catch(e){error=value+' is not a valid datetime string.';}return error;}/**
	     * Verify a timestamp string is valid ISO timestamp format.
	     * @param value Timestamp string to check.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyISOTimestamp',value:function verifyISOTimestamp(value){var error=void 0;try{var parsedData=new Date(value);if(Number.isNaN(parsedData.getTime())){error=value+' is not a valid datetime string.';}else if(parsedData.toISOString()!==value){error=value+' is not a ISO format datetime string.';}}catch(e){error=value+' is not a valid datetime string.';}return error;}/**
	     * Transform a timestamp into another with customized function.
	     * @param timeStamp Original time stamp.
	     * @param transform Transform function.
	     * @returns New timestamp and error.
	     */},{key:'parseTimestamp',value:function parseTimestamp(timeStamp,transform){var value=void 0;var error=this.verifyISOTimestamp(timeStamp);if(!error){value=transform!==undefined?transform(new Date(timeStamp)):timeStamp;}return {value:value,error:error};}/**
	     * Convert a string input to ticks number.
	     * @param timeStamp String timestamp input.
	     */},{key:'ticks',value:function ticks(timeStamp){var result=void 0;var _parseTimestamp=this.parseTimestamp(timeStamp),parsed=_parseTimestamp.value,error=_parseTimestamp.error;if(!error){var unixMilliSec=parseInt(moment_1.default(parsed).utc().format('x'),10);result=this.UnixMilliSecondToTicksConstant.add(bigInt(unixMilliSec).times(this.MillisecondToTickConstant));}return {value:result,error:error};}/**
	     * Lookup a property in Map or Object.
	     * @param instance Instance with property.
	     * @param property Property to lookup.
	     * @returns Value and error information if any.
	     */},{key:'accessProperty',value:function accessProperty(instance,property){// NOTE: This returns undefined rather than an error if property is not present
	if(!instance){return {value:undefined,error:undefined};}var value=void 0;var error=void 0;if(instance instanceof Map&&instance!==undefined){var instanceMap=instance;value=instanceMap.get(property);if(value===undefined){var prop=Array.from(instanceMap.keys()).find(function(k){return k.toLowerCase()===property.toLowerCase();});if(prop!==undefined){value=instanceMap.get(prop);}}}else {var _prop=Object.keys(instance).find(function(k){return k.toLowerCase()===property.toLowerCase();});if(_prop!==undefined){value=instance[_prop];}}return {value:value,error:error};}/**
	     * Get the value of a path from a memory
	     * @param state Memory.
	     * @param path Path string.
	     * @param options Options.
	     */},{key:'wrapGetValue',value:function wrapGetValue(state,path,options){var result=state.getValue(path);if(result!==undefined&&result!==null){return result;}if(options.nullSubstitution!==undefined){return options.nullSubstitution(path);}return undefined;}/**
	     * Wrap string or undefined into string. Default to empty string.
	     * @param input Input string
	     */},{key:'parseStringOrUndefined',value:function parseStringOrUndefined(input){if(typeof input==='string'){return input;}else {return '';}}/**
	     * Test result to see if True in logical comparison functions.
	     * @param instance Computed value.
	     * @returns True if boolean true or non-null.
	     */},{key:'isLogicTrue',value:function isLogicTrue(instance){var result=true;if(typeof instance==='boolean'){result=instance;}else if(instance===undefined||instance===null){result=false;}return result;}/**
	     * Evaluator for foreach and select functions.
	     * @param expression Expression.
	     * @param state Memory scope.
	     * @param options Options.
	     */},{key:'foreach',value:function foreach(expression,state,options){var result=void 0;var _expression$children$15=expression.children[0].tryEvaluate(state,options),instance=_expression$children$15.value,childrenError=_expression$children$15.error;var error=childrenError;if(!instance){error='\''+expression.children[0]+'\' evaluated to null.';}if(!error){var iteratorName=expression.children[1].children[0].value;var arr=[];if(Array.isArray(instance)){arr=instance;}else if((typeof instance==='undefined'?'undefined':_typeof(instance))==='object'){Object.keys(instance).forEach(function(u){return arr.push({key:u,value:instance[u]});});}else {error=expression.children[0]+' is not a collection or structure object to run foreach';}if(!error){var stackedMemory=memory_1.StackedMemory.wrap(state);result=[];var _iteratorNormalCompletion21=true;var _didIteratorError21=false;var _iteratorError21=undefined;try{for(var _iterator21=arr[Symbol.iterator](),_step21;!(_iteratorNormalCompletion21=(_step21=_iterator21.next()).done);_iteratorNormalCompletion21=true){var item=_step21.value;var local=new Map([[iteratorName,item]]);stackedMemory.push(memory_1.SimpleObjectMemory.wrap(local));var _expression$children$16=expression.children[2].tryEvaluate(stackedMemory,options),r=_expression$children$16.value,e=_expression$children$16.error;stackedMemory.pop();if(e!==undefined){return {value:undefined,error:e};}result.push(r);}}catch(err){_didIteratorError21=true;_iteratorError21=err;}finally{try{if(!_iteratorNormalCompletion21&&_iterator21.return){_iterator21.return();}}finally{if(_didIteratorError21){throw _iteratorError21;}}}}}return {value:result,error:error};}/**
	     * Validator for foreach, select, and where functions.
	     * @param expression
	     */},{key:'validateForeach',value:function validateForeach(expression){if(expression.children.length!==3){throw new Error('foreach expect 3 parameters, found '+expression.children.length);}var second=expression.children[1];if(!(second.type===expressionType_1.ExpressionType.Accessor&&second.children.length===1)){throw new Error('Second parameter of foreach is not an identifier : '+second);}}/**
	     * Parse string into URL object.
	     * @param uri Input string uri.
	     */},{key:'parseUri',value:function parseUri(uri){var result=void 0;var error=void 0;try{result=new URL(uri);}catch(e){error='Invalid URI: '+uri;}return {value:result,error:error};}/**
	     * Transform C# period and unit into js period and unit
	     * @param duration C# duration
	     * @param cSharpStr C# unit.
	     */},{key:'timeUnitTransformer',value:function timeUnitTransformer(duration,cSharpStr){switch(cSharpStr){case'Day':return {duration:duration,tsStr:'days'};case'Week':return {duration:duration*7,tsStr:'days'};case'Second':return {duration:duration,tsStr:'seconds'};case'Minute':return {duration:duration,tsStr:'minutes'};case'Hour':return {duration:duration,tsStr:'hours'};case'Month':return {duration:duration,tsStr:'months'};case'Year':return {duration:duration,tsStr:'years'};default:return {duration:duration,tsStr:undefined};}}/**
	     * Format datetime.
	     * @param timedata Input date time.
	     * @param format Format flag.
	     */},{key:'returnFormattedTimeStampStr',value:function returnFormattedTimeStampStr(timedata,format){var result=void 0;var error=void 0;try{result=timedata.format(format);}catch(e){error=format+' is not a valid timestamp format';}return {value:result,error:error};}/**
	     * Equal helper function.
	     * @param args Input args. Compare the first param and second param.
	     */},{key:'isEqual',value:function isEqual(args){if(args.length===0){return false;}if(args[0]===undefined||args[0]===null||args[1]===undefined||args[1]===null){return (args[0]===undefined||args[0]===null)&&(args[1]===undefined||args[1]===null);}if(Array.isArray(args[0])&&args[0].length===0&&Array.isArray(args[1])&&args[1].length===0){return true;}if(InternalFunctionUtils.getPropertyCount(args[0])===0&&InternalFunctionUtils.getPropertyCount(args[1])===0){return true;}try{return args[0]===args[1];}catch(_a){return false;}}/**
	     * Helper function of get the number of properties of an object.
	     * @param obj An object.
	     */},{key:'getPropertyCount',value:function getPropertyCount(obj){var count=-1;if(!Array.isArray(obj)){if(obj instanceof Map){count=obj.size;}else if((typeof obj==='undefined'?'undefined':_typeof(obj))==='object'){count=Object.keys(obj).length;}}return count;}}]);return InternalFunctionUtils;}();/**
	 * Constant for converting unix timestamp to ticks.
	 */InternalFunctionUtils.UnixMilliSecondToTicksConstant=bigInt('621355968000000000');/**
	 * Constant to convert between ticks and ms.
	 */InternalFunctionUtils.MillisecondToTickConstant=bigInt('10000');exports.InternalFunctionUtils=InternalFunctionUtils;},{"./expressionType":183,"./memory":192,"@microsoft/recognizers-text-data-types-timex-expression":213,"big-integer":367,"lodash/sortBy":506,"moment":514}],187:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var datetimeFormatConverter_1=require("./datetimeFormatConverter");var expressionType_1=require("./expressionType");var returnType_1=require("./returnType");/**
	 * Utility functions in AdaptiveExpression.
	 */var FunctionUtils=function(){function FunctionUtils(){classCallCheck(this,FunctionUtils);}createClass(FunctionUtils,null,[{key:'validateArityAndAnyType',/**
	     * Validate that expression has a certain number of children that are of any of the supported types.
	     * @param expression Expression to validate.
	     * @param minArity Minimum number of children.
	     * @param maxArity Maximum number of children.
	     * @param returnType Allowed return types for children.
	     * If a child has a return type of Object then validation will happen at runtime.
	     */value:function validateArityAndAnyType(expression,minArity,maxArity){var returnType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:returnType_1.ReturnType.Object;if(expression.children.length<minArity){throw new Error(expression+' should have at least '+minArity+' children.');}if(expression.children.length>maxArity){throw new Error(expression+' can\'t have more than '+maxArity+' children.');}if((returnType&returnType_1.ReturnType.Object)===0){var _iteratorNormalCompletion22=true;var _didIteratorError22=false;var _iteratorError22=undefined;try{for(var _iterator22=expression.children[Symbol.iterator](),_step22;!(_iteratorNormalCompletion22=(_step22=_iterator22.next()).done);_iteratorNormalCompletion22=true){var child=_step22.value;if((child.returnType&returnType_1.ReturnType.Object)===0&&(returnType&child.returnType)===0){throw new Error(FunctionUtils.buildTypeValidatorError(returnType,child,expression));}}}catch(err){_didIteratorError22=true;_iteratorError22=err;}finally{try{if(!_iteratorNormalCompletion22&&_iterator22.return){_iterator22.return();}}finally{if(_didIteratorError22){throw _iteratorError22;}}}}}/**
	     * Validate the number and type of arguments to a function.
	     * @param expression Expression to validate.
	     * @param optional Optional types in order.
	     * @param types Expected types in order.
	     */},{key:'validateOrder',value:function validateOrder(expression,optional){if(optional===undefined){optional=[];}for(var _len6=arguments.length,types=Array(_len6>2?_len6-2:0),_key7=2;_key7<_len6;_key7++){types[_key7-2]=arguments[_key7];}if(expression.children.length<types.length||expression.children.length>types.length+optional.length){throw new Error(optional.length===0?expression+' should have '+types.length+' children.':expression+' should have between '+types.length+' and '+(types.length+optional.length)+' children.');}for(var i=0;i<types.length;i++){var child=expression.children[i];var type=types[i];if((type&returnType_1.ReturnType.Object)==0&&(child.returnType&returnType_1.ReturnType.Object)==0&&(type&child.returnType)==0){throw new Error(FunctionUtils.buildTypeValidatorError(type,child,expression));}}for(var _i2=0;_i2<optional.length;_i2++){var ic=_i2+types.length;if(ic>=expression.children.length){break;}var _child=expression.children[ic];var _type=optional[_i2];if((_type&returnType_1.ReturnType.Object)==0&&(_child.returnType&returnType_1.ReturnType.Object)==0&&(_type&_child.returnType)==0){throw new Error(FunctionUtils.buildTypeValidatorError(_type,_child,expression));}}}/**
	     * Validate at least 1 argument of any type.
	     * @param expression Expression to validate.
	     */},{key:'validateAtLeastOne',value:function validateAtLeastOne(expression){FunctionUtils.validateArityAndAnyType(expression,1,Number.MAX_SAFE_INTEGER);}/**
	     * Validate 1 or more numeric arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateNumber',value:function validateNumber(expression){FunctionUtils.validateArityAndAnyType(expression,1,Number.MAX_SAFE_INTEGER,returnType_1.ReturnType.Number);}/**
	     * Validate 1 or more string arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateString',value:function validateString(expression){FunctionUtils.validateArityAndAnyType(expression,1,Number.MAX_SAFE_INTEGER,returnType_1.ReturnType.String);}/**
	     * Validate there are two children.
	     * @param expression Expression to validate.
	     */},{key:'validateBinary',value:function validateBinary(expression){FunctionUtils.validateArityAndAnyType(expression,2,2);}/**
	     * Validate 2 numeric arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateBinaryNumber',value:function validateBinaryNumber(expression){FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.Number);}/**
	     * Validate 1 or 2 numeric arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateUnaryOrBinaryNumber',value:function validateUnaryOrBinaryNumber(expression){FunctionUtils.validateArityAndAnyType(expression,1,2,returnType_1.ReturnType.Number);}/**
	     * Validate 2 or more than 2 numeric arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateTwoOrMoreThanTwoNumbers',value:function validateTwoOrMoreThanTwoNumbers(expression){FunctionUtils.validateArityAndAnyType(expression,2,Number.MAX_VALUE,returnType_1.ReturnType.Number);}/**
	     * Validate there are 2 numeric or string arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateBinaryNumberOrString',value:function validateBinaryNumberOrString(expression){FunctionUtils.validateArityAndAnyType(expression,2,2,returnType_1.ReturnType.Number|returnType_1.ReturnType.String);}/**
	     * Validate there is a single argument.
	     * @param expression Expression to validate.
	     */},{key:'validateUnary',value:function validateUnary(expression){FunctionUtils.validateArityAndAnyType(expression,1,1);}/**
	     * Validate there is a single argument.
	     * @param expression Expression to validate.
	     */},{key:'validateUnaryNumber',value:function validateUnaryNumber(expression){FunctionUtils.validateArityAndAnyType(expression,1,1,returnType_1.ReturnType.Number);}/**
	     * Validate there is a single string argument.
	     * @param expression Expression to validate.
	     */},{key:'validateUnaryString',value:function validateUnaryString(expression){FunctionUtils.validateArityAndAnyType(expression,1,1,returnType_1.ReturnType.String);}/**
	     * Validate there is one or two string arguments.
	     * @param expression Expression to validate.
	     */},{key:'validateUnaryOrBinaryString',value:function validateUnaryOrBinaryString(expression){FunctionUtils.validateArityAndAnyType(expression,1,2,returnType_1.ReturnType.String);}/**
	     * Validate there is a single boolean argument.
	     * @param expression Expression to validate.
	     */},{key:'validateUnaryBoolean',value:function validateUnaryBoolean(expression){FunctionUtils.validateOrder(expression,undefined,returnType_1.ReturnType.Boolean);}/**
	     * Verify value is numeric.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyNumber',value:function verifyNumber(value,expression,_){var error=void 0;if(!FunctionUtils.isNumber(value)){error=expression+' is not a number.';}return error;}/**
	     * Verify value is numeric.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyNumberOrNumericList',value:function verifyNumberOrNumericList(value,expression,_){var error=void 0;if(FunctionUtils.isNumber(value)){return error;}if(!Array.isArray(value)){error=expression+' is neither a list nor a number.';}else {var _iteratorNormalCompletion23=true;var _didIteratorError23=false;var _iteratorError23=undefined;try{for(var _iterator23=value[Symbol.iterator](),_step23;!(_iteratorNormalCompletion23=(_step23=_iterator23.next()).done);_iteratorNormalCompletion23=true){var elt=_step23.value;if(!FunctionUtils.isNumber(elt)){error=elt+' is not a number in '+expression+'.';break;}}}catch(err){_didIteratorError23=true;_iteratorError23=err;}finally{try{if(!_iteratorNormalCompletion23&&_iterator23.return){_iterator23.return();}}finally{if(_didIteratorError23){throw _iteratorError23;}}}}return error;}/**
	     * Verify value is numeric list.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyNumericList',value:function verifyNumericList(value,expression,_){var error=void 0;if(!Array.isArray(value)){error=expression+' is not a list.';}else {var _iteratorNormalCompletion24=true;var _didIteratorError24=false;var _iteratorError24=undefined;try{for(var _iterator24=value[Symbol.iterator](),_step24;!(_iteratorNormalCompletion24=(_step24=_iterator24.next()).done);_iteratorNormalCompletion24=true){var elt=_step24.value;if(!FunctionUtils.isNumber(elt)){error=elt+' is not a number in '+expression+'.';break;}}}catch(err){_didIteratorError24=true;_iteratorError24=err;}finally{try{if(!_iteratorNormalCompletion24&&_iterator24.return){_iterator24.return();}}finally{if(_didIteratorError24){throw _iteratorError24;}}}}return error;}/**
	     * Verify value contains elements.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyContainer',value:function verifyContainer(value,expression,_){var error=void 0;if(!(typeof value==='string')&&!Array.isArray(value)&&!(value instanceof Map)&&!((typeof value==='undefined'?'undefined':_typeof(value))==='object')){error=expression+' must be a string, list, map or object.';}return error;}/**
	     * Verify value is not null or undefined.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if valid.
	     */},{key:'verifyNotNull',value:function verifyNotNull(value,expression,_){var error=void 0;if(value===undefined||value===null){error=expression+' is null.';}return error;}/**
	     * Verify value is an integer.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyInteger',value:function verifyInteger(value,expression,_){var error=void 0;if(!Number.isInteger(value)){error=expression+' is not a integer.';}return error;}/**
	     * Verify value is an list.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyList',value:function verifyList(value,expression){var error=void 0;if(!Array.isArray(value)){error=expression+' is not a list or array.';}return error;}/**
	     * Verify value is a string.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyString',value:function verifyString(value,expression,_){var error=void 0;if(typeof value!=='string'){error=expression+' is not a string.';}return error;}/**
	     * Verify an object is neither a string nor null.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyStringOrNull',value:function verifyStringOrNull(value,expression,_){var error=void 0;if(typeof value!=='string'&&value!==undefined){error=expression+' is neither a string nor a null object.';}return error;}/**
	     * Verify value is a number or string or null.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyNumberOrStringOrNull',value:function verifyNumberOrStringOrNull(value,expression,_){var error=void 0;if(typeof value!=='string'&&value!==undefined&&!FunctionUtils.isNumber(value)){error=expression+' is neither a number nor string';}return error;}/**
	     * Verify value is a number or string.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyNumberOrString',value:function verifyNumberOrString(value,expression,_){var error=void 0;if(value===undefined||!FunctionUtils.isNumber(value)&&typeof value!=='string'){error=expression+' is not string or number.';}return error;}/**
	     * Verify value is boolean.
	     * @param value Value to check.
	     * @param expression Expression that led to value.
	     * @returns Error or undefined if invalid.
	     */},{key:'verifyBoolean',value:function verifyBoolean(value,expression,_){var error=void 0;if(typeof value!=='boolean'){error=expression+' is not a boolean.';}return error;}/**
	     * Evaluate expression children and return them.
	     * @param expression Expression with children.
	     * @param state Global state.
	     * @param verify Optional function to verify each child's result.
	     * @returns List of child values or error message.
	     */},{key:'evaluateChildren',value:function evaluateChildren(expression,state,options,verify){var args=[];var value=void 0;var error=void 0;var pos=0;var _iteratorNormalCompletion25=true;var _didIteratorError25=false;var _iteratorError25=undefined;try{for(var _iterator25=expression.children[Symbol.iterator](),_step25;!(_iteratorNormalCompletion25=(_step25=_iterator25.next()).done);_iteratorNormalCompletion25=true){var child=_step25.value;var _child$tryEvaluate3=child.tryEvaluate(state,options);value=_child$tryEvaluate3.value;error=_child$tryEvaluate3.error;if(error){break;}if(verify!==undefined){error=verify(value,child,pos);}if(error){break;}args.push(value);++pos;}}catch(err){_didIteratorError25=true;_iteratorError25=err;}finally{try{if(!_iteratorNormalCompletion25&&_iterator25.return){_iterator25.return();}}finally{if(_didIteratorError25){throw _iteratorError25;}}}return {args:args,error:error};}/**
	     * Generate an expression delegate that applies function after verifying all children.
	     * @param func Function to apply.
	     * @param verify Function to check each arg for validity.
	     * @returns Delegate for evaluating an expression.
	     */},{key:'apply',value:function apply(func,verify){return function(expression,state,options){var value=void 0;var _FunctionUtils$evalua=FunctionUtils.evaluateChildren(expression,state,options,verify),args=_FunctionUtils$evalua.args,childrenError=_FunctionUtils$evalua.error;var error=childrenError;if(!error){try{value=func(args);}catch(e){error=e.message;}}return {value:value,error:error};};}/**
	     * Generate an expression delegate that applies function after verifying all children.
	     * @param func Function to apply.
	     * @param verify Function to check each arg for validity.
	     * @returns Delegate for evaluating an expression.
	     */},{key:'applyWithError',value:function applyWithError(func,verify){return function(expression,state,options){var value=void 0;var _FunctionUtils$evalua2=FunctionUtils.evaluateChildren(expression,state,options,verify),args=_FunctionUtils$evalua2.args,childrenError=_FunctionUtils$evalua2.error;var error=childrenError;if(!error){try{var _func=func(args);value=_func.value;error=_func.error;}catch(e){error=e.message;}}return {value:value,error:error};};}/**
	     * Generate an expression delegate that applies function after verifying all children.
	     * @param func Function to apply.
	     * @param verify Function to check each arg for validity.
	     * @returns Delegate for evaluating an expression.
	     */},{key:'applyWithOptionsAndError',value:function applyWithOptionsAndError(func,verify){return function(expression,state,options){var value=void 0;var error=void 0;var args=void 0;var _FunctionUtils$evalua3=FunctionUtils.evaluateChildren(expression,state,options,verify);args=_FunctionUtils$evalua3.args;error=_FunctionUtils$evalua3.error;if(!error){try{var _func2=func(args,options);value=_func2.value;error=_func2.error;}catch(e){error=e.message;}}return {value:value,error:error};};}/**
	     * Generate an expression delegate that applies function on the accumulated value after verifying all children.
	     * @param func Function to apply.
	     * @param verify Function to check each arg for validity.
	     * @returns Delegate for evaluating an expression.
	     */},{key:'applySequence',value:function applySequence(func,verify){return FunctionUtils.apply(function(args){var binaryArgs=[undefined,undefined];var soFar=args[0];for(var i=1;i<args.length;i++){binaryArgs[0]=soFar;binaryArgs[1]=args[i];soFar=func(binaryArgs);}return soFar;},verify);}/**
	     * Generate an expression delegate that applies function on the accumulated value after verifying all children.
	     * @param func Function to apply.
	     * @param verify Function to check each arg for validity.
	     * @returns Delegate for evaluating an expression.
	     */},{key:'applySequenceWithError',value:function applySequenceWithError(func,verify){return FunctionUtils.applyWithError(function(args){var binaryArgs=[undefined,undefined];var soFar=args[0];var value=void 0;var error=void 0;for(var i=1;i<args.length;i++){binaryArgs[0]=soFar;binaryArgs[1]=args[i];var _func3=func(binaryArgs);value=_func3.value;error=_func3.error;if(error){return {value:value,error:error};}else {soFar=value;}}return {value:soFar,error:undefined};},verify);}/**
	     *
	     * @param args An array of arguments.
	     * @param locale A locale string
	     * @param maxArgsLength The max length of a given function.
	     */},{key:'determineLocale',value:function determineLocale(args,maxArgsLength){var locale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en-us';if(args.length===maxArgsLength&&typeof args[maxArgsLength-1]==='string'){locale=args[maxArgsLength-1];}return locale;}/**
	     * Timestamp formatter, convert C# datetime to moment js format.
	     * @param formatter C# datetime format
	     */},{key:'timestampFormatter',value:function timestampFormatter(formatter){var result=formatter;try{result=datetimeFormatConverter_1.convertCSharpDateTimeToMomentJS(formatter);}catch(e){// do nothing
	}return result;}/**
	     * State object for resolving memory paths.
	     * @param expression Expression.
	     * @param state Scope.
	     * @param options Options used in evaluation.
	     * @returns Return the accumulated path and the expression left unable to accumulate.
	     */},{key:'tryAccumulatePath',value:function tryAccumulatePath(expression,state,options){var path='';var left=expression;while(left!==undefined){if(left.type===expressionType_1.ExpressionType.Accessor){path=left.children[0].value+'.'+path;left=left.children.length===2?left.children[1]:undefined;}else if(left.type===expressionType_1.ExpressionType.Element){var _left$children$1$tryE=left.children[1].tryEvaluate(state,options),value=_left$children$1$tryE.value,error=_left$children$1$tryE.error;if(error!==undefined){return {path:undefined,left:undefined,error:error};}if(FunctionUtils.isNumber(parseInt(value))){path='['+value+'].'+path;}else if(typeof value==='string'){path='[\''+value+'\'].'+path;}else {return {path:undefined,left:undefined,error:left.children[1].toString()+' doesn\'t return an int or string'};}left=left.children[0];}else {break;}}// make sure we generated a valid path
	path=path.replace(/(\.*$)/g,'').replace(/(\.\[)/g,'[');if(path===''){path=undefined;}return {path:path,left:left,error:undefined};}/**
	     * Is number helper function.
	     * @param instance Input.
	     * @returns True if the input is a number.
	     */},{key:'isNumber',value:function isNumber(instance){return instance!==undefined&&instance!==null&&typeof instance==='number'&&!Number.isNaN(instance);}/**
	     * @private
	     */},{key:'buildTypeValidatorError',value:function buildTypeValidatorError(returnType,childExpr,expr){var names=Object.keys(returnType_1.ReturnType).filter(function(x){return !(parseInt(x)>=0);});var types=[];var _iteratorNormalCompletion26=true;var _didIteratorError26=false;var _iteratorError26=undefined;try{for(var _iterator26=names[Symbol.iterator](),_step26;!(_iteratorNormalCompletion26=(_step26=_iterator26.next()).done);_iteratorNormalCompletion26=true){var name=_step26.value;var value=returnType_1.ReturnType[name];if((returnType&value)!==0){types.push(name);}}}catch(err){_didIteratorError26=true;_iteratorError26=err;}finally{try{if(!_iteratorNormalCompletion26&&_iterator26.return){_iterator26.return();}}finally{if(_didIteratorError26){throw _iteratorError26;}}}if(types.length===1){return childExpr+' is not a '+types[0]+' expression in '+expr+'.';}else {var typesStr=types.join(', ');return childExpr+' in '+expr+' is not any of ['+typesStr+'].';}}}]);return FunctionUtils;}();/**
	 * The default date time format string.
	 */FunctionUtils.DefaultDateTimeFormat='YYYY-MM-DDTHH:mm:ss.SSS[Z]';exports.FunctionUtils=FunctionUtils;},{"./datetimeFormatConverter":169,"./expressionType":183,"./returnType":204}],188:[function(require,module,exports){var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});var ATNDeserializer_1=require("antlr4ts/atn/ATNDeserializer");var Lexer_1=require("antlr4ts/Lexer");var LexerATNSimulator_1=require("antlr4ts/atn/LexerATNSimulator");var VocabularyImpl_1=require("antlr4ts/VocabularyImpl");var Utils=__importStar(require("antlr4ts/misc/Utils"));var CommonRegexLexer=function(_Lexer_1$Lexer){inherits(CommonRegexLexer,_Lexer_1$Lexer);// tslint:enable:no-trailing-whitespace
	function CommonRegexLexer(input){classCallCheck(this,CommonRegexLexer);var _this167=possibleConstructorReturn(this,(CommonRegexLexer.__proto__||Object.getPrototypeOf(CommonRegexLexer)).call(this,input));_this167._interp=new LexerATNSimulator_1.LexerATNSimulator(CommonRegexLexer._ATN,_this167);return _this167;}// @Override
	// @NotNull
	createClass(CommonRegexLexer,[{key:'vocabulary',get:function get(){return CommonRegexLexer.VOCABULARY;}// @Override
	},{key:'grammarFileName',get:function get(){return "CommonRegex.g4";}// @Override
	},{key:'ruleNames',get:function get(){return CommonRegexLexer.ruleNames;}// @Override
	},{key:'serializedATN',get:function get(){return CommonRegexLexer._serializedATN;}// @Override
	},{key:'channelNames',get:function get(){return CommonRegexLexer.channelNames;}// @Override
	},{key:'modeNames',get:function get(){return CommonRegexLexer.modeNames;}}],[{key:'_ATN',get:function get(){if(!CommonRegexLexer.__ATN){CommonRegexLexer.__ATN=new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(CommonRegexLexer._serializedATN));}return CommonRegexLexer.__ATN;}}]);return CommonRegexLexer;}(Lexer_1.Lexer);CommonRegexLexer.Quoted=1;CommonRegexLexer.BlockQuoted=2;CommonRegexLexer.BellChar=3;CommonRegexLexer.ControlChar=4;CommonRegexLexer.EscapeChar=5;CommonRegexLexer.FormFeed=6;CommonRegexLexer.NewLine=7;CommonRegexLexer.CarriageReturn=8;CommonRegexLexer.Tab=9;CommonRegexLexer.Backslash=10;CommonRegexLexer.HexChar=11;CommonRegexLexer.Dot=12;CommonRegexLexer.DecimalDigit=13;CommonRegexLexer.NotDecimalDigit=14;CommonRegexLexer.CharWithProperty=15;CommonRegexLexer.CharWithoutProperty=16;CommonRegexLexer.WhiteSpace=17;CommonRegexLexer.NotWhiteSpace=18;CommonRegexLexer.WordChar=19;CommonRegexLexer.NotWordChar=20;CommonRegexLexer.CharacterClassStart=21;CommonRegexLexer.CharacterClassEnd=22;CommonRegexLexer.Caret=23;CommonRegexLexer.Hyphen=24;CommonRegexLexer.QuestionMark=25;CommonRegexLexer.Plus=26;CommonRegexLexer.Star=27;CommonRegexLexer.OpenBrace=28;CommonRegexLexer.CloseBrace=29;CommonRegexLexer.Comma=30;CommonRegexLexer.EndOfSubject=31;CommonRegexLexer.Pipe=32;CommonRegexLexer.OpenParen=33;CommonRegexLexer.CloseParen=34;CommonRegexLexer.LessThan=35;CommonRegexLexer.GreaterThan=36;CommonRegexLexer.SingleQuote=37;CommonRegexLexer.Underscore=38;CommonRegexLexer.Colon=39;CommonRegexLexer.Hash=40;CommonRegexLexer.Equals=41;CommonRegexLexer.Exclamation=42;CommonRegexLexer.Ampersand=43;CommonRegexLexer.ALC=44;CommonRegexLexer.BLC=45;CommonRegexLexer.CLC=46;CommonRegexLexer.DLC=47;CommonRegexLexer.ELC=48;CommonRegexLexer.FLC=49;CommonRegexLexer.GLC=50;CommonRegexLexer.HLC=51;CommonRegexLexer.ILC=52;CommonRegexLexer.JLC=53;CommonRegexLexer.KLC=54;CommonRegexLexer.LLC=55;CommonRegexLexer.MLC=56;CommonRegexLexer.NLC=57;CommonRegexLexer.OLC=58;CommonRegexLexer.PLC=59;CommonRegexLexer.QLC=60;CommonRegexLexer.RLC=61;CommonRegexLexer.SLC=62;CommonRegexLexer.TLC=63;CommonRegexLexer.ULC=64;CommonRegexLexer.VLC=65;CommonRegexLexer.WLC=66;CommonRegexLexer.XLC=67;CommonRegexLexer.YLC=68;CommonRegexLexer.ZLC=69;CommonRegexLexer.AUC=70;CommonRegexLexer.BUC=71;CommonRegexLexer.CUC=72;CommonRegexLexer.DUC=73;CommonRegexLexer.EUC=74;CommonRegexLexer.FUC=75;CommonRegexLexer.GUC=76;CommonRegexLexer.HUC=77;CommonRegexLexer.IUC=78;CommonRegexLexer.JUC=79;CommonRegexLexer.KUC=80;CommonRegexLexer.LUC=81;CommonRegexLexer.MUC=82;CommonRegexLexer.NUC=83;CommonRegexLexer.OUC=84;CommonRegexLexer.PUC=85;CommonRegexLexer.QUC=86;CommonRegexLexer.RUC=87;CommonRegexLexer.SUC=88;CommonRegexLexer.TUC=89;CommonRegexLexer.UUC=90;CommonRegexLexer.VUC=91;CommonRegexLexer.WUC=92;CommonRegexLexer.XUC=93;CommonRegexLexer.YUC=94;CommonRegexLexer.ZUC=95;CommonRegexLexer.D1=96;CommonRegexLexer.D2=97;CommonRegexLexer.D3=98;CommonRegexLexer.D4=99;CommonRegexLexer.D5=100;CommonRegexLexer.D6=101;CommonRegexLexer.D7=102;CommonRegexLexer.D8=103;CommonRegexLexer.D9=104;CommonRegexLexer.D0=105;CommonRegexLexer.OtherChar=106;// tslint:disable:no-trailing-whitespace
	CommonRegexLexer.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];// tslint:disable:no-trailing-whitespace
	CommonRegexLexer.modeNames=["DEFAULT_MODE"];CommonRegexLexer.ruleNames=["Quoted","BlockQuoted","BellChar","ControlChar","EscapeChar","FormFeed","NewLine","CarriageReturn","Tab","Backslash","HexChar","Dot","DecimalDigit","NotDecimalDigit","CharWithProperty","CharWithoutProperty","WhiteSpace","NotWhiteSpace","WordChar","NotWordChar","CharacterClassStart","CharacterClassEnd","Caret","Hyphen","QuestionMark","Plus","Star","OpenBrace","CloseBrace","Comma","EndOfSubject","Pipe","OpenParen","CloseParen","LessThan","GreaterThan","SingleQuote","Underscore","Colon","Hash","Equals","Exclamation","Ampersand","ALC","BLC","CLC","DLC","ELC","FLC","GLC","HLC","ILC","JLC","KLC","LLC","MLC","NLC","OLC","PLC","QLC","RLC","SLC","TLC","ULC","VLC","WLC","XLC","YLC","ZLC","AUC","BUC","CUC","DUC","EUC","FUC","GUC","HUC","IUC","JUC","KUC","LUC","MUC","NUC","OUC","PUC","QUC","RUC","SUC","TUC","UUC","VUC","WUC","XUC","YUC","ZUC","D1","D2","D3","D4","D5","D6","D7","D8","D9","D0","OtherChar","UnderscoreAlphaNumerics","AlphaNumerics","AlphaNumeric","NonAlphaNumeric","HexDigit","ASCII"];CommonRegexLexer._LITERAL_NAMES=[undefined,undefined,undefined,"'\\'","'\\'","'\\'","'\\'","'\\'","'\\'","'\\'","'\\'",undefined,"'.'","'\\'","'\\'",undefined,undefined,"'\\'","'\\'","'\\'","'\\'","'['","']'","'^'","'-'","'?'","'+'","'*'","'{'","'}'","','","'$'","'|'","'('","')'","'<'","'>'","'''","'_'","':'","'#'","'='","'!'","'&'","'a'","'b'","'c'","'d'","'e'","'f'","'g'","'h'","'i'","'j'","'k'","'l'","'m'","'n'","'o'","'p'","'q'","'r'","'s'","'t'","'u'","'v'","'w'","'x'","'y'","'z'","'A'","'B'","'C'","'D'","'E'","'F'","'G'","'H'","'I'","'J'","'K'","'L'","'M'","'N'","'O'","'P'","'Q'","'R'","'S'","'T'","'U'","'V'","'W'","'X'","'Y'","'Z'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","'0'"];CommonRegexLexer._SYMBOLIC_NAMES=[undefined,"Quoted","BlockQuoted","BellChar","ControlChar","EscapeChar","FormFeed","NewLine","CarriageReturn","Tab","Backslash","HexChar","Dot","DecimalDigit","NotDecimalDigit","CharWithProperty","CharWithoutProperty","WhiteSpace","NotWhiteSpace","WordChar","NotWordChar","CharacterClassStart","CharacterClassEnd","Caret","Hyphen","QuestionMark","Plus","Star","OpenBrace","CloseBrace","Comma","EndOfSubject","Pipe","OpenParen","CloseParen","LessThan","GreaterThan","SingleQuote","Underscore","Colon","Hash","Equals","Exclamation","Ampersand","ALC","BLC","CLC","DLC","ELC","FLC","GLC","HLC","ILC","JLC","KLC","LLC","MLC","NLC","OLC","PLC","QLC","RLC","SLC","TLC","ULC","VLC","WLC","XLC","YLC","ZLC","AUC","BUC","CUC","DUC","EUC","FUC","GUC","HUC","IUC","JUC","KUC","LUC","MUC","NUC","OUC","PUC","QUC","RUC","SUC","TUC","UUC","VUC","WUC","XUC","YUC","ZUC","D1","D2","D3","D4","D5","D6","D7","D8","D9","D0","OtherChar"];CommonRegexLexer.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(CommonRegexLexer._LITERAL_NAMES,CommonRegexLexer._SYMBOLIC_NAMES,[]);CommonRegexLexer._serializedATN='\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02l\u01FC\b\x01'+"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t"+"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04"+"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04"+"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04"+"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04"+"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04"+"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04"+"X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t"+"`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04"+"i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04p\tp\x04q\tq\x03"+"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03\xEB\n\x03"+"\f\x03\x0E\x03\xEE\v\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04"+"\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07"+"\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03"+'\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x06\f\u0114\n'+'\f\r\f\x0E\f\u0115\x03\f\x03\f\x05\f\u011A\n\f\x03\r\x03\r\x03\x0E\x03'+"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03"+"\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03"+"\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03"+"\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03"+"\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03"+"\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\""+"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03"+")\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x03"+"0\x030\x031\x031\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x03"+"7\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03"+">\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03"+"E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x03I\x03J\x03J\x03K\x03K\x03"+"L\x03L\x03M\x03M\x03N\x03N\x03O\x03O\x03P\x03P\x03Q\x03Q\x03R\x03R\x03"+"S\x03S\x03T\x03T\x03U\x03U\x03V\x03V\x03W\x03W\x03X\x03X\x03Y\x03Y\x03"+"Z\x03Z\x03[\x03[\x03\\\x03\\\x03]\x03]\x03^\x03^\x03_\x03_\x03`\x03`\x03"+"a\x03a\x03b\x03b\x03c\x03c\x03d\x03d\x03e\x03e\x03f\x03f\x03g\x03g\x03"+'h\x03h\x03i\x03i\x03j\x03j\x03k\x03k\x03l\x03l\x06l\u01EC\nl\rl\x0El\u01ED'+'\x03m\x06m\u01F1\nm\rm\x0Em\u01F2\x03n\x03n\x03o\x03o\x03p\x03p\x03q\x03'+"q\x03\xEC\x02\x02r\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02"+"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02"+"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'"+"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C"+"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02"+"&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a"+"\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02"+"=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02"+"F\x8B\x02G\x8D\x02H\x8F\x02I\x91\x02J\x93\x02K\x95\x02L\x97\x02M\x99\x02"+"N\x9B\x02O\x9D\x02P\x9F\x02Q\xA1\x02R\xA3\x02S\xA5\x02T\xA7\x02U\xA9\x02"+"V\xAB\x02W\xAD\x02X\xAF\x02Y\xB1\x02Z\xB3\x02[\xB5\x02\\\xB7\x02]\xB9"+"\x02^\xBB\x02_\xBD\x02`\xBF\x02a\xC1\x02b\xC3\x02c\xC5\x02d\xC7\x02e\xC9"+"\x02f\xCB\x02g\xCD\x02h\xCF\x02i\xD1\x02j\xD3\x02k\xD5\x02l\xD7\x02\x02"+"\xD9\x02\x02\xDB\x02\x02\xDD\x02\x02\xDF\x02\x02\xE1\x02\x02\x03\x02\x05"+'\x05\x022;C\\c|\x05\x022;CHch\x03\x02\x02\x81\x02\u01FB\x02\x03\x03\x02'+"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02"+"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02"+"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02"+"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02"+"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02"+"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02"+")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02"+"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02"+"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03"+"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02"+"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02"+"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02"+"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02"+"\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03"+"\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02"+"\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02"+"m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02"+"\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02"+"\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02"+"\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02"+"\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02"+"\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02"+"\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\x97\x03\x02\x02\x02\x02"+"\x99\x03\x02\x02\x02\x02\x9B\x03\x02\x02\x02\x02\x9D\x03\x02\x02\x02\x02"+"\x9F\x03\x02\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03\x02\x02\x02\x02"+"\xA5\x03\x02\x02\x02\x02\xA7\x03\x02\x02\x02\x02\xA9\x03\x02\x02\x02\x02"+"\xAB\x03\x02\x02\x02\x02\xAD\x03\x02\x02\x02\x02\xAF\x03\x02\x02\x02\x02"+"\xB1\x03\x02\x02\x02\x02\xB3\x03\x02\x02\x02\x02\xB5\x03\x02\x02\x02\x02"+"\xB7\x03\x02\x02\x02\x02\xB9\x03\x02\x02\x02\x02\xBB\x03\x02\x02\x02\x02"+"\xBD\x03\x02\x02\x02\x02\xBF\x03\x02\x02\x02\x02\xC1\x03\x02\x02\x02\x02"+"\xC3\x03\x02\x02\x02\x02\xC5\x03\x02\x02\x02\x02\xC7\x03\x02\x02\x02\x02"+"\xC9\x03\x02\x02\x02\x02\xCB\x03\x02\x02\x02\x02\xCD\x03\x02\x02\x02\x02"+"\xCF\x03\x02\x02\x02\x02\xD1\x03\x02\x02\x02\x02\xD3\x03\x02\x02\x02\x02"+"\xD5\x03\x02\x02\x02\x03\xE3\x03\x02\x02\x02\x05\xE6\x03\x02\x02\x02\x07"+"\xF2\x03\x02\x02\x02\t\xF5\x03\x02\x02\x02\v\xF8\x03\x02\x02\x02\r\xFB"+'\x03\x02\x02\x02\x0F\xFE\x03\x02\x02\x02\x11\u0101\x03\x02\x02\x02\x13'+'\u0104\x03\x02\x02\x02\x15\u0107\x03\x02\x02\x02\x17\u0109\x03\x02\x02'+'\x02\x19\u011B\x03\x02\x02\x02\x1B\u011D\x03\x02\x02\x02\x1D\u0120\x03'+'\x02\x02\x02\x1F\u0123\x03\x02\x02\x02!\u012A\x03\x02\x02\x02#\u0131\x03'+'\x02\x02\x02%\u0134\x03\x02\x02\x02\'\u0137\x03\x02\x02\x02)\u013A\x03'+'\x02\x02\x02+\u013D\x03\x02\x02\x02-\u013F\x03\x02\x02\x02/\u0141\x03'+'\x02\x02\x021\u0143\x03\x02\x02\x023\u0145\x03\x02\x02\x025\u0147\x03'+'\x02\x02\x027\u0149\x03\x02\x02\x029\u014B\x03\x02\x02\x02;\u014D\x03'+'\x02\x02\x02=\u014F\x03\x02\x02\x02?\u0151\x03\x02\x02\x02A\u0153\x03'+'\x02\x02\x02C\u0155\x03\x02\x02\x02E\u0157\x03\x02\x02\x02G\u0159\x03'+'\x02\x02\x02I\u015B\x03\x02\x02\x02K\u015D\x03\x02\x02\x02M\u015F\x03'+'\x02\x02\x02O\u0161\x03\x02\x02\x02Q\u0163\x03\x02\x02\x02S\u0165\x03'+'\x02\x02\x02U\u0167\x03\x02\x02\x02W\u0169\x03\x02\x02\x02Y\u016B\x03'+'\x02\x02\x02[\u016D\x03\x02\x02\x02]\u016F\x03\x02\x02\x02_\u0171\x03'+'\x02\x02\x02a\u0173\x03\x02\x02\x02c\u0175\x03\x02\x02\x02e\u0177\x03'+'\x02\x02\x02g\u0179\x03\x02\x02\x02i\u017B\x03\x02\x02\x02k\u017D\x03'+'\x02\x02\x02m\u017F\x03\x02\x02\x02o\u0181\x03\x02\x02\x02q\u0183\x03'+'\x02\x02\x02s\u0185\x03\x02\x02\x02u\u0187\x03\x02\x02\x02w\u0189\x03'+'\x02\x02\x02y\u018B\x03\x02\x02\x02{\u018D\x03\x02\x02\x02}\u018F\x03'+'\x02\x02\x02\x7F\u0191\x03\x02\x02\x02\x81\u0193\x03\x02\x02\x02\x83\u0195'+'\x03\x02\x02\x02\x85\u0197\x03\x02\x02\x02\x87\u0199\x03\x02\x02\x02\x89'+'\u019B\x03\x02\x02\x02\x8B\u019D\x03\x02\x02\x02\x8D\u019F\x03\x02\x02'+'\x02\x8F\u01A1\x03\x02\x02\x02\x91\u01A3\x03\x02\x02\x02\x93\u01A5\x03'+'\x02\x02\x02\x95\u01A7\x03\x02\x02\x02\x97\u01A9\x03\x02\x02\x02\x99\u01AB'+'\x03\x02\x02\x02\x9B\u01AD\x03\x02\x02\x02\x9D\u01AF\x03\x02\x02\x02\x9F'+'\u01B1\x03\x02\x02\x02\xA1\u01B3\x03\x02\x02\x02\xA3\u01B5\x03\x02\x02'+'\x02\xA5\u01B7\x03\x02\x02\x02\xA7\u01B9\x03\x02\x02\x02\xA9\u01BB\x03'+'\x02\x02\x02\xAB\u01BD\x03\x02\x02\x02\xAD\u01BF\x03\x02\x02\x02\xAF\u01C1'+'\x03\x02\x02\x02\xB1\u01C3\x03\x02\x02\x02\xB3\u01C5\x03\x02\x02\x02\xB5'+'\u01C7\x03\x02\x02\x02\xB7\u01C9\x03\x02\x02\x02\xB9\u01CB\x03\x02\x02'+'\x02\xBB\u01CD\x03\x02\x02\x02\xBD\u01CF\x03\x02\x02\x02\xBF\u01D1\x03'+'\x02\x02\x02\xC1\u01D3\x03\x02\x02\x02\xC3\u01D5\x03\x02\x02\x02\xC5\u01D7'+'\x03\x02\x02\x02\xC7\u01D9\x03\x02\x02\x02\xC9\u01DB\x03\x02\x02\x02\xCB'+'\u01DD\x03\x02\x02\x02\xCD\u01DF\x03\x02\x02\x02\xCF\u01E1\x03\x02\x02'+'\x02\xD1\u01E3\x03\x02\x02\x02\xD3\u01E5\x03\x02\x02\x02\xD5\u01E7\x03'+'\x02\x02\x02\xD7\u01EB\x03\x02\x02\x02\xD9\u01F0\x03\x02\x02\x02\xDB\u01F4'+'\x03\x02\x02\x02\xDD\u01F6\x03\x02\x02\x02\xDF\u01F8\x03\x02\x02\x02\xE1'+'\u01FA\x03\x02\x02\x02\xE3\xE4\x07^\x02\x02\xE4\xE5\x05\xDDo\x02\xE5\x04'+"\x03\x02\x02\x02\xE6\xE7\x07^\x02\x02\xE7\xE8\x07S\x02\x02\xE8\xEC\x03"+"\x02\x02\x02\xE9\xEB\v\x02\x02\x02\xEA\xE9\x03\x02\x02\x02\xEB\xEE\x03"+"\x02\x02\x02\xEC\xED\x03\x02\x02\x02\xEC\xEA\x03\x02\x02\x02\xED\xEF\x03"+"\x02\x02\x02\xEE\xEC\x03\x02\x02\x02\xEF\xF0\x07^\x02\x02\xF0\xF1\x07"+"G\x02\x02\xF1\x06\x03\x02\x02\x02\xF2\xF3\x07^\x02\x02\xF3\xF4\x07c\x02"+"\x02\xF4\b\x03\x02\x02\x02\xF5\xF6\x07^\x02\x02\xF6\xF7\x07e\x02\x02\xF7"+"\n\x03\x02\x02\x02\xF8\xF9\x07^\x02\x02\xF9\xFA\x07g\x02\x02\xFA\f\x03"+"\x02\x02\x02\xFB\xFC\x07^\x02\x02\xFC\xFD\x07h\x02\x02\xFD\x0E\x03\x02"+'\x02\x02\xFE\xFF\x07^\x02\x02\xFF\u0100\x07p\x02\x02\u0100\x10\x03\x02'+'\x02\x02\u0101\u0102\x07^\x02\x02\u0102\u0103\x07t\x02\x02\u0103\x12\x03'+'\x02\x02\x02\u0104\u0105\x07^\x02\x02\u0105\u0106\x07v\x02\x02\u0106\x14'+'\x03\x02\x02\x02\u0107\u0108\x07^\x02\x02\u0108\x16\x03\x02\x02\x02\u0109'+'\u010A\x07^\x02\x02\u010A\u010B\x07z\x02\x02\u010B\u0119\x03\x02\x02\x02'+'\u010C\u010D\x05\xDFp\x02\u010D\u010E\x05\xDFp\x02\u010E\u011A\x03\x02'+'\x02\x02\u010F\u0110\x07}\x02\x02\u0110\u0111\x05\xDFp\x02\u0111\u0113'+'\x05\xDFp\x02\u0112\u0114\x05\xDFp\x02\u0113\u0112\x03\x02\x02\x02\u0114'+'\u0115\x03\x02\x02\x02\u0115\u0113\x03\x02\x02\x02\u0115\u0116\x03\x02'+'\x02\x02\u0116\u0117\x03\x02\x02\x02\u0117\u0118\x07\x7F\x02\x02\u0118'+'\u011A\x03\x02\x02\x02\u0119\u010C\x03\x02\x02\x02\u0119\u010F\x03\x02'+'\x02\x02\u011A\x18\x03\x02\x02\x02\u011B\u011C\x070\x02\x02\u011C\x1A'+'\x03\x02\x02\x02\u011D\u011E\x07^\x02\x02\u011E\u011F\x07f\x02\x02\u011F'+'\x1C\x03\x02\x02\x02\u0120\u0121\x07^\x02\x02\u0121\u0122\x07F\x02\x02'+'\u0122\x1E\x03\x02\x02\x02\u0123\u0124\x07^\x02\x02\u0124\u0125\x07r\x02'+'\x02\u0125\u0126\x07}\x02\x02\u0126\u0127\x03\x02\x02\x02\u0127\u0128'+'\x05\xD7l\x02\u0128\u0129\x07\x7F\x02\x02\u0129 \x03\x02\x02\x02\u012A'+'\u012B\x07^\x02\x02\u012B\u012C\x07R\x02\x02\u012C\u012D\x07}\x02\x02'+'\u012D\u012E\x03\x02\x02\x02\u012E\u012F\x05\xD7l\x02\u012F\u0130\x07'+'\x7F\x02\x02\u0130"\x03\x02\x02\x02\u0131\u0132\x07^\x02\x02\u0132\u0133'+'\x07u\x02\x02\u0133$\x03\x02\x02\x02\u0134\u0135\x07^\x02\x02\u0135\u0136'+'\x07U\x02\x02\u0136&\x03\x02\x02\x02\u0137\u0138\x07^\x02\x02\u0138\u0139'+'\x07y\x02\x02\u0139(\x03\x02\x02\x02\u013A\u013B\x07^\x02\x02\u013B\u013C'+'\x07Y\x02\x02\u013C*\x03\x02\x02\x02\u013D\u013E\x07]\x02\x02\u013E,\x03'+'\x02\x02\x02\u013F\u0140\x07_\x02\x02\u0140.\x03\x02\x02\x02\u0141\u0142'+'\x07`\x02\x02\u01420\x03\x02\x02\x02\u0143\u0144\x07/\x02\x02\u01442\x03'+'\x02\x02\x02\u0145\u0146\x07A\x02\x02\u01464\x03\x02\x02\x02\u0147\u0148'+'\x07-\x02\x02\u01486\x03\x02\x02\x02\u0149\u014A\x07,\x02\x02\u014A8\x03'+'\x02\x02\x02\u014B\u014C\x07}\x02\x02\u014C:\x03\x02\x02\x02\u014D\u014E'+'\x07\x7F\x02\x02\u014E<\x03\x02\x02\x02\u014F\u0150\x07.\x02\x02\u0150'+'>\x03\x02\x02\x02\u0151\u0152\x07&\x02\x02\u0152@\x03\x02\x02\x02\u0153'+'\u0154\x07~\x02\x02\u0154B\x03\x02\x02\x02\u0155\u0156\x07*\x02\x02\u0156'+'D\x03\x02\x02\x02\u0157\u0158\x07+\x02\x02\u0158F\x03\x02\x02\x02\u0159'+'\u015A\x07>\x02\x02\u015AH\x03\x02\x02\x02\u015B\u015C\x07@\x02\x02\u015C'+'J\x03\x02\x02\x02\u015D\u015E\x07)\x02\x02\u015EL\x03\x02\x02\x02\u015F'+'\u0160\x07a\x02\x02\u0160N\x03\x02\x02\x02\u0161\u0162\x07<\x02\x02\u0162'+'P\x03\x02\x02\x02\u0163\u0164\x07%\x02\x02\u0164R\x03\x02\x02\x02\u0165'+'\u0166\x07?\x02\x02\u0166T\x03\x02\x02\x02\u0167\u0168\x07#\x02\x02\u0168'+'V\x03\x02\x02\x02\u0169\u016A\x07(\x02\x02\u016AX\x03\x02\x02\x02\u016B'+'\u016C\x07c\x02\x02\u016CZ\x03\x02\x02\x02\u016D\u016E\x07d\x02\x02\u016E'+'\\\x03\x02\x02\x02\u016F\u0170\x07e\x02\x02\u0170^\x03\x02\x02\x02\u0171'+'\u0172\x07f\x02\x02\u0172`\x03\x02\x02\x02\u0173\u0174\x07g\x02\x02\u0174'+'b\x03\x02\x02\x02\u0175\u0176\x07h\x02\x02\u0176d\x03\x02\x02\x02\u0177'+'\u0178\x07i\x02\x02\u0178f\x03\x02\x02\x02\u0179\u017A\x07j\x02\x02\u017A'+'h\x03\x02\x02\x02\u017B\u017C\x07k\x02\x02\u017Cj\x03\x02\x02\x02\u017D'+'\u017E\x07l\x02\x02\u017El\x03\x02\x02\x02\u017F\u0180\x07m\x02\x02\u0180'+'n\x03\x02\x02\x02\u0181\u0182\x07n\x02\x02\u0182p\x03\x02\x02\x02\u0183'+'\u0184\x07o\x02\x02\u0184r\x03\x02\x02\x02\u0185\u0186\x07p\x02\x02\u0186'+'t\x03\x02\x02\x02\u0187\u0188\x07q\x02\x02\u0188v\x03\x02\x02\x02\u0189'+'\u018A\x07r\x02\x02\u018Ax\x03\x02\x02\x02\u018B\u018C\x07s\x02\x02\u018C'+'z\x03\x02\x02\x02\u018D\u018E\x07t\x02\x02\u018E|\x03\x02\x02\x02\u018F'+'\u0190\x07u\x02\x02\u0190~\x03\x02\x02\x02\u0191\u0192\x07v\x02\x02\u0192'+'\x80\x03\x02\x02\x02\u0193\u0194\x07w\x02\x02\u0194\x82\x03\x02\x02\x02'+'\u0195\u0196\x07x\x02\x02\u0196\x84\x03\x02\x02\x02\u0197\u0198\x07y\x02'+'\x02\u0198\x86\x03\x02\x02\x02\u0199\u019A\x07z\x02\x02\u019A\x88\x03'+'\x02\x02\x02\u019B\u019C\x07{\x02\x02\u019C\x8A\x03\x02\x02\x02\u019D'+'\u019E\x07|\x02\x02\u019E\x8C\x03\x02\x02\x02\u019F\u01A0\x07C\x02\x02'+'\u01A0\x8E\x03\x02\x02\x02\u01A1\u01A2\x07D\x02\x02\u01A2\x90\x03\x02'+'\x02\x02\u01A3\u01A4\x07E\x02\x02\u01A4\x92\x03\x02\x02\x02\u01A5\u01A6'+'\x07F\x02\x02\u01A6\x94\x03\x02\x02\x02\u01A7\u01A8\x07G\x02\x02\u01A8'+'\x96\x03\x02\x02\x02\u01A9\u01AA\x07H\x02\x02\u01AA\x98\x03\x02\x02\x02'+'\u01AB\u01AC\x07I\x02\x02\u01AC\x9A\x03\x02\x02\x02\u01AD\u01AE\x07J\x02'+'\x02\u01AE\x9C\x03\x02\x02\x02\u01AF\u01B0\x07K\x02\x02\u01B0\x9E\x03'+'\x02\x02\x02\u01B1\u01B2\x07L\x02\x02\u01B2\xA0\x03\x02\x02\x02\u01B3'+'\u01B4\x07M\x02\x02\u01B4\xA2\x03\x02\x02\x02\u01B5\u01B6\x07N\x02\x02'+'\u01B6\xA4\x03\x02\x02\x02\u01B7\u01B8\x07O\x02\x02\u01B8\xA6\x03\x02'+'\x02\x02\u01B9\u01BA\x07P\x02\x02\u01BA\xA8\x03\x02\x02\x02\u01BB\u01BC'+'\x07Q\x02\x02\u01BC\xAA\x03\x02\x02\x02\u01BD\u01BE\x07R\x02\x02\u01BE'+'\xAC\x03\x02\x02\x02\u01BF\u01C0\x07S\x02\x02\u01C0\xAE\x03\x02\x02\x02'+'\u01C1\u01C2\x07T\x02\x02\u01C2\xB0\x03\x02\x02\x02\u01C3\u01C4\x07U\x02'+'\x02\u01C4\xB2\x03\x02\x02\x02\u01C5\u01C6\x07V\x02\x02\u01C6\xB4\x03'+'\x02\x02\x02\u01C7\u01C8\x07W\x02\x02\u01C8\xB6\x03\x02\x02\x02\u01C9'+'\u01CA\x07X\x02\x02\u01CA\xB8\x03\x02\x02\x02\u01CB\u01CC\x07Y\x02\x02'+'\u01CC\xBA\x03\x02\x02\x02\u01CD\u01CE\x07Z\x02\x02\u01CE\xBC\x03\x02'+'\x02\x02\u01CF\u01D0\x07[\x02\x02\u01D0\xBE\x03\x02\x02\x02\u01D1\u01D2'+'\x07\\\x02\x02\u01D2\xC0\x03\x02\x02\x02\u01D3\u01D4\x073\x02\x02\u01D4'+'\xC2\x03\x02\x02\x02\u01D5\u01D6\x074\x02\x02\u01D6\xC4\x03\x02\x02\x02'+'\u01D7\u01D8\x075\x02\x02\u01D8\xC6\x03\x02\x02\x02\u01D9\u01DA\x076\x02'+'\x02\u01DA\xC8\x03\x02\x02\x02\u01DB\u01DC\x077\x02\x02\u01DC\xCA\x03'+'\x02\x02\x02\u01DD\u01DE\x078\x02\x02\u01DE\xCC\x03\x02\x02\x02\u01DF'+'\u01E0\x079\x02\x02\u01E0\xCE\x03\x02\x02\x02\u01E1\u01E2\x07:\x02\x02'+'\u01E2\xD0\x03\x02\x02\x02\u01E3\u01E4\x07;\x02\x02\u01E4\xD2\x03\x02'+'\x02\x02\u01E5\u01E6\x072\x02\x02\u01E6\xD4\x03\x02\x02\x02\u01E7\u01E8'+'\x0B\x02\x02\x02\u01E8\xD6\x03\x02\x02\x02\u01E9\u01EC\x07a\x02\x02\u01EA'+'\u01EC\x05\xDBn\x02\u01EB\u01E9\x03\x02\x02\x02\u01EB\u01EA\x03\x02\x02'+'\x02\u01EC\u01ED\x03\x02\x02\x02\u01ED\u01EB\x03\x02\x02\x02\u01ED\u01EE'+'\x03\x02\x02\x02\u01EE\xD8\x03\x02\x02\x02\u01EF\u01F1\x05\xDBn\x02\u01F0'+'\u01EF\x03\x02\x02\x02\u01F1\u01F2\x03\x02\x02\x02\u01F2\u01F0\x03\x02'+'\x02\x02\u01F2\u01F3\x03\x02\x02\x02\u01F3\xDA\x03\x02\x02\x02\u01F4\u01F5'+'\t\x02\x02\x02\u01F5\xDC\x03\x02\x02\x02\u01F6\u01F7\n\x02\x02\x02\u01F7'+'\xDE\x03\x02\x02\x02\u01F8\u01F9\t\x03\x02\x02\u01F9\xE0\x03\x02\x02\x02'+'\u01FA\u01FB\t\x04\x02\x02\u01FB\xE2\x03\x02\x02\x02\t\x02\xEC\u0115\u0119'+'\u01EB\u01ED\u01F2\x02';exports.CommonRegexLexer=CommonRegexLexer;},{"antlr4ts/Lexer":232,"antlr4ts/VocabularyImpl":250,"antlr4ts/atn/ATNDeserializer":255,"antlr4ts/atn/LexerATNSimulator":276,"antlr4ts/misc/Utils":337}],189:[function(require,module,exports){var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});var ATNDeserializer_1=require("antlr4ts/atn/ATNDeserializer");var NoViableAltException_1=require("antlr4ts/NoViableAltException");var Parser_1=require("antlr4ts/Parser");var ParserRuleContext_1=require("antlr4ts/ParserRuleContext");var ParserATNSimulator_1=require("antlr4ts/atn/ParserATNSimulator");var RecognitionException_1=require("antlr4ts/RecognitionException");var Token_1=require("antlr4ts/Token");var VocabularyImpl_1=require("antlr4ts/VocabularyImpl");var Utils=__importStar(require("antlr4ts/misc/Utils"));var CommonRegexParser=function(_Parser_1$Parser){inherits(CommonRegexParser,_Parser_1$Parser);function CommonRegexParser(input){classCallCheck(this,CommonRegexParser);var _this168=possibleConstructorReturn(this,(CommonRegexParser.__proto__||Object.getPrototypeOf(CommonRegexParser)).call(this,input));_this168._interp=new ParserATNSimulator_1.ParserATNSimulator(CommonRegexParser._ATN,_this168);return _this168;}// @Override
	// @NotNull
	createClass(CommonRegexParser,[{key:'parse',// @RuleVersion(0)
	value:function parse(){var _localctx=new ParseContext(this._ctx,this.state);this.enterRule(_localctx,0,CommonRegexParser.RULE_parse);try{this.enterOuterAlt(_localctx,1);{this.state=54;this.alternation();this.state=55;this.match(CommonRegexParser.EOF);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'alternation',value:function alternation(){var _localctx=new AlternationContext(this._ctx,this.state);this.enterRule(_localctx,2,CommonRegexParser.RULE_alternation);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=57;this.expr();this.state=62;this._errHandler.sync(this);_la=this._input.LA(1);while(_la===CommonRegexParser.Pipe){{{this.state=58;this.match(CommonRegexParser.Pipe);this.state=59;this.expr();}}this.state=64;this._errHandler.sync(this);_la=this._input.LA(1);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'expr',value:function expr(){var _localctx=new ExprContext(this._ctx,this.state);this.enterRule(_localctx,4,CommonRegexParser.RULE_expr);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=68;this._errHandler.sync(this);_la=this._input.LA(1);while((_la&~0x1F)===0&&(1<<_la&(1<<CommonRegexParser.Quoted|1<<CommonRegexParser.BlockQuoted|1<<CommonRegexParser.BellChar|1<<CommonRegexParser.ControlChar|1<<CommonRegexParser.EscapeChar|1<<CommonRegexParser.FormFeed|1<<CommonRegexParser.NewLine|1<<CommonRegexParser.CarriageReturn|1<<CommonRegexParser.Tab|1<<CommonRegexParser.Backslash|1<<CommonRegexParser.HexChar|1<<CommonRegexParser.Dot|1<<CommonRegexParser.DecimalDigit|1<<CommonRegexParser.NotDecimalDigit|1<<CommonRegexParser.CharWithProperty|1<<CommonRegexParser.CharWithoutProperty|1<<CommonRegexParser.WhiteSpace|1<<CommonRegexParser.NotWhiteSpace|1<<CommonRegexParser.WordChar|1<<CommonRegexParser.NotWordChar|1<<CommonRegexParser.CharacterClassStart|1<<CommonRegexParser.CharacterClassEnd|1<<CommonRegexParser.Caret|1<<CommonRegexParser.Hyphen|1<<CommonRegexParser.OpenBrace|1<<CommonRegexParser.CloseBrace|1<<CommonRegexParser.Comma|1<<CommonRegexParser.EndOfSubject))!==0||(_la-33&~0x1F)===0&&(1<<_la-33&(1<<CommonRegexParser.OpenParen-33|1<<CommonRegexParser.LessThan-33|1<<CommonRegexParser.GreaterThan-33|1<<CommonRegexParser.SingleQuote-33|1<<CommonRegexParser.Underscore-33|1<<CommonRegexParser.Colon-33|1<<CommonRegexParser.Hash-33|1<<CommonRegexParser.Equals-33|1<<CommonRegexParser.Exclamation-33|1<<CommonRegexParser.Ampersand-33|1<<CommonRegexParser.ALC-33|1<<CommonRegexParser.BLC-33|1<<CommonRegexParser.CLC-33|1<<CommonRegexParser.DLC-33|1<<CommonRegexParser.ELC-33|1<<CommonRegexParser.FLC-33|1<<CommonRegexParser.GLC-33|1<<CommonRegexParser.HLC-33|1<<CommonRegexParser.ILC-33|1<<CommonRegexParser.JLC-33|1<<CommonRegexParser.KLC-33|1<<CommonRegexParser.LLC-33|1<<CommonRegexParser.MLC-33|1<<CommonRegexParser.NLC-33|1<<CommonRegexParser.OLC-33|1<<CommonRegexParser.PLC-33|1<<CommonRegexParser.QLC-33|1<<CommonRegexParser.RLC-33|1<<CommonRegexParser.SLC-33|1<<CommonRegexParser.TLC-33|1<<CommonRegexParser.ULC-33))!==0||(_la-65&~0x1F)===0&&(1<<_la-65&(1<<CommonRegexParser.VLC-65|1<<CommonRegexParser.WLC-65|1<<CommonRegexParser.XLC-65|1<<CommonRegexParser.YLC-65|1<<CommonRegexParser.ZLC-65|1<<CommonRegexParser.AUC-65|1<<CommonRegexParser.BUC-65|1<<CommonRegexParser.CUC-65|1<<CommonRegexParser.DUC-65|1<<CommonRegexParser.EUC-65|1<<CommonRegexParser.FUC-65|1<<CommonRegexParser.GUC-65|1<<CommonRegexParser.HUC-65|1<<CommonRegexParser.IUC-65|1<<CommonRegexParser.JUC-65|1<<CommonRegexParser.KUC-65|1<<CommonRegexParser.LUC-65|1<<CommonRegexParser.MUC-65|1<<CommonRegexParser.NUC-65|1<<CommonRegexParser.OUC-65|1<<CommonRegexParser.PUC-65|1<<CommonRegexParser.QUC-65|1<<CommonRegexParser.RUC-65|1<<CommonRegexParser.SUC-65|1<<CommonRegexParser.TUC-65|1<<CommonRegexParser.UUC-65|1<<CommonRegexParser.VUC-65|1<<CommonRegexParser.WUC-65|1<<CommonRegexParser.XUC-65|1<<CommonRegexParser.YUC-65|1<<CommonRegexParser.ZUC-65|1<<CommonRegexParser.D1-65))!==0||(_la-97&~0x1F)===0&&(1<<_la-97&(1<<CommonRegexParser.D2-97|1<<CommonRegexParser.D3-97|1<<CommonRegexParser.D4-97|1<<CommonRegexParser.D5-97|1<<CommonRegexParser.D6-97|1<<CommonRegexParser.D7-97|1<<CommonRegexParser.D8-97|1<<CommonRegexParser.D9-97|1<<CommonRegexParser.D0-97|1<<CommonRegexParser.OtherChar-97))!==0){{{this.state=65;this.element();}}this.state=70;this._errHandler.sync(this);_la=this._input.LA(1);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'element',value:function element(){var _localctx=new ElementContext(this._ctx,this.state);this.enterRule(_localctx,6,CommonRegexParser.RULE_element);try{this.enterOuterAlt(_localctx,1);{this.state=71;this.atom();this.state=73;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,2,this._ctx)){case 1:{this.state=72;this.quantifier();}break;}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'quantifier',value:function quantifier(){var _localctx=new QuantifierContext(this._ctx,this.state);this.enterRule(_localctx,8,CommonRegexParser.RULE_quantifier);try{this.state=99;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,3,this._ctx)){case 1:this.enterOuterAlt(_localctx,1);{this.state=75;this.match(CommonRegexParser.QuestionMark);this.state=76;this.quantifier_type();}break;case 2:this.enterOuterAlt(_localctx,2);{this.state=77;this.match(CommonRegexParser.Plus);this.state=78;this.quantifier_type();}break;case 3:this.enterOuterAlt(_localctx,3);{this.state=79;this.match(CommonRegexParser.Star);this.state=80;this.quantifier_type();}break;case 4:this.enterOuterAlt(_localctx,4);{this.state=81;this.match(CommonRegexParser.OpenBrace);this.state=82;this.number();this.state=83;this.match(CommonRegexParser.CloseBrace);this.state=84;this.quantifier_type();}break;case 5:this.enterOuterAlt(_localctx,5);{this.state=86;this.match(CommonRegexParser.OpenBrace);this.state=87;this.number();this.state=88;this.match(CommonRegexParser.Comma);this.state=89;this.match(CommonRegexParser.CloseBrace);this.state=90;this.quantifier_type();}break;case 6:this.enterOuterAlt(_localctx,6);{this.state=92;this.match(CommonRegexParser.OpenBrace);this.state=93;this.number();this.state=94;this.match(CommonRegexParser.Comma);this.state=95;this.number();this.state=96;this.match(CommonRegexParser.CloseBrace);this.state=97;this.quantifier_type();}break;}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'quantifier_type',value:function quantifier_type(){var _localctx=new Quantifier_typeContext(this._ctx,this.state);this.enterRule(_localctx,10,CommonRegexParser.RULE_quantifier_type);try{this.state=104;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.Plus:this.enterOuterAlt(_localctx,1);{this.state=101;this.match(CommonRegexParser.Plus);}break;case CommonRegexParser.QuestionMark:this.enterOuterAlt(_localctx,2);{this.state=102;this.match(CommonRegexParser.QuestionMark);}break;case CommonRegexParser.EOF:case CommonRegexParser.Quoted:case CommonRegexParser.BlockQuoted:case CommonRegexParser.BellChar:case CommonRegexParser.ControlChar:case CommonRegexParser.EscapeChar:case CommonRegexParser.FormFeed:case CommonRegexParser.NewLine:case CommonRegexParser.CarriageReturn:case CommonRegexParser.Tab:case CommonRegexParser.Backslash:case CommonRegexParser.HexChar:case CommonRegexParser.Dot:case CommonRegexParser.DecimalDigit:case CommonRegexParser.NotDecimalDigit:case CommonRegexParser.CharWithProperty:case CommonRegexParser.CharWithoutProperty:case CommonRegexParser.WhiteSpace:case CommonRegexParser.NotWhiteSpace:case CommonRegexParser.WordChar:case CommonRegexParser.NotWordChar:case CommonRegexParser.CharacterClassStart:case CommonRegexParser.CharacterClassEnd:case CommonRegexParser.Caret:case CommonRegexParser.Hyphen:case CommonRegexParser.OpenBrace:case CommonRegexParser.CloseBrace:case CommonRegexParser.Comma:case CommonRegexParser.EndOfSubject:case CommonRegexParser.Pipe:case CommonRegexParser.OpenParen:case CommonRegexParser.CloseParen:case CommonRegexParser.LessThan:case CommonRegexParser.GreaterThan:case CommonRegexParser.SingleQuote:case CommonRegexParser.Underscore:case CommonRegexParser.Colon:case CommonRegexParser.Hash:case CommonRegexParser.Equals:case CommonRegexParser.Exclamation:case CommonRegexParser.Ampersand:case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:case CommonRegexParser.D1:case CommonRegexParser.D2:case CommonRegexParser.D3:case CommonRegexParser.D4:case CommonRegexParser.D5:case CommonRegexParser.D6:case CommonRegexParser.D7:case CommonRegexParser.D8:case CommonRegexParser.D9:case CommonRegexParser.D0:case CommonRegexParser.OtherChar:this.enterOuterAlt(_localctx,3);// tslint:disable-next-line:no-empty
	{}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'character_class',value:function character_class(){var _localctx=new Character_classContext(this._ctx,this.state);this.enterRule(_localctx,12,CommonRegexParser.RULE_character_class);var _la=void 0;try{this.state=123;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,7,this._ctx)){case 1:this.enterOuterAlt(_localctx,1);{this.state=106;this.match(CommonRegexParser.CharacterClassStart);this.state=107;this.match(CommonRegexParser.Caret);this.state=109;this._errHandler.sync(this);_la=this._input.LA(1);do{{{this.state=108;this.cc_atom();}}this.state=111;this._errHandler.sync(this);_la=this._input.LA(1);}while((_la&~0x1F)===0&&(1<<_la&(1<<CommonRegexParser.Quoted|1<<CommonRegexParser.BlockQuoted|1<<CommonRegexParser.BellChar|1<<CommonRegexParser.ControlChar|1<<CommonRegexParser.EscapeChar|1<<CommonRegexParser.FormFeed|1<<CommonRegexParser.NewLine|1<<CommonRegexParser.CarriageReturn|1<<CommonRegexParser.Tab|1<<CommonRegexParser.Backslash|1<<CommonRegexParser.HexChar|1<<CommonRegexParser.Dot|1<<CommonRegexParser.DecimalDigit|1<<CommonRegexParser.NotDecimalDigit|1<<CommonRegexParser.CharWithProperty|1<<CommonRegexParser.CharWithoutProperty|1<<CommonRegexParser.WhiteSpace|1<<CommonRegexParser.NotWhiteSpace|1<<CommonRegexParser.WordChar|1<<CommonRegexParser.NotWordChar|1<<CommonRegexParser.CharacterClassStart|1<<CommonRegexParser.Caret|1<<CommonRegexParser.Hyphen|1<<CommonRegexParser.QuestionMark|1<<CommonRegexParser.Plus|1<<CommonRegexParser.Star|1<<CommonRegexParser.OpenBrace|1<<CommonRegexParser.CloseBrace|1<<CommonRegexParser.Comma|1<<CommonRegexParser.EndOfSubject))!==0||(_la-32&~0x1F)===0&&(1<<_la-32&(1<<CommonRegexParser.Pipe-32|1<<CommonRegexParser.OpenParen-32|1<<CommonRegexParser.CloseParen-32|1<<CommonRegexParser.LessThan-32|1<<CommonRegexParser.GreaterThan-32|1<<CommonRegexParser.SingleQuote-32|1<<CommonRegexParser.Underscore-32|1<<CommonRegexParser.Colon-32|1<<CommonRegexParser.Hash-32|1<<CommonRegexParser.Equals-32|1<<CommonRegexParser.Exclamation-32|1<<CommonRegexParser.Ampersand-32|1<<CommonRegexParser.ALC-32|1<<CommonRegexParser.BLC-32|1<<CommonRegexParser.CLC-32|1<<CommonRegexParser.DLC-32|1<<CommonRegexParser.ELC-32|1<<CommonRegexParser.FLC-32|1<<CommonRegexParser.GLC-32|1<<CommonRegexParser.HLC-32|1<<CommonRegexParser.ILC-32|1<<CommonRegexParser.JLC-32|1<<CommonRegexParser.KLC-32|1<<CommonRegexParser.LLC-32|1<<CommonRegexParser.MLC-32|1<<CommonRegexParser.NLC-32|1<<CommonRegexParser.OLC-32|1<<CommonRegexParser.PLC-32|1<<CommonRegexParser.QLC-32|1<<CommonRegexParser.RLC-32|1<<CommonRegexParser.SLC-32|1<<CommonRegexParser.TLC-32))!==0||(_la-64&~0x1F)===0&&(1<<_la-64&(1<<CommonRegexParser.ULC-64|1<<CommonRegexParser.VLC-64|1<<CommonRegexParser.WLC-64|1<<CommonRegexParser.XLC-64|1<<CommonRegexParser.YLC-64|1<<CommonRegexParser.ZLC-64|1<<CommonRegexParser.AUC-64|1<<CommonRegexParser.BUC-64|1<<CommonRegexParser.CUC-64|1<<CommonRegexParser.DUC-64|1<<CommonRegexParser.EUC-64|1<<CommonRegexParser.FUC-64|1<<CommonRegexParser.GUC-64|1<<CommonRegexParser.HUC-64|1<<CommonRegexParser.IUC-64|1<<CommonRegexParser.JUC-64|1<<CommonRegexParser.KUC-64|1<<CommonRegexParser.LUC-64|1<<CommonRegexParser.MUC-64|1<<CommonRegexParser.NUC-64|1<<CommonRegexParser.OUC-64|1<<CommonRegexParser.PUC-64|1<<CommonRegexParser.QUC-64|1<<CommonRegexParser.RUC-64|1<<CommonRegexParser.SUC-64|1<<CommonRegexParser.TUC-64|1<<CommonRegexParser.UUC-64|1<<CommonRegexParser.VUC-64|1<<CommonRegexParser.WUC-64|1<<CommonRegexParser.XUC-64|1<<CommonRegexParser.YUC-64|1<<CommonRegexParser.ZUC-64))!==0||(_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D8-96|1<<CommonRegexParser.D9-96|1<<CommonRegexParser.D0-96|1<<CommonRegexParser.OtherChar-96))!==0);this.state=113;this.match(CommonRegexParser.CharacterClassEnd);}break;case 2:this.enterOuterAlt(_localctx,2);{this.state=115;this.match(CommonRegexParser.CharacterClassStart);this.state=117;this._errHandler.sync(this);_la=this._input.LA(1);do{{{this.state=116;this.cc_atom();}}this.state=119;this._errHandler.sync(this);_la=this._input.LA(1);}while((_la&~0x1F)===0&&(1<<_la&(1<<CommonRegexParser.Quoted|1<<CommonRegexParser.BlockQuoted|1<<CommonRegexParser.BellChar|1<<CommonRegexParser.ControlChar|1<<CommonRegexParser.EscapeChar|1<<CommonRegexParser.FormFeed|1<<CommonRegexParser.NewLine|1<<CommonRegexParser.CarriageReturn|1<<CommonRegexParser.Tab|1<<CommonRegexParser.Backslash|1<<CommonRegexParser.HexChar|1<<CommonRegexParser.Dot|1<<CommonRegexParser.DecimalDigit|1<<CommonRegexParser.NotDecimalDigit|1<<CommonRegexParser.CharWithProperty|1<<CommonRegexParser.CharWithoutProperty|1<<CommonRegexParser.WhiteSpace|1<<CommonRegexParser.NotWhiteSpace|1<<CommonRegexParser.WordChar|1<<CommonRegexParser.NotWordChar|1<<CommonRegexParser.CharacterClassStart|1<<CommonRegexParser.Caret|1<<CommonRegexParser.Hyphen|1<<CommonRegexParser.QuestionMark|1<<CommonRegexParser.Plus|1<<CommonRegexParser.Star|1<<CommonRegexParser.OpenBrace|1<<CommonRegexParser.CloseBrace|1<<CommonRegexParser.Comma|1<<CommonRegexParser.EndOfSubject))!==0||(_la-32&~0x1F)===0&&(1<<_la-32&(1<<CommonRegexParser.Pipe-32|1<<CommonRegexParser.OpenParen-32|1<<CommonRegexParser.CloseParen-32|1<<CommonRegexParser.LessThan-32|1<<CommonRegexParser.GreaterThan-32|1<<CommonRegexParser.SingleQuote-32|1<<CommonRegexParser.Underscore-32|1<<CommonRegexParser.Colon-32|1<<CommonRegexParser.Hash-32|1<<CommonRegexParser.Equals-32|1<<CommonRegexParser.Exclamation-32|1<<CommonRegexParser.Ampersand-32|1<<CommonRegexParser.ALC-32|1<<CommonRegexParser.BLC-32|1<<CommonRegexParser.CLC-32|1<<CommonRegexParser.DLC-32|1<<CommonRegexParser.ELC-32|1<<CommonRegexParser.FLC-32|1<<CommonRegexParser.GLC-32|1<<CommonRegexParser.HLC-32|1<<CommonRegexParser.ILC-32|1<<CommonRegexParser.JLC-32|1<<CommonRegexParser.KLC-32|1<<CommonRegexParser.LLC-32|1<<CommonRegexParser.MLC-32|1<<CommonRegexParser.NLC-32|1<<CommonRegexParser.OLC-32|1<<CommonRegexParser.PLC-32|1<<CommonRegexParser.QLC-32|1<<CommonRegexParser.RLC-32|1<<CommonRegexParser.SLC-32|1<<CommonRegexParser.TLC-32))!==0||(_la-64&~0x1F)===0&&(1<<_la-64&(1<<CommonRegexParser.ULC-64|1<<CommonRegexParser.VLC-64|1<<CommonRegexParser.WLC-64|1<<CommonRegexParser.XLC-64|1<<CommonRegexParser.YLC-64|1<<CommonRegexParser.ZLC-64|1<<CommonRegexParser.AUC-64|1<<CommonRegexParser.BUC-64|1<<CommonRegexParser.CUC-64|1<<CommonRegexParser.DUC-64|1<<CommonRegexParser.EUC-64|1<<CommonRegexParser.FUC-64|1<<CommonRegexParser.GUC-64|1<<CommonRegexParser.HUC-64|1<<CommonRegexParser.IUC-64|1<<CommonRegexParser.JUC-64|1<<CommonRegexParser.KUC-64|1<<CommonRegexParser.LUC-64|1<<CommonRegexParser.MUC-64|1<<CommonRegexParser.NUC-64|1<<CommonRegexParser.OUC-64|1<<CommonRegexParser.PUC-64|1<<CommonRegexParser.QUC-64|1<<CommonRegexParser.RUC-64|1<<CommonRegexParser.SUC-64|1<<CommonRegexParser.TUC-64|1<<CommonRegexParser.UUC-64|1<<CommonRegexParser.VUC-64|1<<CommonRegexParser.WUC-64|1<<CommonRegexParser.XUC-64|1<<CommonRegexParser.YUC-64|1<<CommonRegexParser.ZUC-64))!==0||(_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D8-96|1<<CommonRegexParser.D9-96|1<<CommonRegexParser.D0-96|1<<CommonRegexParser.OtherChar-96))!==0);this.state=121;this.match(CommonRegexParser.CharacterClassEnd);}break;}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'capture',value:function capture(){var _localctx=new CaptureContext(this._ctx,this.state);this.enterRule(_localctx,14,CommonRegexParser.RULE_capture);try{this.state=137;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,8,this._ctx)){case 1:this.enterOuterAlt(_localctx,1);{this.state=125;this.match(CommonRegexParser.OpenParen);this.state=126;this.match(CommonRegexParser.QuestionMark);this.state=127;this.match(CommonRegexParser.LessThan);this.state=128;this.name();this.state=129;this.match(CommonRegexParser.GreaterThan);this.state=130;this.alternation();this.state=131;this.match(CommonRegexParser.CloseParen);}break;case 2:this.enterOuterAlt(_localctx,2);{this.state=133;this.match(CommonRegexParser.OpenParen);this.state=134;this.alternation();this.state=135;this.match(CommonRegexParser.CloseParen);}break;}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'non_capture',value:function non_capture(){var _localctx=new Non_captureContext(this._ctx,this.state);this.enterRule(_localctx,16,CommonRegexParser.RULE_non_capture);try{this.enterOuterAlt(_localctx,1);{this.state=139;this.match(CommonRegexParser.OpenParen);this.state=140;this.match(CommonRegexParser.QuestionMark);this.state=141;this.match(CommonRegexParser.Colon);this.state=142;this.alternation();this.state=143;this.match(CommonRegexParser.CloseParen);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'option',value:function option(){var _localctx=new OptionContext(this._ctx,this.state);this.enterRule(_localctx,18,CommonRegexParser.RULE_option);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=145;this.match(CommonRegexParser.OpenParen);this.state=146;this.match(CommonRegexParser.QuestionMark);this.state=148;this._errHandler.sync(this);_la=this._input.LA(1);do{{{this.state=147;this.option_flag();}}this.state=150;this._errHandler.sync(this);_la=this._input.LA(1);}while((_la-52&~0x1F)===0&&(1<<_la-52&(1<<CommonRegexParser.ILC-52|1<<CommonRegexParser.MLC-52|1<<CommonRegexParser.SLC-52))!==0);this.state=152;this.match(CommonRegexParser.CloseParen);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'option_flag',value:function option_flag(){var _localctx=new Option_flagContext(this._ctx,this.state);this.enterRule(_localctx,20,CommonRegexParser.RULE_option_flag);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=154;_la=this._input.LA(1);if(!((_la-52&~0x1F)===0&&(1<<_la-52&(1<<CommonRegexParser.ILC-52|1<<CommonRegexParser.MLC-52|1<<CommonRegexParser.SLC-52))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'atom',value:function atom(){var _localctx=new AtomContext(this._ctx,this.state);this.enterRule(_localctx,22,CommonRegexParser.RULE_atom);try{this.state=165;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,10,this._ctx)){case 1:this.enterOuterAlt(_localctx,1);{this.state=156;this.shared_atom();}break;case 2:this.enterOuterAlt(_localctx,2);{this.state=157;this.literal();}break;case 3:this.enterOuterAlt(_localctx,3);{this.state=158;this.character_class();}break;case 4:this.enterOuterAlt(_localctx,4);{this.state=159;this.capture();}break;case 5:this.enterOuterAlt(_localctx,5);{this.state=160;this.non_capture();}break;case 6:this.enterOuterAlt(_localctx,6);{this.state=161;this.option();}break;case 7:this.enterOuterAlt(_localctx,7);{this.state=162;this.match(CommonRegexParser.Dot);}break;case 8:this.enterOuterAlt(_localctx,8);{this.state=163;this.match(CommonRegexParser.Caret);}break;case 9:this.enterOuterAlt(_localctx,9);{this.state=164;this.match(CommonRegexParser.EndOfSubject);}break;}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'cc_atom',value:function cc_atom(){var _localctx=new Cc_atomContext(this._ctx,this.state);this.enterRule(_localctx,24,CommonRegexParser.RULE_cc_atom);try{this.state=173;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,11,this._ctx)){case 1:this.enterOuterAlt(_localctx,1);{this.state=167;this.cc_literal();this.state=168;this.match(CommonRegexParser.Hyphen);this.state=169;this.cc_literal();}break;case 2:this.enterOuterAlt(_localctx,2);{this.state=171;this.shared_atom();}break;case 3:this.enterOuterAlt(_localctx,3);{this.state=172;this.cc_literal();}break;}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'shared_atom',value:function shared_atom(){var _localctx=new Shared_atomContext(this._ctx,this.state);this.enterRule(_localctx,26,CommonRegexParser.RULE_shared_atom);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=175;_la=this._input.LA(1);if(!((_la&~0x1F)===0&&(1<<_la&(1<<CommonRegexParser.ControlChar|1<<CommonRegexParser.DecimalDigit|1<<CommonRegexParser.NotDecimalDigit|1<<CommonRegexParser.CharWithProperty|1<<CommonRegexParser.CharWithoutProperty|1<<CommonRegexParser.WhiteSpace|1<<CommonRegexParser.NotWhiteSpace|1<<CommonRegexParser.WordChar|1<<CommonRegexParser.NotWordChar))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'literal',value:function literal(){var _localctx=new LiteralContext(this._ctx,this.state);this.enterRule(_localctx,28,CommonRegexParser.RULE_literal);try{this.state=179;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.Quoted:case CommonRegexParser.BlockQuoted:case CommonRegexParser.BellChar:case CommonRegexParser.EscapeChar:case CommonRegexParser.FormFeed:case CommonRegexParser.NewLine:case CommonRegexParser.CarriageReturn:case CommonRegexParser.Tab:case CommonRegexParser.Backslash:case CommonRegexParser.HexChar:case CommonRegexParser.Hyphen:case CommonRegexParser.OpenBrace:case CommonRegexParser.CloseBrace:case CommonRegexParser.Comma:case CommonRegexParser.LessThan:case CommonRegexParser.GreaterThan:case CommonRegexParser.SingleQuote:case CommonRegexParser.Underscore:case CommonRegexParser.Colon:case CommonRegexParser.Hash:case CommonRegexParser.Equals:case CommonRegexParser.Exclamation:case CommonRegexParser.Ampersand:case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:case CommonRegexParser.D1:case CommonRegexParser.D2:case CommonRegexParser.D3:case CommonRegexParser.D4:case CommonRegexParser.D5:case CommonRegexParser.D6:case CommonRegexParser.D7:case CommonRegexParser.D8:case CommonRegexParser.D9:case CommonRegexParser.D0:case CommonRegexParser.OtherChar:this.enterOuterAlt(_localctx,1);{this.state=177;this.shared_literal();}break;case CommonRegexParser.CharacterClassEnd:this.enterOuterAlt(_localctx,2);{this.state=178;this.match(CommonRegexParser.CharacterClassEnd);}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'cc_literal',value:function cc_literal(){var _localctx=new Cc_literalContext(this._ctx,this.state);this.enterRule(_localctx,30,CommonRegexParser.RULE_cc_literal);try{this.state=192;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.Quoted:case CommonRegexParser.BlockQuoted:case CommonRegexParser.BellChar:case CommonRegexParser.EscapeChar:case CommonRegexParser.FormFeed:case CommonRegexParser.NewLine:case CommonRegexParser.CarriageReturn:case CommonRegexParser.Tab:case CommonRegexParser.Backslash:case CommonRegexParser.HexChar:case CommonRegexParser.Hyphen:case CommonRegexParser.OpenBrace:case CommonRegexParser.CloseBrace:case CommonRegexParser.Comma:case CommonRegexParser.LessThan:case CommonRegexParser.GreaterThan:case CommonRegexParser.SingleQuote:case CommonRegexParser.Underscore:case CommonRegexParser.Colon:case CommonRegexParser.Hash:case CommonRegexParser.Equals:case CommonRegexParser.Exclamation:case CommonRegexParser.Ampersand:case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:case CommonRegexParser.D1:case CommonRegexParser.D2:case CommonRegexParser.D3:case CommonRegexParser.D4:case CommonRegexParser.D5:case CommonRegexParser.D6:case CommonRegexParser.D7:case CommonRegexParser.D8:case CommonRegexParser.D9:case CommonRegexParser.D0:case CommonRegexParser.OtherChar:this.enterOuterAlt(_localctx,1);{this.state=181;this.shared_literal();}break;case CommonRegexParser.Dot:this.enterOuterAlt(_localctx,2);{this.state=182;this.match(CommonRegexParser.Dot);}break;case CommonRegexParser.CharacterClassStart:this.enterOuterAlt(_localctx,3);{this.state=183;this.match(CommonRegexParser.CharacterClassStart);}break;case CommonRegexParser.Caret:this.enterOuterAlt(_localctx,4);{this.state=184;this.match(CommonRegexParser.Caret);}break;case CommonRegexParser.QuestionMark:this.enterOuterAlt(_localctx,5);{this.state=185;this.match(CommonRegexParser.QuestionMark);}break;case CommonRegexParser.Plus:this.enterOuterAlt(_localctx,6);{this.state=186;this.match(CommonRegexParser.Plus);}break;case CommonRegexParser.Star:this.enterOuterAlt(_localctx,7);{this.state=187;this.match(CommonRegexParser.Star);}break;case CommonRegexParser.EndOfSubject:this.enterOuterAlt(_localctx,8);{this.state=188;this.match(CommonRegexParser.EndOfSubject);}break;case CommonRegexParser.Pipe:this.enterOuterAlt(_localctx,9);{this.state=189;this.match(CommonRegexParser.Pipe);}break;case CommonRegexParser.OpenParen:this.enterOuterAlt(_localctx,10);{this.state=190;this.match(CommonRegexParser.OpenParen);}break;case CommonRegexParser.CloseParen:this.enterOuterAlt(_localctx,11);{this.state=191;this.match(CommonRegexParser.CloseParen);}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'shared_literal',value:function shared_literal(){var _localctx=new Shared_literalContext(this._ctx,this.state);this.enterRule(_localctx,32,CommonRegexParser.RULE_shared_literal);try{this.state=220;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.Backslash:this.enterOuterAlt(_localctx,1);{this.state=194;this.octal_char();}break;case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:this.enterOuterAlt(_localctx,2);{this.state=195;this.letter();}break;case CommonRegexParser.D1:case CommonRegexParser.D2:case CommonRegexParser.D3:case CommonRegexParser.D4:case CommonRegexParser.D5:case CommonRegexParser.D6:case CommonRegexParser.D7:case CommonRegexParser.D8:case CommonRegexParser.D9:case CommonRegexParser.D0:this.enterOuterAlt(_localctx,3);{this.state=196;this.digit();}break;case CommonRegexParser.BellChar:this.enterOuterAlt(_localctx,4);{this.state=197;this.match(CommonRegexParser.BellChar);}break;case CommonRegexParser.EscapeChar:this.enterOuterAlt(_localctx,5);{this.state=198;this.match(CommonRegexParser.EscapeChar);}break;case CommonRegexParser.FormFeed:this.enterOuterAlt(_localctx,6);{this.state=199;this.match(CommonRegexParser.FormFeed);}break;case CommonRegexParser.NewLine:this.enterOuterAlt(_localctx,7);{this.state=200;this.match(CommonRegexParser.NewLine);}break;case CommonRegexParser.CarriageReturn:this.enterOuterAlt(_localctx,8);{this.state=201;this.match(CommonRegexParser.CarriageReturn);}break;case CommonRegexParser.Tab:this.enterOuterAlt(_localctx,9);{this.state=202;this.match(CommonRegexParser.Tab);}break;case CommonRegexParser.HexChar:this.enterOuterAlt(_localctx,10);{this.state=203;this.match(CommonRegexParser.HexChar);}break;case CommonRegexParser.Quoted:this.enterOuterAlt(_localctx,11);{this.state=204;this.match(CommonRegexParser.Quoted);}break;case CommonRegexParser.BlockQuoted:this.enterOuterAlt(_localctx,12);{this.state=205;this.match(CommonRegexParser.BlockQuoted);}break;case CommonRegexParser.OpenBrace:this.enterOuterAlt(_localctx,13);{this.state=206;this.match(CommonRegexParser.OpenBrace);}break;case CommonRegexParser.CloseBrace:this.enterOuterAlt(_localctx,14);{this.state=207;this.match(CommonRegexParser.CloseBrace);}break;case CommonRegexParser.Comma:this.enterOuterAlt(_localctx,15);{this.state=208;this.match(CommonRegexParser.Comma);}break;case CommonRegexParser.Hyphen:this.enterOuterAlt(_localctx,16);{this.state=209;this.match(CommonRegexParser.Hyphen);}break;case CommonRegexParser.LessThan:this.enterOuterAlt(_localctx,17);{this.state=210;this.match(CommonRegexParser.LessThan);}break;case CommonRegexParser.GreaterThan:this.enterOuterAlt(_localctx,18);{this.state=211;this.match(CommonRegexParser.GreaterThan);}break;case CommonRegexParser.SingleQuote:this.enterOuterAlt(_localctx,19);{this.state=212;this.match(CommonRegexParser.SingleQuote);}break;case CommonRegexParser.Underscore:this.enterOuterAlt(_localctx,20);{this.state=213;this.match(CommonRegexParser.Underscore);}break;case CommonRegexParser.Colon:this.enterOuterAlt(_localctx,21);{this.state=214;this.match(CommonRegexParser.Colon);}break;case CommonRegexParser.Hash:this.enterOuterAlt(_localctx,22);{this.state=215;this.match(CommonRegexParser.Hash);}break;case CommonRegexParser.Equals:this.enterOuterAlt(_localctx,23);{this.state=216;this.match(CommonRegexParser.Equals);}break;case CommonRegexParser.Exclamation:this.enterOuterAlt(_localctx,24);{this.state=217;this.match(CommonRegexParser.Exclamation);}break;case CommonRegexParser.Ampersand:this.enterOuterAlt(_localctx,25);{this.state=218;this.match(CommonRegexParser.Ampersand);}break;case CommonRegexParser.OtherChar:this.enterOuterAlt(_localctx,26);{this.state=219;this.match(CommonRegexParser.OtherChar);}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'number',value:function number(){var _localctx=new NumberContext(this._ctx,this.state);this.enterRule(_localctx,34,CommonRegexParser.RULE_number);try{this.enterOuterAlt(_localctx,1);{this.state=222;this.digits();}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'octal_char',value:function octal_char(){var _localctx=new Octal_charContext(this._ctx,this.state);this.enterRule(_localctx,36,CommonRegexParser.RULE_octal_char);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=233;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,15,this._ctx)){case 1:{this.state=224;this.match(CommonRegexParser.Backslash);this.state=225;_la=this._input.LA(1);if(!((_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D0-96))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=226;this.octal_digit();this.state=227;this.octal_digit();}break;case 2:{this.state=229;this.match(CommonRegexParser.Backslash);this.state=230;this.octal_digit();this.state=231;this.octal_digit();}break;}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'octal_digit',value:function octal_digit(){var _localctx=new Octal_digitContext(this._ctx,this.state);this.enterRule(_localctx,38,CommonRegexParser.RULE_octal_digit);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=235;_la=this._input.LA(1);if(!((_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D0-96))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'digits',value:function digits(){var _localctx=new DigitsContext(this._ctx,this.state);this.enterRule(_localctx,40,CommonRegexParser.RULE_digits);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=238;this._errHandler.sync(this);_la=this._input.LA(1);do{{{this.state=237;this.digit();}}this.state=240;this._errHandler.sync(this);_la=this._input.LA(1);}while((_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D8-96|1<<CommonRegexParser.D9-96|1<<CommonRegexParser.D0-96))!==0);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'digit',value:function digit(){var _localctx=new DigitContext(this._ctx,this.state);this.enterRule(_localctx,42,CommonRegexParser.RULE_digit);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=242;_la=this._input.LA(1);if(!((_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D8-96|1<<CommonRegexParser.D9-96|1<<CommonRegexParser.D0-96))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'name',value:function name(){var _localctx=new NameContext(this._ctx,this.state);this.enterRule(_localctx,44,CommonRegexParser.RULE_name);try{this.enterOuterAlt(_localctx,1);{this.state=244;this.alpha_nums();}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'alpha_nums',value:function alpha_nums(){var _localctx=new Alpha_numsContext(this._ctx,this.state);this.enterRule(_localctx,46,CommonRegexParser.RULE_alpha_nums);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=248;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:{this.state=246;this.letter();}break;case CommonRegexParser.Underscore:{this.state=247;this.match(CommonRegexParser.Underscore);}break;default:throw new NoViableAltException_1.NoViableAltException(this);}this.state=255;this._errHandler.sync(this);_la=this._input.LA(1);while((_la-38&~0x1F)===0&&(1<<_la-38&(1<<CommonRegexParser.Underscore-38|1<<CommonRegexParser.ALC-38|1<<CommonRegexParser.BLC-38|1<<CommonRegexParser.CLC-38|1<<CommonRegexParser.DLC-38|1<<CommonRegexParser.ELC-38|1<<CommonRegexParser.FLC-38|1<<CommonRegexParser.GLC-38|1<<CommonRegexParser.HLC-38|1<<CommonRegexParser.ILC-38|1<<CommonRegexParser.JLC-38|1<<CommonRegexParser.KLC-38|1<<CommonRegexParser.LLC-38|1<<CommonRegexParser.MLC-38|1<<CommonRegexParser.NLC-38|1<<CommonRegexParser.OLC-38|1<<CommonRegexParser.PLC-38|1<<CommonRegexParser.QLC-38|1<<CommonRegexParser.RLC-38|1<<CommonRegexParser.SLC-38|1<<CommonRegexParser.TLC-38|1<<CommonRegexParser.ULC-38|1<<CommonRegexParser.VLC-38|1<<CommonRegexParser.WLC-38|1<<CommonRegexParser.XLC-38|1<<CommonRegexParser.YLC-38|1<<CommonRegexParser.ZLC-38))!==0||(_la-70&~0x1F)===0&&(1<<_la-70&(1<<CommonRegexParser.AUC-70|1<<CommonRegexParser.BUC-70|1<<CommonRegexParser.CUC-70|1<<CommonRegexParser.DUC-70|1<<CommonRegexParser.EUC-70|1<<CommonRegexParser.FUC-70|1<<CommonRegexParser.GUC-70|1<<CommonRegexParser.HUC-70|1<<CommonRegexParser.IUC-70|1<<CommonRegexParser.JUC-70|1<<CommonRegexParser.KUC-70|1<<CommonRegexParser.LUC-70|1<<CommonRegexParser.MUC-70|1<<CommonRegexParser.NUC-70|1<<CommonRegexParser.OUC-70|1<<CommonRegexParser.PUC-70|1<<CommonRegexParser.QUC-70|1<<CommonRegexParser.RUC-70|1<<CommonRegexParser.SUC-70|1<<CommonRegexParser.TUC-70|1<<CommonRegexParser.UUC-70|1<<CommonRegexParser.VUC-70|1<<CommonRegexParser.WUC-70|1<<CommonRegexParser.XUC-70|1<<CommonRegexParser.YUC-70|1<<CommonRegexParser.ZUC-70|1<<CommonRegexParser.D1-70|1<<CommonRegexParser.D2-70|1<<CommonRegexParser.D3-70|1<<CommonRegexParser.D4-70|1<<CommonRegexParser.D5-70|1<<CommonRegexParser.D6-70))!==0||(_la-102&~0x1F)===0&&(1<<_la-102&(1<<CommonRegexParser.D7-102|1<<CommonRegexParser.D8-102|1<<CommonRegexParser.D9-102|1<<CommonRegexParser.D0-102))!==0){{this.state=253;this._errHandler.sync(this);switch(this._input.LA(1)){case CommonRegexParser.ALC:case CommonRegexParser.BLC:case CommonRegexParser.CLC:case CommonRegexParser.DLC:case CommonRegexParser.ELC:case CommonRegexParser.FLC:case CommonRegexParser.GLC:case CommonRegexParser.HLC:case CommonRegexParser.ILC:case CommonRegexParser.JLC:case CommonRegexParser.KLC:case CommonRegexParser.LLC:case CommonRegexParser.MLC:case CommonRegexParser.NLC:case CommonRegexParser.OLC:case CommonRegexParser.PLC:case CommonRegexParser.QLC:case CommonRegexParser.RLC:case CommonRegexParser.SLC:case CommonRegexParser.TLC:case CommonRegexParser.ULC:case CommonRegexParser.VLC:case CommonRegexParser.WLC:case CommonRegexParser.XLC:case CommonRegexParser.YLC:case CommonRegexParser.ZLC:case CommonRegexParser.AUC:case CommonRegexParser.BUC:case CommonRegexParser.CUC:case CommonRegexParser.DUC:case CommonRegexParser.EUC:case CommonRegexParser.FUC:case CommonRegexParser.GUC:case CommonRegexParser.HUC:case CommonRegexParser.IUC:case CommonRegexParser.JUC:case CommonRegexParser.KUC:case CommonRegexParser.LUC:case CommonRegexParser.MUC:case CommonRegexParser.NUC:case CommonRegexParser.OUC:case CommonRegexParser.PUC:case CommonRegexParser.QUC:case CommonRegexParser.RUC:case CommonRegexParser.SUC:case CommonRegexParser.TUC:case CommonRegexParser.UUC:case CommonRegexParser.VUC:case CommonRegexParser.WUC:case CommonRegexParser.XUC:case CommonRegexParser.YUC:case CommonRegexParser.ZUC:{this.state=250;this.letter();}break;case CommonRegexParser.Underscore:{this.state=251;this.match(CommonRegexParser.Underscore);}break;case CommonRegexParser.D1:case CommonRegexParser.D2:case CommonRegexParser.D3:case CommonRegexParser.D4:case CommonRegexParser.D5:case CommonRegexParser.D6:case CommonRegexParser.D7:case CommonRegexParser.D8:case CommonRegexParser.D9:case CommonRegexParser.D0:{this.state=252;this.digit();}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}this.state=257;this._errHandler.sync(this);_la=this._input.LA(1);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'non_close_parens',value:function non_close_parens(){var _localctx=new Non_close_parensContext(this._ctx,this.state);this.enterRule(_localctx,48,CommonRegexParser.RULE_non_close_parens);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=259;this._errHandler.sync(this);_la=this._input.LA(1);do{{{this.state=258;this.non_close_paren();}}this.state=261;this._errHandler.sync(this);_la=this._input.LA(1);}while((_la&~0x1F)===0&&(1<<_la&(1<<CommonRegexParser.Quoted|1<<CommonRegexParser.BlockQuoted|1<<CommonRegexParser.BellChar|1<<CommonRegexParser.ControlChar|1<<CommonRegexParser.EscapeChar|1<<CommonRegexParser.FormFeed|1<<CommonRegexParser.NewLine|1<<CommonRegexParser.CarriageReturn|1<<CommonRegexParser.Tab|1<<CommonRegexParser.Backslash|1<<CommonRegexParser.HexChar|1<<CommonRegexParser.Dot|1<<CommonRegexParser.DecimalDigit|1<<CommonRegexParser.NotDecimalDigit|1<<CommonRegexParser.CharWithProperty|1<<CommonRegexParser.CharWithoutProperty|1<<CommonRegexParser.WhiteSpace|1<<CommonRegexParser.NotWhiteSpace|1<<CommonRegexParser.WordChar|1<<CommonRegexParser.NotWordChar|1<<CommonRegexParser.CharacterClassStart|1<<CommonRegexParser.CharacterClassEnd|1<<CommonRegexParser.Caret|1<<CommonRegexParser.Hyphen|1<<CommonRegexParser.QuestionMark|1<<CommonRegexParser.Plus|1<<CommonRegexParser.Star|1<<CommonRegexParser.OpenBrace|1<<CommonRegexParser.CloseBrace|1<<CommonRegexParser.Comma|1<<CommonRegexParser.EndOfSubject))!==0||(_la-32&~0x1F)===0&&(1<<_la-32&(1<<CommonRegexParser.Pipe-32|1<<CommonRegexParser.OpenParen-32|1<<CommonRegexParser.LessThan-32|1<<CommonRegexParser.GreaterThan-32|1<<CommonRegexParser.SingleQuote-32|1<<CommonRegexParser.Underscore-32|1<<CommonRegexParser.Colon-32|1<<CommonRegexParser.Hash-32|1<<CommonRegexParser.Equals-32|1<<CommonRegexParser.Exclamation-32|1<<CommonRegexParser.Ampersand-32|1<<CommonRegexParser.ALC-32|1<<CommonRegexParser.BLC-32|1<<CommonRegexParser.CLC-32|1<<CommonRegexParser.DLC-32|1<<CommonRegexParser.ELC-32|1<<CommonRegexParser.FLC-32|1<<CommonRegexParser.GLC-32|1<<CommonRegexParser.HLC-32|1<<CommonRegexParser.ILC-32|1<<CommonRegexParser.JLC-32|1<<CommonRegexParser.KLC-32|1<<CommonRegexParser.LLC-32|1<<CommonRegexParser.MLC-32|1<<CommonRegexParser.NLC-32|1<<CommonRegexParser.OLC-32|1<<CommonRegexParser.PLC-32|1<<CommonRegexParser.QLC-32|1<<CommonRegexParser.RLC-32|1<<CommonRegexParser.SLC-32|1<<CommonRegexParser.TLC-32))!==0||(_la-64&~0x1F)===0&&(1<<_la-64&(1<<CommonRegexParser.ULC-64|1<<CommonRegexParser.VLC-64|1<<CommonRegexParser.WLC-64|1<<CommonRegexParser.XLC-64|1<<CommonRegexParser.YLC-64|1<<CommonRegexParser.ZLC-64|1<<CommonRegexParser.AUC-64|1<<CommonRegexParser.BUC-64|1<<CommonRegexParser.CUC-64|1<<CommonRegexParser.DUC-64|1<<CommonRegexParser.EUC-64|1<<CommonRegexParser.FUC-64|1<<CommonRegexParser.GUC-64|1<<CommonRegexParser.HUC-64|1<<CommonRegexParser.IUC-64|1<<CommonRegexParser.JUC-64|1<<CommonRegexParser.KUC-64|1<<CommonRegexParser.LUC-64|1<<CommonRegexParser.MUC-64|1<<CommonRegexParser.NUC-64|1<<CommonRegexParser.OUC-64|1<<CommonRegexParser.PUC-64|1<<CommonRegexParser.QUC-64|1<<CommonRegexParser.RUC-64|1<<CommonRegexParser.SUC-64|1<<CommonRegexParser.TUC-64|1<<CommonRegexParser.UUC-64|1<<CommonRegexParser.VUC-64|1<<CommonRegexParser.WUC-64|1<<CommonRegexParser.XUC-64|1<<CommonRegexParser.YUC-64|1<<CommonRegexParser.ZUC-64))!==0||(_la-96&~0x1F)===0&&(1<<_la-96&(1<<CommonRegexParser.D1-96|1<<CommonRegexParser.D2-96|1<<CommonRegexParser.D3-96|1<<CommonRegexParser.D4-96|1<<CommonRegexParser.D5-96|1<<CommonRegexParser.D6-96|1<<CommonRegexParser.D7-96|1<<CommonRegexParser.D8-96|1<<CommonRegexParser.D9-96|1<<CommonRegexParser.D0-96|1<<CommonRegexParser.OtherChar-96))!==0);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'non_close_paren',value:function non_close_paren(){var _localctx=new Non_close_parenContext(this._ctx,this.state);this.enterRule(_localctx,50,CommonRegexParser.RULE_non_close_paren);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=263;_la=this._input.LA(1);if(_la<=0||_la===CommonRegexParser.CloseParen){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'letter',value:function letter(){var _localctx=new LetterContext(this._ctx,this.state);this.enterRule(_localctx,52,CommonRegexParser.RULE_letter);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=265;_la=this._input.LA(1);if(!((_la-44&~0x1F)===0&&(1<<_la-44&(1<<CommonRegexParser.ALC-44|1<<CommonRegexParser.BLC-44|1<<CommonRegexParser.CLC-44|1<<CommonRegexParser.DLC-44|1<<CommonRegexParser.ELC-44|1<<CommonRegexParser.FLC-44|1<<CommonRegexParser.GLC-44|1<<CommonRegexParser.HLC-44|1<<CommonRegexParser.ILC-44|1<<CommonRegexParser.JLC-44|1<<CommonRegexParser.KLC-44|1<<CommonRegexParser.LLC-44|1<<CommonRegexParser.MLC-44|1<<CommonRegexParser.NLC-44|1<<CommonRegexParser.OLC-44|1<<CommonRegexParser.PLC-44|1<<CommonRegexParser.QLC-44|1<<CommonRegexParser.RLC-44|1<<CommonRegexParser.SLC-44|1<<CommonRegexParser.TLC-44|1<<CommonRegexParser.ULC-44|1<<CommonRegexParser.VLC-44|1<<CommonRegexParser.WLC-44|1<<CommonRegexParser.XLC-44|1<<CommonRegexParser.YLC-44|1<<CommonRegexParser.ZLC-44|1<<CommonRegexParser.AUC-44|1<<CommonRegexParser.BUC-44|1<<CommonRegexParser.CUC-44|1<<CommonRegexParser.DUC-44|1<<CommonRegexParser.EUC-44|1<<CommonRegexParser.FUC-44))!==0||(_la-76&~0x1F)===0&&(1<<_la-76&(1<<CommonRegexParser.GUC-76|1<<CommonRegexParser.HUC-76|1<<CommonRegexParser.IUC-76|1<<CommonRegexParser.JUC-76|1<<CommonRegexParser.KUC-76|1<<CommonRegexParser.LUC-76|1<<CommonRegexParser.MUC-76|1<<CommonRegexParser.NUC-76|1<<CommonRegexParser.OUC-76|1<<CommonRegexParser.PUC-76|1<<CommonRegexParser.QUC-76|1<<CommonRegexParser.RUC-76|1<<CommonRegexParser.SUC-76|1<<CommonRegexParser.TUC-76|1<<CommonRegexParser.UUC-76|1<<CommonRegexParser.VUC-76|1<<CommonRegexParser.WUC-76|1<<CommonRegexParser.XUC-76|1<<CommonRegexParser.YUC-76|1<<CommonRegexParser.ZUC-76))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}},{key:'vocabulary',get:function get(){return CommonRegexParser.VOCABULARY;}// tslint:enable:no-trailing-whitespace
	// @Override
	},{key:'grammarFileName',get:function get(){return "CommonRegex.g4";}// @Override
	},{key:'ruleNames',get:function get(){return CommonRegexParser.ruleNames;}// @Override
	},{key:'serializedATN',get:function get(){return CommonRegexParser._serializedATN;}}],[{key:'_ATN',get:function get(){if(!CommonRegexParser.__ATN){CommonRegexParser.__ATN=new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(CommonRegexParser._serializedATN));}return CommonRegexParser.__ATN;}}]);return CommonRegexParser;}(Parser_1.Parser);CommonRegexParser.Quoted=1;CommonRegexParser.BlockQuoted=2;CommonRegexParser.BellChar=3;CommonRegexParser.ControlChar=4;CommonRegexParser.EscapeChar=5;CommonRegexParser.FormFeed=6;CommonRegexParser.NewLine=7;CommonRegexParser.CarriageReturn=8;CommonRegexParser.Tab=9;CommonRegexParser.Backslash=10;CommonRegexParser.HexChar=11;CommonRegexParser.Dot=12;CommonRegexParser.DecimalDigit=13;CommonRegexParser.NotDecimalDigit=14;CommonRegexParser.CharWithProperty=15;CommonRegexParser.CharWithoutProperty=16;CommonRegexParser.WhiteSpace=17;CommonRegexParser.NotWhiteSpace=18;CommonRegexParser.WordChar=19;CommonRegexParser.NotWordChar=20;CommonRegexParser.CharacterClassStart=21;CommonRegexParser.CharacterClassEnd=22;CommonRegexParser.Caret=23;CommonRegexParser.Hyphen=24;CommonRegexParser.QuestionMark=25;CommonRegexParser.Plus=26;CommonRegexParser.Star=27;CommonRegexParser.OpenBrace=28;CommonRegexParser.CloseBrace=29;CommonRegexParser.Comma=30;CommonRegexParser.EndOfSubject=31;CommonRegexParser.Pipe=32;CommonRegexParser.OpenParen=33;CommonRegexParser.CloseParen=34;CommonRegexParser.LessThan=35;CommonRegexParser.GreaterThan=36;CommonRegexParser.SingleQuote=37;CommonRegexParser.Underscore=38;CommonRegexParser.Colon=39;CommonRegexParser.Hash=40;CommonRegexParser.Equals=41;CommonRegexParser.Exclamation=42;CommonRegexParser.Ampersand=43;CommonRegexParser.ALC=44;CommonRegexParser.BLC=45;CommonRegexParser.CLC=46;CommonRegexParser.DLC=47;CommonRegexParser.ELC=48;CommonRegexParser.FLC=49;CommonRegexParser.GLC=50;CommonRegexParser.HLC=51;CommonRegexParser.ILC=52;CommonRegexParser.JLC=53;CommonRegexParser.KLC=54;CommonRegexParser.LLC=55;CommonRegexParser.MLC=56;CommonRegexParser.NLC=57;CommonRegexParser.OLC=58;CommonRegexParser.PLC=59;CommonRegexParser.QLC=60;CommonRegexParser.RLC=61;CommonRegexParser.SLC=62;CommonRegexParser.TLC=63;CommonRegexParser.ULC=64;CommonRegexParser.VLC=65;CommonRegexParser.WLC=66;CommonRegexParser.XLC=67;CommonRegexParser.YLC=68;CommonRegexParser.ZLC=69;CommonRegexParser.AUC=70;CommonRegexParser.BUC=71;CommonRegexParser.CUC=72;CommonRegexParser.DUC=73;CommonRegexParser.EUC=74;CommonRegexParser.FUC=75;CommonRegexParser.GUC=76;CommonRegexParser.HUC=77;CommonRegexParser.IUC=78;CommonRegexParser.JUC=79;CommonRegexParser.KUC=80;CommonRegexParser.LUC=81;CommonRegexParser.MUC=82;CommonRegexParser.NUC=83;CommonRegexParser.OUC=84;CommonRegexParser.PUC=85;CommonRegexParser.QUC=86;CommonRegexParser.RUC=87;CommonRegexParser.SUC=88;CommonRegexParser.TUC=89;CommonRegexParser.UUC=90;CommonRegexParser.VUC=91;CommonRegexParser.WUC=92;CommonRegexParser.XUC=93;CommonRegexParser.YUC=94;CommonRegexParser.ZUC=95;CommonRegexParser.D1=96;CommonRegexParser.D2=97;CommonRegexParser.D3=98;CommonRegexParser.D4=99;CommonRegexParser.D5=100;CommonRegexParser.D6=101;CommonRegexParser.D7=102;CommonRegexParser.D8=103;CommonRegexParser.D9=104;CommonRegexParser.D0=105;CommonRegexParser.OtherChar=106;CommonRegexParser.RULE_parse=0;CommonRegexParser.RULE_alternation=1;CommonRegexParser.RULE_expr=2;CommonRegexParser.RULE_element=3;CommonRegexParser.RULE_quantifier=4;CommonRegexParser.RULE_quantifier_type=5;CommonRegexParser.RULE_character_class=6;CommonRegexParser.RULE_capture=7;CommonRegexParser.RULE_non_capture=8;CommonRegexParser.RULE_option=9;CommonRegexParser.RULE_option_flag=10;CommonRegexParser.RULE_atom=11;CommonRegexParser.RULE_cc_atom=12;CommonRegexParser.RULE_shared_atom=13;CommonRegexParser.RULE_literal=14;CommonRegexParser.RULE_cc_literal=15;CommonRegexParser.RULE_shared_literal=16;CommonRegexParser.RULE_number=17;CommonRegexParser.RULE_octal_char=18;CommonRegexParser.RULE_octal_digit=19;CommonRegexParser.RULE_digits=20;CommonRegexParser.RULE_digit=21;CommonRegexParser.RULE_name=22;CommonRegexParser.RULE_alpha_nums=23;CommonRegexParser.RULE_non_close_parens=24;CommonRegexParser.RULE_non_close_paren=25;CommonRegexParser.RULE_letter=26;// tslint:disable:no-trailing-whitespace
	CommonRegexParser.ruleNames=["parse","alternation","expr","element","quantifier","quantifier_type","character_class","capture","non_capture","option","option_flag","atom","cc_atom","shared_atom","literal","cc_literal","shared_literal","number","octal_char","octal_digit","digits","digit","name","alpha_nums","non_close_parens","non_close_paren","letter"];CommonRegexParser._LITERAL_NAMES=[undefined,undefined,undefined,"'\\'","'\\'","'\\'","'\\'","'\\'","'\\'","'\\'","'\\'",undefined,"'.'","'\\'","'\\'",undefined,undefined,"'\\'","'\\'","'\\'","'\\'","'['","']'","'^'","'-'","'?'","'+'","'*'","'{'","'}'","','","'$'","'|'","'('","')'","'<'","'>'","'''","'_'","':'","'#'","'='","'!'","'&'","'a'","'b'","'c'","'d'","'e'","'f'","'g'","'h'","'i'","'j'","'k'","'l'","'m'","'n'","'o'","'p'","'q'","'r'","'s'","'t'","'u'","'v'","'w'","'x'","'y'","'z'","'A'","'B'","'C'","'D'","'E'","'F'","'G'","'H'","'I'","'J'","'K'","'L'","'M'","'N'","'O'","'P'","'Q'","'R'","'S'","'T'","'U'","'V'","'W'","'X'","'Y'","'Z'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","'0'"];CommonRegexParser._SYMBOLIC_NAMES=[undefined,"Quoted","BlockQuoted","BellChar","ControlChar","EscapeChar","FormFeed","NewLine","CarriageReturn","Tab","Backslash","HexChar","Dot","DecimalDigit","NotDecimalDigit","CharWithProperty","CharWithoutProperty","WhiteSpace","NotWhiteSpace","WordChar","NotWordChar","CharacterClassStart","CharacterClassEnd","Caret","Hyphen","QuestionMark","Plus","Star","OpenBrace","CloseBrace","Comma","EndOfSubject","Pipe","OpenParen","CloseParen","LessThan","GreaterThan","SingleQuote","Underscore","Colon","Hash","Equals","Exclamation","Ampersand","ALC","BLC","CLC","DLC","ELC","FLC","GLC","HLC","ILC","JLC","KLC","LLC","MLC","NLC","OLC","PLC","QLC","RLC","SLC","TLC","ULC","VLC","WLC","XLC","YLC","ZLC","AUC","BUC","CUC","DUC","EUC","FUC","GUC","HUC","IUC","JUC","KUC","LUC","MUC","NUC","OUC","PUC","QUC","RUC","SUC","TUC","UUC","VUC","WUC","XUC","YUC","ZUC","D1","D2","D3","D4","D5","D6","D7","D8","D9","D0","OtherChar"];CommonRegexParser.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(CommonRegexParser._LITERAL_NAMES,CommonRegexParser._SYMBOLIC_NAMES,[]);CommonRegexParser._serializedATN='\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x03l\u010E\x04\x02'+"\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07"+"\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r\x04"+"\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12\x04"+"\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17\x04"+"\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C\x03"+"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x07\x03?\n\x03\f\x03\x0E"+"\x03B\v\x03\x03\x04\x07\x04E\n\x04\f\x04\x0E\x04H\v\x04\x03\x05\x03\x05"+"\x05\x05L\n\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06"+"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06"+"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x05\x06"+"f\n\x06\x03\x07\x03\x07\x03\x07\x05\x07k\n\x07\x03\b\x03\b\x03\b\x06\b"+"p\n\b\r\b\x0E\bq\x03\b\x03\b\x03\b\x03\b\x06\bx\n\b\r\b\x0E\by\x03\b\x03"+"\b\x05\b~\n\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03"+"\t\x03\t\x03\t\x05\t\x8C\n\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v"+"\x03\v\x03\v\x06\v\x97\n\v\r\v\x0E\v\x98\x03\v\x03\v\x03\f\x03\f\x03\r"+"\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x05\r\xA8\n\r\x03\x0E"+"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0E\xB0\n\x0E\x03\x0F\x03"+"\x0F\x03\x10\x03\x10\x05\x10\xB6\n\x10\x03\x11\x03\x11\x03\x11\x03\x11"+"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x05\x11\xC3\n"+"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03"+"\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03"+"\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x05"+"\x12\xDF\n\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14"+"\x03\x14\x03\x14\x03\x14\x03\x14\x05\x14\xEC\n\x14\x03\x15\x03\x15\x03"+"\x16\x06\x16\xF1\n\x16\r\x16\x0E\x16\xF2\x03\x17\x03\x17\x03\x18\x03\x18"+'\x03\x19\x03\x19\x05\x19\xFB\n\x19\x03\x19\x03\x19\x03\x19\x07\x19\u0100'+'\n\x19\f\x19\x0E\x19\u0103\x0B\x19\x03\x1A\x06\x1A\u0106\n\x1A\r\x1A\x0E'+'\x1A\u0107\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x02\x02\x02\x1D\x02'+"\x02\x04\x02\x06\x02\b\x02\n\x02\f\x02\x0E\x02\x10\x02\x12\x02\x14\x02"+"\x16\x02\x18\x02\x1A\x02\x1C\x02\x1E\x02 \x02\"\x02$\x02&\x02(\x02*\x02"+",\x02.\x020\x022\x024\x026\x02\x02\t\x05\x0266::@@\x04\x02\x06\x06\x0F"+'\x16\x04\x02bdkk\x04\x02bhkk\x03\x02bk\x03\x02$$\x03\x02.a\x02\u0136\x02'+"8\x03\x02\x02\x02\x04;\x03\x02\x02\x02\x06F\x03\x02\x02\x02\bI\x03\x02"+"\x02\x02\ne\x03\x02\x02\x02\fj\x03\x02\x02\x02\x0E}\x03\x02\x02\x02\x10"+"\x8B\x03\x02\x02\x02\x12\x8D\x03\x02\x02\x02\x14\x93\x03\x02\x02\x02\x16"+"\x9C\x03\x02\x02\x02\x18\xA7\x03\x02\x02\x02\x1A\xAF\x03\x02\x02\x02\x1C"+"\xB1\x03\x02\x02\x02\x1E\xB5\x03\x02\x02\x02 \xC2\x03\x02\x02\x02\"\xDE"+"\x03\x02\x02\x02$\xE0\x03\x02\x02\x02&\xEB\x03\x02\x02\x02(\xED\x03\x02"+"\x02\x02*\xF0\x03\x02\x02\x02,\xF4\x03\x02\x02\x02.\xF6\x03\x02\x02\x02"+'0\xFA\x03\x02\x02\x022\u0105\x03\x02\x02\x024\u0109\x03\x02\x02\x026\u010B'+"\x03\x02\x02\x0289\x05\x04\x03\x029:\x07\x02\x02\x03:\x03\x03\x02\x02"+"\x02;@\x05\x06\x04\x02<=\x07\"\x02\x02=?\x05\x06\x04\x02><\x03\x02\x02"+"\x02?B\x03\x02\x02\x02@>\x03\x02\x02\x02@A\x03\x02\x02\x02A\x05\x03\x02"+"\x02\x02B@\x03\x02\x02\x02CE\x05\b\x05\x02DC\x03\x02\x02\x02EH\x03\x02"+"\x02\x02FD\x03\x02\x02\x02FG\x03\x02\x02\x02G\x07\x03\x02\x02\x02HF\x03"+"\x02\x02\x02IK\x05\x18\r\x02JL\x05\n\x06\x02KJ\x03\x02\x02\x02KL\x03\x02"+"\x02\x02L\t\x03\x02\x02\x02MN\x07\x1B\x02\x02Nf\x05\f\x07\x02OP\x07\x1C"+"\x02\x02Pf\x05\f\x07\x02QR\x07\x1D\x02\x02Rf\x05\f\x07\x02ST\x07\x1E\x02"+"\x02TU\x05$\x13\x02UV\x07\x1F\x02\x02VW\x05\f\x07\x02Wf\x03\x02\x02\x02"+"XY\x07\x1E\x02\x02YZ\x05$\x13\x02Z[\x07 \x02\x02[\\\x07\x1F\x02\x02\\"+"]\x05\f\x07\x02]f\x03\x02\x02\x02^_\x07\x1E\x02\x02_`\x05$\x13\x02`a\x07"+" \x02\x02ab\x05$\x13\x02bc\x07\x1F\x02\x02cd\x05\f\x07\x02df\x03\x02\x02"+"\x02eM\x03\x02\x02\x02eO\x03\x02\x02\x02eQ\x03\x02\x02\x02eS\x03\x02\x02"+"\x02eX\x03\x02\x02\x02e^\x03\x02\x02\x02f\v\x03\x02\x02\x02gk\x07\x1C"+"\x02\x02hk\x07\x1B\x02\x02ik\x03\x02\x02\x02jg\x03\x02\x02\x02jh\x03\x02"+"\x02\x02ji\x03\x02\x02\x02k\r\x03\x02\x02\x02lm\x07\x17\x02\x02mo\x07"+"\x19\x02\x02np\x05\x1A\x0E\x02on\x03\x02\x02\x02pq\x03\x02\x02\x02qo\x03"+"\x02\x02\x02qr\x03\x02\x02\x02rs\x03\x02\x02\x02st\x07\x18\x02\x02t~\x03"+"\x02\x02\x02uw\x07\x17\x02\x02vx\x05\x1A\x0E\x02wv\x03\x02\x02\x02xy\x03"+"\x02\x02\x02yw\x03\x02\x02\x02yz\x03\x02\x02\x02z{\x03\x02\x02\x02{|\x07"+"\x18\x02\x02|~\x03\x02\x02\x02}l\x03\x02\x02\x02}u\x03\x02\x02\x02~\x0F"+"\x03\x02\x02\x02\x7F\x80\x07#\x02\x02\x80\x81\x07\x1B\x02\x02\x81\x82"+"\x07%\x02\x02\x82\x83\x05.\x18\x02\x83\x84\x07&\x02\x02\x84\x85\x05\x04"+"\x03\x02\x85\x86\x07$\x02\x02\x86\x8C\x03\x02\x02\x02\x87\x88\x07#\x02"+"\x02\x88\x89\x05\x04\x03\x02\x89\x8A\x07$\x02\x02\x8A\x8C\x03\x02\x02"+"\x02\x8B\x7F\x03\x02\x02\x02\x8B\x87\x03\x02\x02\x02\x8C\x11\x03\x02\x02"+"\x02\x8D\x8E\x07#\x02\x02\x8E\x8F\x07\x1B\x02\x02\x8F\x90\x07)\x02\x02"+"\x90\x91\x05\x04\x03\x02\x91\x92\x07$\x02\x02\x92\x13\x03\x02\x02\x02"+"\x93\x94\x07#\x02\x02\x94\x96\x07\x1B\x02\x02\x95\x97\x05\x16\f\x02\x96"+"\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x96\x03\x02\x02\x02\x98"+"\x99\x03\x02\x02\x02\x99\x9A\x03\x02\x02\x02\x9A\x9B\x07$\x02\x02\x9B"+"\x15\x03\x02\x02\x02\x9C\x9D\t\x02\x02\x02\x9D\x17\x03\x02\x02\x02\x9E"+"\xA8\x05\x1C\x0F\x02\x9F\xA8\x05\x1E\x10\x02\xA0\xA8\x05\x0E\b\x02\xA1"+"\xA8\x05\x10\t\x02\xA2\xA8\x05\x12\n\x02\xA3\xA8\x05\x14\v\x02\xA4\xA8"+"\x07\x0E\x02\x02\xA5\xA8\x07\x19\x02\x02\xA6\xA8\x07!\x02\x02\xA7\x9E"+"\x03\x02\x02\x02\xA7\x9F\x03\x02\x02\x02\xA7\xA0\x03\x02\x02\x02\xA7\xA1"+"\x03\x02\x02\x02\xA7\xA2\x03\x02\x02\x02\xA7\xA3\x03\x02\x02\x02\xA7\xA4"+"\x03\x02\x02\x02\xA7\xA5\x03\x02\x02\x02\xA7\xA6\x03\x02\x02\x02\xA8\x19"+"\x03\x02\x02\x02\xA9\xAA\x05 \x11\x02\xAA\xAB\x07\x1A\x02\x02\xAB\xAC"+"\x05 \x11\x02\xAC\xB0\x03\x02\x02\x02\xAD\xB0\x05\x1C\x0F\x02\xAE\xB0"+"\x05 \x11\x02\xAF\xA9\x03\x02\x02\x02\xAF\xAD\x03\x02\x02\x02\xAF\xAE"+"\x03\x02\x02\x02\xB0\x1B\x03\x02\x02\x02\xB1\xB2\t\x03\x02\x02\xB2\x1D"+"\x03\x02\x02\x02\xB3\xB6\x05\"\x12\x02\xB4\xB6\x07\x18\x02\x02\xB5\xB3"+"\x03\x02\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\x1F\x03\x02\x02\x02\xB7\xC3"+"\x05\"\x12\x02\xB8\xC3\x07\x0E\x02\x02\xB9\xC3\x07\x17\x02\x02\xBA\xC3"+"\x07\x19\x02\x02\xBB\xC3\x07\x1B\x02\x02\xBC\xC3\x07\x1C\x02\x02\xBD\xC3"+"\x07\x1D\x02\x02\xBE\xC3\x07!\x02\x02\xBF\xC3\x07\"\x02\x02\xC0\xC3\x07"+"#\x02\x02\xC1\xC3\x07$\x02\x02\xC2\xB7\x03\x02\x02\x02\xC2\xB8\x03\x02"+"\x02\x02\xC2\xB9\x03\x02\x02\x02\xC2\xBA\x03\x02\x02\x02\xC2\xBB\x03\x02"+"\x02\x02\xC2\xBC\x03\x02\x02\x02\xC2\xBD\x03\x02\x02\x02\xC2\xBE\x03\x02"+"\x02\x02\xC2\xBF\x03\x02\x02\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC1\x03\x02"+"\x02\x02\xC3!\x03\x02\x02\x02\xC4\xDF\x05&\x14\x02\xC5\xDF\x056\x1C\x02"+"\xC6\xDF\x05,\x17\x02\xC7\xDF\x07\x05\x02\x02\xC8\xDF\x07\x07\x02\x02"+"\xC9\xDF\x07\b\x02\x02\xCA\xDF\x07\t\x02\x02\xCB\xDF\x07\n\x02\x02\xCC"+"\xDF\x07\v\x02\x02\xCD\xDF\x07\r\x02\x02\xCE\xDF\x07\x03\x02\x02\xCF\xDF"+"\x07\x04\x02\x02\xD0\xDF\x07\x1E\x02\x02\xD1\xDF\x07\x1F\x02\x02\xD2\xDF"+"\x07 \x02\x02\xD3\xDF\x07\x1A\x02\x02\xD4\xDF\x07%\x02\x02\xD5\xDF\x07"+"&\x02\x02\xD6\xDF\x07\'\x02\x02\xD7\xDF\x07(\x02\x02\xD8\xDF\x07)\x02"+"\x02\xD9\xDF\x07*\x02\x02\xDA\xDF\x07+\x02\x02\xDB\xDF\x07,\x02\x02\xDC"+"\xDF\x07-\x02\x02\xDD\xDF\x07l\x02\x02\xDE\xC4\x03\x02\x02\x02\xDE\xC5"+"\x03\x02\x02\x02\xDE\xC6\x03\x02\x02\x02\xDE\xC7\x03\x02\x02\x02\xDE\xC8"+"\x03\x02\x02\x02\xDE\xC9\x03\x02\x02\x02\xDE\xCA\x03\x02\x02\x02\xDE\xCB"+"\x03\x02\x02\x02\xDE\xCC\x03\x02\x02\x02\xDE\xCD\x03\x02\x02\x02\xDE\xCE"+"\x03\x02\x02\x02\xDE\xCF\x03\x02\x02\x02\xDE\xD0\x03\x02\x02\x02\xDE\xD1"+"\x03\x02\x02\x02\xDE\xD2\x03\x02\x02\x02\xDE\xD3\x03\x02\x02\x02\xDE\xD4"+"\x03\x02\x02\x02\xDE\xD5\x03\x02\x02\x02\xDE\xD6\x03\x02\x02\x02\xDE\xD7"+"\x03\x02\x02\x02\xDE\xD8\x03\x02\x02\x02\xDE\xD9\x03\x02\x02\x02\xDE\xDA"+"\x03\x02\x02\x02\xDE\xDB\x03\x02\x02\x02\xDE\xDC\x03\x02\x02\x02\xDE\xDD"+"\x03\x02\x02\x02\xDF#\x03\x02\x02\x02\xE0\xE1\x05*\x16\x02\xE1%\x03\x02"+"\x02\x02\xE2\xE3\x07\f\x02\x02\xE3\xE4\t\x04\x02\x02\xE4\xE5\x05(\x15"+"\x02\xE5\xE6\x05(\x15\x02\xE6\xEC\x03\x02\x02\x02\xE7\xE8\x07\f\x02\x02"+"\xE8\xE9\x05(\x15\x02\xE9\xEA\x05(\x15\x02\xEA\xEC\x03\x02\x02\x02\xEB"+"\xE2\x03\x02\x02\x02\xEB\xE7\x03\x02\x02\x02\xEC\'\x03\x02\x02\x02\xED"+"\xEE\t\x05\x02\x02\xEE)\x03\x02\x02\x02\xEF\xF1\x05,\x17\x02\xF0\xEF\x03"+"\x02\x02\x02\xF1\xF2\x03\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF2\xF3\x03"+"\x02\x02\x02\xF3+\x03\x02\x02\x02\xF4\xF5\t\x06\x02\x02\xF5-\x03\x02\x02"+"\x02\xF6\xF7\x050\x19\x02\xF7/\x03\x02\x02\x02\xF8\xFB\x056\x1C\x02\xF9"+"\xFB\x07(\x02\x02\xFA\xF8\x03\x02\x02\x02\xFA\xF9\x03\x02\x02\x02\xFB"+'\u0101\x03\x02\x02\x02\xFC\u0100\x056\x1C\x02\xFD\u0100\x07(\x02\x02\xFE'+'\u0100\x05,\x17\x02\xFF\xFC\x03\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\xFF'+'\xFE\x03\x02\x02\x02\u0100\u0103\x03\x02\x02\x02\u0101\xFF\x03\x02\x02'+'\x02\u0101\u0102\x03\x02\x02\x02\u01021\x03\x02\x02\x02\u0103\u0101\x03'+'\x02\x02\x02\u0104\u0106\x054\x1B\x02\u0105\u0104\x03\x02\x02\x02\u0106'+'\u0107\x03\x02\x02\x02\u0107\u0105\x03\x02\x02\x02\u0107\u0108\x03\x02'+'\x02\x02\u01083\x03\x02\x02\x02\u0109\u010A\n\x07\x02\x02\u010A5\x03\x02'+'\x02\x02\u010B\u010C\t\b\x02\x02\u010C7\x03\x02\x02\x02\x17@FKejqy}\x8B'+'\x98\xA7\xAF\xB5\xC2\xDE\xEB\xF2\xFA\xFF\u0101\u0107';exports.CommonRegexParser=CommonRegexParser;var ParseContext=function(_ParserRuleContext_1$){inherits(ParseContext,_ParserRuleContext_1$);createClass(ParseContext,[{key:'alternation',value:function alternation(){return this.getRuleContext(0,AlternationContext);}},{key:'EOF',value:function EOF(){return this.getToken(CommonRegexParser.EOF,0);}}]);function ParseContext(parent,invokingState){classCallCheck(this,ParseContext);return possibleConstructorReturn(this,(ParseContext.__proto__||Object.getPrototypeOf(ParseContext)).call(this,parent,invokingState));}// @Override
	createClass(ParseContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterParse){listener.enterParse(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitParse){listener.exitParse(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitParse){return visitor.visitParse(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_parse;}}]);return ParseContext;}(ParserRuleContext_1.ParserRuleContext);exports.ParseContext=ParseContext;var AlternationContext=function(_ParserRuleContext_1$2){inherits(AlternationContext,_ParserRuleContext_1$2);createClass(AlternationContext,[{key:'expr',value:function expr(i){if(i===undefined){return this.getRuleContexts(ExprContext);}else {return this.getRuleContext(i,ExprContext);}}},{key:'Pipe',value:function Pipe(i){if(i===undefined){return this.getTokens(CommonRegexParser.Pipe);}else {return this.getToken(CommonRegexParser.Pipe,i);}}}]);function AlternationContext(parent,invokingState){classCallCheck(this,AlternationContext);return possibleConstructorReturn(this,(AlternationContext.__proto__||Object.getPrototypeOf(AlternationContext)).call(this,parent,invokingState));}// @Override
	createClass(AlternationContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterAlternation){listener.enterAlternation(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitAlternation){listener.exitAlternation(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitAlternation){return visitor.visitAlternation(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_alternation;}}]);return AlternationContext;}(ParserRuleContext_1.ParserRuleContext);exports.AlternationContext=AlternationContext;var ExprContext=function(_ParserRuleContext_1$3){inherits(ExprContext,_ParserRuleContext_1$3);createClass(ExprContext,[{key:'element',value:function element(i){if(i===undefined){return this.getRuleContexts(ElementContext);}else {return this.getRuleContext(i,ElementContext);}}}]);function ExprContext(parent,invokingState){classCallCheck(this,ExprContext);return possibleConstructorReturn(this,(ExprContext.__proto__||Object.getPrototypeOf(ExprContext)).call(this,parent,invokingState));}// @Override
	createClass(ExprContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterExpr){listener.enterExpr(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitExpr){listener.exitExpr(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitExpr){return visitor.visitExpr(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_expr;}}]);return ExprContext;}(ParserRuleContext_1.ParserRuleContext);exports.ExprContext=ExprContext;var ElementContext=function(_ParserRuleContext_1$4){inherits(ElementContext,_ParserRuleContext_1$4);createClass(ElementContext,[{key:'atom',value:function atom(){return this.getRuleContext(0,AtomContext);}},{key:'quantifier',value:function quantifier(){return this.tryGetRuleContext(0,QuantifierContext);}}]);function ElementContext(parent,invokingState){classCallCheck(this,ElementContext);return possibleConstructorReturn(this,(ElementContext.__proto__||Object.getPrototypeOf(ElementContext)).call(this,parent,invokingState));}// @Override
	createClass(ElementContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterElement){listener.enterElement(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitElement){listener.exitElement(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitElement){return visitor.visitElement(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_element;}}]);return ElementContext;}(ParserRuleContext_1.ParserRuleContext);exports.ElementContext=ElementContext;var QuantifierContext=function(_ParserRuleContext_1$5){inherits(QuantifierContext,_ParserRuleContext_1$5);createClass(QuantifierContext,[{key:'QuestionMark',value:function QuestionMark(){return this.tryGetToken(CommonRegexParser.QuestionMark,0);}},{key:'quantifier_type',value:function quantifier_type(){return this.getRuleContext(0,Quantifier_typeContext);}},{key:'Plus',value:function Plus(){return this.tryGetToken(CommonRegexParser.Plus,0);}},{key:'Star',value:function Star(){return this.tryGetToken(CommonRegexParser.Star,0);}},{key:'OpenBrace',value:function OpenBrace(){return this.tryGetToken(CommonRegexParser.OpenBrace,0);}},{key:'number',value:function number(i){if(i===undefined){return this.getRuleContexts(NumberContext);}else {return this.getRuleContext(i,NumberContext);}}},{key:'CloseBrace',value:function CloseBrace(){return this.tryGetToken(CommonRegexParser.CloseBrace,0);}},{key:'Comma',value:function Comma(){return this.tryGetToken(CommonRegexParser.Comma,0);}}]);function QuantifierContext(parent,invokingState){classCallCheck(this,QuantifierContext);return possibleConstructorReturn(this,(QuantifierContext.__proto__||Object.getPrototypeOf(QuantifierContext)).call(this,parent,invokingState));}// @Override
	createClass(QuantifierContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterQuantifier){listener.enterQuantifier(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitQuantifier){listener.exitQuantifier(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitQuantifier){return visitor.visitQuantifier(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_quantifier;}}]);return QuantifierContext;}(ParserRuleContext_1.ParserRuleContext);exports.QuantifierContext=QuantifierContext;var Quantifier_typeContext=function(_ParserRuleContext_1$6){inherits(Quantifier_typeContext,_ParserRuleContext_1$6);createClass(Quantifier_typeContext,[{key:'Plus',value:function Plus(){return this.tryGetToken(CommonRegexParser.Plus,0);}},{key:'QuestionMark',value:function QuestionMark(){return this.tryGetToken(CommonRegexParser.QuestionMark,0);}}]);function Quantifier_typeContext(parent,invokingState){classCallCheck(this,Quantifier_typeContext);return possibleConstructorReturn(this,(Quantifier_typeContext.__proto__||Object.getPrototypeOf(Quantifier_typeContext)).call(this,parent,invokingState));}// @Override
	createClass(Quantifier_typeContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterQuantifier_type){listener.enterQuantifier_type(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitQuantifier_type){listener.exitQuantifier_type(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitQuantifier_type){return visitor.visitQuantifier_type(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_quantifier_type;}}]);return Quantifier_typeContext;}(ParserRuleContext_1.ParserRuleContext);exports.Quantifier_typeContext=Quantifier_typeContext;var Character_classContext=function(_ParserRuleContext_1$7){inherits(Character_classContext,_ParserRuleContext_1$7);createClass(Character_classContext,[{key:'CharacterClassStart',value:function CharacterClassStart(){return this.getToken(CommonRegexParser.CharacterClassStart,0);}},{key:'Caret',value:function Caret(){return this.tryGetToken(CommonRegexParser.Caret,0);}},{key:'CharacterClassEnd',value:function CharacterClassEnd(){return this.getToken(CommonRegexParser.CharacterClassEnd,0);}},{key:'cc_atom',value:function cc_atom(i){if(i===undefined){return this.getRuleContexts(Cc_atomContext);}else {return this.getRuleContext(i,Cc_atomContext);}}}]);function Character_classContext(parent,invokingState){classCallCheck(this,Character_classContext);return possibleConstructorReturn(this,(Character_classContext.__proto__||Object.getPrototypeOf(Character_classContext)).call(this,parent,invokingState));}// @Override
	createClass(Character_classContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterCharacter_class){listener.enterCharacter_class(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitCharacter_class){listener.exitCharacter_class(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitCharacter_class){return visitor.visitCharacter_class(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_character_class;}}]);return Character_classContext;}(ParserRuleContext_1.ParserRuleContext);exports.Character_classContext=Character_classContext;var CaptureContext=function(_ParserRuleContext_1$8){inherits(CaptureContext,_ParserRuleContext_1$8);createClass(CaptureContext,[{key:'OpenParen',value:function OpenParen(){return this.getToken(CommonRegexParser.OpenParen,0);}},{key:'QuestionMark',value:function QuestionMark(){return this.tryGetToken(CommonRegexParser.QuestionMark,0);}},{key:'LessThan',value:function LessThan(){return this.tryGetToken(CommonRegexParser.LessThan,0);}},{key:'name',value:function name(){return this.tryGetRuleContext(0,NameContext);}},{key:'GreaterThan',value:function GreaterThan(){return this.tryGetToken(CommonRegexParser.GreaterThan,0);}},{key:'alternation',value:function alternation(){return this.getRuleContext(0,AlternationContext);}},{key:'CloseParen',value:function CloseParen(){return this.getToken(CommonRegexParser.CloseParen,0);}}]);function CaptureContext(parent,invokingState){classCallCheck(this,CaptureContext);return possibleConstructorReturn(this,(CaptureContext.__proto__||Object.getPrototypeOf(CaptureContext)).call(this,parent,invokingState));}// @Override
	createClass(CaptureContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterCapture){listener.enterCapture(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitCapture){listener.exitCapture(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitCapture){return visitor.visitCapture(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_capture;}}]);return CaptureContext;}(ParserRuleContext_1.ParserRuleContext);exports.CaptureContext=CaptureContext;var Non_captureContext=function(_ParserRuleContext_1$9){inherits(Non_captureContext,_ParserRuleContext_1$9);createClass(Non_captureContext,[{key:'OpenParen',value:function OpenParen(){return this.getToken(CommonRegexParser.OpenParen,0);}},{key:'QuestionMark',value:function QuestionMark(){return this.getToken(CommonRegexParser.QuestionMark,0);}},{key:'Colon',value:function Colon(){return this.getToken(CommonRegexParser.Colon,0);}},{key:'alternation',value:function alternation(){return this.getRuleContext(0,AlternationContext);}},{key:'CloseParen',value:function CloseParen(){return this.getToken(CommonRegexParser.CloseParen,0);}}]);function Non_captureContext(parent,invokingState){classCallCheck(this,Non_captureContext);return possibleConstructorReturn(this,(Non_captureContext.__proto__||Object.getPrototypeOf(Non_captureContext)).call(this,parent,invokingState));}// @Override
	createClass(Non_captureContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterNon_capture){listener.enterNon_capture(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitNon_capture){listener.exitNon_capture(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitNon_capture){return visitor.visitNon_capture(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_non_capture;}}]);return Non_captureContext;}(ParserRuleContext_1.ParserRuleContext);exports.Non_captureContext=Non_captureContext;var OptionContext=function(_ParserRuleContext_1$10){inherits(OptionContext,_ParserRuleContext_1$10);createClass(OptionContext,[{key:'OpenParen',value:function OpenParen(){return this.getToken(CommonRegexParser.OpenParen,0);}},{key:'QuestionMark',value:function QuestionMark(){return this.getToken(CommonRegexParser.QuestionMark,0);}},{key:'CloseParen',value:function CloseParen(){return this.getToken(CommonRegexParser.CloseParen,0);}},{key:'option_flag',value:function option_flag(i){if(i===undefined){return this.getRuleContexts(Option_flagContext);}else {return this.getRuleContext(i,Option_flagContext);}}}]);function OptionContext(parent,invokingState){classCallCheck(this,OptionContext);return possibleConstructorReturn(this,(OptionContext.__proto__||Object.getPrototypeOf(OptionContext)).call(this,parent,invokingState));}// @Override
	createClass(OptionContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterOption){listener.enterOption(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitOption){listener.exitOption(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitOption){return visitor.visitOption(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_option;}}]);return OptionContext;}(ParserRuleContext_1.ParserRuleContext);exports.OptionContext=OptionContext;var Option_flagContext=function(_ParserRuleContext_1$11){inherits(Option_flagContext,_ParserRuleContext_1$11);createClass(Option_flagContext,[{key:'ILC',value:function ILC(){return this.tryGetToken(CommonRegexParser.ILC,0);}},{key:'MLC',value:function MLC(){return this.tryGetToken(CommonRegexParser.MLC,0);}},{key:'SLC',value:function SLC(){return this.tryGetToken(CommonRegexParser.SLC,0);}}]);function Option_flagContext(parent,invokingState){classCallCheck(this,Option_flagContext);return possibleConstructorReturn(this,(Option_flagContext.__proto__||Object.getPrototypeOf(Option_flagContext)).call(this,parent,invokingState));}// @Override
	createClass(Option_flagContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterOption_flag){listener.enterOption_flag(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitOption_flag){listener.exitOption_flag(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitOption_flag){return visitor.visitOption_flag(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_option_flag;}}]);return Option_flagContext;}(ParserRuleContext_1.ParserRuleContext);exports.Option_flagContext=Option_flagContext;var AtomContext=function(_ParserRuleContext_1$12){inherits(AtomContext,_ParserRuleContext_1$12);createClass(AtomContext,[{key:'shared_atom',value:function shared_atom(){return this.tryGetRuleContext(0,Shared_atomContext);}},{key:'literal',value:function literal(){return this.tryGetRuleContext(0,LiteralContext);}},{key:'character_class',value:function character_class(){return this.tryGetRuleContext(0,Character_classContext);}},{key:'capture',value:function capture(){return this.tryGetRuleContext(0,CaptureContext);}},{key:'non_capture',value:function non_capture(){return this.tryGetRuleContext(0,Non_captureContext);}},{key:'option',value:function option(){return this.tryGetRuleContext(0,OptionContext);}},{key:'Dot',value:function Dot(){return this.tryGetToken(CommonRegexParser.Dot,0);}},{key:'Caret',value:function Caret(){return this.tryGetToken(CommonRegexParser.Caret,0);}},{key:'EndOfSubject',value:function EndOfSubject(){return this.tryGetToken(CommonRegexParser.EndOfSubject,0);}}]);function AtomContext(parent,invokingState){classCallCheck(this,AtomContext);return possibleConstructorReturn(this,(AtomContext.__proto__||Object.getPrototypeOf(AtomContext)).call(this,parent,invokingState));}// @Override
	createClass(AtomContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterAtom){listener.enterAtom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitAtom){listener.exitAtom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitAtom){return visitor.visitAtom(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_atom;}}]);return AtomContext;}(ParserRuleContext_1.ParserRuleContext);exports.AtomContext=AtomContext;var Cc_atomContext=function(_ParserRuleContext_1$13){inherits(Cc_atomContext,_ParserRuleContext_1$13);createClass(Cc_atomContext,[{key:'cc_literal',value:function cc_literal(i){if(i===undefined){return this.getRuleContexts(Cc_literalContext);}else {return this.getRuleContext(i,Cc_literalContext);}}},{key:'Hyphen',value:function Hyphen(){return this.tryGetToken(CommonRegexParser.Hyphen,0);}},{key:'shared_atom',value:function shared_atom(){return this.tryGetRuleContext(0,Shared_atomContext);}}]);function Cc_atomContext(parent,invokingState){classCallCheck(this,Cc_atomContext);return possibleConstructorReturn(this,(Cc_atomContext.__proto__||Object.getPrototypeOf(Cc_atomContext)).call(this,parent,invokingState));}// @Override
	createClass(Cc_atomContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterCc_atom){listener.enterCc_atom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitCc_atom){listener.exitCc_atom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitCc_atom){return visitor.visitCc_atom(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_cc_atom;}}]);return Cc_atomContext;}(ParserRuleContext_1.ParserRuleContext);exports.Cc_atomContext=Cc_atomContext;var Shared_atomContext=function(_ParserRuleContext_1$14){inherits(Shared_atomContext,_ParserRuleContext_1$14);createClass(Shared_atomContext,[{key:'ControlChar',value:function ControlChar(){return this.tryGetToken(CommonRegexParser.ControlChar,0);}},{key:'DecimalDigit',value:function DecimalDigit(){return this.tryGetToken(CommonRegexParser.DecimalDigit,0);}},{key:'NotDecimalDigit',value:function NotDecimalDigit(){return this.tryGetToken(CommonRegexParser.NotDecimalDigit,0);}},{key:'CharWithProperty',value:function CharWithProperty(){return this.tryGetToken(CommonRegexParser.CharWithProperty,0);}},{key:'CharWithoutProperty',value:function CharWithoutProperty(){return this.tryGetToken(CommonRegexParser.CharWithoutProperty,0);}},{key:'WhiteSpace',value:function WhiteSpace(){return this.tryGetToken(CommonRegexParser.WhiteSpace,0);}},{key:'NotWhiteSpace',value:function NotWhiteSpace(){return this.tryGetToken(CommonRegexParser.NotWhiteSpace,0);}},{key:'WordChar',value:function WordChar(){return this.tryGetToken(CommonRegexParser.WordChar,0);}},{key:'NotWordChar',value:function NotWordChar(){return this.tryGetToken(CommonRegexParser.NotWordChar,0);}}]);function Shared_atomContext(parent,invokingState){classCallCheck(this,Shared_atomContext);return possibleConstructorReturn(this,(Shared_atomContext.__proto__||Object.getPrototypeOf(Shared_atomContext)).call(this,parent,invokingState));}// @Override
	createClass(Shared_atomContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterShared_atom){listener.enterShared_atom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitShared_atom){listener.exitShared_atom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitShared_atom){return visitor.visitShared_atom(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_shared_atom;}}]);return Shared_atomContext;}(ParserRuleContext_1.ParserRuleContext);exports.Shared_atomContext=Shared_atomContext;var LiteralContext=function(_ParserRuleContext_1$15){inherits(LiteralContext,_ParserRuleContext_1$15);createClass(LiteralContext,[{key:'shared_literal',value:function shared_literal(){return this.tryGetRuleContext(0,Shared_literalContext);}},{key:'CharacterClassEnd',value:function CharacterClassEnd(){return this.tryGetToken(CommonRegexParser.CharacterClassEnd,0);}}]);function LiteralContext(parent,invokingState){classCallCheck(this,LiteralContext);return possibleConstructorReturn(this,(LiteralContext.__proto__||Object.getPrototypeOf(LiteralContext)).call(this,parent,invokingState));}// @Override
	createClass(LiteralContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterLiteral){listener.enterLiteral(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitLiteral){listener.exitLiteral(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitLiteral){return visitor.visitLiteral(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_literal;}}]);return LiteralContext;}(ParserRuleContext_1.ParserRuleContext);exports.LiteralContext=LiteralContext;var Cc_literalContext=function(_ParserRuleContext_1$16){inherits(Cc_literalContext,_ParserRuleContext_1$16);createClass(Cc_literalContext,[{key:'shared_literal',value:function shared_literal(){return this.tryGetRuleContext(0,Shared_literalContext);}},{key:'Dot',value:function Dot(){return this.tryGetToken(CommonRegexParser.Dot,0);}},{key:'CharacterClassStart',value:function CharacterClassStart(){return this.tryGetToken(CommonRegexParser.CharacterClassStart,0);}},{key:'Caret',value:function Caret(){return this.tryGetToken(CommonRegexParser.Caret,0);}},{key:'QuestionMark',value:function QuestionMark(){return this.tryGetToken(CommonRegexParser.QuestionMark,0);}},{key:'Plus',value:function Plus(){return this.tryGetToken(CommonRegexParser.Plus,0);}},{key:'Star',value:function Star(){return this.tryGetToken(CommonRegexParser.Star,0);}},{key:'EndOfSubject',value:function EndOfSubject(){return this.tryGetToken(CommonRegexParser.EndOfSubject,0);}},{key:'Pipe',value:function Pipe(){return this.tryGetToken(CommonRegexParser.Pipe,0);}},{key:'OpenParen',value:function OpenParen(){return this.tryGetToken(CommonRegexParser.OpenParen,0);}},{key:'CloseParen',value:function CloseParen(){return this.tryGetToken(CommonRegexParser.CloseParen,0);}}]);function Cc_literalContext(parent,invokingState){classCallCheck(this,Cc_literalContext);return possibleConstructorReturn(this,(Cc_literalContext.__proto__||Object.getPrototypeOf(Cc_literalContext)).call(this,parent,invokingState));}// @Override
	createClass(Cc_literalContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterCc_literal){listener.enterCc_literal(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitCc_literal){listener.exitCc_literal(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitCc_literal){return visitor.visitCc_literal(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_cc_literal;}}]);return Cc_literalContext;}(ParserRuleContext_1.ParserRuleContext);exports.Cc_literalContext=Cc_literalContext;var Shared_literalContext=function(_ParserRuleContext_1$17){inherits(Shared_literalContext,_ParserRuleContext_1$17);createClass(Shared_literalContext,[{key:'octal_char',value:function octal_char(){return this.tryGetRuleContext(0,Octal_charContext);}},{key:'letter',value:function letter(){return this.tryGetRuleContext(0,LetterContext);}},{key:'digit',value:function digit(){return this.tryGetRuleContext(0,DigitContext);}},{key:'BellChar',value:function BellChar(){return this.tryGetToken(CommonRegexParser.BellChar,0);}},{key:'EscapeChar',value:function EscapeChar(){return this.tryGetToken(CommonRegexParser.EscapeChar,0);}},{key:'FormFeed',value:function FormFeed(){return this.tryGetToken(CommonRegexParser.FormFeed,0);}},{key:'NewLine',value:function NewLine(){return this.tryGetToken(CommonRegexParser.NewLine,0);}},{key:'CarriageReturn',value:function CarriageReturn(){return this.tryGetToken(CommonRegexParser.CarriageReturn,0);}},{key:'Tab',value:function Tab(){return this.tryGetToken(CommonRegexParser.Tab,0);}},{key:'HexChar',value:function HexChar(){return this.tryGetToken(CommonRegexParser.HexChar,0);}},{key:'Quoted',value:function Quoted(){return this.tryGetToken(CommonRegexParser.Quoted,0);}},{key:'BlockQuoted',value:function BlockQuoted(){return this.tryGetToken(CommonRegexParser.BlockQuoted,0);}},{key:'OpenBrace',value:function OpenBrace(){return this.tryGetToken(CommonRegexParser.OpenBrace,0);}},{key:'CloseBrace',value:function CloseBrace(){return this.tryGetToken(CommonRegexParser.CloseBrace,0);}},{key:'Comma',value:function Comma(){return this.tryGetToken(CommonRegexParser.Comma,0);}},{key:'Hyphen',value:function Hyphen(){return this.tryGetToken(CommonRegexParser.Hyphen,0);}},{key:'LessThan',value:function LessThan(){return this.tryGetToken(CommonRegexParser.LessThan,0);}},{key:'GreaterThan',value:function GreaterThan(){return this.tryGetToken(CommonRegexParser.GreaterThan,0);}},{key:'SingleQuote',value:function SingleQuote(){return this.tryGetToken(CommonRegexParser.SingleQuote,0);}},{key:'Underscore',value:function Underscore(){return this.tryGetToken(CommonRegexParser.Underscore,0);}},{key:'Colon',value:function Colon(){return this.tryGetToken(CommonRegexParser.Colon,0);}},{key:'Hash',value:function Hash(){return this.tryGetToken(CommonRegexParser.Hash,0);}},{key:'Equals',value:function Equals(){return this.tryGetToken(CommonRegexParser.Equals,0);}},{key:'Exclamation',value:function Exclamation(){return this.tryGetToken(CommonRegexParser.Exclamation,0);}},{key:'Ampersand',value:function Ampersand(){return this.tryGetToken(CommonRegexParser.Ampersand,0);}},{key:'OtherChar',value:function OtherChar(){return this.tryGetToken(CommonRegexParser.OtherChar,0);}}]);function Shared_literalContext(parent,invokingState){classCallCheck(this,Shared_literalContext);return possibleConstructorReturn(this,(Shared_literalContext.__proto__||Object.getPrototypeOf(Shared_literalContext)).call(this,parent,invokingState));}// @Override
	createClass(Shared_literalContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterShared_literal){listener.enterShared_literal(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitShared_literal){listener.exitShared_literal(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitShared_literal){return visitor.visitShared_literal(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_shared_literal;}}]);return Shared_literalContext;}(ParserRuleContext_1.ParserRuleContext);exports.Shared_literalContext=Shared_literalContext;var NumberContext=function(_ParserRuleContext_1$18){inherits(NumberContext,_ParserRuleContext_1$18);createClass(NumberContext,[{key:'digits',value:function digits(){return this.getRuleContext(0,DigitsContext);}}]);function NumberContext(parent,invokingState){classCallCheck(this,NumberContext);return possibleConstructorReturn(this,(NumberContext.__proto__||Object.getPrototypeOf(NumberContext)).call(this,parent,invokingState));}// @Override
	createClass(NumberContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterNumber){listener.enterNumber(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitNumber){listener.exitNumber(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitNumber){return visitor.visitNumber(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_number;}}]);return NumberContext;}(ParserRuleContext_1.ParserRuleContext);exports.NumberContext=NumberContext;var Octal_charContext=function(_ParserRuleContext_1$19){inherits(Octal_charContext,_ParserRuleContext_1$19);createClass(Octal_charContext,[{key:'Backslash',value:function Backslash(){return this.tryGetToken(CommonRegexParser.Backslash,0);}},{key:'octal_digit',value:function octal_digit(i){if(i===undefined){return this.getRuleContexts(Octal_digitContext);}else {return this.getRuleContext(i,Octal_digitContext);}}},{key:'D0',value:function D0(){return this.tryGetToken(CommonRegexParser.D0,0);}},{key:'D1',value:function D1(){return this.tryGetToken(CommonRegexParser.D1,0);}},{key:'D2',value:function D2(){return this.tryGetToken(CommonRegexParser.D2,0);}},{key:'D3',value:function D3(){return this.tryGetToken(CommonRegexParser.D3,0);}}]);function Octal_charContext(parent,invokingState){classCallCheck(this,Octal_charContext);return possibleConstructorReturn(this,(Octal_charContext.__proto__||Object.getPrototypeOf(Octal_charContext)).call(this,parent,invokingState));}// @Override
	createClass(Octal_charContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterOctal_char){listener.enterOctal_char(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitOctal_char){listener.exitOctal_char(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitOctal_char){return visitor.visitOctal_char(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_octal_char;}}]);return Octal_charContext;}(ParserRuleContext_1.ParserRuleContext);exports.Octal_charContext=Octal_charContext;var Octal_digitContext=function(_ParserRuleContext_1$20){inherits(Octal_digitContext,_ParserRuleContext_1$20);createClass(Octal_digitContext,[{key:'D0',value:function D0(){return this.tryGetToken(CommonRegexParser.D0,0);}},{key:'D1',value:function D1(){return this.tryGetToken(CommonRegexParser.D1,0);}},{key:'D2',value:function D2(){return this.tryGetToken(CommonRegexParser.D2,0);}},{key:'D3',value:function D3(){return this.tryGetToken(CommonRegexParser.D3,0);}},{key:'D4',value:function D4(){return this.tryGetToken(CommonRegexParser.D4,0);}},{key:'D5',value:function D5(){return this.tryGetToken(CommonRegexParser.D5,0);}},{key:'D6',value:function D6(){return this.tryGetToken(CommonRegexParser.D6,0);}},{key:'D7',value:function D7(){return this.tryGetToken(CommonRegexParser.D7,0);}}]);function Octal_digitContext(parent,invokingState){classCallCheck(this,Octal_digitContext);return possibleConstructorReturn(this,(Octal_digitContext.__proto__||Object.getPrototypeOf(Octal_digitContext)).call(this,parent,invokingState));}// @Override
	createClass(Octal_digitContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterOctal_digit){listener.enterOctal_digit(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitOctal_digit){listener.exitOctal_digit(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitOctal_digit){return visitor.visitOctal_digit(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_octal_digit;}}]);return Octal_digitContext;}(ParserRuleContext_1.ParserRuleContext);exports.Octal_digitContext=Octal_digitContext;var DigitsContext=function(_ParserRuleContext_1$21){inherits(DigitsContext,_ParserRuleContext_1$21);createClass(DigitsContext,[{key:'digit',value:function digit(i){if(i===undefined){return this.getRuleContexts(DigitContext);}else {return this.getRuleContext(i,DigitContext);}}}]);function DigitsContext(parent,invokingState){classCallCheck(this,DigitsContext);return possibleConstructorReturn(this,(DigitsContext.__proto__||Object.getPrototypeOf(DigitsContext)).call(this,parent,invokingState));}// @Override
	createClass(DigitsContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterDigits){listener.enterDigits(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitDigits){listener.exitDigits(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitDigits){return visitor.visitDigits(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_digits;}}]);return DigitsContext;}(ParserRuleContext_1.ParserRuleContext);exports.DigitsContext=DigitsContext;var DigitContext=function(_ParserRuleContext_1$22){inherits(DigitContext,_ParserRuleContext_1$22);createClass(DigitContext,[{key:'D0',value:function D0(){return this.tryGetToken(CommonRegexParser.D0,0);}},{key:'D1',value:function D1(){return this.tryGetToken(CommonRegexParser.D1,0);}},{key:'D2',value:function D2(){return this.tryGetToken(CommonRegexParser.D2,0);}},{key:'D3',value:function D3(){return this.tryGetToken(CommonRegexParser.D3,0);}},{key:'D4',value:function D4(){return this.tryGetToken(CommonRegexParser.D4,0);}},{key:'D5',value:function D5(){return this.tryGetToken(CommonRegexParser.D5,0);}},{key:'D6',value:function D6(){return this.tryGetToken(CommonRegexParser.D6,0);}},{key:'D7',value:function D7(){return this.tryGetToken(CommonRegexParser.D7,0);}},{key:'D8',value:function D8(){return this.tryGetToken(CommonRegexParser.D8,0);}},{key:'D9',value:function D9(){return this.tryGetToken(CommonRegexParser.D9,0);}}]);function DigitContext(parent,invokingState){classCallCheck(this,DigitContext);return possibleConstructorReturn(this,(DigitContext.__proto__||Object.getPrototypeOf(DigitContext)).call(this,parent,invokingState));}// @Override
	createClass(DigitContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterDigit){listener.enterDigit(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitDigit){listener.exitDigit(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitDigit){return visitor.visitDigit(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_digit;}}]);return DigitContext;}(ParserRuleContext_1.ParserRuleContext);exports.DigitContext=DigitContext;var NameContext=function(_ParserRuleContext_1$23){inherits(NameContext,_ParserRuleContext_1$23);createClass(NameContext,[{key:'alpha_nums',value:function alpha_nums(){return this.getRuleContext(0,Alpha_numsContext);}}]);function NameContext(parent,invokingState){classCallCheck(this,NameContext);return possibleConstructorReturn(this,(NameContext.__proto__||Object.getPrototypeOf(NameContext)).call(this,parent,invokingState));}// @Override
	createClass(NameContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterName){listener.enterName(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitName){listener.exitName(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitName){return visitor.visitName(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_name;}}]);return NameContext;}(ParserRuleContext_1.ParserRuleContext);exports.NameContext=NameContext;var Alpha_numsContext=function(_ParserRuleContext_1$24){inherits(Alpha_numsContext,_ParserRuleContext_1$24);createClass(Alpha_numsContext,[{key:'letter',value:function letter(i){if(i===undefined){return this.getRuleContexts(LetterContext);}else {return this.getRuleContext(i,LetterContext);}}},{key:'Underscore',value:function Underscore(i){if(i===undefined){return this.getTokens(CommonRegexParser.Underscore);}else {return this.getToken(CommonRegexParser.Underscore,i);}}},{key:'digit',value:function digit(i){if(i===undefined){return this.getRuleContexts(DigitContext);}else {return this.getRuleContext(i,DigitContext);}}}]);function Alpha_numsContext(parent,invokingState){classCallCheck(this,Alpha_numsContext);return possibleConstructorReturn(this,(Alpha_numsContext.__proto__||Object.getPrototypeOf(Alpha_numsContext)).call(this,parent,invokingState));}// @Override
	createClass(Alpha_numsContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterAlpha_nums){listener.enterAlpha_nums(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitAlpha_nums){listener.exitAlpha_nums(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitAlpha_nums){return visitor.visitAlpha_nums(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_alpha_nums;}}]);return Alpha_numsContext;}(ParserRuleContext_1.ParserRuleContext);exports.Alpha_numsContext=Alpha_numsContext;var Non_close_parensContext=function(_ParserRuleContext_1$25){inherits(Non_close_parensContext,_ParserRuleContext_1$25);createClass(Non_close_parensContext,[{key:'non_close_paren',value:function non_close_paren(i){if(i===undefined){return this.getRuleContexts(Non_close_parenContext);}else {return this.getRuleContext(i,Non_close_parenContext);}}}]);function Non_close_parensContext(parent,invokingState){classCallCheck(this,Non_close_parensContext);return possibleConstructorReturn(this,(Non_close_parensContext.__proto__||Object.getPrototypeOf(Non_close_parensContext)).call(this,parent,invokingState));}// @Override
	createClass(Non_close_parensContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterNon_close_parens){listener.enterNon_close_parens(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitNon_close_parens){listener.exitNon_close_parens(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitNon_close_parens){return visitor.visitNon_close_parens(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_non_close_parens;}}]);return Non_close_parensContext;}(ParserRuleContext_1.ParserRuleContext);exports.Non_close_parensContext=Non_close_parensContext;var Non_close_parenContext=function(_ParserRuleContext_1$26){inherits(Non_close_parenContext,_ParserRuleContext_1$26);createClass(Non_close_parenContext,[{key:'CloseParen',value:function CloseParen(){return this.getToken(CommonRegexParser.CloseParen,0);}}]);function Non_close_parenContext(parent,invokingState){classCallCheck(this,Non_close_parenContext);return possibleConstructorReturn(this,(Non_close_parenContext.__proto__||Object.getPrototypeOf(Non_close_parenContext)).call(this,parent,invokingState));}// @Override
	createClass(Non_close_parenContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterNon_close_paren){listener.enterNon_close_paren(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitNon_close_paren){listener.exitNon_close_paren(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitNon_close_paren){return visitor.visitNon_close_paren(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_non_close_paren;}}]);return Non_close_parenContext;}(ParserRuleContext_1.ParserRuleContext);exports.Non_close_parenContext=Non_close_parenContext;var LetterContext=function(_ParserRuleContext_1$27){inherits(LetterContext,_ParserRuleContext_1$27);createClass(LetterContext,[{key:'ALC',value:function ALC(){return this.tryGetToken(CommonRegexParser.ALC,0);}},{key:'BLC',value:function BLC(){return this.tryGetToken(CommonRegexParser.BLC,0);}},{key:'CLC',value:function CLC(){return this.tryGetToken(CommonRegexParser.CLC,0);}},{key:'DLC',value:function DLC(){return this.tryGetToken(CommonRegexParser.DLC,0);}},{key:'ELC',value:function ELC(){return this.tryGetToken(CommonRegexParser.ELC,0);}},{key:'FLC',value:function FLC(){return this.tryGetToken(CommonRegexParser.FLC,0);}},{key:'GLC',value:function GLC(){return this.tryGetToken(CommonRegexParser.GLC,0);}},{key:'HLC',value:function HLC(){return this.tryGetToken(CommonRegexParser.HLC,0);}},{key:'ILC',value:function ILC(){return this.tryGetToken(CommonRegexParser.ILC,0);}},{key:'JLC',value:function JLC(){return this.tryGetToken(CommonRegexParser.JLC,0);}},{key:'KLC',value:function KLC(){return this.tryGetToken(CommonRegexParser.KLC,0);}},{key:'LLC',value:function LLC(){return this.tryGetToken(CommonRegexParser.LLC,0);}},{key:'MLC',value:function MLC(){return this.tryGetToken(CommonRegexParser.MLC,0);}},{key:'NLC',value:function NLC(){return this.tryGetToken(CommonRegexParser.NLC,0);}},{key:'OLC',value:function OLC(){return this.tryGetToken(CommonRegexParser.OLC,0);}},{key:'PLC',value:function PLC(){return this.tryGetToken(CommonRegexParser.PLC,0);}},{key:'QLC',value:function QLC(){return this.tryGetToken(CommonRegexParser.QLC,0);}},{key:'RLC',value:function RLC(){return this.tryGetToken(CommonRegexParser.RLC,0);}},{key:'SLC',value:function SLC(){return this.tryGetToken(CommonRegexParser.SLC,0);}},{key:'TLC',value:function TLC(){return this.tryGetToken(CommonRegexParser.TLC,0);}},{key:'ULC',value:function ULC(){return this.tryGetToken(CommonRegexParser.ULC,0);}},{key:'VLC',value:function VLC(){return this.tryGetToken(CommonRegexParser.VLC,0);}},{key:'WLC',value:function WLC(){return this.tryGetToken(CommonRegexParser.WLC,0);}},{key:'XLC',value:function XLC(){return this.tryGetToken(CommonRegexParser.XLC,0);}},{key:'YLC',value:function YLC(){return this.tryGetToken(CommonRegexParser.YLC,0);}},{key:'ZLC',value:function ZLC(){return this.tryGetToken(CommonRegexParser.ZLC,0);}},{key:'AUC',value:function AUC(){return this.tryGetToken(CommonRegexParser.AUC,0);}},{key:'BUC',value:function BUC(){return this.tryGetToken(CommonRegexParser.BUC,0);}},{key:'CUC',value:function CUC(){return this.tryGetToken(CommonRegexParser.CUC,0);}},{key:'DUC',value:function DUC(){return this.tryGetToken(CommonRegexParser.DUC,0);}},{key:'EUC',value:function EUC(){return this.tryGetToken(CommonRegexParser.EUC,0);}},{key:'FUC',value:function FUC(){return this.tryGetToken(CommonRegexParser.FUC,0);}},{key:'GUC',value:function GUC(){return this.tryGetToken(CommonRegexParser.GUC,0);}},{key:'HUC',value:function HUC(){return this.tryGetToken(CommonRegexParser.HUC,0);}},{key:'IUC',value:function IUC(){return this.tryGetToken(CommonRegexParser.IUC,0);}},{key:'JUC',value:function JUC(){return this.tryGetToken(CommonRegexParser.JUC,0);}},{key:'KUC',value:function KUC(){return this.tryGetToken(CommonRegexParser.KUC,0);}},{key:'LUC',value:function LUC(){return this.tryGetToken(CommonRegexParser.LUC,0);}},{key:'MUC',value:function MUC(){return this.tryGetToken(CommonRegexParser.MUC,0);}},{key:'NUC',value:function NUC(){return this.tryGetToken(CommonRegexParser.NUC,0);}},{key:'OUC',value:function OUC(){return this.tryGetToken(CommonRegexParser.OUC,0);}},{key:'PUC',value:function PUC(){return this.tryGetToken(CommonRegexParser.PUC,0);}},{key:'QUC',value:function QUC(){return this.tryGetToken(CommonRegexParser.QUC,0);}},{key:'RUC',value:function RUC(){return this.tryGetToken(CommonRegexParser.RUC,0);}},{key:'SUC',value:function SUC(){return this.tryGetToken(CommonRegexParser.SUC,0);}},{key:'TUC',value:function TUC(){return this.tryGetToken(CommonRegexParser.TUC,0);}},{key:'UUC',value:function UUC(){return this.tryGetToken(CommonRegexParser.UUC,0);}},{key:'VUC',value:function VUC(){return this.tryGetToken(CommonRegexParser.VUC,0);}},{key:'WUC',value:function WUC(){return this.tryGetToken(CommonRegexParser.WUC,0);}},{key:'XUC',value:function XUC(){return this.tryGetToken(CommonRegexParser.XUC,0);}},{key:'YUC',value:function YUC(){return this.tryGetToken(CommonRegexParser.YUC,0);}},{key:'ZUC',value:function ZUC(){return this.tryGetToken(CommonRegexParser.ZUC,0);}}]);function LetterContext(parent,invokingState){classCallCheck(this,LetterContext);return possibleConstructorReturn(this,(LetterContext.__proto__||Object.getPrototypeOf(LetterContext)).call(this,parent,invokingState));}// @Override
	createClass(LetterContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterLetter){listener.enterLetter(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitLetter){listener.exitLetter(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitLetter){return visitor.visitLetter(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return CommonRegexParser.RULE_letter;}}]);return LetterContext;}(ParserRuleContext_1.ParserRuleContext);exports.LetterContext=LetterContext;},{"antlr4ts/NoViableAltException":236,"antlr4ts/Parser":237,"antlr4ts/ParserRuleContext":239,"antlr4ts/RecognitionException":242,"antlr4ts/Token":248,"antlr4ts/VocabularyImpl":250,"antlr4ts/atn/ATNDeserializer":255,"antlr4ts/atn/ParserATNSimulator":292,"antlr4ts/misc/Utils":337}],190:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */__export(require("./CommonRegexLexer"));__export(require("./CommonRegexParser"));},{"./CommonRegexLexer":188,"./CommonRegexParser":189}],191:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * locale info of decimal, thousands, grouping and currency.
	 */exports.localeInfo={'ar-MA':{currency:['\u062F.\u0645. ',''],decimal:',',thousands:'.',grouping:[3]},'en-IN':{currency:['\u20B9',''],decimal:'.',thousands:',',grouping:[3,2,2,2,2,2,2,2,2,2]},'ar-BH':{currency:['',' \u062F.\u0628.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-PS':{currency:['\u20AA ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'en-IE':{currency:['\u20AC',''],decimal:'.',thousands:',',grouping:[3]},'it-IT':{currency:['\u20AC',''],decimal:',',thousands:'.',grouping:[3]},'ar-EG':{currency:['',' \u062C.\u0645.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-IQ':{currency:['',' \u062F.\u0639.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-EH':{currency:['\u062F.\u0645. ',''],decimal:'.',thousands:',',grouping:[3]},'ar-AE':{currency:['',' \u062F.\u0625.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-MR':{currency:['',' \u0623.\u0645.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'uk-UA':{currency:['','\xA0\u20B4.'],decimal:',',thousands:'\xA0',grouping:[3]},'ca-ES':{currency:['','\xA0\u20AC'],decimal:',',thousands:'.',grouping:[3]},'sv-SE':{currency:['',' kr'],decimal:',',thousands:'\xA0',grouping:[3]},'ja-JP':{currency:['','\u5186'],decimal:'.',thousands:',',grouping:[3]},'es-ES':{currency:['','\xA0\u20AC'],decimal:',',thousands:'.',grouping:[3]},'fi-FI':{currency:['','\xA0\u20AC'],decimal:',',thousands:'\xA0',grouping:[3]},'ar-DZ':{currency:['\u062F.\u062C. ',''],decimal:',',thousands:'.',grouping:[3]},'en-GB':{currency:['\xA3',''],decimal:'.',thousands:',',grouping:[3]},'cs-CZ':{currency:['','\xA0K\u010D'],decimal:',',thousands:'\xA0',grouping:[3]},'ar-TD':{currency:['\u200FFCFA ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'de-CH':{currency:['','\xA0CHF'],decimal:',',thousands:"'",grouping:[3]},'nl-NL':{currency:['\u20AC\xA0',''],decimal:',',thousands:'.',grouping:[3]},'es-BO':{currency:['Bs\xA0',''],decimal:',',percent:'\u202F%',thousands:'.',grouping:[3]},'ar-SY':{currency:['',' \u0644.\u0633.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-JO':{currency:['',' \u062F.\u0623.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'en-CA':{currency:['$',''],decimal:'.',thousands:',',grouping:[3]},'ar-ER':{currency:['Nfk ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-LB':{currency:['',' \u0644.\u0644.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'fr-CA':{currency:['','$'],decimal:',',thousands:'\xA0',grouping:[3]},'ar-TN':{currency:['\u062F.\u062A. ',''],decimal:',',thousands:'.',grouping:[3]},'ar-YE':{currency:['',' \u0631.\u0649.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ru-RU':{currency:['','\xA0\u0440\u0443\u0431.'],decimal:',',thousands:'\xA0',grouping:[3]},'en-US':{currency:['$',''],decimal:'.',thousands:',',grouping:[3]},'ar-SS':{currency:['\xA3 ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-SO':{currency:['\u200FS ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'hu-HU':{currency:['','\xA0Ft'],decimal:',',thousands:'\xA0',grouping:[3]},'pt-BR':{currency:['R$',''],decimal:',',thousands:'.',grouping:[3]},'ar-DJ':{currency:['\u200FFdj ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-SD':{currency:['',' \u062C.\u0633.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-001':{currency:['',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-LY':{currency:['\u062F.\u0644. ',''],decimal:',',thousands:'.',grouping:[3]},'ar-SA':{currency:['',' \u0631.\u0633.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'ar-KW':{currency:['',' \u062F.\u0643.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'pl-PL':{currency:['','z\u0142'],decimal:',',thousands:'.',grouping:[3]},'ar-QA':{currency:['',' \u0631.\u0642.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'mk-MK':{currency:['','\xA0\u0434\u0435\u043D.'],decimal:',',thousands:'.',grouping:[3]},'ko-KR':{currency:['\u20A9',''],decimal:'.',thousands:',',grouping:[3]},'es-MX':{currency:['$',''],decimal:'.',thousands:',',grouping:[3]},'ar-IL':{currency:['\u20AA ',''],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'zh-CN':{currency:['\xA5',''],decimal:'.',thousands:',',grouping:[3]},'de-DE':{currency:['','\xA0\u20AC'],decimal:',',thousands:'.',grouping:[3]},'ar-OM':{currency:['',' \u0631.\u0639.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'fr-FR':{currency:['','\xA0\u20AC'],decimal:',',percent:'\u202F%',thousands:'\xA0',grouping:[3]},'ar-KM':{currency:['',' \u0641.\u062C.\u0642.'],decimal:'\u066B',thousands:'\u066C',numerals:['\u0660','\u0661','\u0662','\u0663','\u0664','\u0665','\u0666','\u0667','\u0668','\u0669'],grouping:[3]},'he-IL':{currency:['\u20AA',''],decimal:'.',thousands:',',grouping:[3]}};},{}],192:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});__export(require("./simpleObjectMemory"));__export(require("./stackedMemory"));},{"./simpleObjectMemory":193,"./stackedMemory":194}],193:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});var extensions_1=require("../extensions");var functionUtils_internal_1=require("../functionUtils.internal");/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 *//**
	 * Simple implement of MemoryInterface
	 */var SimpleObjectMemory=function(){/**
	     * Initializes a new instance of the [SimpleObjectMemory](xref:adaptive-expressions.SimpleObjectMemory) class.
	     * This wraps a simple object as [MemoryInterface](xref:adaptive-expressions.MemoryInterface).
	     * @param memory The object to wrap.
	     */function SimpleObjectMemory(memory){classCallCheck(this,SimpleObjectMemory);this.memory=undefined;this.memory=memory;}/**
	     * Transfer an common object to simple memory.
	     * @param obj  Common object.
	     * @returns Simple memory instance.
	     */createClass(SimpleObjectMemory,[{key:'getValue',/**
	     * Gets the value from a given path.
	     * @param path Given path.
	     * @returns The value in the given path or undefined.
	     */value:function getValue(path){if(this.memory===undefined||path.length===0){return undefined;}var parts=path.split(/[.\[\]]+/).filter(function(u){return u!==undefined&&u!=='';}).map(function(u){if(u.startsWith('"')&&u.endsWith('"')||u.startsWith("'")&&u.endsWith("'")){return u.substr(1,u.length-2);}else {return u;}});var value=void 0;var curScope=this.memory;var _iteratorNormalCompletion27=true;var _didIteratorError27=false;var _iteratorError27=undefined;try{for(var _iterator27=parts[Symbol.iterator](),_step27;!(_iteratorNormalCompletion27=(_step27=_iterator27.next()).done);_iteratorNormalCompletion27=true){var part=_step27.value;var error=void 0;var idx=parseInt(part);if(!isNaN(idx)&&Array.isArray(curScope)){var _functionUtils_intern40=functionUtils_internal_1.InternalFunctionUtils.accessIndex(curScope,idx);value=_functionUtils_intern40.value;error=_functionUtils_intern40.error;}else {var _functionUtils_intern41=functionUtils_internal_1.InternalFunctionUtils.accessProperty(curScope,part);value=_functionUtils_intern41.value;error=_functionUtils_intern41.error;}if(error){return undefined;}curScope=value;}}catch(err){_didIteratorError27=true;_iteratorError27=err;}finally{try{if(!_iteratorNormalCompletion27&&_iterator27.return){_iterator27.return();}}finally{if(_didIteratorError27){throw _iteratorError27;}}}return value;}/**
	     * In this simple object scope, we don't allow you to set a path in which some parts in middle don't exist
	     * for example
	     * if you set dialog.a.b = x, but dialog.a don't exist, this will result in an error
	     * because we can't and shouldn't smart create structure in the middle
	     * you can implement a customzied Scope that support such behavior
	     */},{key:'setValue',value:function setValue(path,input){if(this.memory===undefined){return;}var parts=path.split(/[.\[\]]+/).filter(function(u){return u!==undefined&&u!=='';}).map(function(u){if(u.startsWith('"')&&u.endsWith('"')||u.startsWith("'")&&u.endsWith("'")){return u.substr(1,u.length-2);}else {return u;}});var curScope=this.memory;var curPath='';var error=undefined;// find the 2nd last value, ie, the container
	for(var i=0;i<parts.length-1;i++){var _idx=parseInt(parts[i]);if(!isNaN(_idx)&&Array.isArray(curScope)){curPath='['+parts[i]+']';var _functionUtils_intern42=functionUtils_internal_1.InternalFunctionUtils.accessIndex(curScope,_idx);curScope=_functionUtils_intern42.value;error=_functionUtils_intern42.error;}else {curPath='.'+parts[i];var _functionUtils_intern43=functionUtils_internal_1.InternalFunctionUtils.accessProperty(curScope,parts[i]);curScope=_functionUtils_intern43.value;error=_functionUtils_intern43.error;}if(error){return;}if(curScope===undefined){curPath=curPath.replace(/(^\.*)/g,'');return;}}// set the last value
	var idx=parseInt(parts[parts.length-1]);if(!isNaN(idx)){if(Array.isArray(curScope)){if(idx>curScope.length){error=idx+' index out of range';}else if(idx===curScope.length){curScope.push(input);}else {curScope[idx]=input;}}else {error='set value for an index to a non-list object';}if(error){return;}}else {error=this.setProperty(curScope,parts[parts.length-1],input).error;if(error){return;}}return;}/**
	     * Returns the version info of [SimpleObjectMemory](xref:adaptive-expressions.SimpleObjectMemory).
	     * @returns A string value representing the version info.
	     */},{key:'version',value:function version(){return this.toString();}/**
	     * Returns a string that represents the current [SimpleObjectMemory](xref:adaptive-expressions.SimpleObjectMemory) object.
	     * @returns A string value representing the current [SimpleObjectMemory](xref:adaptive-expressions.SimpleObjectMemory) object.
	     */},{key:'toString',value:function toString(){return JSON.stringify(this.memory,this.getCircularReplacer());}/**
	     * @private
	     */},{key:'getCircularReplacer',value:function getCircularReplacer(){var seen=new WeakSet();return function(_key,value){if((typeof value==='undefined'?'undefined':_typeof(value))==='object'&&value){if(seen.has(value)){return;}seen.add(value);}return value;};}/**
	     * @private
	     */},{key:'setProperty',value:function setProperty(instance,property,value){var result=value;if(instance instanceof Map){instance.set(property,value);}else {instance[property]=value;}return {value:result,error:undefined};}}],[{key:'wrap',value:function wrap(obj){if(extensions_1.Extensions.isMemoryInterface(obj)){return obj;}return new SimpleObjectMemory(obj);}}]);return SimpleObjectMemory;}();exports.SimpleObjectMemory=SimpleObjectMemory;},{"../extensions":184,"../functionUtils.internal":186}],194:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 *//**
	 * Stack implements of MemoryInterface.
	 * Memory variables have a hierarchical relationship.
	 */var StackedMemory=function(_Array){inherits(StackedMemory,_Array);function StackedMemory(){classCallCheck(this,StackedMemory);return possibleConstructorReturn(this,(StackedMemory.__proto__||Object.getPrototypeOf(StackedMemory)).apply(this,arguments));}createClass(StackedMemory,[{key:'getValue',/**
	     * Gets the value from a given path.
	     * @param path Given path.
	     * @returns The value from the given path if found, otherwise, undefined.
	     */value:function getValue(path){if(this.length===0){return undefined;}else {var _iteratorNormalCompletion28=true;var _didIteratorError28=false;var _iteratorError28=undefined;try{for(var _iterator28=Array.from(this).reverse()[Symbol.iterator](),_step28;!(_iteratorNormalCompletion28=(_step28=_iterator28.next()).done);_iteratorNormalCompletion28=true){var memory=_step28.value;if(memory.getValue(path)!==undefined){return memory.getValue(path);}}}catch(err){_didIteratorError28=true;_iteratorError28=err;}finally{try{if(!_iteratorNormalCompletion28&&_iterator28.return){_iterator28.return();}}finally{if(_didIteratorError28){throw _iteratorError28;}}}return undefined;}}/**
	     * Sets value to a given path.
	     * @param _path Memory path.
	     * @param _value Value to set.
	     */},{key:'setValue',value:function setValue(_path,_value){throw new Error('Can\'t set value to '+_path+', stacked memory is read-only');}/**
	     * Gets the version of the current [StackedMemory](xref:adaptive-expressions.StackedMemory).
	     * @returns A string value representing the version.
	     */},{key:'version',value:function version(){return '0';}}],[{key:'wrap',/**
	     * Wraps an object that implements [MemoryInterface](xref:adaptive-expressions.MemoryInterface) into a [StackedMemory](xref:adaptive-expressions.StackedMemory) object.
	     * @param memory An object that implements [MemoryInterface](xref:adaptive-expressions.MemoryInterface).
	     * @returns A [StackedMemory](xref:adaptive-expressions.StackedMemory) object.
	     */value:function wrap(memory){if(memory instanceof StackedMemory){return memory;}else {var stackedMemory=new StackedMemory();stackedMemory.push(memory);return stackedMemory;}}}]);return StackedMemory;}(Array);exports.StackedMemory=StackedMemory;},{}],195:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Options used to define evaluation behaviors.
	 */var Options=/**
	     * Initializes a new instance of the [Options](xref:adaptive-expressions.Options) class.
	     * @param opt Optional. An [Options](xref:adaptive-expressions.Options) instance.
	     */function Options(opt){classCallCheck(this,Options);this.nullSubstitution=opt?opt.nullSubstitution:undefined;this.locale=opt?opt.locale:undefined;};exports.Options=Options;},{}],196:[function(require,module,exports){var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var antlr4ts_1=require("antlr4ts");var tree_1=require("antlr4ts/tree");var constant_1=require("../constant");var expression_1=require("../expression");var expressionType_1=require("../expressionType");var generated_1=require("./generated");var ep=__importStar(require("./generated/ExpressionAntlrParser"));var parseErrorListener_1=require("./parseErrorListener");/**
	 * Parser to turn strings into Expression
	 */var ExpressionParser=function(){/**
	     * Initializes a new instance of the [ExpressionParser](xref:adaptive-expressions.ExpressionParser) class.
	     * @param lookup [EvaluatorLookup](xref:adaptive-expressions.EvaluatorLookup) for information from type string.
	     */function ExpressionParser(lookup){classCallCheck(this,ExpressionParser);this.ExpressionTransformer=function(_tree_1$AbstractParse){inherits(_class,_tree_1$AbstractParse);function _class(lookup){classCallCheck(this,_class);var _this197=possibleConstructorReturn(this,(_class.__proto__||Object.getPrototypeOf(_class)).call(this));_this197.escapeRegex=new RegExp(/\\[^\r\n]?/g);_this197._lookupFunction=undefined;_this197.transform=function(context){return _this197.visit(context);};_this197.visitParenthesisExp=function(context){return _this197.visit(context.expression());};_this197.defaultResult=function(){return new constant_1.Constant('');};_this197.makeExpression=function(functionType){var _expression_1$Express2;for(var _len7=arguments.length,children=Array(_len7>1?_len7-1:0),_key8=1;_key8<_len7;_key8++){children[_key8-1]=arguments[_key8];}if(!_this197._lookupFunction(functionType)){throw new Error(functionType+' does not have an evaluator, it\'s not a built-in function or a custom function.');}return (_expression_1$Express2=expression_1.Expression).makeExpression.apply(_expression_1$Express2,[functionType,_this197._lookupFunction(functionType)].concat(children));};_this197._lookupFunction=lookup;return _this197;}createClass(_class,[{key:'visitUnaryOpExp',value:function visitUnaryOpExp(context){var unaryOperationName=context.getChild(0).text;var operand=this.visit(context.expression());if(unaryOperationName===expressionType_1.ExpressionType.Subtract||unaryOperationName===expressionType_1.ExpressionType.Add){return this.makeExpression(unaryOperationName,new constant_1.Constant(0),operand);}return this.makeExpression(unaryOperationName,operand);}},{key:'visitBinaryOpExp',value:function visitBinaryOpExp(context){var binaryOperationName=context.getChild(1).text;var left=this.visit(context.expression(0));var right=this.visit(context.expression(1));return this.makeExpression(binaryOperationName,left,right);}},{key:'visitTripleOpExp',value:function visitTripleOpExp(context){var conditionalExpression=this.visit(context.expression(0));var left=this.visit(context.expression(1));var right=this.visit(context.expression(2));return this.makeExpression(expressionType_1.ExpressionType.If,conditionalExpression,left,right);}},{key:'visitFuncInvokeExp',value:function visitFuncInvokeExp(context){var parameters=this.processArgsList(context.argsList());// Remove the check to check primaryExpression is just an IDENTIFIER to support "." in template name
	var functionName=context.primaryExpression().text;if(context.NON()!==undefined){functionName+=context.NON().text;}return this.makeExpression.apply(this,[functionName].concat(toConsumableArray(parameters)));}},{key:'visitIdAtom',value:function visitIdAtom(context){var result=void 0;var symbol=context.text;if(symbol==='false'){result=new constant_1.Constant(false);}else if(symbol==='true'){result=new constant_1.Constant(true);}else if(symbol==='null'){result=new constant_1.Constant(null);}else if(symbol==='undefined'){result=new constant_1.Constant(undefined);}else {result=this.makeExpression(expressionType_1.ExpressionType.Accessor,new constant_1.Constant(symbol));}return result;}},{key:'visitIndexAccessExp',value:function visitIndexAccessExp(context){var property=this.visit(context.expression());var instance=this.visit(context.primaryExpression());return this.makeExpression(expressionType_1.ExpressionType.Element,instance,property);}},{key:'visitMemberAccessExp',value:function visitMemberAccessExp(context){var property=context.IDENTIFIER().text;var instance=this.visit(context.primaryExpression());return this.makeExpression(expressionType_1.ExpressionType.Accessor,new constant_1.Constant(property),instance);}},{key:'visitNumericAtom',value:function visitNumericAtom(context){var numberValue=parseFloat(context.text);if(typeof numberValue==='number'&&!Number.isNaN(numberValue)){return new constant_1.Constant(numberValue);}throw new Error(context.text+' is not a number.');}},{key:'visitArrayCreationExp',value:function visitArrayCreationExp(context){var parameters=this.processArgsList(context.argsList());return this.makeExpression.apply(this,[expressionType_1.ExpressionType.CreateArray].concat(toConsumableArray(parameters)));}},{key:'visitStringAtom',value:function visitStringAtom(context){var text=context.text;if(text.startsWith("'")&&text.endsWith("'")){text=text.substr(1,text.length-2).replace(/\\'/g,"'");}else if(text.startsWith('"')&&text.endsWith('"')){// start with ""
	text=text.substr(1,text.length-2).replace(/\\"/g,'"');}else {throw new Error('Invalid string '+text);}return new constant_1.Constant(this.evalEscape(text));}},{key:'visitJsonCreationExp',value:function visitJsonCreationExp(context){var expr=this.makeExpression(expressionType_1.ExpressionType.Json,new constant_1.Constant('{}'));if(context.keyValuePairList()){var _iteratorNormalCompletion29=true;var _didIteratorError29=false;var _iteratorError29=undefined;try{for(var _iterator29=context.keyValuePairList().keyValuePair()[Symbol.iterator](),_step29;!(_iteratorNormalCompletion29=(_step29=_iterator29.next()).done);_iteratorNormalCompletion29=true){var kvPair=_step29.value;var key='';var keyNode=kvPair.key().children[0];if(keyNode instanceof tree_1.TerminalNode){if(keyNode.symbol.type===ep.ExpressionAntlrParser.IDENTIFIER){key=keyNode.text;}else {key=keyNode.text.substring(1,keyNode.text.length-1);}}expr=this.makeExpression(expressionType_1.ExpressionType.SetProperty,expr,new constant_1.Constant(key),this.visit(kvPair.expression()));}}catch(err){_didIteratorError29=true;_iteratorError29=err;}finally{try{if(!_iteratorNormalCompletion29&&_iterator29.return){_iterator29.return();}}finally{if(_didIteratorError29){throw _iteratorError29;}}}}return expr;}},{key:'visitStringInterpolationAtom',value:function visitStringInterpolationAtom(context){var children=[new constant_1.Constant('')];var _iteratorNormalCompletion30=true;var _didIteratorError30=false;var _iteratorError30=undefined;try{for(var _iterator30=context.stringInterpolation().children[Symbol.iterator](),_step30;!(_iteratorNormalCompletion30=(_step30=_iterator30.next()).done);_iteratorNormalCompletion30=true){var node=_step30.value;if(node instanceof tree_1.TerminalNode){switch(node.symbol.type){case ep.ExpressionAntlrParser.TEMPLATE:{var expressionString=this.trimExpression(node.text);children.push(expression_1.Expression.parse(expressionString,this._lookupFunction));break;}case ep.ExpressionAntlrParser.ESCAPE_CHARACTER:{children.push(new constant_1.Constant(this.evalEscape(node.text).replace(/\\`/g,'`').replace(/\\\$/g,'$')));break;}default:break;}}else {var text=this.evalEscape(node.text);children.push(new constant_1.Constant(text));}}}catch(err){_didIteratorError30=true;_iteratorError30=err;}finally{try{if(!_iteratorNormalCompletion30&&_iterator30.return){_iterator30.return();}}finally{if(_didIteratorError30){throw _iteratorError30;}}}return this.makeExpression.apply(this,[expressionType_1.ExpressionType.Concat].concat(children));}},{key:'processArgsList',value:function processArgsList(context){var result=[];if(!context){return result;}var _iteratorNormalCompletion31=true;var _didIteratorError31=false;var _iteratorError31=undefined;try{for(var _iterator31=context.children[Symbol.iterator](),_step31;!(_iteratorNormalCompletion31=(_step31=_iterator31.next()).done);_iteratorNormalCompletion31=true){var child=_step31.value;if(child instanceof ep.LambdaContext){var evalParam=this.makeExpression(expressionType_1.ExpressionType.Accessor,new constant_1.Constant(child.IDENTIFIER().text));var evalFun=this.visit(child.expression());result.push(evalParam);result.push(evalFun);}else if(child instanceof ep.ExpressionContext){result.push(this.visit(child));}}}catch(err){_didIteratorError31=true;_iteratorError31=err;}finally{try{if(!_iteratorNormalCompletion31&&_iterator31.return){_iterator31.return();}}finally{if(_didIteratorError31){throw _iteratorError31;}}}return result;}},{key:'trimExpression',value:function trimExpression(expression){var result=expression.trim();if(result.startsWith('$')){result=result.substr(1);}result=result.trim();if(result.startsWith('{')&&result.endsWith('}')){result=result.substr(1,result.length-2);}return result.trim();}},{key:'evalEscape',value:function evalEscape(text){var validCharactersDict={'\\r':'\r','\\n':'\n','\\t':'\t','\\\\':'\\'};return text.replace(this.escapeRegex,function(sub){if(sub in validCharactersDict){return validCharactersDict[sub];}else {return sub;}});}}]);return _class;}(tree_1.AbstractParseTreeVisitor);this.EvaluatorLookup=lookup||expression_1.Expression.lookup;}/**
	     * @protected
	     * Parse the expression to ANTLR lexer and parser.
	     * @param expression The input string expression.
	     * @returns A ParseTree.
	     */createClass(ExpressionParser,[{key:'parse',/**
	     * Parse the input into an expression.
	     * @param expression Expression to parse.
	     * @returns Expression tree.
	     */value:function parse(expression){if(expression===undefined||expression===null||expression===''){return new constant_1.Constant('');}else {return new this.ExpressionTransformer(this.EvaluatorLookup).transform(ExpressionParser.antlrParse(expression));}}}],[{key:'antlrParse',value:function antlrParse(expression){if(ExpressionParser.expressionDict.has(expression)){return ExpressionParser.expressionDict.get(expression);}var inputStream=new antlr4ts_1.ANTLRInputStream(expression);var lexer=new generated_1.ExpressionAntlrLexer(inputStream);lexer.removeErrorListeners();var tokenStream=new antlr4ts_1.CommonTokenStream(lexer);var parser=new generated_1.ExpressionAntlrParser(tokenStream);parser.removeErrorListeners();parser.addErrorListener(parseErrorListener_1.ParseErrorListener.Instance);parser.buildParseTree=true;var expressionContext=void 0;var file=parser.file();if(file!==undefined){expressionContext=file.expression();}ExpressionParser.expressionDict.set(expression,expressionContext);return expressionContext;}}]);return ExpressionParser;}();ExpressionParser.expressionDict=new Map();exports.ExpressionParser=ExpressionParser;},{"../constant":158,"../expression":170,"../expressionType":183,"./generated":199,"./generated/ExpressionAntlrParser":198,"./parseErrorListener":201,"antlr4ts":320,"antlr4ts/tree":345}],197:[function(require,module,exports){var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});var ATNDeserializer_1=require("antlr4ts/atn/ATNDeserializer");var Lexer_1=require("antlr4ts/Lexer");var LexerATNSimulator_1=require("antlr4ts/atn/LexerATNSimulator");var VocabularyImpl_1=require("antlr4ts/VocabularyImpl");var Utils=__importStar(require("antlr4ts/misc/Utils"));var ExpressionAntlrLexer=function(_Lexer_1$Lexer2){inherits(ExpressionAntlrLexer,_Lexer_1$Lexer2);function ExpressionAntlrLexer(input){classCallCheck(this,ExpressionAntlrLexer);// tslint:enable:no-trailing-whitespace
	var _this198=possibleConstructorReturn(this,(ExpressionAntlrLexer.__proto__||Object.getPrototypeOf(ExpressionAntlrLexer)).call(this,input));_this198.ignoreWS=true;// usually we ignore whitespace, but inside stringInterpolation, whitespace is significant
	_this198._interp=new LexerATNSimulator_1.LexerATNSimulator(ExpressionAntlrLexer._ATN,_this198);return _this198;}// @Override
	// @NotNull
	createClass(ExpressionAntlrLexer,[{key:'action',// @Override
	value:function action(_localctx,ruleIndex,actionIndex){switch(ruleIndex){case 3:this.STRING_INTERPOLATION_START_action(_localctx,actionIndex);break;case 38:this.STRING_INTERPOLATION_END_action(_localctx,actionIndex);break;}}},{key:'STRING_INTERPOLATION_START_action',value:function STRING_INTERPOLATION_START_action(_localctx,actionIndex){switch(actionIndex){case 0:this.ignoreWS=false;break;}}},{key:'STRING_INTERPOLATION_END_action',value:function STRING_INTERPOLATION_END_action(_localctx,actionIndex){switch(actionIndex){case 1:this.ignoreWS=true;break;}}// @Override
	},{key:'sempred',value:function sempred(_localctx,ruleIndex,predIndex){switch(ruleIndex){case 33:return this.WHITESPACE_sempred(_localctx,predIndex);}return true;}},{key:'WHITESPACE_sempred',value:function WHITESPACE_sempred(_localctx,predIndex){switch(predIndex){case 0:return this.ignoreWS;}return true;}},{key:'vocabulary',get:function get(){return ExpressionAntlrLexer.VOCABULARY;}// @Override
	},{key:'grammarFileName',get:function get(){return "ExpressionAntlrLexer.g4";}// @Override
	},{key:'ruleNames',get:function get(){return ExpressionAntlrLexer.ruleNames;}// @Override
	},{key:'serializedATN',get:function get(){return ExpressionAntlrLexer._serializedATN;}// @Override
	},{key:'channelNames',get:function get(){return ExpressionAntlrLexer.channelNames;}// @Override
	},{key:'modeNames',get:function get(){return ExpressionAntlrLexer.modeNames;}}],[{key:'_ATN',get:function get(){if(!ExpressionAntlrLexer.__ATN){ExpressionAntlrLexer.__ATN=new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(ExpressionAntlrLexer._serializedATN));}return ExpressionAntlrLexer.__ATN;}}]);return ExpressionAntlrLexer;}(Lexer_1.Lexer);ExpressionAntlrLexer.STRING_INTERPOLATION_START=1;ExpressionAntlrLexer.PLUS=2;ExpressionAntlrLexer.SUBSTRACT=3;ExpressionAntlrLexer.NON=4;ExpressionAntlrLexer.XOR=5;ExpressionAntlrLexer.ASTERISK=6;ExpressionAntlrLexer.SLASH=7;ExpressionAntlrLexer.PERCENT=8;ExpressionAntlrLexer.DOUBLE_EQUAL=9;ExpressionAntlrLexer.NOT_EQUAL=10;ExpressionAntlrLexer.SINGLE_AND=11;ExpressionAntlrLexer.DOUBLE_AND=12;ExpressionAntlrLexer.DOUBLE_VERTICAL_CYLINDER=13;ExpressionAntlrLexer.LESS_THAN=14;ExpressionAntlrLexer.MORE_THAN=15;ExpressionAntlrLexer.LESS_OR_EQUAl=16;ExpressionAntlrLexer.MORE_OR_EQUAL=17;ExpressionAntlrLexer.OPEN_BRACKET=18;ExpressionAntlrLexer.CLOSE_BRACKET=19;ExpressionAntlrLexer.DOT=20;ExpressionAntlrLexer.OPEN_SQUARE_BRACKET=21;ExpressionAntlrLexer.CLOSE_SQUARE_BRACKET=22;ExpressionAntlrLexer.OPEN_CURLY_BRACKET=23;ExpressionAntlrLexer.CLOSE_CURLY_BRACKET=24;ExpressionAntlrLexer.COMMA=25;ExpressionAntlrLexer.COLON=26;ExpressionAntlrLexer.ARROW=27;ExpressionAntlrLexer.NULL_COALESCE=28;ExpressionAntlrLexer.QUESTION_MARK=29;ExpressionAntlrLexer.NUMBER=30;ExpressionAntlrLexer.WHITESPACE=31;ExpressionAntlrLexer.IDENTIFIER=32;ExpressionAntlrLexer.NEWLINE=33;ExpressionAntlrLexer.STRING=34;ExpressionAntlrLexer.INVALID_TOKEN_DEFAULT_MODE=35;ExpressionAntlrLexer.TEMPLATE=36;ExpressionAntlrLexer.ESCAPE_CHARACTER=37;ExpressionAntlrLexer.TEXT_CONTENT=38;ExpressionAntlrLexer.STRING_INTERPOLATION_MODE=1;// tslint:disable:no-trailing-whitespace
	ExpressionAntlrLexer.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];// tslint:disable:no-trailing-whitespace
	ExpressionAntlrLexer.modeNames=["DEFAULT_MODE","STRING_INTERPOLATION_MODE"];ExpressionAntlrLexer.ruleNames=["LETTER","DIGIT","OBJECT_DEFINITION","STRING_INTERPOLATION_START","PLUS","SUBSTRACT","NON","XOR","ASTERISK","SLASH","PERCENT","DOUBLE_EQUAL","NOT_EQUAL","SINGLE_AND","DOUBLE_AND","DOUBLE_VERTICAL_CYLINDER","LESS_THAN","MORE_THAN","LESS_OR_EQUAl","MORE_OR_EQUAL","OPEN_BRACKET","CLOSE_BRACKET","DOT","OPEN_SQUARE_BRACKET","CLOSE_SQUARE_BRACKET","OPEN_CURLY_BRACKET","CLOSE_CURLY_BRACKET","COMMA","COLON","ARROW","NULL_COALESCE","QUESTION_MARK","NUMBER","WHITESPACE","IDENTIFIER","NEWLINE","STRING","INVALID_TOKEN_DEFAULT_MODE","STRING_INTERPOLATION_END","TEMPLATE","ESCAPE_CHARACTER","TEXT_CONTENT"];ExpressionAntlrLexer._LITERAL_NAMES=[undefined,undefined,"'+'","'-'","'!'","'^'","'*'","'/'","'%'","'=='",undefined,"'&'","'&&'","'||'","'<'","'>'","'<='","'>='","'('","')'","'.'","'['","']'","'{'","'}'","','","':'","'=>'","'??'","'?'"];ExpressionAntlrLexer._SYMBOLIC_NAMES=[undefined,"STRING_INTERPOLATION_START","PLUS","SUBSTRACT","NON","XOR","ASTERISK","SLASH","PERCENT","DOUBLE_EQUAL","NOT_EQUAL","SINGLE_AND","DOUBLE_AND","DOUBLE_VERTICAL_CYLINDER","LESS_THAN","MORE_THAN","LESS_OR_EQUAl","MORE_OR_EQUAL","OPEN_BRACKET","CLOSE_BRACKET","DOT","OPEN_SQUARE_BRACKET","CLOSE_SQUARE_BRACKET","OPEN_CURLY_BRACKET","CLOSE_CURLY_BRACKET","COMMA","COLON","ARROW","NULL_COALESCE","QUESTION_MARK","NUMBER","WHITESPACE","IDENTIFIER","NEWLINE","STRING","INVALID_TOKEN_DEFAULT_MODE","TEMPLATE","ESCAPE_CHARACTER","TEXT_CONTENT"];ExpressionAntlrLexer.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(ExpressionAntlrLexer._LITERAL_NAMES,ExpressionAntlrLexer._SYMBOLIC_NAMES,[]);ExpressionAntlrLexer._serializedATN='\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02(\u0110\b\x01'+"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06"+"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f"+"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04"+"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04"+"\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04"+"\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"+"\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*"+"\t*\x04+\t+\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03"+"\x04\x05\x04a\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x06\x04g\n\x04\r\x04"+"\x0E\x04h\x07\x04k\n\x04\f\x04\x0E\x04n\v\x04\x03\x04\x03\x04\x03\x05"+"\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b"+"\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03"+"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0E\x8C\n\x0E\x03\x0F\x03\x0F\x03"+"\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03"+"\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03"+"\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03"+"\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03"+"\x1F\x03 \x03 \x03 \x03!\x03!\x03\"\x06\"\xBB\n\"\r\"\x0E\"\xBC\x03\""+"\x03\"\x06\"\xC1\n\"\r\"\x0E\"\xC2\x05\"\xC5\n\"\x03#\x03#\x03#\x03#\x03"+"#\x03$\x03$\x03$\x03$\x03$\x05$\xD1\n$\x03$\x03$\x03$\x07$\xD6\n$\f$\x0E"+"$\xD9\v$\x03%\x05%\xDC\n%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x07"+"&\xE6\n&\f&\x0E&\xE9\v&\x03&\x03&\x03&\x03&\x03&\x07&\xF0\n&\f&\x0E&\xF3"+"\v&\x03&\x05&\xF6\n&\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03"+')\x03)\x03)\x03)\x06)\u0105\n)\r)\x0E)\u0106\x03)\x03)\x03*\x03*\x05*'+'\u010D\n*\x03+\x03+\x04\xE7\xF1\x02\x02,\x04\x02\x02\x06\x02\x02\b\x02'+"\x02\n\x02\x03\f\x02\x04\x0E\x02\x05\x10\x02\x06\x12\x02\x07\x14\x02\b"+"\x16\x02\t\x18\x02\n\x1A\x02\v\x1C\x02\f\x1E\x02\r \x02\x0E\"\x02\x0F"+"$\x02\x10&\x02\x11(\x02\x12*\x02\x13,\x02\x14.\x02\x150\x02\x162\x02\x17"+"4\x02\x186\x02\x198\x02\x1A:\x02\x1B<\x02\x1C>\x02\x1D@\x02\x1EB\x02\x1F"+"D\x02 F\x02!H\x02\"J\x02#L\x02$N\x02%P\x02\x02R\x02&T\x02\'V\x02(\x04"+"\x02\x03\f\x04\x02C\\c|\x03\x022;\t\x02\f\f\x0F\x0F$$))bb}}\x7F\x7F\x06"+'\x02\x0B\x0B""\xA2\xA2\uFF01\uFF01\x05\x02%%BBaa\x04\x02))^^\x03\x02))\x04'+'\x02$$^^\x03\x02$$\x04\x02\f\f\x0F\x0F\x02\u0125\x02\n\x03\x02\x02\x02'+"\x02\f\x03\x02\x02\x02\x02\x0E\x03\x02\x02\x02\x02\x10\x03\x02\x02\x02"+"\x02\x12\x03\x02\x02\x02\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02\x02\x02"+"\x02\x18\x03\x02\x02\x02\x02\x1A\x03\x02\x02\x02\x02\x1C\x03\x02\x02\x02"+"\x02\x1E\x03\x02\x02\x02\x02 \x03\x02\x02\x02\x02\"\x03\x02\x02\x02\x02"+"$\x03\x02\x02\x02\x02&\x03\x02\x02\x02\x02(\x03\x02\x02\x02\x02*\x03\x02"+"\x02\x02\x02,\x03\x02\x02\x02\x02.\x03\x02\x02\x02\x020\x03\x02\x02\x02"+"\x022\x03\x02\x02\x02\x024\x03\x02\x02\x02\x026\x03\x02\x02\x02\x028\x03"+"\x02\x02\x02\x02:\x03\x02\x02\x02\x02<\x03\x02\x02\x02\x02>\x03\x02\x02"+"\x02\x02@\x03\x02\x02\x02\x02B\x03\x02\x02\x02\x02D\x03\x02\x02\x02\x02"+"F\x03\x02\x02\x02\x02H\x03\x02\x02\x02\x02J\x03\x02\x02\x02\x02L\x03\x02"+"\x02\x02\x02N\x03\x02\x02\x02\x03P\x03\x02\x02\x02\x03R\x03\x02\x02\x02"+"\x03T\x03\x02\x02\x02\x03V\x03\x02\x02\x02\x04X\x03\x02\x02\x02\x06Z\x03"+"\x02\x02\x02\b\\\x03\x02\x02\x02\nq\x03\x02\x02\x02\fv\x03\x02\x02\x02"+"\x0Ex\x03\x02\x02\x02\x10z\x03\x02\x02\x02\x12|\x03\x02\x02\x02\x14~\x03"+"\x02\x02\x02\x16\x80\x03\x02\x02\x02\x18\x82\x03\x02\x02\x02\x1A\x84\x03"+"\x02\x02\x02\x1C\x8B\x03\x02\x02\x02\x1E\x8D\x03\x02\x02\x02 \x8F\x03"+"\x02\x02\x02\"\x92\x03\x02\x02\x02$\x95\x03\x02\x02\x02&\x97\x03\x02\x02"+"\x02(\x99\x03\x02\x02\x02*\x9C\x03\x02\x02\x02,\x9F\x03\x02\x02\x02.\xA1"+"\x03\x02\x02\x020\xA3\x03\x02\x02\x022\xA5\x03\x02\x02\x024\xA7\x03\x02"+"\x02\x026\xA9\x03\x02\x02\x028\xAB\x03\x02\x02\x02:\xAD\x03\x02\x02\x02"+"<\xAF\x03\x02\x02\x02>\xB1\x03\x02\x02\x02@\xB4\x03\x02\x02\x02B\xB7\x03"+"\x02\x02\x02D\xBA\x03\x02\x02\x02F\xC6\x03\x02\x02\x02H\xD0\x03\x02\x02"+"\x02J\xDB\x03\x02\x02\x02L\xF5\x03\x02\x02\x02N\xF7\x03\x02\x02\x02P\xF9"+'\x03\x02\x02\x02R\xFF\x03\x02\x02\x02T\u010A\x03\x02\x02\x02V\u010E\x03'+"\x02\x02\x02XY\t\x02\x02\x02Y\x05\x03\x02\x02\x02Z[\t\x03\x02\x02[\x07"+"\x03\x02\x02\x02\\l\x07}\x02\x02]k\x05F#\x02^a\x05H$\x02_a\x05L&\x02`"+"^\x03\x02\x02\x02`_\x03\x02\x02\x02ab\x03\x02\x02\x02bf\x07<\x02\x02c"+"g\x05L&\x02dg\n\x04\x02\x02eg\x05\b\x04\x02fc\x03\x02\x02\x02fd\x03\x02"+"\x02\x02fe\x03\x02\x02\x02gh\x03\x02\x02\x02hf\x03\x02\x02\x02hi\x03\x02"+"\x02\x02ik\x03\x02\x02\x02j]\x03\x02\x02\x02j`\x03\x02\x02\x02kn\x03\x02"+"\x02\x02lj\x03\x02\x02\x02lm\x03\x02\x02\x02mo\x03\x02\x02\x02nl\x03\x02"+"\x02\x02op\x07\x7F\x02\x02p\t\x03\x02\x02\x02qr\x07b\x02\x02rs\b\x05\x02"+"\x02st\x03\x02\x02\x02tu\b\x05\x03\x02u\v\x03\x02\x02\x02vw\x07-\x02\x02"+"w\r\x03\x02\x02\x02xy\x07/\x02\x02y\x0F\x03\x02\x02\x02z{\x07#\x02\x02"+"{\x11\x03\x02\x02\x02|}\x07`\x02\x02}\x13\x03\x02\x02\x02~\x7F\x07,\x02"+"\x02\x7F\x15\x03\x02\x02\x02\x80\x81\x071\x02\x02\x81\x17\x03\x02\x02"+"\x02\x82\x83\x07\'\x02\x02\x83\x19\x03\x02\x02\x02\x84\x85\x07?\x02\x02"+"\x85\x86\x07?\x02\x02\x86\x1B\x03\x02\x02\x02\x87\x88\x07#\x02\x02\x88"+"\x8C\x07?\x02\x02\x89\x8A\x07>\x02\x02\x8A\x8C\x07@\x02\x02\x8B\x87\x03"+"\x02\x02\x02\x8B\x89\x03\x02\x02\x02\x8C\x1D\x03\x02\x02\x02\x8D\x8E\x07"+"(\x02\x02\x8E\x1F\x03\x02\x02\x02\x8F\x90\x07(\x02\x02\x90\x91\x07(\x02"+"\x02\x91!\x03\x02\x02\x02\x92\x93\x07~\x02\x02\x93\x94\x07~\x02\x02\x94"+"#\x03\x02\x02\x02\x95\x96\x07>\x02\x02\x96%\x03\x02\x02\x02\x97\x98\x07"+"@\x02\x02\x98\'\x03\x02\x02\x02\x99\x9A\x07>\x02\x02\x9A\x9B\x07?\x02"+"\x02\x9B)\x03\x02\x02\x02\x9C\x9D\x07@\x02\x02\x9D\x9E\x07?\x02\x02\x9E"+"+\x03\x02\x02\x02\x9F\xA0\x07*\x02\x02\xA0-\x03\x02\x02\x02\xA1\xA2\x07"+"+\x02\x02\xA2/\x03\x02\x02\x02\xA3\xA4\x070\x02\x02\xA41\x03\x02\x02\x02"+"\xA5\xA6\x07]\x02\x02\xA63\x03\x02\x02\x02\xA7\xA8\x07_\x02\x02\xA85\x03"+"\x02\x02\x02\xA9\xAA\x07}\x02\x02\xAA7\x03\x02\x02\x02\xAB\xAC\x07\x7F"+"\x02\x02\xAC9\x03\x02\x02\x02\xAD\xAE\x07.\x02\x02\xAE;\x03\x02\x02\x02"+"\xAF\xB0\x07<\x02\x02\xB0=\x03\x02\x02\x02\xB1\xB2\x07?\x02\x02\xB2\xB3"+"\x07@\x02\x02\xB3?\x03\x02\x02\x02\xB4\xB5\x07A\x02\x02\xB5\xB6\x07A\x02"+"\x02\xB6A\x03\x02\x02\x02\xB7\xB8\x07A\x02\x02\xB8C\x03\x02\x02\x02\xB9"+"\xBB\x05\x06\x03\x02\xBA\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC"+"\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xC4\x03\x02\x02\x02\xBE"+"\xC0\x070\x02\x02\xBF\xC1\x05\x06\x03\x02\xC0\xBF\x03\x02\x02\x02\xC1"+"\xC2\x03\x02\x02\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC3\x03\x02\x02\x02\xC3"+"\xC5\x03\x02\x02\x02\xC4\xBE\x03\x02\x02\x02\xC4\xC5\x03\x02\x02\x02\xC5"+"E\x03\x02\x02\x02\xC6\xC7\t\x05\x02\x02\xC7\xC8\x06#\x02\x02\xC8\xC9\x03"+"\x02\x02\x02\xC9\xCA\b#\x04\x02\xCAG\x03\x02\x02\x02\xCB\xD1\x05\x04\x02"+"\x02\xCC\xD1\t\x06\x02\x02\xCD\xCE\x07B\x02\x02\xCE\xD1\x07B\x02\x02\xCF"+"\xD1\x04&\'\x02\xD0\xCB\x03\x02\x02\x02\xD0\xCC\x03\x02\x02\x02\xD0\xCD"+"\x03\x02\x02\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD7\x03\x02\x02\x02\xD2\xD6"+"\x05\x04\x02\x02\xD3\xD6\x05\x06\x03\x02\xD4\xD6\x07a\x02\x02\xD5\xD2"+"\x03\x02\x02\x02\xD5\xD3\x03\x02\x02\x02\xD5\xD4\x03\x02\x02\x02\xD6\xD9"+"\x03\x02\x02\x02\xD7\xD5\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD8I"+"\x03\x02\x02\x02\xD9\xD7\x03\x02\x02\x02\xDA\xDC\x07\x0F\x02\x02\xDB\xDA"+"\x03\x02\x02\x02\xDB\xDC\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02\xDD\xDE"+"\x07\f\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xE0\b%\x04\x02\xE0K\x03\x02"+"\x02\x02\xE1\xE7\x07)\x02\x02\xE2\xE3\x07^\x02\x02\xE3\xE6\t\x07\x02\x02"+"\xE4\xE6\n\b\x02\x02\xE5\xE2\x03\x02\x02\x02\xE5\xE4\x03\x02\x02\x02\xE6"+"\xE9\x03\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE8"+"\xEA\x03\x02\x02\x02\xE9\xE7\x03\x02\x02\x02\xEA\xF6\x07)\x02\x02\xEB"+"\xF1\x07$\x02\x02\xEC\xED\x07^\x02\x02\xED\xF0\t\t\x02\x02\xEE\xF0\n\n"+"\x02\x02\xEF\xEC\x03\x02\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF3\x03\x02"+"\x02\x02\xF1\xF2\x03\x02\x02\x02\xF1\xEF\x03\x02\x02\x02\xF2\xF4\x03\x02"+"\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xF6\x07$\x02\x02\xF5\xE1\x03\x02"+"\x02\x02\xF5\xEB\x03\x02\x02\x02\xF6M\x03\x02\x02\x02\xF7\xF8\v\x02\x02"+"\x02\xF8O\x03\x02\x02\x02\xF9\xFA\x07b\x02\x02\xFA\xFB\b(\x05\x02\xFB"+"\xFC\x03\x02\x02\x02\xFC\xFD\b(\x06\x02\xFD\xFE\b(\x07\x02\xFEQ\x03\x02"+'\x02\x02\xFF\u0100\x07&\x02\x02\u0100\u0104\x07}\x02\x02\u0101\u0105\x05'+'L&\x02\u0102\u0105\x05\b\x04\x02\u0103\u0105\n\x04\x02\x02\u0104\u0101'+'\x03\x02\x02\x02\u0104\u0102\x03\x02\x02\x02\u0104\u0103\x03\x02\x02\x02'+'\u0105\u0106\x03\x02\x02\x02\u0106\u0104\x03\x02\x02\x02\u0106\u0107\x03'+'\x02\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108\u0109\x07\x7F\x02\x02\u0109'+'S\x03\x02\x02\x02\u010A\u010C\x07^\x02\x02\u010B\u010D\n\x0B\x02\x02\u010C'+'\u010B\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010DU\x03\x02\x02'+'\x02\u010E\u010F\x0B\x02\x02\x02\u010FW\x03\x02\x02\x02\x19\x02\x03`fhj'+'l\x8B\xBC\xC2\xC4\xD0\xD5\xD7\xDB\xE5\xE7\xEF\xF1\xF5\u0104\u0106\u010C'+"\b\x03\x05\x02\x07\x03\x02\b\x02\x02\x03(\x03\t\x03\x02\x06\x02\x02";exports.ExpressionAntlrLexer=ExpressionAntlrLexer;},{"antlr4ts/Lexer":232,"antlr4ts/VocabularyImpl":250,"antlr4ts/atn/ATNDeserializer":255,"antlr4ts/atn/LexerATNSimulator":276,"antlr4ts/misc/Utils":337}],198:[function(require,module,exports){var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */var ATN_1=require("antlr4ts/atn/ATN");var ATNDeserializer_1=require("antlr4ts/atn/ATNDeserializer");var FailedPredicateException_1=require("antlr4ts/FailedPredicateException");var NoViableAltException_1=require("antlr4ts/NoViableAltException");var Parser_1=require("antlr4ts/Parser");var ParserRuleContext_1=require("antlr4ts/ParserRuleContext");var ParserATNSimulator_1=require("antlr4ts/atn/ParserATNSimulator");var RecognitionException_1=require("antlr4ts/RecognitionException");var Token_1=require("antlr4ts/Token");var VocabularyImpl_1=require("antlr4ts/VocabularyImpl");var Utils=__importStar(require("antlr4ts/misc/Utils"));var ExpressionAntlrParser=function(_Parser_1$Parser2){inherits(ExpressionAntlrParser,_Parser_1$Parser2);function ExpressionAntlrParser(input){classCallCheck(this,ExpressionAntlrParser);var _this199=possibleConstructorReturn(this,(ExpressionAntlrParser.__proto__||Object.getPrototypeOf(ExpressionAntlrParser)).call(this,input));_this199._interp=new ParserATNSimulator_1.ParserATNSimulator(ExpressionAntlrParser._ATN,_this199);return _this199;}// @Override
	// @NotNull
	createClass(ExpressionAntlrParser,[{key:'file',// @RuleVersion(0)
	value:function file(){var _localctx=new FileContext(this._ctx,this.state);this.enterRule(_localctx,0,ExpressionAntlrParser.RULE_file);try{this.enterOuterAlt(_localctx,1);{this.state=20;this.expression(0);this.state=21;this.match(ExpressionAntlrParser.EOF);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'expression',value:function expression(_p){if(_p===undefined){_p=0;}var _parentctx=this._ctx;var _parentState=this.state;var _localctx=new ExpressionContext(this._ctx,_parentState);var _prevctx=_localctx;var _startState=2;this.enterRecursionRule(_localctx,2,ExpressionAntlrParser.RULE_expression,_p);var _la=void 0;try{var _alt=void 0;this.enterOuterAlt(_localctx,1);{this.state=27;this._errHandler.sync(this);switch(this._input.LA(1)){case ExpressionAntlrParser.PLUS:case ExpressionAntlrParser.SUBSTRACT:case ExpressionAntlrParser.NON:{_localctx=new UnaryOpExpContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=24;_la=this._input.LA(1);if(!((_la&~0x1F)===0&&(1<<_la&(1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=25;this.expression(12);}break;case ExpressionAntlrParser.STRING_INTERPOLATION_START:case ExpressionAntlrParser.OPEN_BRACKET:case ExpressionAntlrParser.OPEN_SQUARE_BRACKET:case ExpressionAntlrParser.OPEN_CURLY_BRACKET:case ExpressionAntlrParser.NUMBER:case ExpressionAntlrParser.IDENTIFIER:case ExpressionAntlrParser.STRING:{_localctx=new PrimaryExpContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=26;this.primaryExpression(0);}break;default:throw new NoViableAltException_1.NoViableAltException(this);}this._ctx._stop=this._input.tryLT(-1);this.state=64;this._errHandler.sync(this);_alt=this.interpreter.adaptivePredict(this._input,2,this._ctx);while(_alt!==2&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER){if(_alt===1){if(this._parseListeners!=null){this.triggerExitRuleEvent();}_prevctx=_localctx;{this.state=62;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,1,this._ctx)){case 1:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=29;if(!this.precpred(this._ctx,11)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 11)");}this.state=30;this.match(ExpressionAntlrParser.XOR);this.state=31;this.expression(11);}break;case 2:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=32;if(!this.precpred(this._ctx,10)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 10)");}this.state=33;_la=this._input.LA(1);if(!((_la&~0x1F)===0&&(1<<_la&(1<<ExpressionAntlrParser.ASTERISK|1<<ExpressionAntlrParser.SLASH|1<<ExpressionAntlrParser.PERCENT))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=34;this.expression(11);}break;case 3:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=35;if(!this.precpred(this._ctx,9)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 9)");}this.state=36;_la=this._input.LA(1);if(!(_la===ExpressionAntlrParser.PLUS||_la===ExpressionAntlrParser.SUBSTRACT)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=37;this.expression(10);}break;case 4:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=38;if(!this.precpred(this._ctx,8)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 8)");}this.state=39;_la=this._input.LA(1);if(!(_la===ExpressionAntlrParser.DOUBLE_EQUAL||_la===ExpressionAntlrParser.NOT_EQUAL)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=40;this.expression(9);}break;case 5:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=41;if(!this.precpred(this._ctx,7)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 7)");}{this.state=42;this.match(ExpressionAntlrParser.SINGLE_AND);}this.state=43;this.expression(8);}break;case 6:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=44;if(!this.precpred(this._ctx,6)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 6)");}this.state=45;_la=this._input.LA(1);if(!((_la&~0x1F)===0&&(1<<_la&(1<<ExpressionAntlrParser.LESS_THAN|1<<ExpressionAntlrParser.MORE_THAN|1<<ExpressionAntlrParser.LESS_OR_EQUAl|1<<ExpressionAntlrParser.MORE_OR_EQUAL))!==0)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}this.state=46;this.expression(7);}break;case 7:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=47;if(!this.precpred(this._ctx,5)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 5)");}this.state=48;this.match(ExpressionAntlrParser.DOUBLE_AND);this.state=49;this.expression(6);}break;case 8:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=50;if(!this.precpred(this._ctx,4)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 4)");}this.state=51;this.match(ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER);this.state=52;this.expression(5);}break;case 9:{_localctx=new BinaryOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=53;if(!this.precpred(this._ctx,3)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 3)");}this.state=54;this.match(ExpressionAntlrParser.NULL_COALESCE);this.state=55;this.expression(4);}break;case 10:{_localctx=new TripleOpExpContext(new ExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_expression);this.state=56;if(!this.precpred(this._ctx,2)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 2)");}this.state=57;this.match(ExpressionAntlrParser.QUESTION_MARK);this.state=58;this.expression(0);this.state=59;this.match(ExpressionAntlrParser.COLON);this.state=60;this.expression(3);}break;}}}this.state=66;this._errHandler.sync(this);_alt=this.interpreter.adaptivePredict(this._input,2,this._ctx);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.unrollRecursionContexts(_parentctx);}return _localctx;}// @RuleVersion(0)
	},{key:'primaryExpression',value:function primaryExpression(_p){if(_p===undefined){_p=0;}var _parentctx=this._ctx;var _parentState=this.state;var _localctx=new PrimaryExpressionContext(this._ctx,_parentState);var _prevctx=_localctx;var _startState=4;this.enterRecursionRule(_localctx,4,ExpressionAntlrParser.RULE_primaryExpression,_p);var _la=void 0;try{var _alt=void 0;this.enterOuterAlt(_localctx,1);{this.state=86;this._errHandler.sync(this);switch(this._input.LA(1)){case ExpressionAntlrParser.OPEN_BRACKET:{_localctx=new ParenthesisExpContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=68;this.match(ExpressionAntlrParser.OPEN_BRACKET);this.state=69;this.expression(0);this.state=70;this.match(ExpressionAntlrParser.CLOSE_BRACKET);}break;case ExpressionAntlrParser.OPEN_SQUARE_BRACKET:{_localctx=new ArrayCreationExpContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=72;this.match(ExpressionAntlrParser.OPEN_SQUARE_BRACKET);this.state=74;this._errHandler.sync(this);_la=this._input.LA(1);if((_la&~0x1F)===0&&(1<<_la&(1<<ExpressionAntlrParser.STRING_INTERPOLATION_START|1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON|1<<ExpressionAntlrParser.OPEN_BRACKET|1<<ExpressionAntlrParser.OPEN_SQUARE_BRACKET|1<<ExpressionAntlrParser.OPEN_CURLY_BRACKET|1<<ExpressionAntlrParser.NUMBER))!==0||_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING){{this.state=73;this.argsList();}}this.state=76;this.match(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET);}break;case ExpressionAntlrParser.OPEN_CURLY_BRACKET:{_localctx=new JsonCreationExpContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=77;this.match(ExpressionAntlrParser.OPEN_CURLY_BRACKET);this.state=79;this._errHandler.sync(this);_la=this._input.LA(1);if(_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING){{this.state=78;this.keyValuePairList();}}this.state=81;this.match(ExpressionAntlrParser.CLOSE_CURLY_BRACKET);}break;case ExpressionAntlrParser.NUMBER:{_localctx=new NumericAtomContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=82;this.match(ExpressionAntlrParser.NUMBER);}break;case ExpressionAntlrParser.STRING:{_localctx=new StringAtomContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=83;this.match(ExpressionAntlrParser.STRING);}break;case ExpressionAntlrParser.IDENTIFIER:{_localctx=new IdAtomContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=84;this.match(ExpressionAntlrParser.IDENTIFIER);}break;case ExpressionAntlrParser.STRING_INTERPOLATION_START:{_localctx=new StringInterpolationAtomContext(_localctx);this._ctx=_localctx;_prevctx=_localctx;this.state=85;this.stringInterpolation();}break;default:throw new NoViableAltException_1.NoViableAltException(this);}this._ctx._stop=this._input.tryLT(-1);this.state=107;this._errHandler.sync(this);_alt=this.interpreter.adaptivePredict(this._input,9,this._ctx);while(_alt!==2&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER){if(_alt===1){if(this._parseListeners!=null){this.triggerExitRuleEvent();}_prevctx=_localctx;{this.state=105;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,8,this._ctx)){case 1:{_localctx=new MemberAccessExpContext(new PrimaryExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_primaryExpression);this.state=88;if(!this.precpred(this._ctx,3)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 3)");}this.state=89;this.match(ExpressionAntlrParser.DOT);this.state=90;this.match(ExpressionAntlrParser.IDENTIFIER);}break;case 2:{_localctx=new FuncInvokeExpContext(new PrimaryExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_primaryExpression);this.state=91;if(!this.precpred(this._ctx,2)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 2)");}this.state=93;this._errHandler.sync(this);_la=this._input.LA(1);if(_la===ExpressionAntlrParser.NON){{this.state=92;this.match(ExpressionAntlrParser.NON);}}this.state=95;this.match(ExpressionAntlrParser.OPEN_BRACKET);this.state=97;this._errHandler.sync(this);_la=this._input.LA(1);if((_la&~0x1F)===0&&(1<<_la&(1<<ExpressionAntlrParser.STRING_INTERPOLATION_START|1<<ExpressionAntlrParser.PLUS|1<<ExpressionAntlrParser.SUBSTRACT|1<<ExpressionAntlrParser.NON|1<<ExpressionAntlrParser.OPEN_BRACKET|1<<ExpressionAntlrParser.OPEN_SQUARE_BRACKET|1<<ExpressionAntlrParser.OPEN_CURLY_BRACKET|1<<ExpressionAntlrParser.NUMBER))!==0||_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING){{this.state=96;this.argsList();}}this.state=99;this.match(ExpressionAntlrParser.CLOSE_BRACKET);}break;case 3:{_localctx=new IndexAccessExpContext(new PrimaryExpressionContext(_parentctx,_parentState));this.pushNewRecursionContext(_localctx,_startState,ExpressionAntlrParser.RULE_primaryExpression);this.state=100;if(!this.precpred(this._ctx,1)){throw new FailedPredicateException_1.FailedPredicateException(this,"this.precpred(this._ctx, 1)");}this.state=101;this.match(ExpressionAntlrParser.OPEN_SQUARE_BRACKET);this.state=102;this.expression(0);this.state=103;this.match(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET);}break;}}}this.state=109;this._errHandler.sync(this);_alt=this.interpreter.adaptivePredict(this._input,9,this._ctx);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.unrollRecursionContexts(_parentctx);}return _localctx;}// @RuleVersion(0)
	},{key:'stringInterpolation',value:function stringInterpolation(){var _localctx=new StringInterpolationContext(this._ctx,this.state);this.enterRule(_localctx,6,ExpressionAntlrParser.RULE_stringInterpolation);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=110;this.match(ExpressionAntlrParser.STRING_INTERPOLATION_START);this.state=116;this._errHandler.sync(this);_la=this._input.LA(1);while((_la-36&~0x1F)===0&&(1<<_la-36&(1<<ExpressionAntlrParser.TEMPLATE-36|1<<ExpressionAntlrParser.ESCAPE_CHARACTER-36|1<<ExpressionAntlrParser.TEXT_CONTENT-36))!==0){{this.state=114;this._errHandler.sync(this);switch(this._input.LA(1)){case ExpressionAntlrParser.ESCAPE_CHARACTER:{this.state=111;this.match(ExpressionAntlrParser.ESCAPE_CHARACTER);}break;case ExpressionAntlrParser.TEMPLATE:{this.state=112;this.match(ExpressionAntlrParser.TEMPLATE);}break;case ExpressionAntlrParser.TEXT_CONTENT:{this.state=113;this.textContent();}break;default:throw new NoViableAltException_1.NoViableAltException(this);}}this.state=118;this._errHandler.sync(this);_la=this._input.LA(1);}this.state=119;this.match(ExpressionAntlrParser.STRING_INTERPOLATION_START);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'textContent',value:function textContent(){var _localctx=new TextContentContext(this._ctx,this.state);this.enterRule(_localctx,8,ExpressionAntlrParser.RULE_textContent);try{var _alt=void 0;this.enterOuterAlt(_localctx,1);{this.state=122;this._errHandler.sync(this);_alt=1;do{switch(_alt){case 1:{{this.state=121;this.match(ExpressionAntlrParser.TEXT_CONTENT);}}break;default:throw new NoViableAltException_1.NoViableAltException(this);}this.state=124;this._errHandler.sync(this);_alt=this.interpreter.adaptivePredict(this._input,12,this._ctx);}while(_alt!==2&&_alt!==ATN_1.ATN.INVALID_ALT_NUMBER);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'argsList',value:function argsList(){var _localctx=new ArgsListContext(this._ctx,this.state);this.enterRule(_localctx,10,ExpressionAntlrParser.RULE_argsList);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=128;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,13,this._ctx)){case 1:{this.state=126;this.lambda();}break;case 2:{this.state=127;this.expression(0);}break;}this.state=137;this._errHandler.sync(this);_la=this._input.LA(1);while(_la===ExpressionAntlrParser.COMMA){{{this.state=130;this.match(ExpressionAntlrParser.COMMA);this.state=133;this._errHandler.sync(this);switch(this.interpreter.adaptivePredict(this._input,14,this._ctx)){case 1:{this.state=131;this.lambda();}break;case 2:{this.state=132;this.expression(0);}break;}}}this.state=139;this._errHandler.sync(this);_la=this._input.LA(1);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'lambda',value:function lambda(){var _localctx=new LambdaContext(this._ctx,this.state);this.enterRule(_localctx,12,ExpressionAntlrParser.RULE_lambda);try{this.enterOuterAlt(_localctx,1);{this.state=140;this.match(ExpressionAntlrParser.IDENTIFIER);this.state=141;this.match(ExpressionAntlrParser.ARROW);this.state=142;this.expression(0);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'keyValuePairList',value:function keyValuePairList(){var _localctx=new KeyValuePairListContext(this._ctx,this.state);this.enterRule(_localctx,14,ExpressionAntlrParser.RULE_keyValuePairList);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=144;this.keyValuePair();this.state=149;this._errHandler.sync(this);_la=this._input.LA(1);while(_la===ExpressionAntlrParser.COMMA){{{this.state=145;this.match(ExpressionAntlrParser.COMMA);this.state=146;this.keyValuePair();}}this.state=151;this._errHandler.sync(this);_la=this._input.LA(1);}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'keyValuePair',value:function keyValuePair(){var _localctx=new KeyValuePairContext(this._ctx,this.state);this.enterRule(_localctx,16,ExpressionAntlrParser.RULE_keyValuePair);try{this.enterOuterAlt(_localctx,1);{this.state=152;this.key();this.state=153;this.match(ExpressionAntlrParser.COLON);this.state=154;this.expression(0);}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}// @RuleVersion(0)
	},{key:'key',value:function key(){var _localctx=new KeyContext(this._ctx,this.state);this.enterRule(_localctx,18,ExpressionAntlrParser.RULE_key);var _la=void 0;try{this.enterOuterAlt(_localctx,1);{this.state=156;_la=this._input.LA(1);if(!(_la===ExpressionAntlrParser.IDENTIFIER||_la===ExpressionAntlrParser.STRING)){this._errHandler.recoverInline(this);}else {if(this._input.LA(1)===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}}}catch(re){if(re instanceof RecognitionException_1.RecognitionException){_localctx.exception=re;this._errHandler.reportError(this,re);this._errHandler.recover(this,re);}else {throw re;}}finally{this.exitRule();}return _localctx;}},{key:'sempred',value:function sempred(_localctx,ruleIndex,predIndex){switch(ruleIndex){case 1:return this.expression_sempred(_localctx,predIndex);case 2:return this.primaryExpression_sempred(_localctx,predIndex);}return true;}},{key:'expression_sempred',value:function expression_sempred(_localctx,predIndex){switch(predIndex){case 0:return this.precpred(this._ctx,11);case 1:return this.precpred(this._ctx,10);case 2:return this.precpred(this._ctx,9);case 3:return this.precpred(this._ctx,8);case 4:return this.precpred(this._ctx,7);case 5:return this.precpred(this._ctx,6);case 6:return this.precpred(this._ctx,5);case 7:return this.precpred(this._ctx,4);case 8:return this.precpred(this._ctx,3);case 9:return this.precpred(this._ctx,2);}return true;}},{key:'primaryExpression_sempred',value:function primaryExpression_sempred(_localctx,predIndex){switch(predIndex){case 10:return this.precpred(this._ctx,3);case 11:return this.precpred(this._ctx,2);case 12:return this.precpred(this._ctx,1);}return true;}},{key:'vocabulary',get:function get(){return ExpressionAntlrParser.VOCABULARY;}// tslint:enable:no-trailing-whitespace
	// @Override
	},{key:'grammarFileName',get:function get(){return "ExpressionAntlrParser.g4";}// @Override
	},{key:'ruleNames',get:function get(){return ExpressionAntlrParser.ruleNames;}// @Override
	},{key:'serializedATN',get:function get(){return ExpressionAntlrParser._serializedATN;}}],[{key:'_ATN',get:function get(){if(!ExpressionAntlrParser.__ATN){ExpressionAntlrParser.__ATN=new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(ExpressionAntlrParser._serializedATN));}return ExpressionAntlrParser.__ATN;}}]);return ExpressionAntlrParser;}(Parser_1.Parser);ExpressionAntlrParser.STRING_INTERPOLATION_START=1;ExpressionAntlrParser.PLUS=2;ExpressionAntlrParser.SUBSTRACT=3;ExpressionAntlrParser.NON=4;ExpressionAntlrParser.XOR=5;ExpressionAntlrParser.ASTERISK=6;ExpressionAntlrParser.SLASH=7;ExpressionAntlrParser.PERCENT=8;ExpressionAntlrParser.DOUBLE_EQUAL=9;ExpressionAntlrParser.NOT_EQUAL=10;ExpressionAntlrParser.SINGLE_AND=11;ExpressionAntlrParser.DOUBLE_AND=12;ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER=13;ExpressionAntlrParser.LESS_THAN=14;ExpressionAntlrParser.MORE_THAN=15;ExpressionAntlrParser.LESS_OR_EQUAl=16;ExpressionAntlrParser.MORE_OR_EQUAL=17;ExpressionAntlrParser.OPEN_BRACKET=18;ExpressionAntlrParser.CLOSE_BRACKET=19;ExpressionAntlrParser.DOT=20;ExpressionAntlrParser.OPEN_SQUARE_BRACKET=21;ExpressionAntlrParser.CLOSE_SQUARE_BRACKET=22;ExpressionAntlrParser.OPEN_CURLY_BRACKET=23;ExpressionAntlrParser.CLOSE_CURLY_BRACKET=24;ExpressionAntlrParser.COMMA=25;ExpressionAntlrParser.COLON=26;ExpressionAntlrParser.ARROW=27;ExpressionAntlrParser.NULL_COALESCE=28;ExpressionAntlrParser.QUESTION_MARK=29;ExpressionAntlrParser.NUMBER=30;ExpressionAntlrParser.WHITESPACE=31;ExpressionAntlrParser.IDENTIFIER=32;ExpressionAntlrParser.NEWLINE=33;ExpressionAntlrParser.STRING=34;ExpressionAntlrParser.INVALID_TOKEN_DEFAULT_MODE=35;ExpressionAntlrParser.TEMPLATE=36;ExpressionAntlrParser.ESCAPE_CHARACTER=37;ExpressionAntlrParser.TEXT_CONTENT=38;ExpressionAntlrParser.RULE_file=0;ExpressionAntlrParser.RULE_expression=1;ExpressionAntlrParser.RULE_primaryExpression=2;ExpressionAntlrParser.RULE_stringInterpolation=3;ExpressionAntlrParser.RULE_textContent=4;ExpressionAntlrParser.RULE_argsList=5;ExpressionAntlrParser.RULE_lambda=6;ExpressionAntlrParser.RULE_keyValuePairList=7;ExpressionAntlrParser.RULE_keyValuePair=8;ExpressionAntlrParser.RULE_key=9;// tslint:disable:no-trailing-whitespace
	ExpressionAntlrParser.ruleNames=["file","expression","primaryExpression","stringInterpolation","textContent","argsList","lambda","keyValuePairList","keyValuePair","key"];ExpressionAntlrParser._LITERAL_NAMES=[undefined,undefined,"'+'","'-'","'!'","'^'","'*'","'/'","'%'","'=='",undefined,"'&'","'&&'","'||'","'<'","'>'","'<='","'>='","'('","')'","'.'","'['","']'","'{'","'}'","','","':'","'=>'","'??'","'?'"];ExpressionAntlrParser._SYMBOLIC_NAMES=[undefined,"STRING_INTERPOLATION_START","PLUS","SUBSTRACT","NON","XOR","ASTERISK","SLASH","PERCENT","DOUBLE_EQUAL","NOT_EQUAL","SINGLE_AND","DOUBLE_AND","DOUBLE_VERTICAL_CYLINDER","LESS_THAN","MORE_THAN","LESS_OR_EQUAl","MORE_OR_EQUAL","OPEN_BRACKET","CLOSE_BRACKET","DOT","OPEN_SQUARE_BRACKET","CLOSE_SQUARE_BRACKET","OPEN_CURLY_BRACKET","CLOSE_CURLY_BRACKET","COMMA","COLON","ARROW","NULL_COALESCE","QUESTION_MARK","NUMBER","WHITESPACE","IDENTIFIER","NEWLINE","STRING","INVALID_TOKEN_DEFAULT_MODE","TEMPLATE","ESCAPE_CHARACTER","TEXT_CONTENT"];ExpressionAntlrParser.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(ExpressionAntlrParser._LITERAL_NAMES,ExpressionAntlrParser._SYMBOLIC_NAMES,[]);ExpressionAntlrParser._serializedATN='\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x03(\xA1\x04\x02'+"\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07"+"\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x03\x02\x03\x02\x03\x02"+"\x03\x03\x03\x03\x03\x03\x03\x03\x05\x03\x1E\n\x03\x03\x03\x03\x03\x03"+"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03"+"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03"+"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03"+"\x03\x03\x03\x03\x03\x03\x03\x07\x03A\n\x03\f\x03\x0E\x03D\v\x03\x03\x04"+"\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04M\n\x04\x03\x04"+"\x03\x04\x03\x04\x05\x04R\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04"+"\x05\x04Y\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04`\n\x04"+"\x03\x04\x03\x04\x05\x04d\n\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04"+"\x03\x04\x07\x04l\n\x04\f\x04\x0E\x04o\v\x04\x03\x05\x03\x05\x03\x05\x03"+"\x05\x07\x05u\n\x05\f\x05\x0E\x05x\v\x05\x03\x05\x03\x05\x03\x06\x06\x06"+"}\n\x06\r\x06\x0E\x06~\x03\x07\x03\x07\x05\x07\x83\n\x07\x03\x07\x03\x07"+"\x03\x07\x05\x07\x88\n\x07\x07\x07\x8A\n\x07\f\x07\x0E\x07\x8D\v\x07\x03"+"\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x07\t\x96\n\t\f\t\x0E\t\x99\v\t"+"\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x02\x02\x04\x04\x06\f\x02\x02"+"\x04\x02\x06\x02\b\x02\n\x02\f\x02\x0E\x02\x10\x02\x12\x02\x14\x02\x02"+"\b\x03\x02\x04\x06\x03\x02\b\n\x03\x02\x04\x05\x03\x02\v\f\x03\x02\x10"+"\x13\x04\x02\"\"$$\x02\xB6\x02\x16\x03\x02\x02\x02\x04\x1D\x03\x02\x02"+"\x02\x06X\x03\x02\x02\x02\bp\x03\x02\x02\x02\n|\x03\x02\x02\x02\f\x82"+"\x03\x02\x02\x02\x0E\x8E\x03\x02\x02\x02\x10\x92\x03\x02\x02\x02\x12\x9A"+"\x03\x02\x02\x02\x14\x9E\x03\x02\x02\x02\x16\x17\x05\x04\x03\x02\x17\x18"+"\x07\x02\x02\x03\x18\x03\x03\x02\x02\x02\x19\x1A\b\x03\x01\x02\x1A\x1B"+"\t\x02\x02\x02\x1B\x1E\x05\x04\x03\x0E\x1C\x1E\x05\x06\x04\x02\x1D\x19"+"\x03\x02\x02\x02\x1D\x1C\x03\x02\x02\x02\x1EB\x03\x02\x02\x02\x1F \f\r"+"\x02\x02 !\x07\x07\x02\x02!A\x05\x04\x03\r\"#\f\f\x02\x02#$\t\x03\x02"+"\x02$A\x05\x04\x03\r%&\f\v\x02\x02&\'\t\x04\x02\x02\'A\x05\x04\x03\f("+")\f\n\x02\x02)*\t\x05\x02\x02*A\x05\x04\x03\v+,\f\t\x02\x02,-\x07\r\x02"+"\x02-A\x05\x04\x03\n./\f\b\x02\x02/0\t\x06\x02\x020A\x05\x04\x03\t12\f"+"\x07\x02\x0223\x07\x0E\x02\x023A\x05\x04\x03\b45\f\x06\x02\x0256\x07\x0F"+"\x02\x026A\x05\x04\x03\x0778\f\x05\x02\x0289\x07\x1E\x02\x029A\x05\x04"+"\x03\x06:;\f\x04\x02\x02;<\x07\x1F\x02\x02<=\x05\x04\x03\x02=>\x07\x1C"+"\x02\x02>?\x05\x04\x03\x05?A\x03\x02\x02\x02@\x1F\x03\x02\x02\x02@\"\x03"+"\x02\x02\x02@%\x03\x02\x02\x02@(\x03\x02\x02\x02@+\x03\x02\x02\x02@.\x03"+"\x02\x02\x02@1\x03\x02\x02\x02@4\x03\x02\x02\x02@7\x03\x02\x02\x02@:\x03"+"\x02\x02\x02AD\x03\x02\x02\x02B@\x03\x02\x02\x02BC\x03\x02\x02\x02C\x05"+"\x03\x02\x02\x02DB\x03\x02\x02\x02EF\b\x04\x01\x02FG\x07\x14\x02\x02G"+"H\x05\x04\x03\x02HI\x07\x15\x02\x02IY\x03\x02\x02\x02JL\x07\x17\x02\x02"+"KM\x05\f\x07\x02LK\x03\x02\x02\x02LM\x03\x02\x02\x02MN\x03\x02\x02\x02"+"NY\x07\x18\x02\x02OQ\x07\x19\x02\x02PR\x05\x10\t\x02QP\x03\x02\x02\x02"+"QR\x03\x02\x02\x02RS\x03\x02\x02\x02SY\x07\x1A\x02\x02TY\x07 \x02\x02"+"UY\x07$\x02\x02VY\x07\"\x02\x02WY\x05\b\x05\x02XE\x03\x02\x02\x02XJ\x03"+"\x02\x02\x02XO\x03\x02\x02\x02XT\x03\x02\x02\x02XU\x03\x02\x02\x02XV\x03"+"\x02\x02\x02XW\x03\x02\x02\x02Ym\x03\x02\x02\x02Z[\f\x05\x02\x02[\\\x07"+"\x16\x02\x02\\l\x07\"\x02\x02]_\f\x04\x02\x02^`\x07\x06\x02\x02_^\x03"+"\x02\x02\x02_`\x03\x02\x02\x02`a\x03\x02\x02\x02ac\x07\x14\x02\x02bd\x05"+"\f\x07\x02cb\x03\x02\x02\x02cd\x03\x02\x02\x02de\x03\x02\x02\x02el\x07"+"\x15\x02\x02fg\f\x03\x02\x02gh\x07\x17\x02\x02hi\x05\x04\x03\x02ij\x07"+"\x18\x02\x02jl\x03\x02\x02\x02kZ\x03\x02\x02\x02k]\x03\x02\x02\x02kf\x03"+"\x02\x02\x02lo\x03\x02\x02\x02mk\x03\x02\x02\x02mn\x03\x02\x02\x02n\x07"+"\x03\x02\x02\x02om\x03\x02\x02\x02pv\x07\x03\x02\x02qu\x07\'\x02\x02r"+"u\x07&\x02\x02su\x05\n\x06\x02tq\x03\x02\x02\x02tr\x03\x02\x02\x02ts\x03"+"\x02\x02\x02ux\x03\x02\x02\x02vt\x03\x02\x02\x02vw\x03\x02\x02\x02wy\x03"+"\x02\x02\x02xv\x03\x02\x02\x02yz\x07\x03\x02\x02z\t\x03\x02\x02\x02{}"+"\x07(\x02\x02|{\x03\x02\x02\x02}~\x03\x02\x02\x02~|\x03\x02\x02\x02~\x7F"+"\x03\x02\x02\x02\x7F\v\x03\x02\x02\x02\x80\x83\x05\x0E\b\x02\x81\x83\x05"+"\x04\x03\x02\x82\x80\x03\x02\x02\x02\x82\x81\x03\x02\x02\x02\x83\x8B\x03"+"\x02\x02\x02\x84\x87\x07\x1B\x02\x02\x85\x88\x05\x0E\b\x02\x86\x88\x05"+"\x04\x03\x02\x87\x85\x03\x02\x02\x02\x87\x86\x03\x02\x02\x02\x88\x8A\x03"+"\x02\x02\x02\x89\x84\x03\x02\x02\x02\x8A\x8D\x03\x02\x02\x02\x8B\x89\x03"+"\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C\r\x03\x02\x02\x02\x8D\x8B\x03"+"\x02\x02\x02\x8E\x8F\x07\"\x02\x02\x8F\x90\x07\x1D\x02\x02\x90\x91\x05"+"\x04\x03\x02\x91\x0F\x03\x02\x02\x02\x92\x97\x05\x12\n\x02\x93\x94\x07"+"\x1B\x02\x02\x94\x96\x05\x12\n\x02\x95\x93\x03\x02\x02\x02\x96\x99\x03"+"\x02\x02\x02\x97\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x11\x03"+"\x02\x02\x02\x99\x97\x03\x02\x02\x02\x9A\x9B\x05\x14\v\x02\x9B\x9C\x07"+"\x1C\x02\x02\x9C\x9D\x05\x04\x03\x02\x9D\x13\x03\x02\x02\x02\x9E\x9F\t"+"\x07\x02\x02\x9F\x15\x03\x02\x02\x02\x13\x1D@BLQX_ckmtv~\x82\x87\x8B\x97";exports.ExpressionAntlrParser=ExpressionAntlrParser;var FileContext=function(_ParserRuleContext_1$28){inherits(FileContext,_ParserRuleContext_1$28);createClass(FileContext,[{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}},{key:'EOF',value:function EOF(){return this.getToken(ExpressionAntlrParser.EOF,0);}}]);function FileContext(parent,invokingState){classCallCheck(this,FileContext);return possibleConstructorReturn(this,(FileContext.__proto__||Object.getPrototypeOf(FileContext)).call(this,parent,invokingState));}// @Override
	createClass(FileContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterFile){listener.enterFile(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitFile){listener.exitFile(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitFile){return visitor.visitFile(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_file;}}]);return FileContext;}(ParserRuleContext_1.ParserRuleContext);exports.FileContext=FileContext;var ExpressionContext=function(_ParserRuleContext_1$29){inherits(ExpressionContext,_ParserRuleContext_1$29);function ExpressionContext(parent,invokingState){classCallCheck(this,ExpressionContext);return possibleConstructorReturn(this,(ExpressionContext.__proto__||Object.getPrototypeOf(ExpressionContext)).call(this,parent,invokingState));}// @Override
	createClass(ExpressionContext,[{key:'copyFrom',value:function copyFrom(ctx){get(ExpressionContext.prototype.__proto__||Object.getPrototypeOf(ExpressionContext.prototype),'copyFrom',this).call(this,ctx);}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_expression;}}]);return ExpressionContext;}(ParserRuleContext_1.ParserRuleContext);exports.ExpressionContext=ExpressionContext;var UnaryOpExpContext=function(_ExpressionContext){inherits(UnaryOpExpContext,_ExpressionContext);createClass(UnaryOpExpContext,[{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}},{key:'NON',value:function NON(){return this.tryGetToken(ExpressionAntlrParser.NON,0);}},{key:'SUBSTRACT',value:function SUBSTRACT(){return this.tryGetToken(ExpressionAntlrParser.SUBSTRACT,0);}},{key:'PLUS',value:function PLUS(){return this.tryGetToken(ExpressionAntlrParser.PLUS,0);}}]);function UnaryOpExpContext(ctx){classCallCheck(this,UnaryOpExpContext);var _this202=possibleConstructorReturn(this,(UnaryOpExpContext.__proto__||Object.getPrototypeOf(UnaryOpExpContext)).call(this,ctx.parent,ctx.invokingState));_this202.copyFrom(ctx);return _this202;}// @Override
	createClass(UnaryOpExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterUnaryOpExp){listener.enterUnaryOpExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitUnaryOpExp){listener.exitUnaryOpExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitUnaryOpExp){return visitor.visitUnaryOpExp(this);}else {return visitor.visitChildren(this);}}}]);return UnaryOpExpContext;}(ExpressionContext);exports.UnaryOpExpContext=UnaryOpExpContext;var BinaryOpExpContext=function(_ExpressionContext2){inherits(BinaryOpExpContext,_ExpressionContext2);createClass(BinaryOpExpContext,[{key:'expression',value:function expression(i){if(i===undefined){return this.getRuleContexts(ExpressionContext);}else {return this.getRuleContext(i,ExpressionContext);}}},{key:'XOR',value:function XOR(){return this.tryGetToken(ExpressionAntlrParser.XOR,0);}},{key:'ASTERISK',value:function ASTERISK(){return this.tryGetToken(ExpressionAntlrParser.ASTERISK,0);}},{key:'SLASH',value:function SLASH(){return this.tryGetToken(ExpressionAntlrParser.SLASH,0);}},{key:'PERCENT',value:function PERCENT(){return this.tryGetToken(ExpressionAntlrParser.PERCENT,0);}},{key:'PLUS',value:function PLUS(){return this.tryGetToken(ExpressionAntlrParser.PLUS,0);}},{key:'SUBSTRACT',value:function SUBSTRACT(){return this.tryGetToken(ExpressionAntlrParser.SUBSTRACT,0);}},{key:'DOUBLE_EQUAL',value:function DOUBLE_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_EQUAL,0);}},{key:'NOT_EQUAL',value:function NOT_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.NOT_EQUAL,0);}},{key:'SINGLE_AND',value:function SINGLE_AND(){return this.tryGetToken(ExpressionAntlrParser.SINGLE_AND,0);}},{key:'LESS_THAN',value:function LESS_THAN(){return this.tryGetToken(ExpressionAntlrParser.LESS_THAN,0);}},{key:'LESS_OR_EQUAl',value:function LESS_OR_EQUAl(){return this.tryGetToken(ExpressionAntlrParser.LESS_OR_EQUAl,0);}},{key:'MORE_THAN',value:function MORE_THAN(){return this.tryGetToken(ExpressionAntlrParser.MORE_THAN,0);}},{key:'MORE_OR_EQUAL',value:function MORE_OR_EQUAL(){return this.tryGetToken(ExpressionAntlrParser.MORE_OR_EQUAL,0);}},{key:'DOUBLE_AND',value:function DOUBLE_AND(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_AND,0);}},{key:'DOUBLE_VERTICAL_CYLINDER',value:function DOUBLE_VERTICAL_CYLINDER(){return this.tryGetToken(ExpressionAntlrParser.DOUBLE_VERTICAL_CYLINDER,0);}},{key:'NULL_COALESCE',value:function NULL_COALESCE(){return this.tryGetToken(ExpressionAntlrParser.NULL_COALESCE,0);}}]);function BinaryOpExpContext(ctx){classCallCheck(this,BinaryOpExpContext);var _this203=possibleConstructorReturn(this,(BinaryOpExpContext.__proto__||Object.getPrototypeOf(BinaryOpExpContext)).call(this,ctx.parent,ctx.invokingState));_this203.copyFrom(ctx);return _this203;}// @Override
	createClass(BinaryOpExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterBinaryOpExp){listener.enterBinaryOpExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitBinaryOpExp){listener.exitBinaryOpExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitBinaryOpExp){return visitor.visitBinaryOpExp(this);}else {return visitor.visitChildren(this);}}}]);return BinaryOpExpContext;}(ExpressionContext);exports.BinaryOpExpContext=BinaryOpExpContext;var TripleOpExpContext=function(_ExpressionContext3){inherits(TripleOpExpContext,_ExpressionContext3);createClass(TripleOpExpContext,[{key:'expression',value:function expression(i){if(i===undefined){return this.getRuleContexts(ExpressionContext);}else {return this.getRuleContext(i,ExpressionContext);}}},{key:'QUESTION_MARK',value:function QUESTION_MARK(){return this.getToken(ExpressionAntlrParser.QUESTION_MARK,0);}},{key:'COLON',value:function COLON(){return this.getToken(ExpressionAntlrParser.COLON,0);}}]);function TripleOpExpContext(ctx){classCallCheck(this,TripleOpExpContext);var _this204=possibleConstructorReturn(this,(TripleOpExpContext.__proto__||Object.getPrototypeOf(TripleOpExpContext)).call(this,ctx.parent,ctx.invokingState));_this204.copyFrom(ctx);return _this204;}// @Override
	createClass(TripleOpExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterTripleOpExp){listener.enterTripleOpExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitTripleOpExp){listener.exitTripleOpExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitTripleOpExp){return visitor.visitTripleOpExp(this);}else {return visitor.visitChildren(this);}}}]);return TripleOpExpContext;}(ExpressionContext);exports.TripleOpExpContext=TripleOpExpContext;var PrimaryExpContext=function(_ExpressionContext4){inherits(PrimaryExpContext,_ExpressionContext4);createClass(PrimaryExpContext,[{key:'primaryExpression',value:function primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext);}}]);function PrimaryExpContext(ctx){classCallCheck(this,PrimaryExpContext);var _this205=possibleConstructorReturn(this,(PrimaryExpContext.__proto__||Object.getPrototypeOf(PrimaryExpContext)).call(this,ctx.parent,ctx.invokingState));_this205.copyFrom(ctx);return _this205;}// @Override
	createClass(PrimaryExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterPrimaryExp){listener.enterPrimaryExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitPrimaryExp){listener.exitPrimaryExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitPrimaryExp){return visitor.visitPrimaryExp(this);}else {return visitor.visitChildren(this);}}}]);return PrimaryExpContext;}(ExpressionContext);exports.PrimaryExpContext=PrimaryExpContext;var PrimaryExpressionContext=function(_ParserRuleContext_1$30){inherits(PrimaryExpressionContext,_ParserRuleContext_1$30);function PrimaryExpressionContext(parent,invokingState){classCallCheck(this,PrimaryExpressionContext);return possibleConstructorReturn(this,(PrimaryExpressionContext.__proto__||Object.getPrototypeOf(PrimaryExpressionContext)).call(this,parent,invokingState));}// @Override
	createClass(PrimaryExpressionContext,[{key:'copyFrom',value:function copyFrom(ctx){get(PrimaryExpressionContext.prototype.__proto__||Object.getPrototypeOf(PrimaryExpressionContext.prototype),'copyFrom',this).call(this,ctx);}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_primaryExpression;}}]);return PrimaryExpressionContext;}(ParserRuleContext_1.ParserRuleContext);exports.PrimaryExpressionContext=PrimaryExpressionContext;var ParenthesisExpContext=function(_PrimaryExpressionCon){inherits(ParenthesisExpContext,_PrimaryExpressionCon);createClass(ParenthesisExpContext,[{key:'OPEN_BRACKET',value:function OPEN_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_BRACKET,0);}},{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}},{key:'CLOSE_BRACKET',value:function CLOSE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_BRACKET,0);}}]);function ParenthesisExpContext(ctx){classCallCheck(this,ParenthesisExpContext);var _this207=possibleConstructorReturn(this,(ParenthesisExpContext.__proto__||Object.getPrototypeOf(ParenthesisExpContext)).call(this,ctx.parent,ctx.invokingState));_this207.copyFrom(ctx);return _this207;}// @Override
	createClass(ParenthesisExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterParenthesisExp){listener.enterParenthesisExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitParenthesisExp){listener.exitParenthesisExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitParenthesisExp){return visitor.visitParenthesisExp(this);}else {return visitor.visitChildren(this);}}}]);return ParenthesisExpContext;}(PrimaryExpressionContext);exports.ParenthesisExpContext=ParenthesisExpContext;var ArrayCreationExpContext=function(_PrimaryExpressionCon2){inherits(ArrayCreationExpContext,_PrimaryExpressionCon2);createClass(ArrayCreationExpContext,[{key:'OPEN_SQUARE_BRACKET',value:function OPEN_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_SQUARE_BRACKET,0);}},{key:'CLOSE_SQUARE_BRACKET',value:function CLOSE_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET,0);}},{key:'argsList',value:function argsList(){return this.tryGetRuleContext(0,ArgsListContext);}}]);function ArrayCreationExpContext(ctx){classCallCheck(this,ArrayCreationExpContext);var _this208=possibleConstructorReturn(this,(ArrayCreationExpContext.__proto__||Object.getPrototypeOf(ArrayCreationExpContext)).call(this,ctx.parent,ctx.invokingState));_this208.copyFrom(ctx);return _this208;}// @Override
	createClass(ArrayCreationExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterArrayCreationExp){listener.enterArrayCreationExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitArrayCreationExp){listener.exitArrayCreationExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitArrayCreationExp){return visitor.visitArrayCreationExp(this);}else {return visitor.visitChildren(this);}}}]);return ArrayCreationExpContext;}(PrimaryExpressionContext);exports.ArrayCreationExpContext=ArrayCreationExpContext;var JsonCreationExpContext=function(_PrimaryExpressionCon3){inherits(JsonCreationExpContext,_PrimaryExpressionCon3);createClass(JsonCreationExpContext,[{key:'OPEN_CURLY_BRACKET',value:function OPEN_CURLY_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_CURLY_BRACKET,0);}},{key:'CLOSE_CURLY_BRACKET',value:function CLOSE_CURLY_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_CURLY_BRACKET,0);}},{key:'keyValuePairList',value:function keyValuePairList(){return this.tryGetRuleContext(0,KeyValuePairListContext);}}]);function JsonCreationExpContext(ctx){classCallCheck(this,JsonCreationExpContext);var _this209=possibleConstructorReturn(this,(JsonCreationExpContext.__proto__||Object.getPrototypeOf(JsonCreationExpContext)).call(this,ctx.parent,ctx.invokingState));_this209.copyFrom(ctx);return _this209;}// @Override
	createClass(JsonCreationExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterJsonCreationExp){listener.enterJsonCreationExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitJsonCreationExp){listener.exitJsonCreationExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitJsonCreationExp){return visitor.visitJsonCreationExp(this);}else {return visitor.visitChildren(this);}}}]);return JsonCreationExpContext;}(PrimaryExpressionContext);exports.JsonCreationExpContext=JsonCreationExpContext;var NumericAtomContext=function(_PrimaryExpressionCon4){inherits(NumericAtomContext,_PrimaryExpressionCon4);createClass(NumericAtomContext,[{key:'NUMBER',value:function NUMBER(){return this.getToken(ExpressionAntlrParser.NUMBER,0);}}]);function NumericAtomContext(ctx){classCallCheck(this,NumericAtomContext);var _this210=possibleConstructorReturn(this,(NumericAtomContext.__proto__||Object.getPrototypeOf(NumericAtomContext)).call(this,ctx.parent,ctx.invokingState));_this210.copyFrom(ctx);return _this210;}// @Override
	createClass(NumericAtomContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterNumericAtom){listener.enterNumericAtom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitNumericAtom){listener.exitNumericAtom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitNumericAtom){return visitor.visitNumericAtom(this);}else {return visitor.visitChildren(this);}}}]);return NumericAtomContext;}(PrimaryExpressionContext);exports.NumericAtomContext=NumericAtomContext;var StringAtomContext=function(_PrimaryExpressionCon5){inherits(StringAtomContext,_PrimaryExpressionCon5);createClass(StringAtomContext,[{key:'STRING',value:function STRING(){return this.getToken(ExpressionAntlrParser.STRING,0);}}]);function StringAtomContext(ctx){classCallCheck(this,StringAtomContext);var _this211=possibleConstructorReturn(this,(StringAtomContext.__proto__||Object.getPrototypeOf(StringAtomContext)).call(this,ctx.parent,ctx.invokingState));_this211.copyFrom(ctx);return _this211;}// @Override
	createClass(StringAtomContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterStringAtom){listener.enterStringAtom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitStringAtom){listener.exitStringAtom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitStringAtom){return visitor.visitStringAtom(this);}else {return visitor.visitChildren(this);}}}]);return StringAtomContext;}(PrimaryExpressionContext);exports.StringAtomContext=StringAtomContext;var IdAtomContext=function(_PrimaryExpressionCon6){inherits(IdAtomContext,_PrimaryExpressionCon6);createClass(IdAtomContext,[{key:'IDENTIFIER',value:function IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0);}}]);function IdAtomContext(ctx){classCallCheck(this,IdAtomContext);var _this212=possibleConstructorReturn(this,(IdAtomContext.__proto__||Object.getPrototypeOf(IdAtomContext)).call(this,ctx.parent,ctx.invokingState));_this212.copyFrom(ctx);return _this212;}// @Override
	createClass(IdAtomContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterIdAtom){listener.enterIdAtom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitIdAtom){listener.exitIdAtom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitIdAtom){return visitor.visitIdAtom(this);}else {return visitor.visitChildren(this);}}}]);return IdAtomContext;}(PrimaryExpressionContext);exports.IdAtomContext=IdAtomContext;var StringInterpolationAtomContext=function(_PrimaryExpressionCon7){inherits(StringInterpolationAtomContext,_PrimaryExpressionCon7);createClass(StringInterpolationAtomContext,[{key:'stringInterpolation',value:function stringInterpolation(){return this.getRuleContext(0,StringInterpolationContext);}}]);function StringInterpolationAtomContext(ctx){classCallCheck(this,StringInterpolationAtomContext);var _this213=possibleConstructorReturn(this,(StringInterpolationAtomContext.__proto__||Object.getPrototypeOf(StringInterpolationAtomContext)).call(this,ctx.parent,ctx.invokingState));_this213.copyFrom(ctx);return _this213;}// @Override
	createClass(StringInterpolationAtomContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterStringInterpolationAtom){listener.enterStringInterpolationAtom(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitStringInterpolationAtom){listener.exitStringInterpolationAtom(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitStringInterpolationAtom){return visitor.visitStringInterpolationAtom(this);}else {return visitor.visitChildren(this);}}}]);return StringInterpolationAtomContext;}(PrimaryExpressionContext);exports.StringInterpolationAtomContext=StringInterpolationAtomContext;var MemberAccessExpContext=function(_PrimaryExpressionCon8){inherits(MemberAccessExpContext,_PrimaryExpressionCon8);createClass(MemberAccessExpContext,[{key:'primaryExpression',value:function primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext);}},{key:'DOT',value:function DOT(){return this.getToken(ExpressionAntlrParser.DOT,0);}},{key:'IDENTIFIER',value:function IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0);}}]);function MemberAccessExpContext(ctx){classCallCheck(this,MemberAccessExpContext);var _this214=possibleConstructorReturn(this,(MemberAccessExpContext.__proto__||Object.getPrototypeOf(MemberAccessExpContext)).call(this,ctx.parent,ctx.invokingState));_this214.copyFrom(ctx);return _this214;}// @Override
	createClass(MemberAccessExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterMemberAccessExp){listener.enterMemberAccessExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitMemberAccessExp){listener.exitMemberAccessExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitMemberAccessExp){return visitor.visitMemberAccessExp(this);}else {return visitor.visitChildren(this);}}}]);return MemberAccessExpContext;}(PrimaryExpressionContext);exports.MemberAccessExpContext=MemberAccessExpContext;var FuncInvokeExpContext=function(_PrimaryExpressionCon9){inherits(FuncInvokeExpContext,_PrimaryExpressionCon9);createClass(FuncInvokeExpContext,[{key:'primaryExpression',value:function primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext);}},{key:'OPEN_BRACKET',value:function OPEN_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_BRACKET,0);}},{key:'CLOSE_BRACKET',value:function CLOSE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_BRACKET,0);}},{key:'NON',value:function NON(){return this.tryGetToken(ExpressionAntlrParser.NON,0);}},{key:'argsList',value:function argsList(){return this.tryGetRuleContext(0,ArgsListContext);}}]);function FuncInvokeExpContext(ctx){classCallCheck(this,FuncInvokeExpContext);var _this215=possibleConstructorReturn(this,(FuncInvokeExpContext.__proto__||Object.getPrototypeOf(FuncInvokeExpContext)).call(this,ctx.parent,ctx.invokingState));_this215.copyFrom(ctx);return _this215;}// @Override
	createClass(FuncInvokeExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterFuncInvokeExp){listener.enterFuncInvokeExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitFuncInvokeExp){listener.exitFuncInvokeExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitFuncInvokeExp){return visitor.visitFuncInvokeExp(this);}else {return visitor.visitChildren(this);}}}]);return FuncInvokeExpContext;}(PrimaryExpressionContext);exports.FuncInvokeExpContext=FuncInvokeExpContext;var IndexAccessExpContext=function(_PrimaryExpressionCon10){inherits(IndexAccessExpContext,_PrimaryExpressionCon10);createClass(IndexAccessExpContext,[{key:'primaryExpression',value:function primaryExpression(){return this.getRuleContext(0,PrimaryExpressionContext);}},{key:'OPEN_SQUARE_BRACKET',value:function OPEN_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.OPEN_SQUARE_BRACKET,0);}},{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}},{key:'CLOSE_SQUARE_BRACKET',value:function CLOSE_SQUARE_BRACKET(){return this.getToken(ExpressionAntlrParser.CLOSE_SQUARE_BRACKET,0);}}]);function IndexAccessExpContext(ctx){classCallCheck(this,IndexAccessExpContext);var _this216=possibleConstructorReturn(this,(IndexAccessExpContext.__proto__||Object.getPrototypeOf(IndexAccessExpContext)).call(this,ctx.parent,ctx.invokingState));_this216.copyFrom(ctx);return _this216;}// @Override
	createClass(IndexAccessExpContext,[{key:'enterRule',value:function enterRule(listener){if(listener.enterIndexAccessExp){listener.enterIndexAccessExp(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitIndexAccessExp){listener.exitIndexAccessExp(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitIndexAccessExp){return visitor.visitIndexAccessExp(this);}else {return visitor.visitChildren(this);}}}]);return IndexAccessExpContext;}(PrimaryExpressionContext);exports.IndexAccessExpContext=IndexAccessExpContext;var StringInterpolationContext=function(_ParserRuleContext_1$31){inherits(StringInterpolationContext,_ParserRuleContext_1$31);createClass(StringInterpolationContext,[{key:'STRING_INTERPOLATION_START',value:function STRING_INTERPOLATION_START(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.STRING_INTERPOLATION_START);}else {return this.getToken(ExpressionAntlrParser.STRING_INTERPOLATION_START,i);}}},{key:'ESCAPE_CHARACTER',value:function ESCAPE_CHARACTER(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.ESCAPE_CHARACTER);}else {return this.getToken(ExpressionAntlrParser.ESCAPE_CHARACTER,i);}}},{key:'TEMPLATE',value:function TEMPLATE(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.TEMPLATE);}else {return this.getToken(ExpressionAntlrParser.TEMPLATE,i);}}},{key:'textContent',value:function textContent(i){if(i===undefined){return this.getRuleContexts(TextContentContext);}else {return this.getRuleContext(i,TextContentContext);}}}]);function StringInterpolationContext(parent,invokingState){classCallCheck(this,StringInterpolationContext);return possibleConstructorReturn(this,(StringInterpolationContext.__proto__||Object.getPrototypeOf(StringInterpolationContext)).call(this,parent,invokingState));}// @Override
	createClass(StringInterpolationContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterStringInterpolation){listener.enterStringInterpolation(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitStringInterpolation){listener.exitStringInterpolation(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitStringInterpolation){return visitor.visitStringInterpolation(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_stringInterpolation;}}]);return StringInterpolationContext;}(ParserRuleContext_1.ParserRuleContext);exports.StringInterpolationContext=StringInterpolationContext;var TextContentContext=function(_ParserRuleContext_1$32){inherits(TextContentContext,_ParserRuleContext_1$32);createClass(TextContentContext,[{key:'TEXT_CONTENT',value:function TEXT_CONTENT(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.TEXT_CONTENT);}else {return this.getToken(ExpressionAntlrParser.TEXT_CONTENT,i);}}}]);function TextContentContext(parent,invokingState){classCallCheck(this,TextContentContext);return possibleConstructorReturn(this,(TextContentContext.__proto__||Object.getPrototypeOf(TextContentContext)).call(this,parent,invokingState));}// @Override
	createClass(TextContentContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterTextContent){listener.enterTextContent(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitTextContent){listener.exitTextContent(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitTextContent){return visitor.visitTextContent(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_textContent;}}]);return TextContentContext;}(ParserRuleContext_1.ParserRuleContext);exports.TextContentContext=TextContentContext;var ArgsListContext=function(_ParserRuleContext_1$33){inherits(ArgsListContext,_ParserRuleContext_1$33);createClass(ArgsListContext,[{key:'lambda',value:function lambda(i){if(i===undefined){return this.getRuleContexts(LambdaContext);}else {return this.getRuleContext(i,LambdaContext);}}},{key:'expression',value:function expression(i){if(i===undefined){return this.getRuleContexts(ExpressionContext);}else {return this.getRuleContext(i,ExpressionContext);}}},{key:'COMMA',value:function COMMA(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.COMMA);}else {return this.getToken(ExpressionAntlrParser.COMMA,i);}}}]);function ArgsListContext(parent,invokingState){classCallCheck(this,ArgsListContext);return possibleConstructorReturn(this,(ArgsListContext.__proto__||Object.getPrototypeOf(ArgsListContext)).call(this,parent,invokingState));}// @Override
	createClass(ArgsListContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterArgsList){listener.enterArgsList(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitArgsList){listener.exitArgsList(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitArgsList){return visitor.visitArgsList(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_argsList;}}]);return ArgsListContext;}(ParserRuleContext_1.ParserRuleContext);exports.ArgsListContext=ArgsListContext;var LambdaContext=function(_ParserRuleContext_1$34){inherits(LambdaContext,_ParserRuleContext_1$34);createClass(LambdaContext,[{key:'IDENTIFIER',value:function IDENTIFIER(){return this.getToken(ExpressionAntlrParser.IDENTIFIER,0);}},{key:'ARROW',value:function ARROW(){return this.getToken(ExpressionAntlrParser.ARROW,0);}},{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}}]);function LambdaContext(parent,invokingState){classCallCheck(this,LambdaContext);return possibleConstructorReturn(this,(LambdaContext.__proto__||Object.getPrototypeOf(LambdaContext)).call(this,parent,invokingState));}// @Override
	createClass(LambdaContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterLambda){listener.enterLambda(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitLambda){listener.exitLambda(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitLambda){return visitor.visitLambda(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_lambda;}}]);return LambdaContext;}(ParserRuleContext_1.ParserRuleContext);exports.LambdaContext=LambdaContext;var KeyValuePairListContext=function(_ParserRuleContext_1$35){inherits(KeyValuePairListContext,_ParserRuleContext_1$35);createClass(KeyValuePairListContext,[{key:'keyValuePair',value:function keyValuePair(i){if(i===undefined){return this.getRuleContexts(KeyValuePairContext);}else {return this.getRuleContext(i,KeyValuePairContext);}}},{key:'COMMA',value:function COMMA(i){if(i===undefined){return this.getTokens(ExpressionAntlrParser.COMMA);}else {return this.getToken(ExpressionAntlrParser.COMMA,i);}}}]);function KeyValuePairListContext(parent,invokingState){classCallCheck(this,KeyValuePairListContext);return possibleConstructorReturn(this,(KeyValuePairListContext.__proto__||Object.getPrototypeOf(KeyValuePairListContext)).call(this,parent,invokingState));}// @Override
	createClass(KeyValuePairListContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterKeyValuePairList){listener.enterKeyValuePairList(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitKeyValuePairList){listener.exitKeyValuePairList(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitKeyValuePairList){return visitor.visitKeyValuePairList(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_keyValuePairList;}}]);return KeyValuePairListContext;}(ParserRuleContext_1.ParserRuleContext);exports.KeyValuePairListContext=KeyValuePairListContext;var KeyValuePairContext=function(_ParserRuleContext_1$36){inherits(KeyValuePairContext,_ParserRuleContext_1$36);createClass(KeyValuePairContext,[{key:'key',value:function key(){return this.getRuleContext(0,KeyContext);}},{key:'COLON',value:function COLON(){return this.getToken(ExpressionAntlrParser.COLON,0);}},{key:'expression',value:function expression(){return this.getRuleContext(0,ExpressionContext);}}]);function KeyValuePairContext(parent,invokingState){classCallCheck(this,KeyValuePairContext);return possibleConstructorReturn(this,(KeyValuePairContext.__proto__||Object.getPrototypeOf(KeyValuePairContext)).call(this,parent,invokingState));}// @Override
	createClass(KeyValuePairContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterKeyValuePair){listener.enterKeyValuePair(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitKeyValuePair){listener.exitKeyValuePair(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitKeyValuePair){return visitor.visitKeyValuePair(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_keyValuePair;}}]);return KeyValuePairContext;}(ParserRuleContext_1.ParserRuleContext);exports.KeyValuePairContext=KeyValuePairContext;var KeyContext=function(_ParserRuleContext_1$37){inherits(KeyContext,_ParserRuleContext_1$37);createClass(KeyContext,[{key:'IDENTIFIER',value:function IDENTIFIER(){return this.tryGetToken(ExpressionAntlrParser.IDENTIFIER,0);}},{key:'STRING',value:function STRING(){return this.tryGetToken(ExpressionAntlrParser.STRING,0);}}]);function KeyContext(parent,invokingState){classCallCheck(this,KeyContext);return possibleConstructorReturn(this,(KeyContext.__proto__||Object.getPrototypeOf(KeyContext)).call(this,parent,invokingState));}// @Override
	createClass(KeyContext,[{key:'enterRule',// @Override
	value:function enterRule(listener){if(listener.enterKey){listener.enterKey(this);}}// @Override
	},{key:'exitRule',value:function exitRule(listener){if(listener.exitKey){listener.exitKey(this);}}// @Override
	},{key:'accept',value:function accept(visitor){if(visitor.visitKey){return visitor.visitKey(this);}else {return visitor.visitChildren(this);}}},{key:'ruleIndex',get:function get(){return ExpressionAntlrParser.RULE_key;}}]);return KeyContext;}(ParserRuleContext_1.ParserRuleContext);exports.KeyContext=KeyContext;},{"antlr4ts/FailedPredicateException":228,"antlr4ts/NoViableAltException":236,"antlr4ts/Parser":237,"antlr4ts/ParserRuleContext":239,"antlr4ts/RecognitionException":242,"antlr4ts/Token":248,"antlr4ts/VocabularyImpl":250,"antlr4ts/atn/ATN":251,"antlr4ts/atn/ATNDeserializer":255,"antlr4ts/atn/ParserATNSimulator":292,"antlr4ts/misc/Utils":337}],199:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */__export(require("./ExpressionAntlrLexer"));__export(require("./ExpressionAntlrParser"));},{"./ExpressionAntlrLexer":197,"./ExpressionAntlrParser":198}],200:[function(require,module,exports){function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */__export(require("./parseErrorListener"));__export(require("./expressionParser"));__export(require("./util"));__export(require("./generated"));},{"./expressionParser":196,"./generated":199,"./parseErrorListener":201,"./util":202}],201:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});// tslint:disable-next-line: completed-docs
	/**
	 * Expression parser error listener.
	 */var ParseErrorListener=function(){function ParseErrorListener(){classCallCheck(this,ParseErrorListener);}createClass(ParseErrorListener,[{key:'syntaxError',/**
	     * Throws a syntax error based on the current context.
	     * @param _recognizer An Antlr4 runtime recognizer.
	     * @param _offendingSymbol The token violating the lexer rules.
	     * @param line The line number where the error occurred.
	     * @param charPositionInLine The position of character in the line where the error occurred.
	     * @param msg The error message.
	     * @param _e The `RecognitionException`.
	     */value:function syntaxError(_recognizer,_offendingSymbol,line,charPositionInLine,msg,// eslint-disable-next-line @typescript-eslint/no-unused-vars
	_e){throw Error('syntax error at line '+line+':'+charPositionInLine+' '+msg);}}]);return ParseErrorListener;}();ParseErrorListener.Instance=new ParseErrorListener();exports.ParseErrorListener=ParseErrorListener;},{}],202:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 *//**
	 * util class
	 */var Util=function(){function Util(){classCallCheck(this,Util);}createClass(Util,null,[{key:'trim',/**
	     * trim char
	     * @param str input string
	     * @param char trim character
	     */value:function trim(str,char){if(char!==undefined){return str.replace(new RegExp(''.concat('^\\',char,'+|\\',char,'+$'),'g'),'');}return str.trim();}}]);return Util;}();exports.Util=Util;},{}],203:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Error listener for Regex.
	 */// re-enable when this rule honors underscore prefix
	/* eslint-disable @typescript-eslint/no-unused-vars */var RegexErrorListener=function(){function RegexErrorListener(){classCallCheck(this,RegexErrorListener);}createClass(RegexErrorListener,[{key:'syntaxError',/**
	     * Upon syntax error, notify any interested parties.
	     * @param _recognizer What parser got the error. From this object, you can access the context as well as the input stream.
	     * @param _offendingSymbol Offending token in the input token stream, unless recognizer is a lexer, then it's null.
	     * @param line Line number in the input where the error occurred.
	     * @param charPositionInLine Character position within the line where the error occurred.
	     * @param msg Message to emit.
	     * @param _e Exception generated by the parser that led to the reporting of an error.
	     */value:function syntaxError(_recognizer,_offendingSymbol,_line,_charPositionInLine,_msg,_e){throw Error('Regular expression is invalid.');}}]);return RegexErrorListener;}();RegexErrorListener.Instance=new RegexErrorListener();exports.RegexErrorListener=RegexErrorListener;},{}],204:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});(function(ReturnType){/**
	     * True or false boolean value.
	     */ReturnType[ReturnType["Boolean"]=1]="Boolean";/**
	     * Numerical value like int, float, double, ...
	     */ReturnType[ReturnType["Number"]=2]="Number";/**
	     * Any value is possible.
	     */ReturnType[ReturnType["Object"]=4]="Object";/**
	     * String value.
	     */ReturnType[ReturnType["String"]=8]="String";/**
	     * Array value.
	     */ReturnType[ReturnType["Array"]=16]="Array";})(exports.ReturnType||(exports.ReturnType={}));},{}],205:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Time zone converter.
	 * (1) From Windows (.NET) timezone to iana timezone.
	 * (2) From iana timezone to windows (.NET) timezone.
	 * windows ref: https://support.microsoft.com/en-us/help/22803/daylight-saving-time.
	 * iana ref: https://www.iana.org/time-zones.
	 */var TimeZoneConverter=function(){function TimeZoneConverter(){classCallCheck(this,TimeZoneConverter);}createClass(TimeZoneConverter,null,[{key:'ianaToWindows',/**
	     * convert IANA timezone format to windows timezone format.
	     * @param ianaTimeZoneId IANA timezone format.
	     * @returns windows timezone format.
	     */value:function ianaToWindows(ianaTimeZoneId){this.loadData();if(this.ianaToWindowsMap.has(ianaTimeZoneId)){return this.ianaToWindowsMap.get(ianaTimeZoneId);}return ianaTimeZoneId;}/**
	     * Convert windows timezone to iana timezone.
	     * @param windowsTimeZoneId Windows timezone format.
	     * @returns Iana timezone format.
	     */},{key:'windowsToIana',value:function windowsToIana(windowsTimeZoneId){this.loadData();if(this.windowsToIanaMap.has('001|'+windowsTimeZoneId)){return this.windowsToIanaMap.get('001|'+windowsTimeZoneId);}return windowsTimeZoneId;}/**
	     * Verify the string is windows timezone or iana string
	     * @param timezoneStr time zone string
	     * @returns is the string is time zone string
	     */},{key:'verifyTimeZoneStr',value:function verifyTimeZoneStr(timezoneStr){this.loadData();return this.validTimezonStr.includes(timezoneStr);}/**
	     * @private
	     */},{key:'loadData',value:function loadData(){var data=this.mappingString;var lines=data.split(this.seperator);var _iteratorNormalCompletion32=true;var _didIteratorError32=false;var _iteratorError32=undefined;try{for(var _iterator32=lines[Symbol.iterator](),_step32;!(_iteratorNormalCompletion32=(_step32=_iterator32.next()).done);_iteratorNormalCompletion32=true){var line=_step32.value;var tokens=line.split(',');var windowsID=tokens[0];var territory=tokens[1];var ianaIDs=tokens[2].split(' ');var _iteratorNormalCompletion33=true;var _didIteratorError33=false;var _iteratorError33=undefined;try{for(var _iterator33=ianaIDs[Symbol.iterator](),_step33;!(_iteratorNormalCompletion33=(_step33=_iterator33.next()).done);_iteratorNormalCompletion33=true){var ianaID=_step33.value;if(!this.ianaToWindowsMap.has(ianaID)){this.ianaToWindowsMap.set(ianaID,windowsID);}if(!this.validTimezonStr.includes(ianaID)){this.validTimezonStr.push(ianaID);}}}catch(err){_didIteratorError33=true;_iteratorError33=err;}finally{try{if(!_iteratorNormalCompletion33&&_iterator33.return){_iterator33.return();}}finally{if(_didIteratorError33){throw _iteratorError33;}}}if(!this.windowsToIanaMap.has(territory+'|'+windowsID)){this.windowsToIanaMap.set(territory+'|'+windowsID,ianaIDs[0]);}if(!this.validTimezonStr.includes(windowsID)){this.validTimezonStr.push(windowsID);}}}catch(err){_didIteratorError32=true;_iteratorError32=err;}finally{try{if(!_iteratorNormalCompletion32&&_iterator32.return){_iterator32.return();}}finally{if(_didIteratorError32){throw _iteratorError32;}}}}}]);return TimeZoneConverter;}();TimeZoneConverter.ianaToWindowsMap=new Map();TimeZoneConverter.windowsToIanaMap=new Map();TimeZoneConverter.validTimezonStr=[];TimeZoneConverter.seperator='    ';TimeZoneConverter.mappingString='AUS Central Standard Time,001,Australia/Darwin\
    AUS Central Standard Time,AU,Australia/Darwin\
    AUS Eastern Standard Time,001,Australia/Sydney\
    AUS Eastern Standard Time,AU,Australia/Sydney Australia/Melbourne\
    Afghanistan Standard Time,001,Asia/Kabul\
    Afghanistan Standard Time,AF,Asia/Kabul\
    Alaskan Standard Time,001,America/Anchorage\
    Alaskan Standard Time,US,America/Anchorage America/Juneau America/Metlakatla America/Nome America/Sitka America/Yakutat\
    Aleutian Standard Time,001,America/Adak\
    Aleutian Standard Time,US,America/Adak\
    Altai Standard Time,001,Asia/Barnaul\
    Altai Standard Time,RU,Asia/Barnaul\
    Arab Standard Time,001,Asia/Riyadh\
    Arab Standard Time,BH,Asia/Qatar\
    Arab Standard Time,KW,Asia/Riyadh\
    Arab Standard Time,QA,Asia/Qatar\
    Arab Standard Time,SA,Asia/Riyadh\
    Arab Standard Time,YE,Asia/Riyadh\
    Arabian Standard Time,001,Asia/Dubai\
    Arabian Standard Time,AE,Asia/Dubai\
    Arabian Standard Time,OM,Asia/Dubai\
    Arabian Standard Time,ZZ,Etc/GMT-4\
    Arabic Standard Time,001,Asia/Baghdad\
    Arabic Standard Time,IQ,Asia/Baghdad\
    Argentina Standard Time,001,America/Argentina/Buenos_Aires\
    Argentina Standard Time,AR,America/Argentina/Buenos_Aires America/Argentina/La_Rioja America/Argentina/Rio_Gallegos America/Argentina/Salta America/Argentina/San_Juan America/Argentina/San_Luis America/Argentina/Tucuman America/Argentina/Ushuaia America/Argentina/Catamarca America/Argentina/Cordoba America/Argentina/Jujuy America/Argentina/Mendoza\
    Astrakhan Standard Time,001,Europe/Astrakhan\
    Astrakhan Standard Time,RU,Europe/Astrakhan Europe/Ulyanovsk\
    Atlantic Standard Time,001,America/Halifax\
    Atlantic Standard Time,BM,Atlantic/Bermuda\
    Atlantic Standard Time,CA,America/Halifax America/Glace_Bay America/Goose_Bay America/Moncton\
    Atlantic Standard Time,GL,America/Thule\
    Aus Central W. Standard Time,001,Australia/Eucla\
    Aus Central W. Standard Time,AU,Australia/Eucla\
    Azerbaijan Standard Time,001,Asia/Baku\
    Azerbaijan Standard Time,AZ,Asia/Baku\
    Azores Standard Time,001,Atlantic/Azores\
    Azores Standard Time,GL,America/Scoresbysund\
    Azores Standard Time,PT,Atlantic/Azores\
    Bahia Standard Time,001,America/Bahia\
    Bahia Standard Time,BR,America/Bahia\
    Bangladesh Standard Time,001,Asia/Dhaka\
    Bangladesh Standard Time,BD,Asia/Dhaka\
    Bangladesh Standard Time,BT,Asia/Thimphu\
    Belarus Standard Time,001,Europe/Minsk\
    Belarus Standard Time,BY,Europe/Minsk\
    Bougainville Standard Time,001,Pacific/Bougainville\
    Bougainville Standard Time,PG,Pacific/Bougainville\
    Canada Central Standard Time,001,America/Regina\
    Canada Central Standard Time,CA,America/Regina America/Swift_Current\
    Cape Verde Standard Time,001,Atlantic/Cape_Verde\
    Cape Verde Standard Time,CV,Atlantic/Cape_Verde\
    Cape Verde Standard Time,ZZ,Etc/GMT+1\
    Caucasus Standard Time,001,Asia/Yerevan\
    Caucasus Standard Time,AM,Asia/Yerevan\
    Cen. Australia Standard Time,001,Australia/Adelaide\
    Cen. Australia Standard Time,AU,Australia/Adelaide Australia/Broken_Hill\
    Central America Standard Time,001,America/Guatemala\
    Central America Standard Time,BZ,America/Belize\
    Central America Standard Time,CR,America/Costa_Rica\
    Central America Standard Time,EC,Pacific/Galapagos\
    Central America Standard Time,GT,America/Guatemala\
    Central America Standard Time,HN,America/Tegucigalpa\
    Central America Standard Time,NI,America/Managua\
    Central America Standard Time,SV,America/El_Salvador\
    Central America Standard Time,ZZ,Etc/GMT+6\
    Central Asia Standard Time,001,Asia/Almaty\
    Central Asia Standard Time,AQ,Antarctica/Vostok\
    Central Asia Standard Time,CN,Asia/Urumqi\
    Central Asia Standard Time,DG,Indian/Chagos\
    Central Asia Standard Time,IO,Indian/Chagos\
    Central Asia Standard Time,KG,Asia/Bishkek\
    Central Asia Standard Time,KZ,Asia/Almaty Asia/Qyzylorda\
    Central Asia Standard Time,ZZ,Etc/GMT-6\
    Central Brazilian Standard Time,001,America/Cuiaba\
    Central Brazilian Standard Time,BR,America/Cuiaba America/Campo_Grande\
    Central Europe Standard Time,001,Europe/Budapest\
    Central Europe Standard Time,AL,Europe/Tirane\
    Central Europe Standard Time,CZ,Europe/Prague\
    Central Europe Standard Time,HU,Europe/Budapest\
    Central Europe Standard Time,ME,Europe/Belgrade\
    Central Europe Standard Time,RS,Europe/Belgrade\
    Central Europe Standard Time,SI,Europe/Belgrade\
    Central Europe Standard Time,SK,Europe/Prague\
    Central Europe Standard Time,XK,Europe/Belgrade\
    Central European Standard Time,001,Europe/Warsaw\
    Central European Standard Time,BA,Europe/Belgrade\
    Central European Standard Time,HR,Europe/Belgrade\
    Central European Standard Time,MK,Europe/Belgrade\
    Central European Standard Time,PL,Europe/Warsaw\
    Central Pacific Standard Time,001,Pacific/Guadalcanal\
    Central Pacific Standard Time,AU,Antarctica/Macquarie\
    Central Pacific Standard Time,FM,Pacific/Pohnpei Pacific/Kosrae\
    Central Pacific Standard Time,NC,Pacific/Noumea\
    Central Pacific Standard Time,SB,Pacific/Guadalcanal\
    Central Pacific Standard Time,VU,Pacific/Efate\
    Central Pacific Standard Time,ZZ,Etc/GMT-11\
    Central Standard Time (Mexico),001,America/Mexico_City\
    Central Standard Time (Mexico),MX,America/Mexico_City America/Bahia_Banderas America/Merida America/Monterrey\
    Central Standard Time,001,America/Chicago\
    Central Standard Time,CA,America/Winnipeg America/Rainy_River America/Rankin_Inlet America/Resolute\
    Central Standard Time,MX,America/Matamoros\
    Central Standard Time,US,America/Chicago America/Indiana/Knox America/Indiana/Tell_City America/Menominee America/North_Dakota/Beulah America/North_Dakota/Center America/North_Dakota/New_Salem\
    Central Standard Time,ZZ,CST6CDT\
    Chatham Islands Standard Time,001,Pacific/Chatham\
    Chatham Islands Standard Time,NZ,Pacific/Chatham\
    China Standard Time,001,Asia/Shanghai\
    China Standard Time,CN,Asia/Shanghai\
    China Standard Time,HK,Asia/Hong_Kong\
    China Standard Time,MO,Asia/Macau\
    Cuba Standard Time,001,America/Havana\
    Cuba Standard Time,CU,America/Havana\
    Dateline Standard Time,001,Etc/GMT+12\
    Dateline Standard Time,ZZ,Etc/GMT+12\
    E. Africa Standard Time,001,Africa/Nairobi\
    E. Africa Standard Time,AQ,Antarctica/Syowa\
    E. Africa Standard Time,DJ,Africa/Nairobi\
    E. Africa Standard Time,ER,Africa/Nairobi\
    E. Africa Standard Time,ET,Africa/Nairobi\
    E. Africa Standard Time,KE,Africa/Nairobi\
    E. Africa Standard Time,KM,Africa/Nairobi\
    E. Africa Standard Time,MG,Africa/Nairobi\
    E. Africa Standard Time,SO,Africa/Nairobi\
    E. Africa Standard Time,SS,Africa/Juba\
    E. Africa Standard Time,TZ,Africa/Nairobi\
    E. Africa Standard Time,UG,Africa/Nairobi\
    E. Africa Standard Time,YT,Africa/Nairobi\
    E. Africa Standard Time,ZZ,Etc/GMT-3\
    E. Australia Standard Time,001,Australia/Brisbane\
    E. Australia Standard Time,AU,Australia/Brisbane Australia/Lindeman\
    E. Europe Standard Time,001,Europe/Chisinau\
    E. Europe Standard Time,MD,Europe/Chisinau\
    E. South America Standard Time,001,America/Sao_Paulo\
    E. South America Standard Time,BR,America/Sao_Paulo\
    Easter Island Standard Time,001,Pacific/Easter\
    Easter Island Standard Time,CL,Pacific/Easter\
    Eastern Standard Time (Mexico),001,America/Cancun\
    Eastern Standard Time (Mexico),MX,America/Cancun\
    Eastern Standard Time,001,America/New_York\
    Eastern Standard Time,BS,America/Nassau\
    Eastern Standard Time,CA,America/Toronto America/Iqaluit America/Nipigon America/Pangnirtung America/Thunder_Bay\
    Eastern Standard Time,US,America/New_York America/Detroit America/Indiana/Petersburg America/Indiana/Vincennes America/Indiana/Winamac America/Kentucky/Monticello America/Kentucky/Louisville\
    Eastern Standard Time,ZZ,EST5EDT\
    Egypt Standard Time,001,Africa/Cairo\
    Egypt Standard Time,EG,Africa/Cairo\
    Ekaterinburg Standard Time,001,Asia/Yekaterinburg\
    Ekaterinburg Standard Time,RU,Asia/Yekaterinburg\
    FLE Standard Time,001,Europe/Kiev\
    FLE Standard Time,AX,Europe/Helsinki\
    FLE Standard Time,BG,Europe/Sofia\
    FLE Standard Time,EE,Europe/Tallinn\
    FLE Standard Time,FI,Europe/Helsinki\
    FLE Standard Time,LT,Europe/Vilnius\
    FLE Standard Time,LV,Europe/Riga\
    FLE Standard Time,UA,Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye\
    Fiji Standard Time,001,Pacific/Fiji\
    Fiji Standard Time,FJ,Pacific/Fiji\
    GMT Standard Time,001,Europe/London\
    GMT Standard Time,ES,Atlantic/Canary\
    GMT Standard Time,FO,Atlantic/Faroe\
    GMT Standard Time,GB,Europe/London\
    GMT Standard Time,GG,Europe/London\
    GMT Standard Time,IC,Atlantic/Canary\
    GMT Standard Time,IE,Europe/Dublin\
    GMT Standard Time,IM,Europe/London\
    GMT Standard Time,JE,Europe/London\
    GMT Standard Time,PT,Europe/Lisbon Atlantic/Madeira\
    GTB Standard Time,001,Europe/Bucharest\
    GTB Standard Time,CY,Asia/Nicosia Asia/Famagusta\
    GTB Standard Time,GR,Europe/Athens\
    GTB Standard Time,RO,Europe/Bucharest\
    Georgian Standard Time,001,Asia/Tbilisi\
    Georgian Standard Time,GE,Asia/Tbilisi\
    Greenland Standard Time,001,America/Godthab\
    Greenland Standard Time,GL,America/Godthab\
    Greenwich Standard Time,001,Atlantic/Reykjavik\
    Greenwich Standard Time,AC,Atlantic/St_Helena\
    Greenwich Standard Time,BF,Africa/Abidjan\
    Greenwich Standard Time,CI,Africa/Abidjan\
    Greenwich Standard Time,GH,Africa/Accra\
    Greenwich Standard Time,GM,Africa/Abidjan\
    Greenwich Standard Time,GN,Africa/Abidjan\
    Greenwich Standard Time,GW,Africa/Bissau\
    Greenwich Standard Time,IS,Atlantic/Reykjavik\
    Greenwich Standard Time,LR,Africa/Monrovia\
    Greenwich Standard Time,ML,Africa/Abidjan\
    Greenwich Standard Time,MR,Africa/Abidjan\
    Greenwich Standard Time,SH,Africa/Abidjan\
    Greenwich Standard Time,SL,Africa/Abidjan\
    Greenwich Standard Time,SN,Africa/Abidjan\
    Greenwich Standard Time,TA,Atlantic/St_Helena\
    Greenwich Standard Time,TG,Africa/Abidjan\
    Haiti Standard Time,001,America/Port-au-Prince\
    Haiti Standard Time,HT,America/Port-au-Prince\
    Hawaiian Standard Time,001,Pacific/Honolulu\
    Hawaiian Standard Time,CK,Pacific/Rarotonga\
    Hawaiian Standard Time,PF,Pacific/Tahiti\
    Hawaiian Standard Time,UM,Pacific/Honolulu\
    Hawaiian Standard Time,US,Pacific/Honolulu\
    Hawaiian Standard Time,ZZ,Etc/GMT+10\
    India Standard Time,001,Asia/Kolkata\
    India Standard Time,IN,Asia/Kolkata\
    Iran Standard Time,001,Asia/Tehran\
    Iran Standard Time,IR,Asia/Tehran\
    Israel Standard Time,001,Asia/Jerusalem\
    Israel Standard Time,IL,Asia/Jerusalem\
    Jordan Standard Time,001,Asia/Amman\
    Jordan Standard Time,JO,Asia/Amman\
    Kaliningrad Standard Time,001,Europe/Kaliningrad\
    Kaliningrad Standard Time,RU,Europe/Kaliningrad\
    Kamchatka Standard Time,001,Asia/Kamchatka\
    Korea Standard Time,001,Asia/Seoul\
    Korea Standard Time,KR,Asia/Seoul\
    Libya Standard Time,001,Africa/Tripoli\
    Libya Standard Time,LY,Africa/Tripoli\
    Line Islands Standard Time,001,Pacific/Kiritimati\
    Line Islands Standard Time,KI,Pacific/Kiritimati\
    Line Islands Standard Time,ZZ,Etc/GMT-14\
    Lord Howe Standard Time,001,Australia/Lord_Howe\
    Lord Howe Standard Time,AU,Australia/Lord_Howe\
    Magadan Standard Time,001,Asia/Magadan\
    Magadan Standard Time,RU,Asia/Magadan\
    Magallanes Standard Time,001,America/Punta_Arenas\
    Magallanes Standard Time,AQ,Antarctica/Palmer\
    Magallanes Standard Time,CL,America/Punta_Arenas\
    Marquesas Standard Time,001,Pacific/Marquesas\
    Marquesas Standard Time,PF,Pacific/Marquesas\
    Mauritius Standard Time,001,Indian/Mauritius\
    Mauritius Standard Time,MU,Indian/Mauritius\
    Mauritius Standard Time,RE,Indian/Reunion\
    Mauritius Standard Time,SC,Indian/Mahe\
    Mid-Atlantic Standard Time,001,Etc/GMT+2\
    Middle East Standard Time,001,Asia/Beirut\
    Middle East Standard Time,LB,Asia/Beirut\
    Montevideo Standard Time,001,America/Montevideo\
    Montevideo Standard Time,UY,America/Montevideo\
    Morocco Standard Time,001,Africa/Casablanca\
    Morocco Standard Time,EH,Africa/El_Aaiun\
    Morocco Standard Time,MA,Africa/Casablanca\
    Mountain Standard Time (Mexico),001,America/Chihuahua\
    Mountain Standard Time (Mexico),MX,America/Chihuahua America/Mazatlan\
    Mountain Standard Time,001,America/Denver\
    Mountain Standard Time,CA,America/Edmonton America/Cambridge_Bay America/Inuvik America/Yellowknife\
    Mountain Standard Time,MX,America/Ojinaga\
    Mountain Standard Time,US,America/Denver America/Boise\
    Mountain Standard Time,ZZ,MST7MDT\
    Myanmar Standard Time,001,Asia/Yangon\
    Myanmar Standard Time,CC,Indian/Cocos\
    Myanmar Standard Time,MM,Asia/Yangon\
    N. Central Asia Standard Time,001,Asia/Novosibirsk\
    N. Central Asia Standard Time,RU,Asia/Novosibirsk\
    Namibia Standard Time,001,Africa/Windhoek\
    Namibia Standard Time,NA,Africa/Windhoek\
    Nepal Standard Time,001,Asia/Kathmandu\
    Nepal Standard Time,NP,Asia/Kathmandu\
    New Zealand Standard Time,001,Pacific/Auckland\
    New Zealand Standard Time,AQ,Pacific/Auckland\
    New Zealand Standard Time,NZ,Pacific/Auckland\
    Newfoundland Standard Time,001,America/St_Johns\
    Newfoundland Standard Time,CA,America/St_Johns\
    Norfolk Standard Time,001,Pacific/Norfolk\
    Norfolk Standard Time,NF,Pacific/Norfolk\
    North Asia East Standard Time,001,Asia/Irkutsk\
    North Asia East Standard Time,RU,Asia/Irkutsk\
    North Asia Standard Time,001,Asia/Krasnoyarsk\
    North Asia Standard Time,RU,Asia/Krasnoyarsk Asia/Novokuznetsk\
    North Korea Standard Time,001,Asia/Pyongyang\
    North Korea Standard Time,KP,Asia/Pyongyang\
    Omsk Standard Time,001,Asia/Omsk\
    Omsk Standard Time,RU,Asia/Omsk\
    Pacific SA Standard Time,001,America/Santiago\
    Pacific SA Standard Time,CL,America/Santiago\
    Pacific Standard Time (Mexico),001,America/Tijuana\
    Pacific Standard Time (Mexico),MX,America/Tijuana\
    Pacific Standard Time,001,America/Los_Angeles\
    Pacific Standard Time,CA,America/Vancouver America/Dawson America/Whitehorse\
    Pacific Standard Time,US,America/Los_Angeles\
    Pacific Standard Time,ZZ,PST8PDT\
    Pakistan Standard Time,001,Asia/Karachi\
    Pakistan Standard Time,PK,Asia/Karachi\
    Paraguay Standard Time,001,America/Asuncion\
    Paraguay Standard Time,PY,America/Asuncion\
    Romance Standard Time,001,Europe/Paris\
    Romance Standard Time,BE,Europe/Brussels\
    Romance Standard Time,DK,Europe/Copenhagen\
    Romance Standard Time,EA,Africa/Ceuta\
    Romance Standard Time,ES,Europe/Madrid Africa/Ceuta\
    Romance Standard Time,FR,Europe/Paris\
    Russia Time Zone 10,001,Asia/Srednekolymsk\
    Russia Time Zone 10,RU,Asia/Srednekolymsk\
    Russia Time Zone 11,001,Asia/Kamchatka\
    Russia Time Zone 11,RU,Asia/Kamchatka Asia/Anadyr\
    Russia Time Zone 3,001,Europe/Samara\
    Russia Time Zone 3,RU,Europe/Samara\
    Russian Standard Time,001,Europe/Moscow\
    Russian Standard Time,RU,Europe/Moscow Europe/Kirov Europe/Volgograd\
    Russian Standard Time,UA,Europe/Simferopol\
    SA Eastern Standard Time,001,America/Cayenne\
    SA Eastern Standard Time,AQ,Antarctica/Rothera\
    SA Eastern Standard Time,BR,America/Fortaleza America/Belem America/Maceio America/Recife America/Santarem\
    SA Eastern Standard Time,FK,Atlantic/Stanley\
    SA Eastern Standard Time,GF,America/Cayenne\
    SA Eastern Standard Time,SR,America/Paramaribo\
    SA Eastern Standard Time,ZZ,Etc/GMT+3\
    SA Pacific Standard Time,001,America/Bogota\
    SA Pacific Standard Time,BR,America/Rio_Branco America/Eirunepe\
    SA Pacific Standard Time,CA,America/Atikokan\
    SA Pacific Standard Time,CO,America/Bogota\
    SA Pacific Standard Time,EC,America/Guayaquil\
    SA Pacific Standard Time,JM,America/Jamaica\
    SA Pacific Standard Time,KY,America/Panama\
    SA Pacific Standard Time,PA,America/Panama\
    SA Pacific Standard Time,PE,America/Lima\
    SA Pacific Standard Time,ZZ,Etc/GMT+5\
    SA Western Standard Time,001,America/La_Paz\
    SA Western Standard Time,AG,America/Port_of_Spain\
    SA Western Standard Time,AI,America/Port_of_Spain\
    SA Western Standard Time,AW,America/Curacao\
    SA Western Standard Time,BB,America/Barbados\
    SA Western Standard Time,BL,America/Port_of_Spain\
    SA Western Standard Time,BO,America/La_Paz\
    SA Western Standard Time,BQ,America/Curacao\
    SA Western Standard Time,BR,America/Manaus America/Boa_Vista America/Porto_Velho\
    SA Western Standard Time,CA,America/Blanc-Sablon\
    SA Western Standard Time,CW,America/Curacao\
    SA Western Standard Time,DM,America/Port_of_Spain\
    SA Western Standard Time,DO,America/Santo_Domingo\
    SA Western Standard Time,GD,America/Port_of_Spain\
    SA Western Standard Time,GP,America/Port_of_Spain\
    SA Western Standard Time,GY,America/Guyana\
    SA Western Standard Time,KN,America/Port_of_Spain\
    SA Western Standard Time,LC,America/Port_of_Spain\
    SA Western Standard Time,MF,America/Port_of_Spain\
    SA Western Standard Time,MQ,America/Martinique\
    SA Western Standard Time,MS,America/Port_of_Spain\
    SA Western Standard Time,PR,America/Puerto_Rico\
    SA Western Standard Time,SX,America/Curacao\
    SA Western Standard Time,TT,America/Port_of_Spain\
    SA Western Standard Time,VC,America/Port_of_Spain\
    SA Western Standard Time,VG,America/Port_of_Spain\
    SA Western Standard Time,VI,America/Port_of_Spain\
    SA Western Standard Time,ZZ,Etc/GMT+4\
    SE Asia Standard Time,001,Asia/Bangkok\
    SE Asia Standard Time,AQ,Antarctica/Davis\
    SE Asia Standard Time,CX,Indian/Christmas\
    SE Asia Standard Time,ID,Asia/Jakarta Asia/Pontianak\
    SE Asia Standard Time,KH,Asia/Bangkok\
    SE Asia Standard Time,LA,Asia/Bangkok\
    SE Asia Standard Time,TH,Asia/Bangkok\
    SE Asia Standard Time,VN,Asia/Ho_Chi_Minh\
    SE Asia Standard Time,ZZ,Etc/GMT-7\
    Saint Pierre Standard Time,001,America/Miquelon\
    Saint Pierre Standard Time,PM,America/Miquelon\
    Sakhalin Standard Time,001,Asia/Sakhalin\
    Sakhalin Standard Time,RU,Asia/Sakhalin\
    Samoa Standard Time,001,Pacific/Apia\
    Samoa Standard Time,WS,Pacific/Apia\
    Sao Tome Standard Time,001,Africa/Sao_Tome\
    Sao Tome Standard Time,ST,Africa/Sao_Tome\
    Saratov Standard Time,001,Europe/Saratov\
    Saratov Standard Time,RU,Europe/Saratov\
    Singapore Standard Time,001,Asia/Singapore\
    Singapore Standard Time,BN,Asia/Brunei\
    Singapore Standard Time,ID,Asia/Makassar\
    Singapore Standard Time,MY,Asia/Kuala_Lumpur Asia/Kuching\
    Singapore Standard Time,PH,Asia/Manila\
    Singapore Standard Time,SG,Asia/Singapore\
    Singapore Standard Time,ZZ,Etc/GMT-8\
    South Africa Standard Time,001,Africa/Johannesburg\
    South Africa Standard Time,BI,Africa/Maputo\
    South Africa Standard Time,BW,Africa/Maputo\
    South Africa Standard Time,CD,Africa/Maputo\
    South Africa Standard Time,LS,Africa/Johannesburg\
    South Africa Standard Time,MW,Africa/Maputo\
    South Africa Standard Time,MZ,Africa/Maputo\
    South Africa Standard Time,RW,Africa/Maputo\
    South Africa Standard Time,SZ,Africa/Johannesburg\
    South Africa Standard Time,ZA,Africa/Johannesburg\
    South Africa Standard Time,ZM,Africa/Maputo\
    South Africa Standard Time,ZW,Africa/Maputo\
    South Africa Standard Time,ZZ,Etc/GMT-2\
    Sri Lanka Standard Time,001,Asia/Colombo\
    Sri Lanka Standard Time,LK,Asia/Colombo\
    Sudan Standard Time,001,Africa/Khartoum\
    Sudan Standard Time,SD,Africa/Khartoum\
    Syria Standard Time,001,Asia/Damascus\
    Syria Standard Time,SY,Asia/Damascus\
    Taipei Standard Time,001,Asia/Taipei\
    Taipei Standard Time,TW,Asia/Taipei\
    Tasmania Standard Time,001,Australia/Hobart\
    Tasmania Standard Time,AU,Australia/Hobart Australia/Currie\
    Tocantins Standard Time,001,America/Araguaina\
    Tocantins Standard Time,BR,America/Araguaina\
    Tokyo Standard Time,001,Asia/Tokyo\
    Tokyo Standard Time,ID,Asia/Jayapura\
    Tokyo Standard Time,JP,Asia/Tokyo\
    Tokyo Standard Time,PW,Pacific/Palau\
    Tokyo Standard Time,TL,Asia/Dili\
    Tokyo Standard Time,ZZ,Etc/GMT-9\
    Tomsk Standard Time,001,Asia/Tomsk\
    Tomsk Standard Time,RU,Asia/Tomsk\
    Tonga Standard Time,001,Pacific/Tongatapu\
    Tonga Standard Time,TO,Pacific/Tongatapu\
    Transbaikal Standard Time,001,Asia/Chita\
    Transbaikal Standard Time,RU,Asia/Chita\
    Turkey Standard Time,001,Europe/Istanbul\
    Turkey Standard Time,TR,Europe/Istanbul\
    Turks And Caicos Standard Time,001,America/Grand_Turk\
    Turks And Caicos Standard Time,TC,America/Grand_Turk\
    US Eastern Standard Time,001,America/Indiana/Indianapolis\
    US Eastern Standard Time,US,America/Indiana/Indianapolis America/Indiana/Marengo America/Indiana/Vevay\
    US Mountain Standard Time,001,America/Phoenix\
    US Mountain Standard Time,CA,America/Dawson_Creek America/Creston America/Fort_Nelson\
    US Mountain Standard Time,MX,America/Hermosillo\
    US Mountain Standard Time,US,America/Phoenix\
    US Mountain Standard Time,ZZ,Etc/GMT+7\
    UTC+12,001,Etc/GMT-12\
    UTC+12,KI,Pacific/Tarawa\
    UTC+12,MH,Pacific/Majuro Pacific/Kwajalein\
    UTC+12,NR,Pacific/Nauru\
    UTC+12,TV,Pacific/Funafuti\
    UTC+12,UM,Pacific/Wake\
    UTC+12,WF,Pacific/Wallis\
    UTC+12,ZZ,Etc/GMT-12\
    UTC+13,001,Etc/GMT-13\
    UTC+13,KI,Pacific/Enderbury\
    UTC+13,TK,Pacific/Fakaofo\
    UTC+13,ZZ,Etc/GMT-13\
    UTC,001,Etc/UTC\
    UTC,GL,America/Danmarkshavn\
    UTC,ZZ,Etc/UTC\
    UTC-02,001,Etc/GMT+2\
    UTC-02,BR,America/Noronha\
    UTC-02,GS,Atlantic/South_Georgia\
    UTC-02,ZZ,Etc/GMT+2\
    UTC-08,001,Etc/GMT+8\
    UTC-08,PN,Pacific/Pitcairn\
    UTC-08,ZZ,Etc/GMT+8\
    UTC-09,001,Etc/GMT+9\
    UTC-09,PF,Pacific/Gambier\
    UTC-09,ZZ,Etc/GMT+9\
    UTC-11,001,Etc/GMT+11\
    UTC-11,AS,Pacific/Pago_Pago\
    UTC-11,NU,Pacific/Niue\
    UTC-11,UM,Pacific/Pago_Pago\
    UTC-11,ZZ,Etc/GMT+11\
    Ulaanbaatar Standard Time,001,Asia/Ulaanbaatar\
    Ulaanbaatar Standard Time,MN,Asia/Ulaanbaatar Asia/Choibalsan\
    Venezuela Standard Time,001,America/Caracas\
    Venezuela Standard Time,VE,America/Caracas\
    Vladivostok Standard Time,001,Asia/Vladivostok\
    Vladivostok Standard Time,RU,Asia/Vladivostok Asia/Ust-Nera\
    W. Australia Standard Time,001,Australia/Perth\
    W. Australia Standard Time,AQ,Antarctica/Casey\
    W. Australia Standard Time,AU,Australia/Perth\
    W. Central Africa Standard Time,001,Africa/Lagos\
    W. Central Africa Standard Time,AO,Africa/Lagos\
    W. Central Africa Standard Time,BJ,Africa/Lagos\
    W. Central Africa Standard Time,CD,Africa/Lagos\
    W. Central Africa Standard Time,CF,Africa/Lagos\
    W. Central Africa Standard Time,CG,Africa/Lagos\
    W. Central Africa Standard Time,CM,Africa/Lagos\
    W. Central Africa Standard Time,DZ,Africa/Algiers\
    W. Central Africa Standard Time,GA,Africa/Lagos\
    W. Central Africa Standard Time,GQ,Africa/Lagos\
    W. Central Africa Standard Time,NE,Africa/Lagos\
    W. Central Africa Standard Time,NG,Africa/Lagos\
    W. Central Africa Standard Time,TD,Africa/Ndjamena\
    W. Central Africa Standard Time,TN,Africa/Tunis\
    W. Central Africa Standard Time,ZZ,Etc/GMT-1\
    W. Europe Standard Time,001,Europe/Berlin\
    W. Europe Standard Time,AD,Europe/Andorra\
    W. Europe Standard Time,AT,Europe/Vienna\
    W. Europe Standard Time,CH,Europe/Zurich\
    W. Europe Standard Time,DE,Europe/Berlin Europe/Zurich\
    W. Europe Standard Time,GI,Europe/Gibraltar\
    W. Europe Standard Time,IT,Europe/Rome\
    W. Europe Standard Time,LI,Europe/Zurich\
    W. Europe Standard Time,LU,Europe/Luxembourg\
    W. Europe Standard Time,MC,Europe/Monaco\
    W. Europe Standard Time,MT,Europe/Malta\
    W. Europe Standard Time,NL,Europe/Amsterdam\
    W. Europe Standard Time,NO,Europe/Oslo\
    W. Europe Standard Time,SE,Europe/Stockholm\
    W. Europe Standard Time,SJ,Europe/Oslo\
    W. Europe Standard Time,SM,Europe/Rome\
    W. Europe Standard Time,VA,Europe/Rome\
    W. Mongolia Standard Time,001,Asia/Hovd\
    W. Mongolia Standard Time,MN,Asia/Hovd\
    West Asia Standard Time,001,Asia/Tashkent\
    West Asia Standard Time,AQ,Antarctica/Mawson\
    West Asia Standard Time,KZ,Asia/Oral Asia/Aqtau Asia/Aqtobe Asia/Atyrau\
    West Asia Standard Time,MV,Indian/Maldives\
    West Asia Standard Time,TF,Indian/Kerguelen\
    West Asia Standard Time,TJ,Asia/Dushanbe\
    West Asia Standard Time,TM,Asia/Ashgabat\
    West Asia Standard Time,UZ,Asia/Tashkent Asia/Samarkand\
    West Asia Standard Time,ZZ,Etc/GMT-5\
    West Bank Standard Time,001,Asia/Hebron\
    West Bank Standard Time,PS,Asia/Hebron Asia/Gaza\
    West Pacific Standard Time,001,Pacific/Port_Moresby\
    West Pacific Standard Time,AQ,Antarctica/DumontDUrville\
    West Pacific Standard Time,FM,Pacific/Chuuk\
    West Pacific Standard Time,GU,Pacific/Guam\
    West Pacific Standard Time,MP,Pacific/Guam\
    West Pacific Standard Time,PG,Pacific/Port_Moresby\
    West Pacific Standard Time,ZZ,Etc/GMT-10\
    Yakutsk Standard Time,001,Asia/Yakutsk\
    Yakutsk Standard Time,RU,Asia/Yakutsk Asia/Khandyga';exports.TimeZoneConverter=TimeZoneConverter;},{}],206:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expression_1=require("../expression");var expressionType_1=require("../expressionType");var relationshipType_1=require("./relationshipType");/**
	 * A canonical normal form expression.
	 */var Clause=function(_expression_1$Express3){inherits(Clause,_expression_1$Express3);/**
	     * Initializes a new instance of the `Clause` class.
	     * @param clauseOrExpression A clause, expression or an array of expressions to initialize a `Clause`.
	     */function Clause(clauseOrExpression){classCallCheck(this,Clause);/**
	         * Gets or sets the anyBinding dictionary.
	         */var _this224=possibleConstructorReturn(this,(Clause.__proto__||Object.getPrototypeOf(Clause)).call(this,expressionType_1.ExpressionType.And,undefined));_this224.anyBindings=new Map();/**
	         * Gets or sets whether the clause is subsumed.
	         */_this224.subsumed=false;if(clauseOrExpression){if(Array.isArray(clauseOrExpression)){var children=clauseOrExpression;_this224.children=children;}else if(clauseOrExpression instanceof Clause){var fromClause=clauseOrExpression;_this224.children=[].concat(toConsumableArray(fromClause.children));var _iteratorNormalCompletion34=true;var _didIteratorError34=false;var _iteratorError34=undefined;try{for(var _iterator34=fromClause.anyBindings.entries()[Symbol.iterator](),_step34;!(_iteratorNormalCompletion34=(_step34=_iterator34.next()).done);_iteratorNormalCompletion34=true){var _step34$value=slicedToArray(_step34.value,2),key=_step34$value[0],value=_step34$value[1];_this224.anyBindings.set(key,value);}}catch(err){_didIteratorError34=true;_iteratorError34=err;}finally{try{if(!_iteratorNormalCompletion34&&_iterator34.return){_iterator34.return();}}finally{if(_didIteratorError34){throw _iteratorError34;}}}}else if(clauseOrExpression instanceof expression_1.Expression){var expression=clauseOrExpression;_this224.children.push(expression);}}return _this224;}/**
	     * Gets a string that represents the current clause.
	     * @param builder An array of string to build the string of clause.
	     * @param indent An integer represents the number of spaces at the start of a line.
	     */createClass(Clause,[{key:'toString',value:function toString(){var builder=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var indent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;builder.push(' '.repeat(indent));if(this.subsumed){builder.push('*');}builder.push('(');var first=true;var _iteratorNormalCompletion35=true;var _didIteratorError35=false;var _iteratorError35=undefined;try{for(var _iterator35=this.children[Symbol.iterator](),_step35;!(_iteratorNormalCompletion35=(_step35=_iterator35.next()).done);_iteratorNormalCompletion35=true){var child=_step35.value;if(first){first=false;}else {builder.push(' && ');}builder.push(child.toString());}}catch(err){_didIteratorError35=true;_iteratorError35=err;}finally{try{if(!_iteratorNormalCompletion35&&_iterator35.return){_iterator35.return();}}finally{if(_didIteratorError35){throw _iteratorError35;}}}builder.push(')');if(this._ignored){builder.push(' ignored(');builder.push(this._ignored.toString());builder.push(')');}this.anyBindings.forEach(function(value,key){builder.push(' '+key+'->'+value);});return builder.join('');}/**
	     * Compares the current `Clause` with another `Clause`.
	     * @param other The other `Clause` to compare.
	     * @param comparers A comparer, which is a dictionary of `PredicateComparer` with string keys.
	     * @returns A `RelationshipType` value between two `Clause` instances.
	     */},{key:'relationship',value:function relationship(other,comparers){var soFar=relationshipType_1.RelationshipType.incomparable;var shorter=this;var shorterCount=shorter.children.length;var longer=other;var longerCount=longer.children.length;var swapped=false;if(longerCount<shorterCount){longer=this;shorter=other;var tmp=longerCount;longerCount=shorterCount;shorterCount=tmp;swapped=true;}if(shorterCount===0){if(longerCount===0){soFar=relationshipType_1.RelationshipType.equal;}else {soFar=relationshipType_1.RelationshipType.generalizes;}}else {// If every one of shorter predicates is equal or superset of one in longer, then shorter is a superset of longer
	var _iteratorNormalCompletion36=true;var _didIteratorError36=false;var _iteratorError36=undefined;try{for(var _iterator36=shorter.children[Symbol.iterator](),_step36;!(_iteratorNormalCompletion36=(_step36=_iterator36.next()).done);_iteratorNormalCompletion36=true){var shortPredicate=_step36.value;var shorterRel=relationshipType_1.RelationshipType.incomparable;var _iteratorNormalCompletion37=true;var _didIteratorError37=false;var _iteratorError37=undefined;try{for(var _iterator37=longer.children[Symbol.iterator](),_step37;!(_iteratorNormalCompletion37=(_step37=_iterator37.next()).done);_iteratorNormalCompletion37=true){var longPredicate=_step37.value;shorterRel=this._relationship(shortPredicate,longPredicate,comparers);if(shorterRel!==relationshipType_1.RelationshipType.incomparable){// Found related predicates
	break;}}}catch(err){_didIteratorError37=true;_iteratorError37=err;}finally{try{if(!_iteratorNormalCompletion37&&_iterator37.return){_iterator37.return();}}finally{if(_didIteratorError37){throw _iteratorError37;}}}if(shorterRel===relationshipType_1.RelationshipType.incomparable){// Predicate in shorter is incomparable so done
	soFar=relationshipType_1.RelationshipType.incomparable;break;}else {if(soFar===relationshipType_1.RelationshipType.incomparable){soFar=shorterRel;}if(soFar===relationshipType_1.RelationshipType.equal){if(shorterRel===relationshipType_1.RelationshipType.generalizes||shorterRel===relationshipType_1.RelationshipType.specializes&&shorterCount===longerCount||shorterRel===relationshipType_1.RelationshipType.equal){soFar=shorterRel;}else {break;}}else if(soFar!=shorterRel){// Not continued with sub/super so incomparable
	break;}}}}catch(err){_didIteratorError36=true;_iteratorError36=err;}finally{try{if(!_iteratorNormalCompletion36&&_iterator36.return){_iterator36.return();}}finally{if(_didIteratorError36){throw _iteratorError36;}}}if(shorterCount!==longerCount){switch(soFar){case relationshipType_1.RelationshipType.equal:case relationshipType_1.RelationshipType.generalizes:soFar=relationshipType_1.RelationshipType.generalizes;break;default:soFar=relationshipType_1.RelationshipType.incomparable;break;}}soFar=this._bindingRelationship(soFar,shorter,longer);}return this._swap(soFar,swapped);}/**
	     * Determines whether the current `Clause` matches with another `Clause`.
	     * @param clause The other `Clause` instance to compare with.
	     * @param memory The scope for looking up variables.
	     * @returns A boolean value indicating whether the two clauses are matches.
	     */},{key:'matches',value:function matches(clause,memory){var matched=false;if(clause.deepEquals(this)){matched=true;if(this._ignored){var _ignored$tryEvaluate=this._ignored.tryEvaluate(memory),match=_ignored$tryEvaluate.value,error=_ignored$tryEvaluate.error;matched=!error&&match;}}return matched;}/**
	     * Splits ignored child expressions.
	     */},{key:'splitIgnores',value:function splitIgnores(){var children=[];var ignores=[];for(var i=0;i<this.children.length;i++){var child=this.children[i];if(child.type===expressionType_1.ExpressionType.Ignore){ignores.push(child);}else {children.push(child);}}this.children=children;if(ignores.length>0){var _expression_1$Express4;this._ignored=(_expression_1$Express4=expression_1.Expression).andExpression.apply(_expression_1$Express4,ignores);}}},{key:'_bindingRelationship',value:function _bindingRelationship(soFar,shorterClause,longerClause){if(soFar===relationshipType_1.RelationshipType.equal){var swapped=false;var shorter=shorterClause.anyBindings;var longer=longerClause.anyBindings;if(shorterClause.anyBindings.size>longerClause.anyBindings.size){shorter=longerClause.anyBindings;longer=shorterClause.anyBindings;swapped=true;}var _iteratorNormalCompletion38=true;var _didIteratorError38=false;var _iteratorError38=undefined;try{for(var _iterator38=shorter.entries()[Symbol.iterator](),_step38;!(_iteratorNormalCompletion38=(_step38=_iterator38.next()).done);_iteratorNormalCompletion38=true){var _step38$value=slicedToArray(_step38.value,2),shorterKey=_step38$value[0],shorterValue=_step38$value[1];var found=false;var _iteratorNormalCompletion39=true;var _didIteratorError39=false;var _iteratorError39=undefined;try{for(var _iterator39=longer.entries()[Symbol.iterator](),_step39;!(_iteratorNormalCompletion39=(_step39=_iterator39.next()).done);_iteratorNormalCompletion39=true){var _step39$value=slicedToArray(_step39.value,2),longerKey=_step39$value[0],longerValue=_step39$value[1];if(shorterKey===longerKey&&shorterValue===longerValue){found=true;break;}}}catch(err){_didIteratorError39=true;_iteratorError39=err;}finally{try{if(!_iteratorNormalCompletion39&&_iterator39.return){_iterator39.return();}}finally{if(_didIteratorError39){throw _iteratorError39;}}}if(!found){soFar=relationshipType_1.RelationshipType.incomparable;}}}catch(err){_didIteratorError38=true;_iteratorError38=err;}finally{try{if(!_iteratorNormalCompletion38&&_iterator38.return){_iterator38.return();}}finally{if(_didIteratorError38){throw _iteratorError38;}}}if(soFar===relationshipType_1.RelationshipType.equal&&shorter.size<longer.size){soFar=relationshipType_1.RelationshipType.specializes;}soFar=this._swap(soFar,swapped);}return soFar;}},{key:'_swap',value:function _swap(soFar,swapped){var reln=soFar;if(swapped){switch(soFar){case relationshipType_1.RelationshipType.specializes:reln=relationshipType_1.RelationshipType.generalizes;break;case relationshipType_1.RelationshipType.generalizes:reln=relationshipType_1.RelationshipType.specializes;break;}}return reln;}},{key:'_relationship',value:function _relationship(expr,other,comparers){var relationship=relationshipType_1.RelationshipType.incomparable;var root=expr;var rootOther=other;if(expr.type===expressionType_1.ExpressionType.Not&&other.type===expressionType_1.ExpressionType.Not){root=expr.children[0];rootOther=other.children[0];}var comparer=void 0;if(root.type===other.type){comparer=comparers[root.type];}if(comparer){relationship=comparer.relationship(root,rootOther);}else {relationship=expr.deepEquals(other)?relationshipType_1.RelationshipType.equal:relationshipType_1.RelationshipType.incomparable;}return relationship;}}]);return Clause;}(expression_1.Expression);exports.Clause=Clause;},{"../expression":170,"../expressionType":183,"./relationshipType":210}],207:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});__export(require("./clause"));__export(require("./node"));__export(require("./quantifier"));__export(require("./relationshipType"));__export(require("./trigger"));__export(require("./triggerTree"));},{"./clause":206,"./node":208,"./quantifier":209,"./relationshipType":210,"./trigger":211,"./triggerTree":212}],208:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var clause_1=require("./clause");var relationshipType_1=require("./relationshipType");var Operation;(function(Operation){Operation["none"]="none";Operation["found"]="found";Operation["added"]="added";Operation["removed"]="removed";Operation["inserted"]="inserted";})(Operation||(Operation={}));/**
	 * Node in a trigger tree.
	 */var Node=function(){/**
	     * Intializes a new instance of the `Node` class.
	     * @param clause The logical conjunction this node represents.
	     * @param tree The trigger tree this node is found in.
	     * @param trigger The trigger to initialize this node.
	     */function Node(clause,tree,trigger){classCallCheck(this,Node);this._allTriggers=[];this._triggers=[];this._specializations=[];this.clause=new clause_1.Clause(clause);this.tree=tree;if(trigger){this._allTriggers.push(trigger);this._triggers.push(trigger);}}/**
	     * Gets all of the most specific triggers that contains the `Clause` in this node.
	     */createClass(Node,[{key:'toString',/**
	     * Gets a string that represents the current node.
	     * @param builder An array of string to build the string of node.
	     * @param indent An integer representing the number of spaces at the start of a line.
	     */value:function toString(){var builder=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var indent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return this.clause.toString(builder,indent);}/**
	     * Identify the relationship between two nodes.
	     * @param other Node to compare against.
	     * @returns Relationship between this node an the other.
	     */},{key:'relationship',value:function relationship(other){return this.clause.relationship(other.clause,this.tree.comparers);}/**
	     * Gets the most specific matches below this node.
	     * @param state Frame to evaluate against.
	     * @returns List of the most specific matches found.
	     */},{key:'matches',value:function matches(state){var matches=new Set();this._matches(state,matches,new Map());return Array.from(matches);}/**
	     * Adds a child node.
	     * @param triggerNode The node to be added.
	     * @returns Whether adding node operation is successful.
	     */},{key:'addNode',value:function addNode(triggerNode){return this._addNode(triggerNode,new Map())===Operation.added;}/**
	     * Removes a trigger from node.
	     * @param trigger The trigger to be removed.
	     * @returns Whether removing trigger operation is successful.
	     */},{key:'removeTrigger',value:function removeTrigger(trigger){return this._removeTrigger(trigger,new Set());}},{key:'_addNode',value:function _addNode(triggerNode,ops){var _this225=this;if(ops.has(this)){return Operation.none;}var op=Operation.none;var trigger=triggerNode.triggers[0];var relationship=this.relationship(triggerNode);switch(relationship){case relationshipType_1.RelationshipType.equal:// Ensure action is not already there
	var found=this._allTriggers.find(function(existing){return trigger.action!=undefined&&trigger.action===existing.action;})!==undefined;op=Operation.found;if(!found){this._allTriggers.push(trigger);var add=true;for(var i=0;i<this._triggers.length;){var existing=this._triggers[i];var reln=trigger.relationship(existing,this.tree.comparers);if(reln===relationshipType_1.RelationshipType.generalizes){add=false;break;}else if(reln===relationshipType_1.RelationshipType.specializes){this._triggers.splice(i,1);}else {++i;}}if(add){this._triggers.push(trigger);}op=Operation.added;}break;case relationshipType_1.RelationshipType.incomparable:var _iteratorNormalCompletion40=true;var _didIteratorError40=false;var _iteratorError40=undefined;try{for(var _iterator40=this._specializations[Symbol.iterator](),_step40;!(_iteratorNormalCompletion40=(_step40=_iterator40.next()).done);_iteratorNormalCompletion40=true){var child=_step40.value;child._addNode(triggerNode,ops);}}catch(err){_didIteratorError40=true;_iteratorError40=err;}finally{try{if(!_iteratorNormalCompletion40&&_iterator40.return){_iterator40.return();}}finally{if(_didIteratorError40){throw _iteratorError40;}}}break;case relationshipType_1.RelationshipType.specializes:triggerNode._addSpecialization(this);op=Operation.inserted;break;case relationshipType_1.RelationshipType.generalizes:var foundOne=false;var removals=void 0;for(var _i3=0;_i3<this._specializations.length;_i3++){var _child2=this._specializations[_i3];var childOp=_child2._addNode(triggerNode,ops);if(childOp!=Operation.none){foundOne=true;if(childOp===Operation.inserted){if(!removals){removals=[];}removals.push(_child2);op=Operation.added;}else {op=childOp;}}}if(removals){var _iteratorNormalCompletion41=true;var _didIteratorError41=false;var _iteratorError41=undefined;try{var _loop2=function _loop2(){var removal=_step41.value;var removed=_this225._specializations.findIndex(function(item){return item===removal;});if(removed>=0){_this225._specializations.splice(removed,1);}};for(var _iterator41=removals[Symbol.iterator](),_step41;!(_iteratorNormalCompletion41=(_step41=_iterator41.next()).done);_iteratorNormalCompletion41=true){_loop2();}}catch(err){_didIteratorError41=true;_iteratorError41=err;}finally{try{if(!_iteratorNormalCompletion41&&_iterator41.return){_iterator41.return();}}finally{if(_didIteratorError41){throw _iteratorError41;}}}this._specializations.push(triggerNode);}if(!foundOne){this._specializations.push(triggerNode);op=Operation.added;}break;}// Prevent visiting this node again
	ops.set(this,op);return op;}},{key:'_matches',value:function _matches(state,matches,matched){var found=matched.get(this);if(found){return true;}found=false;var _iteratorNormalCompletion42=true;var _didIteratorError42=false;var _iteratorError42=undefined;try{for(var _iterator42=this._specializations[Symbol.iterator](),_step42;!(_iteratorNormalCompletion42=(_step42=_iterator42.next()).done);_iteratorNormalCompletion42=true){var child=_step42.value;if(child._matches(state,matches,matched)){found=true;}}// No child matched so we might
	}catch(err){_didIteratorError42=true;_iteratorError42=err;}finally{try{if(!_iteratorNormalCompletion42&&_iterator42.return){_iterator42.return();}}finally{if(_didIteratorError42){throw _iteratorError42;}}}if(!found){var _clause$tryEvaluate=this.clause.tryEvaluate(state),match=_clause$tryEvaluate.value,error=_clause$tryEvaluate.error;if(!error&&match){var _iteratorNormalCompletion43=true;var _didIteratorError43=false;var _iteratorError43=undefined;try{for(var _iterator43=this.triggers[Symbol.iterator](),_step43;!(_iteratorNormalCompletion43=(_step43=_iterator43.next()).done);_iteratorNormalCompletion43=true){var trigger=_step43.value;if(trigger.matches(this.clause,state)){matches.add(trigger);found=true;}}}catch(err){_didIteratorError43=true;_iteratorError43=err;}finally{try{if(!_iteratorNormalCompletion43&&_iterator43.return){_iterator43.return();}}finally{if(_didIteratorError43){throw _iteratorError43;}}}}}matched.set(this,found);return found;}},{key:'_removeTrigger',value:function _removeTrigger(trigger,visited){var _this226=this;if(visited.has(this)){return false;}visited.add(this);var removed=false;// Remove from allTriggers and triggers
	var allTriggerIndex=this._allTriggers.findIndex(function(item){return item===trigger;});if(allTriggerIndex>=0){// We found the trigger somewhere in the tree
	this._allTriggers.splice(allTriggerIndex,1);removed=true;var triggerIndex=this._triggers.findIndex(function(item){return item===trigger;});if(triggerIndex>=0){this._triggers.splice(triggerIndex,1);var _iteratorNormalCompletion44=true;var _didIteratorError44=false;var _iteratorError44=undefined;try{for(var _iterator44=this._allTriggers[Symbol.iterator](),_step44;!(_iteratorNormalCompletion44=(_step44=_iterator44.next()).done);_iteratorNormalCompletion44=true){var candidate=_step44.value;var add=true;var _iteratorNormalCompletion45=true;var _didIteratorError45=false;var _iteratorError45=undefined;try{for(var _iterator45=this._triggers[Symbol.iterator](),_step45;!(_iteratorNormalCompletion45=(_step45=_iterator45.next()).done);_iteratorNormalCompletion45=true){var existing=_step45.value;var reln=candidate.relationship(existing,this.tree.comparers);if(reln===relationshipType_1.RelationshipType.equal||reln===relationshipType_1.RelationshipType.generalizes){add=false;break;}}}catch(err){_didIteratorError45=true;_iteratorError45=err;}finally{try{if(!_iteratorNormalCompletion45&&_iterator45.return){_iterator45.return();}}finally{if(_didIteratorError45){throw _iteratorError45;}}}if(add){this._triggers.push(candidate);}}}catch(err){_didIteratorError44=true;_iteratorError44=err;}finally{try{if(!_iteratorNormalCompletion44&&_iterator44.return){_iterator44.return();}}finally{if(_didIteratorError44){throw _iteratorError44;}}}}}// Remove from any children
	var removals=void 0;for(var i=0;i<this._specializations.length;i++){var child=this._specializations[i];var childRemoved=child._removeTrigger(trigger,visited);if(childRemoved){removed=true;}if(child.triggers.length===0){if(!removals){removals=[];}removals.push(child);}}if(removals){// Remove children if no triggers left
	var _iteratorNormalCompletion46=true;var _didIteratorError46=false;var _iteratorError46=undefined;try{var _loop3=function _loop3(){var removal=_step46.value;var removedIndex=_this226._specializations.findIndex(function(item){return item===removal;});if(removedIndex>=0){_this226._specializations.splice(removedIndex,1);var _iteratorNormalCompletion47=true;var _didIteratorError47=false;var _iteratorError47=undefined;try{for(var _iterator47=removal.specializations[Symbol.iterator](),_step47;!(_iteratorNormalCompletion47=(_step47=_iterator47.next()).done);_iteratorNormalCompletion47=true){var specialization=_step47.value;var _add=true;var _iteratorNormalCompletion48=true;var _didIteratorError48=false;var _iteratorError48=undefined;try{for(var _iterator48=_this226._specializations[Symbol.iterator](),_step48;!(_iteratorNormalCompletion48=(_step48=_iterator48.next()).done);_iteratorNormalCompletion48=true){var parent=_step48.value;var _reln=parent.relationship(specialization);if(_reln===relationshipType_1.RelationshipType.generalizes){_add=false;break;}}}catch(err){_didIteratorError48=true;_iteratorError48=err;}finally{try{if(!_iteratorNormalCompletion48&&_iterator48.return){_iterator48.return();}}finally{if(_didIteratorError48){throw _iteratorError48;}}}if(_add){_this226._specializations.push(specialization);}}}catch(err){_didIteratorError47=true;_iteratorError47=err;}finally{try{if(!_iteratorNormalCompletion47&&_iterator47.return){_iterator47.return();}}finally{if(_didIteratorError47){throw _iteratorError47;}}}}};for(var _iterator46=removals[Symbol.iterator](),_step46;!(_iteratorNormalCompletion46=(_step46=_iterator46.next()).done);_iteratorNormalCompletion46=true){_loop3();}}catch(err){_didIteratorError46=true;_iteratorError46=err;}finally{try{if(!_iteratorNormalCompletion46&&_iterator46.return){_iterator46.return();}}finally{if(_didIteratorError46){throw _iteratorError46;}}}}return removed;}},{key:'_addSpecialization',value:function _addSpecialization(specialization){var _this227=this;var added=false;var removals=void 0;var skip=false;for(var i=0;i<this._specializations.length;i++){var child=this._specializations[i];var reln=specialization.relationship(child);if(reln===relationshipType_1.RelationshipType.equal){skip=true;break;}if(reln===relationshipType_1.RelationshipType.generalizes){if(!removals){removals=[];}removals.push(child);}else if(reln===relationshipType_1.RelationshipType.specializes){skip=true;break;}}if(!skip){if(removals){var _iteratorNormalCompletion49=true;var _didIteratorError49=false;var _iteratorError49=undefined;try{var _loop4=function _loop4(){var removal=_step49.value;// Don't need to add back because specialization already has them
	var removed=_this227._specializations.findIndex(function(item){return item===removal;});if(removed>=0){specialization._addSpecialization(_this227._specializations[removed]);_this227._specializations.splice(removed,1);}};for(var _iterator49=removals[Symbol.iterator](),_step49;!(_iteratorNormalCompletion49=(_step49=_iterator49.next()).done);_iteratorNormalCompletion49=true){_loop4();}}catch(err){_didIteratorError49=true;_iteratorError49=err;}finally{try{if(!_iteratorNormalCompletion49&&_iterator49.return){_iterator49.return();}}finally{if(_didIteratorError49){throw _iteratorError49;}}}}this._specializations.push(specialization);added=true;}return added;}},{key:'triggers',get:function get(){return this._triggers;}/**
	     * Gets all triggers that contain the `Clause` in this node.
	     */},{key:'allTriggers',get:function get(){return this._allTriggers;}/**
	     * Gets specialized children of this node.
	     */},{key:'specializations',get:function get(){return this._specializations;}}]);return Node;}();exports.Node=Node;},{"./clause":206,"./relationshipType":210}],209:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});(function(QuantifierType){/**
	     * Within a clause, duplicate any predicate with variable for each possible binding.
	     */QuantifierType["all"]="all";/**
	     * Create a new clause for each possible binding of variable.
	     */QuantifierType["any"]="any";})(exports.QuantifierType||(exports.QuantifierType={}));/**
	 * Quantifier for allowing runtime expansion of expressions.
	 */var Quantifier=function(){/**
	     * Initializes a new instance of the `Quantifier` class.
	     * @param variable Name of variable to replace.
	     * @param type Type of quantifier.
	     * @param bindings Possible bindings for variable.
	     */function Quantifier(variable,type,bindings){classCallCheck(this,Quantifier);this.variable=variable;this.type=type;this.bindings=bindings;}/**
	     * Returns a string that represents the quantifier.
	     */createClass(Quantifier,[{key:'toString',value:function toString(){return this.type+' '+this.variable+' '+this.bindings.length;}}]);return Quantifier;}();exports.Quantifier=Quantifier;},{}],210:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});(function(RelationshipType){/**
	     * First argument specializes the second, i.e. applies to a subset of the states the second argument covers.
	     */RelationshipType["specializes"]="specializes";/**
	     * First and second argument are the same expression.
	     */RelationshipType["equal"]="equal";/**
	     * First argument generalizes the second, i.e. applies to a superset of the states the second argument covers.
	     */RelationshipType["generalizes"]="generalizes";/**
	     * Connot tell how the first and second arguments relate.
	     */RelationshipType["incomparable"]="incomparable";})(exports.RelationshipType||(exports.RelationshipType={}));},{}],211:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var clause_1=require("./clause");var constant_1=require("../constant");var expression_1=require("../expression");var expressionType_1=require("../expressionType");var quantifier_1=require("./quantifier");var relationshipType_1=require("./relationshipType");/**
	 * Rewrite the expression by pushing not down to the leaves.
	 */var pushDownNot=function pushDownNot(expression){var inNot=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var newExpr=expression;var negation=expression.evaluator.negation;switch(expression.type){case expressionType_1.ExpressionType.And:case expressionType_1.ExpressionType.Or:var children=expression.children.map(function(child){return pushDownNot(child,inNot);});if(children.length===1){newExpr=children[0];}else {var _expression_1$Express5;newExpr=(_expression_1$Express5=expression_1.Expression).makeExpression.apply(_expression_1$Express5,[expression.type===expressionType_1.ExpressionType.And?inNot?expressionType_1.ExpressionType.Or:expressionType_1.ExpressionType.And:inNot?expressionType_1.ExpressionType.And:expressionType_1.ExpressionType.Or,undefined].concat(toConsumableArray(children)));}break;case expressionType_1.ExpressionType.Not:newExpr=pushDownNot(expression.children[0],!inNot);break;default:if(inNot){if(negation){if(expression.type===negation.type){var _expression_1$Express6;// Pass through like optional/ignore
	newExpr=(_expression_1$Express6=expression_1.Expression).makeExpression.apply(_expression_1$Express6,[undefined,negation].concat(toConsumableArray(expression.children.map(function(child){return pushDownNot(child,true);}))));}else {var _expression_1$Express7;// Replace with negation and stop
	newExpr=(_expression_1$Express7=expression_1.Expression).makeExpression.apply(_expression_1$Express7,[undefined,negation].concat(toConsumableArray(expression.children)));}}else {// Keep not
	newExpr=expression_1.Expression.makeExpression(expressionType_1.ExpressionType.Not,undefined,expression);}}break;}return newExpr;};/**
	 * A trigger is a combination of a trigger expression and the corresponding action.
	 */var Trigger=function(){/**
	     * Intializes a new instance of the `Trigger` class.
	     * @param tree Trigger tree that contains this trigger.
	     * @param expression Expression for when the trigger action is possible.
	     * @param action Action to take when a trigger matches.
	     * @param quantifiers Quantifiers to dynamically expand the expression.
	     */function Trigger(tree,expression,action){classCallCheck(this,Trigger);this._tree=tree;this.action=action;this.originalExpression=expression;for(var _len8=arguments.length,quantifiers=Array(_len8>3?_len8-3:0),_key9=3;_key9<_len8;_key9++){quantifiers[_key9-3]=arguments[_key9];}this._quantifiers=quantifiers;if(expression){var normalForm=pushDownNot(expression);this._clauses=this._generateClauses(normalForm);this._removeDuplicatedPredicates();this._optimizeClauses();this._expandQuantifiers();this._removeDuplicates();this._markSubsumedClauses();this._splitIgnores();}else {this._clauses=[];}}/**
	     * Gets list of expressions converted into Disjunctive Normal Form where ! is pushed to the leaves and
	     * there is an implicit || between clauses and && within a clause.
	     */createClass(Trigger,[{key:'relationship',/**
	     * Determines the relationship between current instance and another `Trigger` instance.
	     * @param other The other Trigger instance.
	     * @param comparers The comparer dictionary.
	     * @returns A `RelationshipType` value.
	     */value:function relationship(other,comparers){var result=void 0;var first=this._relationship(this,other,comparers);var second=this._relationship(other,this,comparers);if(first===relationshipType_1.RelationshipType.equal){if(second===relationshipType_1.RelationshipType.equal){// All first clauses == second clauses
	result=relationshipType_1.RelationshipType.equal;}else {// All first clauses found in second
	result=relationshipType_1.RelationshipType.specializes;}}else if(first===relationshipType_1.RelationshipType.specializes){// All first clauses specializes or equal a second clause
	result=relationshipType_1.RelationshipType.specializes;}else if(second===relationshipType_1.RelationshipType.equal||second===relationshipType_1.RelationshipType.specializes){// All second clauses are equal or specialize a first clause
	result=relationshipType_1.RelationshipType.generalizes;}else {// All other cases are in comparable
	result=relationshipType_1.RelationshipType.incomparable;}return result;}/**
	     * Determines whether there is a member in the current `Clause` that matches the nodeClause parameter.
	     * @param nodeClause The other Clause instance to match.
	     * @param state The scope for looking up variables.
	     * @returns A boolean value inidicating whether there is a member matches.
	     */},{key:'matches',value:function matches(nodeClause,state){return this.clauses.find(function(clause){return clause.matches(nodeClause,state);})!==undefined;}/**
	     * Gets a string that represents the current trigger.
	     * @param builder An array of string to build the string of trigger.
	     * @param indent An integer represents the number of spaces at the start of a line.
	     */},{key:'toString',value:function toString(){var builder=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var indent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;builder.push(' '.repeat(indent));if(this._clauses.length>0){var first=true;var _iteratorNormalCompletion50=true;var _didIteratorError50=false;var _iteratorError50=undefined;try{for(var _iterator50=this._clauses[Symbol.iterator](),_step50;!(_iteratorNormalCompletion50=(_step50=_iterator50.next()).done);_iteratorNormalCompletion50=true){var clause=_step50.value;if(first){first=false;}else {builder.push('\n');builder.push(' '.repeat(indent));builder.push('|| ');}builder.push(clause.toString());}}catch(err){_didIteratorError50=true;_iteratorError50=err;}finally{try{if(!_iteratorNormalCompletion50&&_iterator50.return){_iterator50.return();}}finally{if(_didIteratorError50){throw _iteratorError50;}}}}else {builder.push('<Empty>');}return builder.join('');}},{key:'_relationship',value:function _relationship(trigger,other,comparers){var soFar=relationshipType_1.RelationshipType.incomparable;var _iteratorNormalCompletion51=true;var _didIteratorError51=false;var _iteratorError51=undefined;try{for(var _iterator51=trigger.clauses[Symbol.iterator](),_step51;!(_iteratorNormalCompletion51=(_step51=_iterator51.next()).done);_iteratorNormalCompletion51=true){var clause=_step51.value;if(!clause.subsumed){// Check other for = or clause that is specialized
	var clauseSoFar=relationshipType_1.RelationshipType.incomparable;var _iteratorNormalCompletion52=true;var _didIteratorError52=false;var _iteratorError52=undefined;try{for(var _iterator52=other.clauses[Symbol.iterator](),_step52;!(_iteratorNormalCompletion52=(_step52=_iterator52.next()).done);_iteratorNormalCompletion52=true){var second=_step52.value;if(!second.subsumed){var reln=clause.relationship(second,comparers);if(reln===relationshipType_1.RelationshipType.equal||reln===relationshipType_1.RelationshipType.specializes){clauseSoFar=reln;break;}}}}catch(err){_didIteratorError52=true;_iteratorError52=err;}finally{try{if(!_iteratorNormalCompletion52&&_iterator52.return){_iterator52.return();}}finally{if(_didIteratorError52){throw _iteratorError52;}}}if(clauseSoFar===relationshipType_1.RelationshipType.incomparable){// Some clause is not comparable
	soFar=relationshipType_1.RelationshipType.incomparable;break;}if(clauseSoFar===relationshipType_1.RelationshipType.equal){if(soFar===relationshipType_1.RelationshipType.incomparable){// Start on equal clause
	soFar=clauseSoFar;}}else if(clauseSoFar===relationshipType_1.RelationshipType.specializes){// Either going from incomparable or equal to specializes
	soFar=clauseSoFar;}}}// Either incomparable, equal or specializes
	}catch(err){_didIteratorError51=true;_iteratorError51=err;}finally{try{if(!_iteratorNormalCompletion51&&_iterator51.return){_iterator51.return();}}finally{if(_didIteratorError51){throw _iteratorError51;}}}return soFar;}},{key:'_generateClauses',value:function _generateClauses(expression){switch(expression.type){case expressionType_1.ExpressionType.And:// Need to combine every combination of clauses
	var soFar=[];var first=true;for(var i=0;i<expression.children.length;i++){var child=expression.children[i];var _clauses=this._generateClauses(child);if(_clauses.length===0){// Encountered false
	soFar=[];break;}if(first){var _soFar;(_soFar=soFar).push.apply(_soFar,toConsumableArray(_clauses));first=false;}else {var newClauses=[];var _iteratorNormalCompletion53=true;var _didIteratorError53=false;var _iteratorError53=undefined;try{for(var _iterator53=soFar[Symbol.iterator](),_step53;!(_iteratorNormalCompletion53=(_step53=_iterator53.next()).done);_iteratorNormalCompletion53=true){var old=_step53.value;var _iteratorNormalCompletion54=true;var _didIteratorError54=false;var _iteratorError54=undefined;try{for(var _iterator54=_clauses[Symbol.iterator](),_step54;!(_iteratorNormalCompletion54=(_step54=_iterator54.next()).done);_iteratorNormalCompletion54=true){var clause=_step54.value;var children=[];children.push.apply(children,toConsumableArray(old.children));children.push.apply(children,toConsumableArray(clause.children));newClauses.push(new clause_1.Clause(children));}}catch(err){_didIteratorError54=true;_iteratorError54=err;}finally{try{if(!_iteratorNormalCompletion54&&_iterator54.return){_iterator54.return();}}finally{if(_didIteratorError54){throw _iteratorError54;}}}}}catch(err){_didIteratorError53=true;_iteratorError53=err;}finally{try{if(!_iteratorNormalCompletion53&&_iterator53.return){_iterator53.return();}}finally{if(_didIteratorError53){throw _iteratorError53;}}}soFar=newClauses;}}return soFar;case expressionType_1.ExpressionType.Or:var clauses=[];for(var _i4=0;_i4<expression.children.length;_i4++){var _child3=expression.children[_i4];clauses.push.apply(clauses,toConsumableArray(this._generateClauses(_child3)));}return clauses;case expressionType_1.ExpressionType.Optional:return [new clause_1.Clause()].concat(toConsumableArray(this._generateClauses(expression.children[0])));default:// True becomes empty expression and false drops clause
	if(expression instanceof constant_1.Constant&&typeof expression.value==='boolean'){return expression.value?[new clause_1.Clause()]:[];}else {return [new clause_1.Clause(expression)];}}}/**
	     * Remove any duplicate predicates within a clause.
	     * NOTE: This is annoying but expression hash codes of deepEquals expressions are different.
	     */},{key:'_removeDuplicatedPredicates',value:function _removeDuplicatedPredicates(){// Rewrite clauses to remove duplicated tests
	for(var i=0;i<this._clauses.length;++i){var clause=this._clauses[i];var children=[];for(var p=0;p<clause.children.length;++p){var pred=clause.children[p];var found=false;for(var q=p+1;q<clause.children.length;++q){if(pred.deepEquals(clause.children[q])){found=true;break;}}if(!found){children.push(pred);}}this._clauses[i]=new clause_1.Clause(children);}}/**
	     * Mark clauses that are more specific than another clause as subsumed and also remove any = clauses.
	     */},{key:'_markSubsumedClauses',value:function _markSubsumedClauses(){for(var i=0;i<this._clauses.length;++i){var clause=this._clauses[i];if(!clause.subsumed){for(var j=i+1;j<this._clauses.length;++j){var other=this._clauses[j];if(!other.subsumed){var reln=clause.relationship(other,this._tree.comparers);if(reln===relationshipType_1.RelationshipType.equal){this._clauses.splice(j,1);--j;}else {if(reln===relationshipType_1.RelationshipType.specializes){clause.subsumed=true;break;}if(reln===relationshipType_1.RelationshipType.generalizes){other.subsumed=true;}}}}}}}},{key:'_splitIgnores',value:function _splitIgnores(){for(var i=0;i<this._clauses.length;i++){this._clauses[i].splitIgnores();}}},{key:'_optimizeClauses',value:function _optimizeClauses(){var _this228=this;this._clauses.forEach(function(clause){_this228._tree.optimizers.forEach(function(optimizer){optimizer.optimize(clause);});});}},{key:'_expandQuantifiers',value:function _expandQuantifiers(){if(this._quantifiers&&this._quantifiers.length>0){for(var i=0;i<this._quantifiers.length;i++){var quantifier=this._quantifiers[i];var newClauses=[];for(var j=0;j<this._clauses.length;j++){var clause=this._clauses[j];newClauses.push.apply(newClauses,toConsumableArray(this._expandQuantifiersWithClause(quantifier,clause)));}this._clauses=newClauses;}}}},{key:'_expandQuantifiersWithClause',value:function _expandQuantifiersWithClause(quantifier,clause){var results=[];if(quantifier.type===quantifier_1.QuantifierType.all){var children=[];if(quantifier.bindings.length>0){for(var i=0;i<clause.children.length;i++){var predicate=clause.children[i];for(var j=0;j<quantifier.bindings.length;j++){var binding=quantifier.bindings[j];var _substituteVariable2=this._substituteVariable(quantifier.variable,binding,predicate),newPredicate=_substituteVariable2.expression,changed=_substituteVariable2.changed;children.push(newPredicate);if(!changed){// No change to first predicate, so can stop
	break;}}}}else {// Empty quantifier is trivially true so remove any predicate that refers to quantifier
	for(var _i5=0;_i5<clause.children.length;_i5++){var _predicate=clause.children[_i5];var _substituteVariable3=this._substituteVariable(quantifier.variable,'',_predicate),changed=_substituteVariable3.changed;if(!changed){children.push(_predicate);}}}results.push(new clause_1.Clause(children));}else {if(quantifier.bindings.length>0){var changed=false;for(var _i6=0;_i6<quantifier.bindings.length;_i6++){var _binding=quantifier.bindings[_i6];var newClause=new clause_1.Clause(clause);var _children=[];for(var _j=0;_j<clause.children.length;_j++){var _predicate2=clause.children[_j];var _substituteVariable4=this._substituteVariable(quantifier.variable,_binding,_predicate2),newPredicate=_substituteVariable4.expression,predicateChanged=_substituteVariable4.changed;changed=changed||predicateChanged;_children.push(newPredicate);}if(changed){newClause.anyBindings.set(quantifier.variable,_binding);}newClause.children=[].concat(_children);results.push(newClause);if(!changed){break;}}}else {// Keep clause if does not contain any binding
	var _changed=false;for(var _i7=0;_i7<clause.children.length;_i7++){var _predicate3=clause.children[_i7];var _substituteVariable5=this._substituteVariable(quantifier.variable,'',_predicate3),predicateChanged=_substituteVariable5.changed;if(predicateChanged){_changed=true;break;}}if(!_changed){results.push(clause);}}}return results;}},{key:'_substituteVariable',value:function _substituteVariable(variable,binding,expression){var newExpr=expression;var changed=false;if(expression.type===expressionType_1.ExpressionType.Accessor&&expression.children.length===1&&expression.children[0]instanceof constant_1.Constant&&typeof expression.children[0].value==='string'&&expression.children[0].value===variable){newExpr=expression_1.Expression.makeExpression(expressionType_1.ExpressionType.Accessor,undefined,new constant_1.Constant(binding));changed=true;}else {var children=[];for(var i=0;i<expression.children.length;i++){var child=expression.children[i];var _substituteVariable6=this._substituteVariable(variable,binding,child),childExpr=_substituteVariable6.expression,childChanged=_substituteVariable6.changed;children.push(childExpr);changed=changed||childChanged;}if(changed){newExpr=new(Function.prototype.bind.apply(expression_1.Expression,[null].concat([undefined,expression.evaluator],children)))();}}return {expression:newExpr,changed:changed};}},{key:'_removeDuplicates',value:function _removeDuplicates(){var _iteratorNormalCompletion55=true;var _didIteratorError55=false;var _iteratorError55=undefined;try{for(var _iterator55=this._clauses[Symbol.iterator](),_step55;!(_iteratorNormalCompletion55=(_step55=_iterator55.next()).done);_iteratorNormalCompletion55=true){var clause=_step55.value;// NOTE: This is quadratic in clause length but GetHashCode is not equal for expressions and we expect the number of clauses to be small.
	var predicates=[].concat(toConsumableArray(clause.children));for(var i=0;i<predicates.length;++i){var first=predicates[i];for(var j=i+1;j<predicates.length;){var second=predicates[j];if(first.deepEquals(second)){predicates.splice(j,1);}else {++j;}}}clause.children=[].concat(toConsumableArray(predicates));}}catch(err){_didIteratorError55=true;_iteratorError55=err;}finally{try{if(!_iteratorNormalCompletion55&&_iterator55.return){_iterator55.return();}}finally{if(_didIteratorError55){throw _iteratorError55;}}}}},{key:'clauses',get:function get(){return this._clauses;}}]);return Trigger;}();exports.Trigger=Trigger;},{"../constant":158,"../expression":170,"../expressionType":183,"./clause":206,"./quantifier":209,"./relationshipType":210}],212:[function(require,module,exports){/**
	 * @module adaptive-expressions
	 *//**
	 * Copyright (c) Microsoft Corporation. All rights reserved.
	 * Licensed under the MIT License.
	 */Object.defineProperty(exports,"__esModule",{value:true});var expression_1=require("../expression");var clause_1=require("./clause");var node_1=require("./node");var relationshipType_1=require("./relationshipType");var trigger_1=require("./trigger");/**
	 * A trigger tree organizes evaluators according to generalization/specialization in order to make it easier to use rules.
	 */var TriggerTree=function(){/**
	     * Intializes a new instance of the `TriggerTree` class.
	     */function TriggerTree(){classCallCheck(this,TriggerTree);/**
	         * A list of `Optimizer` for optimizing claues.
	         */this.optimizers=[];/**
	         * A dictionary of `PredicateComparer` values, with string keys.
	         */this.comparers={};/**
	         * The total number of triggers.
	         */this.totalTriggers=0;this.root=new node_1.Node(new clause_1.Clause(),this);}/**
	     * Returns a string the represents the current object.
	     */createClass(TriggerTree,[{key:'toString',value:function toString(){return 'TriggerTree with '+this.totalTriggers+' triggers';}/**
	     * Add a trigger expression to the tree.
	     * @param stringOrExpression Trigger to add.
	     * @param action Action when triggered.
	     * @param quantifiers Quantifiers to use when expanding expressions.
	     * @returns New trigger.
	     */},{key:'addTrigger',value:function addTrigger(stringOrExpression,action){var expression=typeof stringOrExpression==='string'?expression_1.Expression.parse(stringOrExpression):stringOrExpression;for(var _len9=arguments.length,quantifiers=Array(_len9>2?_len9-2:0),_key10=2;_key10<_len9;_key10++){quantifiers[_key10-2]=arguments[_key10];}var trigger=new(Function.prototype.bind.apply(trigger_1.Trigger,[null].concat([this,expression,action],quantifiers)))();var added=false;if(trigger.clauses.length){var _iteratorNormalCompletion56=true;var _didIteratorError56=false;var _iteratorError56=undefined;try{for(var _iterator56=trigger.clauses[Symbol.iterator](),_step56;!(_iteratorNormalCompletion56=(_step56=_iterator56.next()).done);_iteratorNormalCompletion56=true){var clause=_step56.value;var newNode=new node_1.Node(clause,this,trigger);if(this.root.addNode(newNode)){added=true;}}}catch(err){_didIteratorError56=true;_iteratorError56=err;}finally{try{if(!_iteratorNormalCompletion56&&_iterator56.return){_iterator56.return();}}finally{if(_didIteratorError56){throw _iteratorError56;}}}}if(added){++this.totalTriggers;}return trigger;}/**
	     * Remove trigger from tree.
	     * @param trigger Trigger to remove.
	     * @returns True if removed trigger.
	     */},{key:'removeTrigger',value:function removeTrigger(trigger){var result=this.root.removeTrigger(trigger);if(result){--this.totalTriggers;}return result;}/**
	     * Generates a string describing the tree.
	     * @param indent Current indent level.
	     * @returns String describing the tree.
	     */},{key:'treeToString',value:function treeToString(){var indent=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var builder=[];this._treeToString(builder,this.root,indent);return builder.join('');}/**
	     * Return the possible matches given the current state.
	     * @param state State to evaluate against.
	     * @returns List of possible matches.
	     */},{key:'matches',value:function matches(state){return this.root.matches(state);}/**
	     * Verify the tree meets specialization/generalization invariants.
	     * @returns Bad node if found.
	     */},{key:'verifyTree',value:function verifyTree(){return this._verifyTree(this.root,new Set());}},{key:'_verifyTree',value:function _verifyTree(node,visited){var badNode=void 0;if(!visited.has(node)){visited.add(node);for(var i=0;!badNode&&i<node.specializations.length;++i){var first=node.specializations[i];if(node.relationship(first)!==relationshipType_1.RelationshipType.generalizes){badNode=node;}else {this._verifyTree(node.specializations[i],visited);for(var j=i+1;j<node.specializations.length;++j){var second=node.specializations[j];if(first.relationship(second)!==relationshipType_1.RelationshipType.incomparable){badNode=node;break;}}}}}return badNode;}},{key:'_treeToString',value:function _treeToString(builder,node,indent){node.toString(builder,indent);builder.push(' ['+node.triggers.length+']');builder.push('\n');var _iteratorNormalCompletion57=true;var _didIteratorError57=false;var _iteratorError57=undefined;try{for(var _iterator57=node.specializations[Symbol.iterator](),_step57;!(_iteratorNormalCompletion57=(_step57=_iterator57.next()).done);_iteratorNormalCompletion57=true){var child=_step57.value;this._treeToString(builder,child,indent+2);}}catch(err){_didIteratorError57=true;_iteratorError57=err;}finally{try{if(!_iteratorNormalCompletion57&&_iterator57.return){_iterator57.return();}}finally{if(_didIteratorError57){throw _iteratorError57;}}}}}]);return TriggerTree;}();exports.TriggerTree=TriggerTree;},{"../expression":170,"./clause":206,"./node":208,"./relationshipType":210,"./trigger":211}],213:[function(require,module,exports){var microsoftRecognizersTextDataTypesTimexExpression=function(exports){var Time=function(){function Time(hour,minute,second){classCallCheck(this,Time);if(arguments.length===1){this.hour=Math.floor(hour/3600000);this.minute=Math.floor((hour-this.hour*3600000)/60000);this.second=(hour-this.hour*3600000-this.minute*60000)/1000;}else {this.hour=hour;this.minute=minute;this.second=second;}}createClass(Time,[{key:'getTime',value:function getTime(){return this.second*1000+this.minute*60000+this.hour*3600000;}}]);return Time;}();var Time_1=Time;var time={Time:Time_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var value=function value(s){return s;};var isTrue=function isTrue(){return true;};var zero=function zero(){return 0;};var timexRegex={date:[// date
	{regex:/^(\d\d\d\d)-(\d\d)-(\d\d)$/,props:{year:Number,month:Number,dayOfMonth:Number}},{regex:/^XXXX-WXX-(\d)$/,props:{dayOfWeek:Number}},{regex:/^XXXX-(\d\d)-(\d\d)$/,props:{month:Number,dayOfMonth:Number}},// daterange
	{regex:/^(\d\d\d\d)$/,props:{year:Number}},{regex:/^(\d\d\d\d)-(\d\d)$/,props:{year:Number,month:Number}},{regex:/^(SP|SU|FA|WI)$/,props:{season:value}},{regex:/^(\d\d\d\d)-(SP|SU|FA|WI)$/,props:{year:Number,season:value}},{regex:/^(\d\d\d\d)-W(\d\d)$/,props:{year:Number,weekOfYear:Number}},{regex:/^(\d\d\d\d)-W(\d\d)-WE$/,props:{year:Number,weekOfYear:Number,weekend:isTrue}},{regex:/^XXXX-(\d\d)$/,props:{month:Number}},{regex:/^XXXX-(\d\d)-W(\d\d)$/,props:{month:Number,weekOfMonth:Number}},{regex:/^XXXX-(\d\d)-WXX-(\d)-(\d)$/,props:{month:Number,weekOfMonth:Number,dayOfWeek:Number}}],time:[// time
	{regex:/^T(\d\d)$/,props:{hour:Number,minute:zero,second:zero}},{regex:/^T(\d\d):(\d\d)$/,props:{hour:Number,minute:Number,second:zero}},{regex:/^T(\d\d):(\d\d):(\d\d)$/,props:{hour:Number,minute:Number,second:Number}},// timerange
	{regex:/^T(DT|NI|MO|AF|EV)$/,props:{partOfDay:value}}],period:[{regex:/^P(\d*\.?\d+)(Y|M|W|D)$/,props:{amount:Number,dateUnit:value}},{regex:/^PT(\d*\.?\d+)(H|M|S)$/,props:{amount:Number,timeUnit:value}}]};var tryExtract=function tryExtract(entry,timex,result){var regexResult=timex.match(entry.regex);if(!regexResult){return false;}var index=1;for(var name in entry.props){var val=regexResult[index++];result[name]=entry.props[name](val);}return true;};var extract=function extract(name,timex,result){var _iteratorNormalCompletion58=true;var _didIteratorError58=false;var _iteratorError58=undefined;try{for(var _iterator58=timexRegex[name][Symbol.iterator](),_step58;!(_iteratorNormalCompletion58=(_step58=_iterator58.next()).done);_iteratorNormalCompletion58=true){var entry=_step58.value;if(tryExtract(entry,timex,result)){return true;}}}catch(err){_didIteratorError58=true;_iteratorError58=err;}finally{try{if(!_iteratorNormalCompletion58&&_iterator58.return){_iterator58.return();}}finally{if(_didIteratorError58){throw _iteratorError58;}}}return false;};var extract_1=extract;var timexregex={extract:extract_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var parseString=function parseString(timex,obj){// a reference to the present
	if(timex==='PRESENT_REF'){obj.now=true;}// duration
	else if(timex.startsWith('P')){extractDuration(timex,obj);}// range indicated with start and end dates and a duration
	else if(timex.startsWith('(')&&timex.endsWith(')')){extractStartEndRange(timex,obj);}// date and time and their respective ranges
	else {extractDateTime(timex,obj);}};var extractDuration=function extractDuration(s,obj){var extracted={};timexregex.extract('period',s,extracted);if(extracted.dateUnit){obj[{Y:'years',M:'months',W:'weeks',D:'days'}[extracted.dateUnit]]=extracted.amount;}else if(extracted.timeUnit){obj[{H:'hours',M:'minutes',S:'seconds'}[extracted.timeUnit]]=extracted.amount;}};var extractStartEndRange=function extractStartEndRange(s,obj){var parts=s.substring(1,s.length-1).split(',');if(parts.length===3){extractDateTime(parts[0],obj);extractDuration(parts[2],obj);}};var extractDateTime=function extractDateTime(s,obj){var indexOfT=s.indexOf('T');if(indexOfT===-1){timexregex.extract('date',s,obj);}else {timexregex.extract('date',s.substr(0,indexOfT),obj);timexregex.extract('time',s.substr(indexOfT),obj);}};var fromObject=function fromObject(source,obj){Object.assign(obj,source);if('hour'in obj){if(!('minute'in obj)){obj.minute=0;}if(!('second'in obj)){obj.second=0;}}};var timexParsing={parseString:parseString,fromObject:fromObject};// Copyright (c) Microsoft Corporation. All rights reserved.
	var isPresent=function isPresent(obj){return obj.now===true;};var isDuration=function isDuration(obj){return 'years'in obj||'months'in obj||'weeks'in obj||'days'in obj||'hours'in obj||'minutes'in obj||'seconds'in obj;};var isTime=function isTime(obj){return 'hour'in obj&&'minute'in obj&&'second'in obj;};var isDate=function isDate(obj){return 'month'in obj&&'dayOfMonth'in obj||'dayOfWeek'in obj;};var isTimeRange=function isTimeRange(obj){return 'partOfDay'in obj;};var isDateRange=function isDateRange(obj){return 'year'in obj&&!('dayOfMonth'in obj)||'year'in obj&&'month'in obj&&!('dayOfMonth'in obj)||'month'in obj&&!('dayOfMonth'in obj)||'season'in obj||'weekOfYear'in obj||'weekOfMonth'in obj;};var isDefinite=function isDefinite(obj){return 'year'in obj&&'month'in obj&&'dayOfMonth'in obj;};var infer=function infer(obj){var types=new Set();if(isPresent(obj)){types.add('present');}if(isDefinite(obj)){types.add('definite');}if(isDate(obj)){types.add('date');}if(isDateRange(obj)){types.add('daterange');}if(isDuration(obj)){types.add('duration');}if(isTime(obj)){types.add('time');}if(isTimeRange(obj)){types.add('timerange');}if(types.has('present')){types.add('date');types.add('time');}if(types.has('time')&&types.has('duration')){types.add('timerange');}if(types.has('date')&&types.has('time')){types.add('datetime');}if(types.has('date')&&types.has('duration')){types.add('daterange');}if(types.has('datetime')&&types.has('duration')){types.add('datetimerange');}if(types.has('date')&&types.has('timerange')){types.add('datetimerange');}return types;};var infer_1=infer;var timexInference={infer:infer_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var cloneDate=function cloneDate(date){var result=new Date();result.setTime(date.getTime());return result;};var tomorrow=function tomorrow(date){var result=cloneDate(date);result.setDate(result.getDate()+1);return result;};var yesterday=function yesterday(date){var result=cloneDate(date);result.setDate(result.getDate()-1);return result;};var datePartEquals=function datePartEquals(dateX,dateY){return dateX.getFullYear()===dateY.getFullYear()&&dateX.getMonth()===dateY.getMonth()&&dateX.getDate()===dateY.getDate();};var isDateInWeek=function isDateInWeek(date,startOfWeek){var d=cloneDate(startOfWeek);for(var i=0;i<7;i++){if(datePartEquals(date,d)){return true;}d=tomorrow(d);}return false;};var isThisWeek=function isThisWeek(date,referenceDate){var startOfThisWeek=cloneDate(referenceDate);startOfThisWeek.setDate(startOfThisWeek.getDate()-startOfThisWeek.getDay());return isDateInWeek(date,startOfThisWeek);};var isNextWeek=function isNextWeek(date,referenceDate){var startOfNextWeek=cloneDate(referenceDate);startOfNextWeek.setDate(startOfNextWeek.getDate()+(7-startOfNextWeek.getDay()));return isDateInWeek(date,startOfNextWeek);};var isLastWeek=function isLastWeek(date,referenceDate){var startOfLastWeek=cloneDate(referenceDate);startOfLastWeek.setDate(startOfLastWeek.getDate()-(7+startOfLastWeek.getDay()));return isDateInWeek(date,startOfLastWeek);};var weekOfYear=function weekOfYear(date){var ds=new Date(date.getFullYear(),0);var de=new Date(date.getFullYear(),date.getMonth(),date.getDate());var weeks=1;while(ds.getTime()<de.getTime()){var jsDayOfWeek=ds.getDay();var isoDayOfWeek=jsDayOfWeek==0?7:jsDayOfWeek;if(isoDayOfWeek===7){weeks++;}ds.setDate(ds.getDate()+1);}return weeks;};var fixedFormatNumber$1=function fixedFormatNumber$1(n,size){var s=n.toString();var zeros='';var np=size-s.length;for(var i=0;i<np;i++){zeros+='0';}return ''+zeros+s;};var dateOfLastDay=function dateOfLastDay(day,referenceDate){var result=cloneDate(referenceDate);result.setDate(result.getDate()-1);while(result.getDay()!==day){result.setDate(result.getDate()-1);}return result;};var dateOfNextDay=function dateOfNextDay(day,referenceDate){var result=cloneDate(referenceDate);do{result.setDate(result.getDate()+1);}while(result.getDay()!==day);return result;};var datesMatchingDay=function datesMatchingDay(day,start,end){var result=[];var d=cloneDate(start);while(!datePartEquals(d,end)){if(d.getDay()===day){result.push(cloneDate(d));}d.setDate(d.getDate()+1);}return result;};var timexDateHelpers={tomorrow:tomorrow,yesterday:yesterday,datePartEquals:datePartEquals,isThisWeek:isThisWeek,isNextWeek:isNextWeek,isLastWeek:isLastWeek,weekOfYear:weekOfYear,fixedFormatNumber:fixedFormatNumber$1,dateOfLastDay:dateOfLastDay,dateOfNextDay:dateOfNextDay,datesMatchingDay:datesMatchingDay};// Copyright (c) Microsoft Corporation. All rights reserved.
	var Time$1=time.Time;var cloneDateTime=function cloneDateTime(timex){var result=Object.assign({},timex);delete result.years;delete result.months;delete result.weeks;delete result.days;delete result.hours;delete result.minutes;delete result.seconds;return result;};var cloneDuration=function cloneDuration(timex){var result=Object.assign({},timex);delete result.year;delete result.month;delete result.dayOfMonth;delete result.dayOfWeek;delete result.weekOfYear;delete result.weekOfMonth;delete result.season;delete result.hour;delete result.minute;delete result.second;delete result.weekend;delete result.partOfDay;return result;};var timexDateAdd$1=function timexDateAdd$1(start,duration){if('dayOfWeek'in start){var end=Object.assign({},start);if('days'in duration){end.dayOfWeek+=duration.days;}return end;}if('month'in start&&'dayOfMonth'in start){if('days'in duration){if('year'in start){var d=new Date(start.year,start.month-1,start.dayOfMonth,0,0,0);for(var i=0;i<duration.days;i++){d.setDate(d.getDate()+1);}return {year:d.getFullYear(),month:d.getMonth()+1,dayOfMonth:d.getDate()};}else {var _d=new Date(2001,start.month-1,start.dayOfMonth,0,0,0);for(var _i8=0;_i8<duration.days;_i8++){_d.setDate(_d.getDate()+1);}return {month:_d.getMonth()+1,dayOfMonth:_d.getDate()};}}if('years'in duration){if('year'in start){return {year:start.year+duration.years,month:start.month,dayOfMonth:start.dayOfMonth};}}if('months'in duration){if('month'in start){return {year:start.year,month:start.month+duration.months,dayOfMonth:start.dayOfMonth};}}}return start;};var timexTimeAdd$1=function timexTimeAdd$1(start,duration){if('hours'in duration){var result=Object.assign({},start);result.hour+=duration.hours;if(result.hour>23){var _days=Math.floor(result.hour/24);var hour=result.hour%24;result.hour=hour;if('year'in result&&'month'in result&&'dayOfMonth'in result){var d=new Date(result.year,result.month-1,result.dayOfMonth,0,0,0);for(var i=0;i<_days;i++){d.setDate(d.getDate()+1);}result.year=d.getFullYear();result.month=d.getMonth()+1;result.dayOfMonth=d.getDate();return result;}if('dayOfWeek'in result){result.dayOfWeek+=_days;return result;}}return result;}if('minutes'in duration){var _result3=Object.assign({},start);_result3.minute+=duration.minutes;if(_result3.minute>59){_result3.hour++;_result3.minute=0;}return _result3;}return start;};var timexDateTimeAdd$1=function timexDateTimeAdd$1(start,duration){return timexTimeAdd$1(timexDateAdd$1(start,duration),duration);};var expandDateTimeRange=function expandDateTimeRange(timex){var types='types'in timex?timex.types:timexInference.infer(timex);if(types.has('duration')){var start=cloneDateTime(timex);var duration=cloneDuration(timex);return {start:start,end:timexDateTimeAdd$1(start,duration),duration:duration};}else {if('year'in timex){var range={start:{year:timex.year},end:{}};if('month'in timex){range.start.month=timex.month;range.start.dayOfMonth=1;range.end.year=timex.year;range.end.month=timex.month+1;range.end.dayOfMonth=1;}else {range.start.month=1;range.start.dayOfMonth=1;range.end.year=timex.year+1;range.end.month=1;range.end.dayOfMonth=1;}return range;}}return {start:{},end:{}};};var timeAdd=function timeAdd(start,duration){var hours=duration.hours||0;var minutes=duration.minutes||0;var seconds=duration.seconds||0;return {hour:start.hour+hours,minute:start.minute+minutes,second:start.second+seconds};};var expandTimeRange=function expandTimeRange(timex){if(!timex.types.has('timerange')){throw new exception('argument must be a timerange');}if(timex.partOfDay!==undefined){switch(timex.partOfDay){case'DT':timex={hour:8,minute:0,second:0,hours:10,minutes:0,seconds:0};break;case'MO':timex={hour:8,minute:0,second:0,hours:4,minutes:0,seconds:0};break;case'AF':timex={hour:12,minute:0,second:0,hours:4,minutes:0,seconds:0};break;case'EV':timex={hour:16,minute:0,second:0,hours:4,minutes:0,seconds:0};break;case'NI':timex={hour:20,minute:0,second:0,hours:4,minutes:0,seconds:0};break;default:throw new exception('unrecognized part of day timerange');}}var start={hour:timex.hour,minute:timex.minute,second:timex.second};var duration=cloneDuration(timex);return {start:start,end:timeAdd(start,duration),duration:duration};};var dateFromTimex=function dateFromTimex(timex){var year='year'in timex?timex.year:2001;var month='month'in timex?timex.month-1:0;var date='dayOfMonth'in timex?timex.dayOfMonth:1;var hour='hour'in timex?timex.hour:0;var minute='minute'in timex?timex.minute:0;var second='second'in timex?timex.second:0;return new Date(year,month,date,hour,minute,second);};var timeFromTimex=function timeFromTimex(timex){var hour=timex.hour||0;var minute=timex.minute||0;var second=timex.second||0;return new Time$1(hour,minute,second);};var dateRangeFromTimex=function dateRangeFromTimex(timex){var expanded=expandDateTimeRange(timex);return {start:dateFromTimex(expanded.start),end:dateFromTimex(expanded.end)};};var timeRangeFromTimex=function timeRangeFromTimex(timex){var expanded=expandTimeRange(timex);return {start:timeFromTimex(expanded.start),end:timeFromTimex(expanded.end)};};var timexHelpers={expandDateTimeRange:expandDateTimeRange,expandTimeRange:expandTimeRange,dateFromTimex:dateFromTimex,timeFromTimex:timeFromTimex,dateRangeFromTimex:dateRangeFromTimex,timeRangeFromTimex:timeRangeFromTimex,timexTimeAdd:timexTimeAdd$1,timexDateTimeAdd:timexDateTimeAdd$1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var fixedFormatNumber=timexDateHelpers.fixedFormatNumber;var formatDuration=function formatDuration(timex){if('years'in timex){return 'P'+timex.years+'Y';}if('months'in timex){return 'P'+timex.months+'M';}if('weeks'in timex){return 'P'+timex.weeks+'W';}if('days'in timex){return 'P'+timex.days+'D';}if('hours'in timex){return 'PT'+timex.hours+'H';}if('minutes'in timex){return 'PT'+timex.minutes+'M';}if('seconds'in timex){return 'PT'+timex.seconds+'S';}return '';};var formatTime=function formatTime(timex){if(timex.minute===0&&timex.second===0){return 'T'+fixedFormatNumber(timex.hour,2);}if(timex.second===0){return 'T'+fixedFormatNumber(timex.hour,2)+':'+fixedFormatNumber(timex.minute,2);}return 'T'+fixedFormatNumber(timex.hour,2)+':'+fixedFormatNumber(timex.minute,2)+':'+fixedFormatNumber(timex.second,2);};var formatDate=function formatDate(timex){if('year'in timex&&'month'in timex&&'dayOfMonth'in timex){return fixedFormatNumber(timex.year,4)+'-'+fixedFormatNumber(timex.month,2)+'-'+fixedFormatNumber(timex.dayOfMonth,2);}if('month'in timex&&'dayOfMonth'in timex){return 'XXXX-'+fixedFormatNumber(timex.month,2)+'-'+fixedFormatNumber(timex.dayOfMonth,2);}if('dayOfWeek'in timex){return 'XXXX-WXX-'+timex.dayOfWeek;}return '';};var formatDateRange=function formatDateRange(timex){if('year'in timex&&'weekOfYear'in timex&&'weekend'in timex){return fixedFormatNumber(timex.year,4)+'-W'+fixedFormatNumber(timex.weekOfYear,2)+'-WE';}if('year'in timex&&'weekOfYear'in timex){return fixedFormatNumber(timex.year,4)+'-W'+fixedFormatNumber(timex.weekOfYear,2);}if('year'in timex&&'season'in timex){return fixedFormatNumber(timex.year,4)+'-'+timex.season;}if('season'in timex){return ''+timex.season;}if('year'in timex&&'month'in timex){return fixedFormatNumber(timex.year,4)+'-'+fixedFormatNumber(timex.month,2);}if('year'in timex){return ''+fixedFormatNumber(timex.year,4);}if('month'in timex&&'weekOfMonth'in timex&&'dayOfWeek'in timex){return 'XXXX-'+fixedFormatNumber(timex.month,2)+'-WXX-'+timex.weekOfMonth+'-'+timex.dayOfWeek;}if('month'in timex&&'weekOfMonth'in timex){return 'XXXX-'+fixedFormatNumber(timex.month,2)+'-WXX-'+timex.weekOfMonth;}if('month'in timex){return 'XXXX-'+fixedFormatNumber(timex.month,2);}return '';};var formatTimeRange=function formatTimeRange(timex){if('partOfDay'in timex){return 'T'+timex.partOfDay;}return '';};var format=function format(timex){var types='types'in timex?timex.types:timexInference.infer(timex);if(types.has('present')){return 'PRESENT_REF';}if((types.has('datetimerange')||types.has('daterange')||types.has('timerange'))&&types.has('duration')){var range=timexHelpers.expandDateTimeRange(timex);return '('+format(range.start)+','+format(range.end)+','+format(range.duration)+')';}if(types.has('datetimerange')){return ''+formatDate(timex)+formatTimeRange(timex);}if(types.has('daterange')){return ''+formatDateRange(timex);}if(types.has('timerange')){return ''+formatTimeRange(timex);}if(types.has('datetime')){return ''+formatDate(timex)+formatTime(timex);}if(types.has('duration')){return ''+formatDuration(timex);}if(types.has('date')){return ''+formatDate(timex);}if(types.has('time')){return ''+formatTime(timex);}return '';};var format_1=format;var timexFormat={format:format_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];var months=['January','Februrary','March','April','May','June','July','August','September','October','November','December'];var dateAbbreviation={0:'th',1:'st',2:'nd',3:'rd',4:'th',5:'th',6:'th',7:'th',8:'th',9:'th'};var hours=['midnight','1AM','2AM','3AM','4AM','5AM','6AM','7AM','8AM','9AM','10AM','11AM','midday','1PM','2PM','3PM','4PM','5PM','6PM','7PM','8PM','9PM','10PM','11PM'];var seasons={SP:'spring',SU:'summer',FA:'fall',WI:'winter'};var weeks=['first','second','third','forth'];var dayParts={DT:'daytime',NI:'night',MO:'morning',AF:'afternoon',EV:'evening'};var timexConstants={days:days,months:months,dateAbbreviation:dateAbbreviation,hours:hours,seasons:seasons,weeks:weeks,dayParts:dayParts};// Copyright (c) Microsoft Corporation. All rights reserved.
	var convertDate=function convertDate(timex){if('dayOfWeek'in timex){return timexConstants.days[timex.dayOfWeek-1];}var month=timexConstants.months[timex.month-1];var date=timex.dayOfMonth.toString();var abbreviation=timexConstants.dateAbbreviation[date.slice(-1)];if('year'in timex){return (''+date+abbreviation+' '+month+' '+timex.year).trim();}return ''+date+abbreviation+' '+month;};var convertTime=function convertTime(timex){if(timex.hour===0&&timex.minute===0&&timex.second===0){return 'midnight';}if(timex.hour===12&&timex.minute===0&&timex.second===0){return 'midday';}var pad=function pad(s){return s.length===1?'0'+s:s;};var hour=timex.hour===0?'12':timex.hour>12?(timex.hour-12).toString():timex.hour.toString();var minute=timex.minute===0&&timex.second===0?'':':'+pad(timex.minute.toString());var second=timex.second===0?'':':'+pad(timex.second.toString());var period=timex.hour<12?'AM':'PM';return ''+hour+minute+second+period;};var convertDurationPropertyToString=function convertDurationPropertyToString(timex,property,includeSingleCount){var propertyName=property+'s';var value=timex[propertyName];if(value!==undefined){if(value===1){return includeSingleCount?'1 '+property:property;}else {return value+' '+property+'s';}}return false;};var convertTimexDurationToString=function convertTimexDurationToString(timex,includeSingleCount){return convertDurationPropertyToString(timex,'year',includeSingleCount)||convertDurationPropertyToString(timex,'month',includeSingleCount)||convertDurationPropertyToString(timex,'week',includeSingleCount)||convertDurationPropertyToString(timex,'day',includeSingleCount)||convertDurationPropertyToString(timex,'hour',includeSingleCount)||convertDurationPropertyToString(timex,'minute',includeSingleCount)||convertDurationPropertyToString(timex,'second',includeSingleCount);};var convertDuration=function convertDuration(timex){return convertTimexDurationToString(timex,true);};var convertDateRange=function convertDateRange(timex){var season='season'in timex?timexConstants.seasons[timex.season]:'';var year='year'in timex?timex.year.toString():'';if('weekOfYear'in timex){if(timex.weekend){return '';}else {return '';}}if('month'in timex){var month=''+timexConstants.months[timex.month-1];if('weekOfMonth'in timex){return timexConstants.weeks[timex.weekOfMonth-1]+' week of '+month;}else {return (month+' '+year).trim();}}return (season+' '+year).trim();};var convertTimeRange=function convertTimeRange(timex){return timexConstants.dayParts[timex.partOfDay];};var convertDateTime=function convertDateTime(timex){return convertTime(timex)+' '+convertDate(timex);};var convertDateTimeRange=function convertDateTimeRange(timex){if(timex.types.has('timerange')){return convertDate(timex)+' '+convertTimeRange(timex);}// date + time + duration
	// - OR - 
	// date + duration
	return '';};var convertTimexToString=function convertTimexToString(timex){var types='types'in timex?timex.types:timexInference.infer(timex);if(types.has('present')){return 'now';}if(types.has('datetimerange')){return convertDateTimeRange(timex);}if(types.has('daterange')){return convertDateRange(timex);}if(types.has('duration')){return convertDuration(timex);}if(types.has('timerange')){return convertTimeRange(timex);}// TODO: where appropriate delegate most the formatting delegate to Date.toLocaleString(options)
	if(types.has('datetime')){return convertDateTime(timex);}if(types.has('date')){return convertDate(timex);}if(types.has('time')){return convertTime(timex);}return '';};var convertTimexSetToString=function convertTimexSetToString(timexSet){var timex=timexSet.timex;if(timex.types.has('duration')){return 'every '+convertTimexDurationToString(timex,false);}else {return 'every '+convertTimexToString(timex);}};var timexConvert$2={convertDate:convertDate,convertTime:convertTime,convertTimexToString:convertTimexToString,convertTimexSetToString:convertTimexSetToString};// Copyright (c) Microsoft Corporation. All rights reserved.
	var timexConvert={convertTimexToString:timexConvert$2.convertTimexToString,convertTimexSetToString:timexConvert$2.convertTimexSetToString};// Copyright (c) Microsoft Corporation. All rights reserved.
	var getDateDay=function getDateDay(day){var index=day===0?6:day-1;return timexConstants.days[index];};var convertDate$1=function convertDate$1(timex,date){if('year'in timex&&'month'in timex&&'dayOfMonth'in timex){var timexDate=new Date(timex.year,timex.month-1,timex.dayOfMonth);if(timexDateHelpers.datePartEquals(timexDate,date)){return 'today';}var _tomorrow=timexDateHelpers.tomorrow(date);if(timexDateHelpers.datePartEquals(timexDate,_tomorrow)){return 'tomorrow';}var _yesterday=timexDateHelpers.yesterday(date);if(timexDateHelpers.datePartEquals(timexDate,_yesterday)){return 'yesterday';}if(timexDateHelpers.isThisWeek(timexDate,date)){return 'this '+getDateDay(timexDate.getDay());}if(timexDateHelpers.isNextWeek(timexDate,date)){return 'next '+getDateDay(timexDate.getDay());}if(timexDateHelpers.isLastWeek(timexDate,date)){return 'last '+getDateDay(timexDate.getDay());}}return timexConvert$2.convertDate(timex);};var convertDateTime$1=function convertDateTime$1(timex,date){return convertDate$1(timex,date)+' '+timexConvert$2.convertTime(timex);};var convertDateRange$1=function convertDateRange$1(timex,date){if('year'in timex){var year=date.getFullYear();if(timex.year===year){if('weekOfYear'in timex){var _thisWeek=timexDateHelpers.weekOfYear(date);if(_thisWeek===timex.weekOfYear){return timex.weekend?'this weekend':'this week';}if(_thisWeek===timex.weekOfYear+1){return timex.weekend?'last weekend':'last week';}if(_thisWeek===timex.weekOfYear-1){return timex.weekend?'next weekend':'next week';}}if('month'in timex){var isoMonth=date.getMonth()+1;if(timex.month===isoMonth){return 'this month';}if(timex.month===isoMonth+1){return 'next month';}if(timex.month===isoMonth-1){return 'last month';}}return 'season'in timex?'this '+timexConstants.seasons[timex.season]:'this year';}if(timex.year===year+1){return 'season'in timex?'next '+timexConstants.seasons[timex.season]:'next year';}if(timex.year===year-1){return 'season'in timex?'last '+timexConstants.seasons[timex.season]:'last year';}}return '';};var convertDateTimeRange$1=function convertDateTimeRange$1(timex,date){if('year'in timex&&'month'in timex&&'dayOfMonth'in timex){var timexDate=new Date(timex.year,timex.month-1,timex.dayOfMonth);if('partOfDay'in timex){if(timexDateHelpers.datePartEquals(timexDate,date)){if(timex.partOfDay==='NI'){return 'tonight';}else {return 'this '+timexConstants.dayParts[timex.partOfDay];}}var _tomorrow2=timexDateHelpers.tomorrow(date);if(timexDateHelpers.datePartEquals(timexDate,_tomorrow2)){return 'tomorrow '+timexConstants.dayParts[timex.partOfDay];}var _yesterday2=timexDateHelpers.yesterday(date);if(timexDateHelpers.datePartEquals(timexDate,_yesterday2)){return 'yesterday '+timexConstants.dayParts[timex.partOfDay];}if(timexDateHelpers.isNextWeek(timexDate,date)){return 'next '+getDateDay(timexDate.getDay())+' '+timexConstants.dayParts[timex.partOfDay];}if(timexDateHelpers.isLastWeek(timexDate,date)){return 'last '+getDateDay(timexDate.getDay())+' '+timexConstants.dayParts[timex.partOfDay];}}}return '';};var convertTimexToStringRelative$1=function convertTimexToStringRelative$1(timex,date){var types='types'in timex?timex.types:timexInference.infer(timex);if(types.has('datetimerange')){return convertDateTimeRange$1(timex,date);}if(types.has('daterange')){return convertDateRange$1(timex,date);}if(types.has('datetime')){return convertDateTime$1(timex,date);}if(types.has('date')){return convertDate$1(timex,date);}return timexConvert$2.convertTimexToString(timex);};var convertTimexToStringRelative_1=convertTimexToStringRelative$1;var timexRelativeConvert$2={convertTimexToStringRelative:convertTimexToStringRelative_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var convertTimexToStringRelative=timexRelativeConvert$2.convertTimexToStringRelative;var timexRelativeConvert={convertTimexToStringRelative:convertTimexToStringRelative};// Copyright (c) Microsoft Corporation. All rights reserved.
	var TimexProperty=function(){function TimexProperty(timex){classCallCheck(this,TimexProperty);if(typeof timex==='string'){timexParsing.parseString(timex,this);}else {timexParsing.fromObject(timex,this);}// TODO: constructing a Timex from a Timex should be very cheap
	}createClass(TimexProperty,[{key:'toString',value:function toString(){return timexConvert.convertTimexToString(this);}// TODO: consider [locales[, options]] similar to Date.toLocaleString([locales[, options]])
	},{key:'toNaturalLanguage',value:function toNaturalLanguage(referenceDate){return timexRelativeConvert.convertTimexToStringRelative(this,referenceDate);}},{key:'timex',get:function get(){return timexFormat.format(this);}},{key:'types',get:function get(){return timexInference.infer(this);}}],[{key:'fromDate',value:function fromDate(date){return new TimexProperty({year:date.getFullYear(),month:date.getMonth()+1,dayOfMonth:date.getDate()});}},{key:'fromDateTime',value:function fromDateTime(date){return new TimexProperty({year:date.getFullYear(),month:date.getMonth()+1,dayOfMonth:date.getDate(),hour:date.getHours(),minute:date.getMinutes(),second:date.getSeconds()});}},{key:'fromTime',value:function fromTime(time){return new TimexProperty(time);}}]);return TimexProperty;}();var TimexProperty_1=TimexProperty;var timexProperty={TimexProperty:TimexProperty_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var TimexProperty$1=timexProperty.TimexProperty;var TimexSet=function TimexSet(timex){classCallCheck(this,TimexSet);this.timex=new TimexProperty$1(timex);};var TimexSet_1=TimexSet;var timexSet={TimexSet:TimexSet_1};// Copyright (c) Microsoft Corporation. All rights reserved.
	var TimexProperty$2=timexProperty.TimexProperty;var today=function today(date){return TimexProperty$2.fromDate(date||new Date()).timex;};var tomorrow$1=function tomorrow$1(date){var d=date===undefined?new Date():new Date(date.getTime());d.setDate(d.getDate()+1);return TimexProperty$2.fromDate(d).timex;};var yesterday$1=function yesterday$1(date){var d=date===undefined?new Date():new Date(date.getTime());d.setDate(d.getDate()-1);return TimexProperty$2.fromDate(d).timex;};var weekFromToday=function weekFromToday(date){var d=date===undefined?new Date():new Date(date.getTime());return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(d),{days:7})).timex;};var weekBackFromToday=function weekBackFromToday(date){var d=date===undefined?new Date():new Date(date.getTime());d.setDate(d.getDate()-7);return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(d),{days:7})).timex;};var thisWeek=function thisWeek(date){var d=date===undefined?new Date():new Date(date.getTime());d.setDate(d.getDate()-7);var start=timexDateHelpers.dateOfNextDay(1,d);return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(start),{days:7})).timex;};var nextWeek=function nextWeek(date){var d=date===undefined?new Date():new Date(date.getTime());var start=timexDateHelpers.dateOfNextDay(1,d);return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(start),{days:7})).timex;};var lastWeek=function lastWeek(date){var d=date===undefined?new Date():new Date(date.getTime());var start=timexDateHelpers.dateOfLastDay(1,d);start.setDate(start.getDate()-7);return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(start),{days:7})).timex;};var nextWeeksFromToday=function nextWeeksFromToday(n,date){var d=date===undefined?new Date():new Date(date.getTime());return new TimexProperty$2(Object.assign(TimexProperty$2.fromDate(d),{days:7*n})).timex;};// The following constants are consistent with the Recognizer results
	var monday='XXXX-WXX-1';var tuesday='XXXX-WXX-2';var wednesday='XXXX-WXX-3';var thursday='XXXX-WXX-4';var friday='XXXX-WXX-5';var saturday='XXXX-WXX-6';var sunday='XXXX-WXX-7';var morning='(T08,T12,PT4H)';var afternoon='(T12,T16,PT4H)';var evening='(T16,T20,PT4H)';var daytime='(T08,T18,PT10H)';var timexCreator={today:today,tomorrow:tomorrow$1,yesterday:yesterday$1,weekFromToday:weekFromToday,weekBackFromToday:weekBackFromToday,thisWeek:thisWeek,nextWeek:nextWeek,lastWeek:lastWeek,nextWeeksFromToday:nextWeeksFromToday,monday:monday,tuesday:tuesday,wednesday:wednesday,thursday:thursday,friday:friday,saturday:saturday,sunday:sunday,morning:morning,afternoon:afternoon,evening:evening,daytime:daytime};// Copyright (c) Microsoft Corporation. All rights reserved.
	var isOverlapping=function isOverlapping(r1,r2){return r1.end.getTime()>r2.start.getTime()&&r1.start.getTime()<=r2.start.getTime()||r1.start.getTime()<r2.end.getTime()&&r1.start.getTime()>=r2.start.getTime();};var collapseOverlapping=function collapseOverlapping(r1,r2,T){return {start:new T(Math.max(r1.start.getTime(),r2.start.getTime())),end:new T(Math.min(r1.end.getTime(),r2.end.getTime()))};};var innerCollapse=function innerCollapse(ranges,T){if(ranges.length===1){return false;}for(var i=0;i<ranges.length;i++){var r1=ranges[i];for(var j=i+1;j<ranges.length;j++){var r2=ranges[j];if(isOverlapping(r1,r2)){ranges.splice(i,1);ranges.splice(j-1,1);ranges.push(collapseOverlapping(r1,r2,T));return true;}}}return false;};var collapse=function collapse(ranges,T){var r=ranges.slice(0);while(innerCollapse(r,T)){}r.sort(function(a,b){return a.start.getTime()-b.start.getTime();});return r;};var timexConstraintsHelper={collapse:collapse,isOverlapping:isOverlapping};// Copyright (c) Microsoft Corporation. All rights reserved.
	var Time$2=time.Time;var TimexProperty$3=timexProperty.TimexProperty;var resolveDefiniteAgainstConstraint=function resolveDefiniteAgainstConstraint(timex,constraint){var timexDate=timexHelpers.dateFromTimex(timex);if(timexDate.getTime()>=constraint.start.getTime()&&timexDate.getTime()<constraint.end.getTime()){return [timex.timex];}return [];};var resolveDateAgainstConstraint=function resolveDateAgainstConstraint(timex,constraint){if('month'in timex&&'dayOfMonth'in timex){var result=[];for(var year=constraint.start.getFullYear();year<=constraint.end.getFullYear();year++){var r=resolveDefiniteAgainstConstraint(new TimexProperty$3(Object.assign({},timex,{year:year})),constraint);if(r.length>0){result.push(r[0]);}}return result;}if('dayOfWeek'in timex){var day=timex.dayOfWeek===7?0:timex.dayOfWeek;var dates=timexDateHelpers.datesMatchingDay(day,constraint.start,constraint.end);var _result4=[];var _iteratorNormalCompletion59=true;var _didIteratorError59=false;var _iteratorError59=undefined;try{for(var _iterator59=dates[Symbol.iterator](),_step59;!(_iteratorNormalCompletion59=(_step59=_iterator59.next()).done);_iteratorNormalCompletion59=true){var d=_step59.value;var t=Object.assign({},timex);delete t.dayOfWeek;var _r=new TimexProperty$3(Object.assign({},t,{year:d.getFullYear(),month:d.getMonth()+1,dayOfMonth:d.getDate()}));_result4.push(_r.timex);}}catch(err){_didIteratorError59=true;_iteratorError59=err;}finally{try{if(!_iteratorNormalCompletion59&&_iterator59.return){_iterator59.return();}}finally{if(_didIteratorError59){throw _iteratorError59;}}}return _result4;}return [];};var resolveDate=function resolveDate(timex,constraints){var result=[];var _iteratorNormalCompletion60=true;var _didIteratorError60=false;var _iteratorError60=undefined;try{for(var _iterator60=constraints[Symbol.iterator](),_step60;!(_iteratorNormalCompletion60=(_step60=_iterator60.next()).done);_iteratorNormalCompletion60=true){var constraint=_step60.value;Array.prototype.push.apply(result,resolveDateAgainstConstraint(timex,constraint));}}catch(err){_didIteratorError60=true;_iteratorError60=err;}finally{try{if(!_iteratorNormalCompletion60&&_iterator60.return){_iterator60.return();}}finally{if(_didIteratorError60){throw _iteratorError60;}}}return result;};var resolveTimeAgainstConstraint=function resolveTimeAgainstConstraint(timex,constraint){var t=new Time$2(timex.hour,timex.minute,timex.second);if(t.getTime()>=constraint.start.getTime()&&t.getTime()<constraint.end.getTime()){return [timex.timex];}return [];};var resolveTime=function resolveTime(timex,constraints){var result=[];var _iteratorNormalCompletion61=true;var _didIteratorError61=false;var _iteratorError61=undefined;try{for(var _iterator61=constraints[Symbol.iterator](),_step61;!(_iteratorNormalCompletion61=(_step61=_iterator61.next()).done);_iteratorNormalCompletion61=true){var constraint=_step61.value;Array.prototype.push.apply(result,resolveTimeAgainstConstraint(timex,constraint));}}catch(err){_didIteratorError61=true;_iteratorError61=err;}finally{try{if(!_iteratorNormalCompletion61&&_iterator61.return){_iterator61.return();}}finally{if(_didIteratorError61){throw _iteratorError61;}}}return result;};var removeDuplicates=function removeDuplicates(array){var seen=new Set();return array.filter(function(item){return seen.has(item)?false:seen.add(item);});};var resolveByDateRangeConstraints=function resolveByDateRangeConstraints(candidates,timexConstraints){var dateRangeConstraints=timexConstraints.filter(function(timex){return timex.types.has('daterange');}).map(function(timex){return timexHelpers.dateRangeFromTimex(timex);});var collapsedDateRanges=timexConstraintsHelper.collapse(dateRangeConstraints,Date);if(collapsedDateRanges.length===0){return candidates;}var resolution=[];var _iteratorNormalCompletion62=true;var _didIteratorError62=false;var _iteratorError62=undefined;try{for(var _iterator62=candidates[Symbol.iterator](),_step62;!(_iteratorNormalCompletion62=(_step62=_iterator62.next()).done);_iteratorNormalCompletion62=true){var timex=_step62.value;var r=resolveDate(new TimexProperty$3(timex),collapsedDateRanges);Array.prototype.push.apply(resolution,r);}}catch(err){_didIteratorError62=true;_iteratorError62=err;}finally{try{if(!_iteratorNormalCompletion62&&_iterator62.return){_iterator62.return();}}finally{if(_didIteratorError62){throw _iteratorError62;}}}return removeDuplicates(resolution);};var resolveByTimeConstraints=function resolveByTimeConstraints(candidates,timexConstraints){var times=timexConstraints.filter(function(timex){return timex.types.has('time');}).map(function(timex){return timexHelpers.timeFromTimex(timex);});if(times.length===0){return candidates;}var resolution=[];var _iteratorNormalCompletion63=true;var _didIteratorError63=false;var _iteratorError63=undefined;try{for(var _iterator63=candidates.map(function(t){return new TimexProperty$3(t);})[Symbol.iterator](),_step63;!(_iteratorNormalCompletion63=(_step63=_iterator63.next()).done);_iteratorNormalCompletion63=true){var timex=_step63.value;if(timex.types.has('date')&&!timex.types.has('time')){var _iteratorNormalCompletion64=true;var _didIteratorError64=false;var _iteratorError64=undefined;try{for(var _iterator64=times[Symbol.iterator](),_step64;!(_iteratorNormalCompletion64=(_step64=_iterator64.next()).done);_iteratorNormalCompletion64=true){var time$$2=_step64.value;timex.hour=time$$2.hour;timex.minute=time$$2.minute;timex.second=time$$2.second;resolution.push(timex.timex);}}catch(err){_didIteratorError64=true;_iteratorError64=err;}finally{try{if(!_iteratorNormalCompletion64&&_iterator64.return){_iterator64.return();}}finally{if(_didIteratorError64){throw _iteratorError64;}}}}else {resolution.push(timex.timex);}}}catch(err){_didIteratorError63=true;_iteratorError63=err;}finally{try{if(!_iteratorNormalCompletion63&&_iterator63.return){_iterator63.return();}}finally{if(_didIteratorError63){throw _iteratorError63;}}}return removeDuplicates(resolution);};var resolveByTimeRangeConstraints=function resolveByTimeRangeConstraints(candidates,timexConstraints){var timeRangeConstraints=timexConstraints.filter(function(timex){return timex.types.has('timerange');}).map(function(timex){return timexHelpers.timeRangeFromTimex(timex);});var collapsedTimeRanges=timexConstraintsHelper.collapse(timeRangeConstraints,Time$2);if(collapsedTimeRanges.length===0){return candidates;}var resolution=[];var _iteratorNormalCompletion65=true;var _didIteratorError65=false;var _iteratorError65=undefined;try{for(var _iterator65=candidates[Symbol.iterator](),_step65;!(_iteratorNormalCompletion65=(_step65=_iterator65.next()).done);_iteratorNormalCompletion65=true){var timex=_step65.value;var t=new TimexProperty$3(timex);if(t.types.has('timerange')){var r=resolveTimeRange(t,collapsedTimeRanges);Array.prototype.push.apply(resolution,r);}else if(t.types.has('time')){var _r2=resolveTime(t,collapsedTimeRanges);Array.prototype.push.apply(resolution,_r2);}}}catch(err){_didIteratorError65=true;_iteratorError65=err;}finally{try{if(!_iteratorNormalCompletion65&&_iterator65.return){_iterator65.return();}}finally{if(_didIteratorError65){throw _iteratorError65;}}}return removeDuplicates(resolution);};var resolveTimeRange=function resolveTimeRange(timex,constraints){var candidate=timexHelpers.timeRangeFromTimex(timex);var result=[];var _iteratorNormalCompletion66=true;var _didIteratorError66=false;var _iteratorError66=undefined;try{for(var _iterator66=constraints[Symbol.iterator](),_step66;!(_iteratorNormalCompletion66=(_step66=_iterator66.next()).done);_iteratorNormalCompletion66=true){var constraint=_step66.value;if(timexConstraintsHelper.isOverlapping(candidate,constraint)){var start=Math.max(candidate.start.getTime(),constraint.start.getTime());var time$$2=new Time$2(start);// TODO: refer to comments in C# - consider first classing this clone/overwrite behavior
	var resolved=new TimexProperty$3(timex.timex);delete resolved.partOfDay;delete resolved.seconds;delete resolved.minutes;delete resolved.hours;resolved.second=time$$2.second;resolved.minute=time$$2.minute;resolved.hour=time$$2.hour;result.push(resolved.timex);}}}catch(err){_didIteratorError66=true;_iteratorError66=err;}finally{try{if(!_iteratorNormalCompletion66&&_iterator66.return){_iterator66.return();}}finally{if(_didIteratorError66){throw _iteratorError66;}}}return result;};var resolveDuration=function resolveDuration(candidate,constraints){var results=[];var _iteratorNormalCompletion67=true;var _didIteratorError67=false;var _iteratorError67=undefined;try{for(var _iterator67=constraints[Symbol.iterator](),_step67;!(_iteratorNormalCompletion67=(_step67=_iterator67.next()).done);_iteratorNormalCompletion67=true){var constraint=_step67.value;if(constraint.types.has('datetime')){results.push(new TimexProperty$3(timexHelpers.timexDateTimeAdd(constraint,candidate)));}else if(constraint.types.has('time')){results.push(new TimexProperty$3(timexHelpers.timexTimeAdd(constraint,candidate)));}}}catch(err){_didIteratorError67=true;_iteratorError67=err;}finally{try{if(!_iteratorNormalCompletion67&&_iterator67.return){_iterator67.return();}}finally{if(_didIteratorError67){throw _iteratorError67;}}}return results;};var resolveDurations=function resolveDurations(candidates,constraints){var results=[];var _iteratorNormalCompletion68=true;var _didIteratorError68=false;var _iteratorError68=undefined;try{for(var _iterator68=candidates[Symbol.iterator](),_step68;!(_iteratorNormalCompletion68=(_step68=_iterator68.next()).done);_iteratorNormalCompletion68=true){var candidate=_step68.value;var timex=new TimexProperty$3(candidate);if(timex.types.has('duration')){var r=resolveDuration(timex,constraints);var _iteratorNormalCompletion69=true;var _didIteratorError69=false;var _iteratorError69=undefined;try{for(var _iterator69=r[Symbol.iterator](),_step69;!(_iteratorNormalCompletion69=(_step69=_iterator69.next()).done);_iteratorNormalCompletion69=true){var resolved=_step69.value;results.push(resolved.timex);}}catch(err){_didIteratorError69=true;_iteratorError69=err;}finally{try{if(!_iteratorNormalCompletion69&&_iterator69.return){_iterator69.return();}}finally{if(_didIteratorError69){throw _iteratorError69;}}}}else {results.push(candidate);}}}catch(err){_didIteratorError68=true;_iteratorError68=err;}finally{try{if(!_iteratorNormalCompletion68&&_iterator68.return){_iterator68.return();}}finally{if(_didIteratorError68){throw _iteratorError68;}}}return results;};var evaluate=function evaluate(candidates,constraints){var timexConstraints=constraints.map(function(x){return new TimexProperty$3(x);});var candidatesWithDurationsResolved=resolveDurations(candidates,timexConstraints);var candidatesAccordingToDate=resolveByDateRangeConstraints(candidatesWithDurationsResolved,timexConstraints);var candidatesWithAddedTime=resolveByTimeConstraints(candidatesAccordingToDate,timexConstraints);var candidatesFilteredByTime=resolveByTimeRangeConstraints(candidatesWithAddedTime,timexConstraints);var timexResults=candidatesFilteredByTime.map(function(x){return new TimexProperty$3(x);});return timexResults;};var timexRangeResolver={evaluate:evaluate};// Copyright (c) Microsoft Corporation. All rights reserved.
	var datatypesDateTime={Time:time.Time,TimexProperty:timexProperty.TimexProperty,TimexSet:timexSet.TimexSet,creator:timexCreator,resolver:timexRangeResolver};var datatypesDateTime_1=datatypesDateTime.Time;var datatypesDateTime_2=datatypesDateTime.TimexProperty;var datatypesDateTime_3=datatypesDateTime.TimexSet;var datatypesDateTime_4=datatypesDateTime.creator;var datatypesDateTime_5=datatypesDateTime.resolver;exports['default']=datatypesDateTime;exports.Time=datatypesDateTime_1;exports.TimexProperty=datatypesDateTime_2;exports.TimexSet=datatypesDateTime_3;exports.creator=datatypesDateTime_4;exports.resolver=datatypesDateTime_5;return exports;}({});},{}],214:[function(require,module,exports){var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var assert=require("assert");var Decorators_1=require("./Decorators");var IntStream_1=require("./IntStream");/**
	 * Vacuum all input from a {@link Reader}/{@link InputStream} and then treat it
	 * like a `char[]` buffer. Can also pass in a {@link String} or
	 * `char[]` to use.
	 *
	 * If you need encoding, pass in stream/reader with correct encoding.
	 *
	 * @deprecated as of 4.7, please use `CharStreams` interface.
	 */var ANTLRInputStream=function(){/** Copy data in string to a local char array */function ANTLRInputStream(input){classCallCheck(this,ANTLRInputStream);/** 0..n-1 index into string of next char */this.p=0;this.data=input;this.n=input.length;}/** Reset the stream so that it's in the same state it was
	     *  when the object was created *except* the data array is not
	     *  touched.
	     */createClass(ANTLRInputStream,[{key:'reset',value:function reset(){this.p=0;}},{key:'consume',value:function consume(){if(this.p>=this.n){assert(this.LA(1)===IntStream_1.IntStream.EOF);throw new Error("cannot consume EOF");}//System.out.println("prev p="+p+", c="+(char)data[p]);
	if(this.p<this.n){this.p++;//System.out.println("p moves to "+p+" (c='"+(char)data[p]+"')");
	}}},{key:'LA',value:function LA(i){if(i===0){return 0;// undefined
	}if(i<0){i++;// e.g., translate LA(-1) to use offset i=0; then data[p+0-1]
	if(this.p+i-1<0){return IntStream_1.IntStream.EOF;// invalid; no char before first char
	}}if(this.p+i-1>=this.n){//System.out.println("char LA("+i+")=EOF; p="+p);
	return IntStream_1.IntStream.EOF;}//System.out.println("char LA("+i+")="+(char)data[p+i-1]+"; p="+p);
	//System.out.println("LA("+i+"); p="+p+" n="+n+" data.length="+data.length);
	return this.data.charCodeAt(this.p+i-1);}},{key:'LT',value:function LT(i){return this.LA(i);}/** Return the current input symbol index 0..n where n indicates the
	     *  last symbol has been read.  The index is the index of char to
	     *  be returned from LA(1).
	     */},{key:'mark',/** mark/release do nothing; we have entire buffer */value:function mark(){return -1;}},{key:'release',value:function release(marker){}// No default implementation since this stream buffers the entire input
	/** consume() ahead until p==index; can't just set p=index as we must
	     *  update line and charPositionInLine. If we seek backwards, just set p
	     */},{key:'seek',value:function seek(index){if(index<=this.p){this.p=index;// just jump; don't update stream state (line, ...)
	return;}// seek forward, consume until p hits index or n (whichever comes first)
	index=Math.min(index,this.n);while(this.p<index){this.consume();}}},{key:'getText',value:function getText(interval){var start=interval.a;var stop=interval.b;if(stop>=this.n){stop=this.n-1;}var count=stop-start+1;if(start>=this.n){return "";}// System.err.println("data: "+Arrays.toString(data)+", n="+n+
	// 				   ", start="+start+
	// 				   ", stop="+stop);
	return this.data.substr(start,count);}},{key:'toString',value:function toString(){return this.data;}},{key:'index',get:function get(){return this.p;}},{key:'size',get:function get(){return this.n;}},{key:'sourceName',get:function get(){if(!this.name){return IntStream_1.IntStream.UNKNOWN_SOURCE_NAME;}return this.name;}}]);return ANTLRInputStream;}();__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"consume",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"LA",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"index",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"size",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"mark",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"release",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"seek",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"getText",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"sourceName",null);__decorate([Decorators_1.Override],ANTLRInputStream.prototype,"toString",null);exports.ANTLRInputStream=ANTLRInputStream;},{"./Decorators":224,"./IntStream":230,"assert":364}],215:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:49.2855056-07:00
	var DefaultErrorStrategy_1=require("./DefaultErrorStrategy");var InputMismatchException_1=require("./InputMismatchException");var Decorators_1=require("./Decorators");var ParseCancellationException_1=require("./misc/ParseCancellationException");/**
	 * This implementation of {@link ANTLRErrorStrategy} responds to syntax errors
	 * by immediately canceling the parse operation with a
	 * {@link ParseCancellationException}. The implementation ensures that the
	 * {@link ParserRuleContext#exception} field is set for all parse tree nodes
	 * that were not completed prior to encountering the error.
	 *
	 * This error strategy is useful in the following scenarios.
	 *
	 * * **Two-stage parsing:** This error strategy allows the first
	 *   stage of two-stage parsing to immediately terminate if an error is
	 *   encountered, and immediately fall back to the second stage. In addition to
	 *   avoiding wasted work by attempting to recover from errors here, the empty
	 *   implementation of {@link BailErrorStrategy#sync} improves the performance of
	 *   the first stage.
	 * * **Silent validation:** When syntax errors are not being
	 *   reported or logged, and the parse result is simply ignored if errors occur,
	 *   the {@link BailErrorStrategy} avoids wasting work on recovering from errors
	 *   when the result will be ignored either way.
	 *
	 * ```
	 * myparser.errorHandler = new BailErrorStrategy();
	 * ```
	 *
	 * @see Parser.errorHandler
	 */var BailErrorStrategy=function(_DefaultErrorStrategy){inherits(BailErrorStrategy,_DefaultErrorStrategy);function BailErrorStrategy(){classCallCheck(this,BailErrorStrategy);return possibleConstructorReturn(this,(BailErrorStrategy.__proto__||Object.getPrototypeOf(BailErrorStrategy)).apply(this,arguments));}createClass(BailErrorStrategy,[{key:'recover',/** Instead of recovering from exception `e`, re-throw it wrapped
	     *  in a {@link ParseCancellationException} so it is not caught by the
	     *  rule function catches.  Use {@link Exception#getCause()} to get the
	     *  original {@link RecognitionException}.
	     */value:function recover(recognizer,e){for(var context=recognizer.context;context;context=context.parent){context.exception=e;}throw new ParseCancellationException_1.ParseCancellationException(e);}/** Make sure we don't attempt to recover inline; if the parser
	     *  successfully recovers, it won't throw an exception.
	     */},{key:'recoverInline',value:function recoverInline(recognizer){var e=new InputMismatchException_1.InputMismatchException(recognizer);for(var context=recognizer.context;context;context=context.parent){context.exception=e;}throw new ParseCancellationException_1.ParseCancellationException(e);}/** Make sure we don't attempt to recover from problems in subrules. */},{key:'sync',value:function sync(recognizer){// intentionally empty
	}}]);return BailErrorStrategy;}(DefaultErrorStrategy_1.DefaultErrorStrategy);__decorate([Decorators_1.Override],BailErrorStrategy.prototype,"recover",null);__decorate([Decorators_1.Override],BailErrorStrategy.prototype,"recoverInline",null);__decorate([Decorators_1.Override],BailErrorStrategy.prototype,"sync",null);exports.BailErrorStrategy=BailErrorStrategy;},{"./Decorators":224,"./DefaultErrorStrategy":225,"./InputMismatchException":229,"./misc/ParseCancellationException":335}],216:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:49.6074365-07:00
	var assert=require("assert");var CommonToken_1=require("./CommonToken");var Interval_1=require("./misc/Interval");var Lexer_1=require("./Lexer");var Decorators_1=require("./Decorators");var Token_1=require("./Token");/**
	 * This implementation of {@link TokenStream} loads tokens from a
	 * {@link TokenSource} on-demand, and places the tokens in a buffer to provide
	 * access to any previous token by index.
	 *
	 * This token stream ignores the value of {@link Token#getChannel}. If your
	 * parser requires the token stream filter tokens to only those on a particular
	 * channel, such as {@link Token#DEFAULT_CHANNEL} or
	 * {@link Token#HIDDEN_CHANNEL}, use a filtering token stream such a
	 * {@link CommonTokenStream}.
	 */var BufferedTokenStream=function(){function BufferedTokenStream(tokenSource){classCallCheck(this,BufferedTokenStream);/**
	         * A collection of all tokens fetched from the token source. The list is
	         * considered a complete view of the input once {@link #fetchedEOF} is set
	         * to `true`.
	         */this.tokens=[];/**
	         * The index into {@link #tokens} of the current token (next token to
	         * {@link #consume}). {@link #tokens}`[`{@link #p}`]` should be
	         * {@link #LT LT(1)}.
	         *
	         * This field is set to -1 when the stream is first constructed or when
	         * {@link #setTokenSource} is called, indicating that the first token has
	         * not yet been fetched from the token source. For additional information,
	         * see the documentation of {@link IntStream} for a description of
	         * Initializing Methods.
	         */this.p=-1;/**
	         * Indicates whether the {@link Token#EOF} token has been fetched from
	         * {@link #tokenSource} and added to {@link #tokens}. This field improves
	         * performance for the following cases:
	         *
	         * * {@link #consume}: The lookahead check in {@link #consume} to prevent
	         *   consuming the EOF symbol is optimized by checking the values of
	         *   {@link #fetchedEOF} and {@link #p} instead of calling {@link #LA}.
	         * * {@link #fetch}: The check to prevent adding multiple EOF symbols into
	         *   {@link #tokens} is trivial with this field.
	         */this.fetchedEOF=false;if(tokenSource==null){throw new Error("tokenSource cannot be null");}this._tokenSource=tokenSource;}createClass(BufferedTokenStream,[{key:'mark',value:function mark(){return 0;}},{key:'release',value:function release(marker){// no resources to release
	}},{key:'seek',value:function seek(index){this.lazyInit();this.p=this.adjustSeekIndex(index);}},{key:'consume',value:function consume(){var skipEofCheck=void 0;if(this.p>=0){if(this.fetchedEOF){// the last token in tokens is EOF. skip check if p indexes any
	// fetched token except the last.
	skipEofCheck=this.p<this.tokens.length-1;}else {// no EOF token in tokens. skip check if p indexes a fetched token.
	skipEofCheck=this.p<this.tokens.length;}}else {// not yet initialized
	skipEofCheck=false;}if(!skipEofCheck&&this.LA(1)===Token_1.Token.EOF){throw new Error("cannot consume EOF");}if(this.sync(this.p+1)){this.p=this.adjustSeekIndex(this.p+1);}}/** Make sure index `i` in tokens has a token.
	     *
	     * @returns `true` if a token is located at index `i`, otherwise
	     *    `false`.
	     * @see #get(int i)
	     */},{key:'sync',value:function sync(i){assert(i>=0);var n=i-this.tokens.length+1;// how many more elements we need?
	//System.out.println("sync("+i+") needs "+n);
	if(n>0){var fetched=this.fetch(n);return fetched>=n;}return true;}/** Add `n` elements to buffer.
	     *
	     * @returns The actual number of elements added to the buffer.
	     */},{key:'fetch',value:function fetch(n){if(this.fetchedEOF){return 0;}for(var i=0;i<n;i++){var t=this.tokenSource.nextToken();if(this.isWritableToken(t)){t.tokenIndex=this.tokens.length;}this.tokens.push(t);if(t.type===Token_1.Token.EOF){this.fetchedEOF=true;return i+1;}}return n;}},{key:'get',value:function get(i){if(i<0||i>=this.tokens.length){throw new RangeError("token index "+i+" out of range 0.."+(this.tokens.length-1));}return this.tokens[i];}/** Get all tokens from start..stop inclusively. */},{key:'getRange',value:function getRange(start,stop){if(start<0||stop<0){return [];}this.lazyInit();var subset=new Array();if(stop>=this.tokens.length){stop=this.tokens.length-1;}for(var i=start;i<=stop;i++){var t=this.tokens[i];if(t.type===Token_1.Token.EOF){break;}subset.push(t);}return subset;}},{key:'LA',value:function LA(i){var token=this.LT(i);if(!token){return Token_1.Token.INVALID_TYPE;}return token.type;}},{key:'tryLB',value:function tryLB(k){if(this.p-k<0){return undefined;}return this.tokens[this.p-k];}},{key:'LT',value:function LT(k){var result=this.tryLT(k);if(result===undefined){throw new RangeError("requested lookback index out of range");}return result;}},{key:'tryLT',value:function tryLT(k){this.lazyInit();if(k===0){throw new RangeError("0 is not a valid lookahead index");}if(k<0){return this.tryLB(-k);}var i=this.p+k-1;this.sync(i);if(i>=this.tokens.length){// return EOF token
	// EOF must be last token
	return this.tokens[this.tokens.length-1];}//		if ( i>range ) range = i;
	return this.tokens[i];}/**
	     * Allowed derived classes to modify the behavior of operations which change
	     * the current stream position by adjusting the target token index of a seek
	     * operation. The default implementation simply returns `i`. If an
	     * exception is thrown in this method, the current stream index should not be
	     * changed.
	     *
	     * For example, {@link CommonTokenStream} overrides this method to ensure that
	     * the seek target is always an on-channel token.
	     *
	     * @param i The target token index.
	     * @returns The adjusted target token index.
	     */},{key:'adjustSeekIndex',value:function adjustSeekIndex(i){return i;}},{key:'lazyInit',value:function lazyInit(){if(this.p===-1){this.setup();}}},{key:'setup',value:function setup(){this.sync(0);this.p=this.adjustSeekIndex(0);}/** Given a start and stop index, return a `List` of all tokens in
	     *  the token type `BitSet`.  Return an empty array if no tokens were found.  This
	     *  method looks at both on and off channel tokens.
	     */},{key:'getTokens',value:function getTokens(start,stop,types){this.lazyInit();if(start===undefined){assert(stop===undefined&&types===undefined);return this.tokens;}else if(stop===undefined){stop=this.tokens.length-1;}if(start<0||stop>=this.tokens.length||stop<0||start>=this.tokens.length){throw new RangeError("start "+start+" or stop "+stop+" not in 0.."+(this.tokens.length-1));}if(start>stop){return [];}if(types===undefined){return this.tokens.slice(start,stop+1);}else if(typeof types==="number"){types=new Set().add(types);}var typesSet=types;// list = tokens[start:stop]:{T t, t.type in types}
	var filteredTokens=this.tokens.slice(start,stop+1);filteredTokens=filteredTokens.filter(function(value){return typesSet.has(value.type);});return filteredTokens;}/**
	     * Given a starting index, return the index of the next token on channel.
	     * Return `i` if `tokens[i]` is on channel. Return the index of
	     * the EOF token if there are no tokens on channel between `i` and
	     * EOF.
	     */},{key:'nextTokenOnChannel',value:function nextTokenOnChannel(i,channel){this.sync(i);if(i>=this.size){return this.size-1;}var token=this.tokens[i];while(token.channel!==channel){if(token.type===Token_1.Token.EOF){return i;}i++;this.sync(i);token=this.tokens[i];}return i;}/**
	     * Given a starting index, return the index of the previous token on
	     * channel. Return `i` if `tokens[i]` is on channel. Return -1
	     * if there are no tokens on channel between `i` and 0.
	     *
	     * If `i` specifies an index at or after the EOF token, the EOF token
	     * index is returned. This is due to the fact that the EOF token is treated
	     * as though it were on every channel.
	     */},{key:'previousTokenOnChannel',value:function previousTokenOnChannel(i,channel){this.sync(i);if(i>=this.size){// the EOF token is on every channel
	return this.size-1;}while(i>=0){var token=this.tokens[i];if(token.type===Token_1.Token.EOF||token.channel===channel){return i;}i--;}return i;}/** Collect all tokens on specified channel to the right of
	     *  the current token up until we see a token on {@link Lexer#DEFAULT_TOKEN_CHANNEL} or
	     *  EOF. If `channel` is `-1`, find any non default channel token.
	     */},{key:'getHiddenTokensToRight',value:function getHiddenTokensToRight(tokenIndex){var channel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;this.lazyInit();if(tokenIndex<0||tokenIndex>=this.tokens.length){throw new RangeError(tokenIndex+" not in 0.."+(this.tokens.length-1));}var nextOnChannel=this.nextTokenOnChannel(tokenIndex+1,Lexer_1.Lexer.DEFAULT_TOKEN_CHANNEL);var to=void 0;var from=tokenIndex+1;// if none onchannel to right, nextOnChannel=-1 so set to = last token
	if(nextOnChannel===-1){to=this.size-1;}else {to=nextOnChannel;}return this.filterForChannel(from,to,channel);}/** Collect all tokens on specified channel to the left of
	     *  the current token up until we see a token on {@link Lexer#DEFAULT_TOKEN_CHANNEL}.
	     *  If `channel` is `-1`, find any non default channel token.
	     */},{key:'getHiddenTokensToLeft',value:function getHiddenTokensToLeft(tokenIndex){var channel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;this.lazyInit();if(tokenIndex<0||tokenIndex>=this.tokens.length){throw new RangeError(tokenIndex+" not in 0.."+(this.tokens.length-1));}if(tokenIndex===0){// obviously no tokens can appear before the first token
	return [];}var prevOnChannel=this.previousTokenOnChannel(tokenIndex-1,Lexer_1.Lexer.DEFAULT_TOKEN_CHANNEL);if(prevOnChannel===tokenIndex-1){return [];}// if none onchannel to left, prevOnChannel=-1 then from=0
	var from=prevOnChannel+1;var to=tokenIndex-1;return this.filterForChannel(from,to,channel);}},{key:'filterForChannel',value:function filterForChannel(from,to,channel){var hidden=new Array();for(var i=from;i<=to;i++){var t=this.tokens[i];if(channel===-1){if(t.channel!==Lexer_1.Lexer.DEFAULT_TOKEN_CHANNEL){hidden.push(t);}}else {if(t.channel===channel){hidden.push(t);}}}return hidden;}},{key:'getText',value:function getText(interval){if(interval===undefined){interval=Interval_1.Interval.of(0,this.size-1);}else if(!(interval instanceof Interval_1.Interval)){// Note: the more obvious check for 'instanceof RuleContext' results in a circular dependency problem
	interval=interval.sourceInterval;}var start=interval.a;var stop=interval.b;if(start<0||stop<0){return "";}this.fill();if(stop>=this.tokens.length){stop=this.tokens.length-1;}var buf="";for(var i=start;i<=stop;i++){var t=this.tokens[i];if(t.type===Token_1.Token.EOF){break;}buf+=t.text;}return buf.toString();}},{key:'getTextFromRange',value:function getTextFromRange(start,stop){if(this.isToken(start)&&this.isToken(stop)){return this.getText(Interval_1.Interval.of(start.tokenIndex,stop.tokenIndex));}return "";}/** Get all tokens from lexer until EOF. */},{key:'fill',value:function fill(){this.lazyInit();var blockSize=1000;while(true){var fetched=this.fetch(blockSize);if(fetched<blockSize){return;}}}// TODO: Figure out a way to make this more flexible?
	},{key:'isWritableToken',value:function isWritableToken(t){return t instanceof CommonToken_1.CommonToken;}// TODO: Figure out a way to make this more flexible?
	},{key:'isToken',value:function isToken(t){return t instanceof CommonToken_1.CommonToken;}},{key:'tokenSource',get:function get(){return this._tokenSource;}/** Reset this token stream by setting its token source. */,set:function set(tokenSource){this._tokenSource=tokenSource;this.tokens.length=0;this.p=-1;this.fetchedEOF=false;}},{key:'index',get:function get(){return this.p;}},{key:'size',get:function get(){return this.tokens.length;}},{key:'sourceName',get:function get(){return this.tokenSource.sourceName;}}]);return BufferedTokenStream;}();__decorate([Decorators_1.NotNull],BufferedTokenStream.prototype,"_tokenSource",void 0);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"tokenSource",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"index",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"mark",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"release",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"seek",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"size",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"consume",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"get",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"LA",null);__decorate([Decorators_1.NotNull,Decorators_1.Override],BufferedTokenStream.prototype,"LT",null);__decorate([Decorators_1.Override],BufferedTokenStream.prototype,"sourceName",null);__decorate([Decorators_1.NotNull,Decorators_1.Override],BufferedTokenStream.prototype,"getText",null);__decorate([Decorators_1.NotNull,Decorators_1.Override],BufferedTokenStream.prototype,"getTextFromRange",null);BufferedTokenStream=__decorate([__param(0,Decorators_1.NotNull)],BufferedTokenStream);exports.BufferedTokenStream=BufferedTokenStream;},{"./CommonToken":220,"./Decorators":224,"./Lexer":232,"./Token":248,"./misc/Interval":330,"assert":364}],217:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var CodePointBuffer_1=require("./CodePointBuffer");var CodePointCharStream_1=require("./CodePointCharStream");var IntStream_1=require("./IntStream");// const DEFAULT_BUFFER_SIZE: number = 4096;
	(function(CharStreams){// /**
	//  * Creates a {@link CharStream} given a path to a UTF-8
	//  * encoded file on disk.
	//  *
	//  * Reads the entire contents of the file into the result before returning.
	//  */
	// export function fromFile(file: File): CharStream;
	// export function fromFile(file: File, charset: Charset): CharStream;
	// export function fromFile(file: File, charset?: Charset): CharStream {
	// 	if (charset === undefined) {
	// 		charset = Charset.forName("UTF-8");
	// 	}
	function fromString(s,sourceName){if(sourceName===undefined||sourceName.length===0){sourceName=IntStream_1.IntStream.UNKNOWN_SOURCE_NAME;}// Initial guess assumes no code points > U+FFFF: one code
	// point for each code unit in the string
	var codePointBufferBuilder=CodePointBuffer_1.CodePointBuffer.builder(s.length);// TODO: CharBuffer.wrap(String) rightfully returns a read-only buffer
	// which doesn't expose its array, so we make a copy.
	var cb=new Uint16Array(s.length);for(var i=0;i<s.length;i++){cb[i]=s.charCodeAt(i);}codePointBufferBuilder.append(cb);return CodePointCharStream_1.CodePointCharStream.fromBuffer(codePointBufferBuilder.build(),sourceName);}CharStreams.fromString=fromString;// export function bufferFromChannel(
	// 	channel: ReadableByteChannel,
	// 	charset: Charset,
	// 	bufferSize: number,
	// 	decodingErrorAction: CodingErrorAction,
	// 	inputSize: number): CodePointBuffer {
	// 	try {
	// 		let utf8BytesIn: Uint8Array = new Uint8Array(bufferSize);
	// 		let utf16CodeUnitsOut: Uint16Array = new Uint16Array(bufferSize);
	// 		if (inputSize === -1) {
	// 			inputSize = bufferSize;
	// 		} else if (inputSize > Integer.MAX_VALUE) {
	// 			// ByteBuffer et al don't support long sizes
	// 			throw new RangeError(`inputSize ${inputSize} larger than max ${Integer.MAX_VALUE}`);
	// 		}
	// 		let codePointBufferBuilder: CodePointBuffer.Builder = CodePointBuffer.builder(inputSize);
	// 		let decoder: CharsetDecoder = charset
	// 				.newDecoder()
	// 				.onMalformedInput(decodingErrorAction)
	// 				.onUnmappableCharacter(decodingErrorAction);
	// 		let endOfInput: boolean = false;
	// 		while (!endOfInput) {
	// 			let bytesRead: number = channel.read(utf8BytesIn);
	// 			endOfInput = (bytesRead === -1);
	// 			utf8BytesIn.flip();
	// 			let result: CoderResult = decoder.decode(
	// 				utf8BytesIn,
	// 				utf16CodeUnitsOut,
	// 				endOfInput);
	// 			if (result.isError() && decodingErrorAction === CodingErrorAction.REPORT) {
	// 				result.throwException();
	// 			}
	// 			utf16CodeUnitsOut.flip();
	// 			codePointBufferBuilder.append(utf16CodeUnitsOut);
	// 			utf8BytesIn.compact();
	// 			utf16CodeUnitsOut.compact();
	// 		}
	// 		// Handle any bytes at the end of the file which need to
	// 		// be represented as errors or substitution characters.
	// 		let flushResult: CoderResult = decoder.flush(utf16CodeUnitsOut);
	// 		if (flushResult.isError() && decodingErrorAction === CodingErrorAction.REPORT) {
	// 			flushResult.throwException();
	// 		}
	// 		utf16CodeUnitsOut.flip();
	// 		codePointBufferBuilder.append(utf16CodeUnitsOut);
	// 		return codePointBufferBuilder.build();
	// 	}
	// 	finally {
	// 		channel.close();
	// 	}
	// }
	})(exports.CharStreams||(exports.CharStreams={}));},{"./CodePointBuffer":218,"./CodePointCharStream":219,"./IntStream":230}],218:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var assert=require("assert");var Character=require("./misc/Character");/**
	 * Wrapper for `Uint8Array` / `Uint16Array` / `Int32Array`.
	 */var CodePointBuffer=function(){function CodePointBuffer(buffer,size){classCallCheck(this,CodePointBuffer);this.buffer=buffer;this._position=0;this._size=size;}createClass(CodePointBuffer,[{key:'get',value:function get(offset){return this.buffer[offset];}},{key:'array',value:function array(){return this.buffer.slice(0,this._size);}},{key:'position',get:function get(){return this._position;},set:function set(newPosition){if(newPosition<0||newPosition>this._size){throw new RangeError();}this._position=newPosition;}},{key:'remaining',get:function get(){return this._size-this.position;}}],[{key:'withArray',value:function withArray(buffer){return new CodePointBuffer(buffer,buffer.length);}},{key:'builder',value:function builder(initialBufferSize){return new CodePointBuffer.Builder(initialBufferSize);}}]);return CodePointBuffer;}();exports.CodePointBuffer=CodePointBuffer;(function(CodePointBuffer){var Type=void 0;(function(Type){Type[Type["BYTE"]=0]="BYTE";Type[Type["CHAR"]=1]="CHAR";Type[Type["INT"]=2]="INT";})(Type||(Type={}));var Builder=function(){function Builder(initialBufferSize){classCallCheck(this,Builder);this.type=0/* BYTE */;this.buffer=new Uint8Array(initialBufferSize);this.prevHighSurrogate=-1;this.position=0;}createClass(Builder,[{key:'build',value:function build(){return new CodePointBuffer(this.buffer,this.position);}},{key:'ensureRemaining',value:function ensureRemaining(remainingNeeded){switch(this.type){case 0/* BYTE */:if(this.buffer.length-this.position<remainingNeeded){var newCapacity=Builder.roundUpToNextPowerOfTwo(this.buffer.length+remainingNeeded);var newBuffer=new Uint8Array(newCapacity);newBuffer.set(this.buffer.subarray(0,this.position),0);this.buffer=newBuffer;}break;case 1/* CHAR */:if(this.buffer.length-this.position<remainingNeeded){var _newCapacity=Builder.roundUpToNextPowerOfTwo(this.buffer.length+remainingNeeded);var _newBuffer=new Uint16Array(_newCapacity);_newBuffer.set(this.buffer.subarray(0,this.position),0);this.buffer=_newBuffer;}break;case 2/* INT */:if(this.buffer.length-this.position<remainingNeeded){var _newCapacity2=Builder.roundUpToNextPowerOfTwo(this.buffer.length+remainingNeeded);var _newBuffer2=new Int32Array(_newCapacity2);_newBuffer2.set(this.buffer.subarray(0,this.position),0);this.buffer=_newBuffer2;}break;}}},{key:'append',value:function append(utf16In){this.ensureRemaining(utf16In.length);this.appendArray(utf16In);}},{key:'appendArray',value:function appendArray(utf16In){switch(this.type){case 0/* BYTE */:this.appendArrayByte(utf16In);break;case 1/* CHAR */:this.appendArrayChar(utf16In);break;case 2/* INT */:this.appendArrayInt(utf16In);break;}}},{key:'appendArrayByte',value:function appendArrayByte(utf16In){assert(this.prevHighSurrogate===-1);var input=utf16In;var inOffset=0;var inLimit=utf16In.length;var outByte=this.buffer;var outOffset=this.position;while(inOffset<inLimit){var c=input[inOffset];if(c<=0xFF){outByte[outOffset]=c;}else {utf16In=utf16In.subarray(inOffset,inLimit);this.position=outOffset;if(!Character.isHighSurrogate(c)){this.byteToCharBuffer(utf16In.length);this.appendArrayChar(utf16In);return;}else {this.byteToIntBuffer(utf16In.length);this.appendArrayInt(utf16In);return;}}inOffset++;outOffset++;}this.position=outOffset;}},{key:'appendArrayChar',value:function appendArrayChar(utf16In){assert(this.prevHighSurrogate===-1);var input=utf16In;var inOffset=0;var inLimit=utf16In.length;var outChar=this.buffer;var outOffset=this.position;while(inOffset<inLimit){var c=input[inOffset];if(!Character.isHighSurrogate(c)){outChar[outOffset]=c;}else {utf16In=utf16In.subarray(inOffset,inLimit);this.position=outOffset;this.charToIntBuffer(utf16In.length);this.appendArrayInt(utf16In);return;}inOffset++;outOffset++;}this.position=outOffset;}},{key:'appendArrayInt',value:function appendArrayInt(utf16In){var input=utf16In;var inOffset=0;var inLimit=utf16In.length;var outInt=this.buffer;var outOffset=this.position;while(inOffset<inLimit){var c=input[inOffset];inOffset++;if(this.prevHighSurrogate!==-1){if(Character.isLowSurrogate(c)){outInt[outOffset]=String.fromCharCode(this.prevHighSurrogate,c).codePointAt(0);outOffset++;this.prevHighSurrogate=-1;}else {// Dangling high surrogate
	outInt[outOffset]=this.prevHighSurrogate;outOffset++;if(Character.isHighSurrogate(c)){this.prevHighSurrogate=c;}else {outInt[outOffset]=c;outOffset++;this.prevHighSurrogate=-1;}}}else if(Character.isHighSurrogate(c)){this.prevHighSurrogate=c;}else {outInt[outOffset]=c;outOffset++;}}if(this.prevHighSurrogate!==-1){// Dangling high surrogate
	outInt[outOffset]=this.prevHighSurrogate;outOffset++;}this.position=outOffset;}},{key:'byteToCharBuffer',value:function byteToCharBuffer(toAppend){// CharBuffers hold twice as much per unit as ByteBuffers, so start with half the capacity.
	var newBuffer=new Uint16Array(Math.max(this.position+toAppend,this.buffer.length>>1));newBuffer.set(this.buffer.subarray(0,this.position),0);this.type=1/* CHAR */;this.buffer=newBuffer;}},{key:'byteToIntBuffer',value:function byteToIntBuffer(toAppend){// IntBuffers hold four times as much per unit as ByteBuffers, so start with one quarter the capacity.
	var newBuffer=new Int32Array(Math.max(this.position+toAppend,this.buffer.length>>2));newBuffer.set(this.buffer.subarray(0,this.position),0);this.type=2/* INT */;this.buffer=newBuffer;}},{key:'charToIntBuffer',value:function charToIntBuffer(toAppend){// IntBuffers hold two times as much per unit as ByteBuffers, so start with one half the capacity.
	var newBuffer=new Int32Array(Math.max(this.position+toAppend,this.buffer.length>>1));newBuffer.set(this.buffer.subarray(0,this.position),0);this.type=2/* INT */;this.buffer=newBuffer;}}],[{key:'roundUpToNextPowerOfTwo',value:function roundUpToNextPowerOfTwo(i){var nextPowerOfTwo=32-Math.clz32(i-1);return Math.pow(2,nextPowerOfTwo);}}]);return Builder;}();CodePointBuffer.Builder=Builder;})(CodePointBuffer=exports.CodePointBuffer||(exports.CodePointBuffer={}));},{"./misc/Character":326,"assert":364}],219:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var assert=require("assert");var IntStream_1=require("./IntStream");var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");/**
	 * Alternative to {@link ANTLRInputStream} which treats the input
	 * as a series of Unicode code points, instead of a series of UTF-16
	 * code units.
	 *
	 * Use this if you need to parse input which potentially contains
	 * Unicode values > U+FFFF.
	 */var CodePointCharStream=function(){// Use the factory method {@link #fromBuffer(CodePointBuffer)} to
	// construct instances of this type.
	function CodePointCharStream(array,position,remaining,name){classCallCheck(this,CodePointCharStream);// TODO
	assert(position===0);this._array=array;this._size=remaining;this._name=name;this._position=0;}createClass(CodePointCharStream,[{key:'consume',value:function consume(){if(this._size-this._position===0){assert(this.LA(1)===IntStream_1.IntStream.EOF);throw new RangeError("cannot consume EOF");}this._position++;}},{key:'mark',/** mark/release do nothing; we have entire buffer */value:function mark(){return -1;}},{key:'release',value:function release(marker){// No default implementation since this stream buffers the entire input
	}},{key:'seek',value:function seek(index){this._position=index;}},{key:'toString',value:function toString(){return this.getText(Interval_1.Interval.of(0,this.size-1));}},{key:'LA',value:function LA(i){var offset=void 0;switch(Math.sign(i)){case-1:offset=this.index+i;if(offset<0){return IntStream_1.IntStream.EOF;}return this._array[offset];case 0:// Undefined
	return 0;case 1:offset=this.index+i-1;if(offset>=this.size){return IntStream_1.IntStream.EOF;}return this._array[offset];}throw new RangeError("Not reached");}/** Return the UTF-16 encoded string for the given interval */},{key:'getText',value:function getText(interval){var startIdx=Math.min(interval.a,this.size);var len=Math.min(interval.b-interval.a+1,this.size-startIdx);if(this._array instanceof Int32Array){return String.fromCodePoint.apply(String,toConsumableArray(Array.from(this._array.subarray(startIdx,startIdx+len))));}else {return String.fromCharCode.apply(String,toConsumableArray(Array.from(this._array.subarray(startIdx,startIdx+len))));}}},{key:'internalStorage',get:function get(){return this._array;}},{key:'index',get:function get(){return this._position;}},{key:'size',get:function get(){return this._size;}},{key:'sourceName',get:function get(){return this._name;}}],[{key:'fromBuffer',value:function fromBuffer(codePointBuffer,name){if(name===undefined||name.length===0){name=IntStream_1.IntStream.UNKNOWN_SOURCE_NAME;}// Java lacks generics on primitive types.
	//
	// To avoid lots of calls to virtual methods in the
	// very hot codepath of LA() below, we construct one
	// of three concrete subclasses.
	//
	// The concrete subclasses directly access the code
	// points stored in the underlying array (byte[],
	// char[], or int[]), so we can avoid lots of virtual
	// method calls to ByteBuffer.get(offset).
	return new CodePointCharStream(codePointBuffer.array(),codePointBuffer.position,codePointBuffer.remaining,name);}}]);return CodePointCharStream;}();__decorate([Decorators_1.Override],CodePointCharStream.prototype,"consume",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"index",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"size",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"mark",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"release",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"seek",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"sourceName",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"toString",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"LA",null);__decorate([Decorators_1.Override],CodePointCharStream.prototype,"getText",null);exports.CodePointCharStream=CodePointCharStream;},{"./Decorators":224,"./IntStream":230,"./misc/Interval":330,"assert":364}],220:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");var Token_1=require("./Token");var CommonToken=function(){function CommonToken(type,text){var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:CommonToken.EMPTY_SOURCE;var channel=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Token_1.Token.DEFAULT_CHANNEL;var start=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var stop=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;classCallCheck(this,CommonToken);/**
	         * This is the backing field for {@link #getLine} and {@link #setLine}.
	         */this._line=0;/**
	         * This is the backing field for {@link #getCharPositionInLine} and
	         * {@link #setCharPositionInLine}.
	         */this._charPositionInLine=-1;// set to invalid position
	/**
	         * This is the backing field for {@link #getChannel} and
	         * {@link #setChannel}.
	         */this._channel=Token_1.Token.DEFAULT_CHANNEL;/**
	         * This is the backing field for `tokenIndex`.
	         */this.index=-1;this._text=text;this._type=type;this.source=source;this._channel=channel;this.start=start;this.stop=stop;if(source.source!=null){this._line=source.source.line;this._charPositionInLine=source.source.charPositionInLine;}}/**
	     * Constructs a new {@link CommonToken} as a copy of another {@link Token}.
	     *
	     * If `oldToken` is also a {@link CommonToken} instance, the newly
	     * constructed token will share a reference to the {@link #text} field and
	     * the {@link Tuple2} stored in {@link #source}. Otherwise, {@link #text} will
	     * be assigned the result of calling {@link #getText}, and {@link #source}
	     * will be constructed from the result of {@link Token#getTokenSource} and
	     * {@link Token#getInputStream}.
	     *
	     * @param oldToken The token to copy.
	     */createClass(CommonToken,[{key:'toString',value:function toString(recognizer){var channelStr="";if(this._channel>0){channelStr=",channel="+this._channel;}var txt=this.text;if(txt!=null){txt=txt.replace(/\n/g,"\\n");txt=txt.replace(/\r/g,"\\r");txt=txt.replace(/\t/g,"\\t");}else {txt="<no text>";}var typeString=String(this._type);if(recognizer){typeString=recognizer.vocabulary.getDisplayName(this._type);}return "[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+txt+"',<"+typeString+">"+channelStr+","+this._line+":"+this.charPositionInLine+"]";}},{key:'type',get:function get(){return this._type;}// @Override
	,set:function set(type){this._type=type;}},{key:'line',get:function get(){return this._line;}// @Override
	,set:function set(line){this._line=line;}},{key:'text',get:function get(){if(this._text!=null){return this._text;}var input=this.inputStream;if(input==null){return undefined;}var n=input.size;if(this.start<n&&this.stop<n){return input.getText(Interval_1.Interval.of(this.start,this.stop));}else {return "<EOF>";}}/**
	     * Explicitly set the text for this token. If {code text} is not
	     * `undefined`, then {@link #getText} will return this value rather than
	     * extracting the text from the input.
	     *
	     * @param text The explicit text of the token, or `undefined` if the text
	     * should be obtained from the input along with the start and stop indexes
	     * of the token.
	     */// @Override
	,set:function set(text){this._text=text;}},{key:'charPositionInLine',get:function get(){return this._charPositionInLine;}// @Override
	,set:function set(charPositionInLine){this._charPositionInLine=charPositionInLine;}},{key:'channel',get:function get(){return this._channel;}// @Override
	,set:function set(channel){this._channel=channel;}},{key:'startIndex',get:function get(){return this.start;},set:function set(start){this.start=start;}},{key:'stopIndex',get:function get(){return this.stop;},set:function set(stop){this.stop=stop;}},{key:'tokenIndex',get:function get(){return this.index;}// @Override
	,set:function set(index){this.index=index;}},{key:'tokenSource',get:function get(){return this.source.source;}},{key:'inputStream',get:function get(){return this.source.stream;}}],[{key:'fromToken',value:function fromToken(oldToken){var result=new CommonToken(oldToken.type,undefined,CommonToken.EMPTY_SOURCE,oldToken.channel,oldToken.startIndex,oldToken.stopIndex);result._line=oldToken.line;result.index=oldToken.tokenIndex;result._charPositionInLine=oldToken.charPositionInLine;if(oldToken instanceof CommonToken){result._text=oldToken.text;result.source=oldToken.source;}else {result._text=oldToken.text;result.source={source:oldToken.tokenSource,stream:oldToken.inputStream};}return result;}}]);return CommonToken;}();/**
	 * An empty {@link Tuple2} which is used as the default value of
	 * {@link #source} for tokens that do not have a source.
	 */CommonToken.EMPTY_SOURCE={source:undefined,stream:undefined};__decorate([Decorators_1.NotNull],CommonToken.prototype,"source",void 0);__decorate([Decorators_1.Override],CommonToken.prototype,"type",null);__decorate([Decorators_1.Override],CommonToken.prototype,"line",null);__decorate([Decorators_1.Override],CommonToken.prototype,"text",null);__decorate([Decorators_1.Override],CommonToken.prototype,"charPositionInLine",null);__decorate([Decorators_1.Override],CommonToken.prototype,"channel",null);__decorate([Decorators_1.Override],CommonToken.prototype,"startIndex",null);__decorate([Decorators_1.Override],CommonToken.prototype,"stopIndex",null);__decorate([Decorators_1.Override],CommonToken.prototype,"tokenIndex",null);__decorate([Decorators_1.Override],CommonToken.prototype,"tokenSource",null);__decorate([Decorators_1.Override],CommonToken.prototype,"inputStream",null);__decorate([Decorators_1.Override],CommonToken.prototype,"toString",null);__decorate([__param(0,Decorators_1.NotNull)],CommonToken,"fromToken",null);CommonToken=__decorate([__param(2,Decorators_1.NotNull)],CommonToken);exports.CommonToken=CommonToken;},{"./Decorators":224,"./Token":248,"./misc/Interval":330}],221:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var CommonToken_1=require("./CommonToken");var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");/**
	 * This default implementation of {@link TokenFactory} creates
	 * {@link CommonToken} objects.
	 */var CommonTokenFactory=function(){/**
	     * Constructs a {@link CommonTokenFactory} with the specified value for
	     * {@link #copyText}.
	     *
	     * When `copyText` is `false`, the {@link #DEFAULT} instance
	     * should be used instead of constructing a new instance.
	     *
	     * @param copyText The value for {@link #copyText}.
	     */function CommonTokenFactory(){var copyText=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;classCallCheck(this,CommonTokenFactory);this.copyText=copyText;}createClass(CommonTokenFactory,[{key:'create',value:function create(source,type,text,channel,start,stop,line,charPositionInLine){var t=new CommonToken_1.CommonToken(type,text,source,channel,start,stop);t.line=line;t.charPositionInLine=charPositionInLine;if(text==null&&this.copyText&&source.stream!=null){t.text=source.stream.getText(Interval_1.Interval.of(start,stop));}return t;}},{key:'createSimple',value:function createSimple(type,text){return new CommonToken_1.CommonToken(type,text);}}]);return CommonTokenFactory;}();__decorate([Decorators_1.Override],CommonTokenFactory.prototype,"create",null);__decorate([Decorators_1.Override],CommonTokenFactory.prototype,"createSimple",null);exports.CommonTokenFactory=CommonTokenFactory;(function(CommonTokenFactory){/**
	     * The default {@link CommonTokenFactory} instance.
	     *
	     * This token factory does not explicitly copy token text when constructing
	     * tokens.
	     */CommonTokenFactory.DEFAULT=new CommonTokenFactory();})(CommonTokenFactory=exports.CommonTokenFactory||(exports.CommonTokenFactory={}));},{"./CommonToken":220,"./Decorators":224,"./misc/Interval":330}],222:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:50.3953157-07:00
	var BufferedTokenStream_1=require("./BufferedTokenStream");var Decorators_1=require("./Decorators");var Token_1=require("./Token");/**
	 * This class extends {@link BufferedTokenStream} with functionality to filter
	 * token streams to tokens on a particular channel (tokens where
	 * {@link Token#getChannel} returns a particular value).
	 *
	 * This token stream provides access to all tokens by index or when calling
	 * methods like {@link #getText}. The channel filtering is only used for code
	 * accessing tokens via the lookahead methods {@link #LA}, {@link #LT}, and
	 * {@link #LB}.
	 *
	 * By default, tokens are placed on the default channel
	 * ({@link Token#DEFAULT_CHANNEL}), but may be reassigned by using the
	 * `->channel(HIDDEN)` lexer command, or by using an embedded action to
	 * call {@link Lexer#setChannel}.
	 *
	 * Note: lexer rules which use the `->skip` lexer command or call
	 * {@link Lexer#skip} do not produce tokens at all, so input text matched by
	 * such a rule will not be available as part of the token stream, regardless of
	 * channel.
	 */var CommonTokenStream=function(_BufferedTokenStream_){inherits(CommonTokenStream,_BufferedTokenStream_);/**
	     * Constructs a new {@link CommonTokenStream} using the specified token
	     * source and filtering tokens to the specified channel. Only tokens whose
	     * {@link Token#getChannel} matches `channel` or have the
	     * `Token.type` equal to {@link Token#EOF} will be returned by the
	     * token stream lookahead methods.
	     *
	     * @param tokenSource The token source.
	     * @param channel The channel to use for filtering tokens.
	     */function CommonTokenStream(tokenSource){var channel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Token_1.Token.DEFAULT_CHANNEL;classCallCheck(this,CommonTokenStream);var _this230=possibleConstructorReturn(this,(CommonTokenStream.__proto__||Object.getPrototypeOf(CommonTokenStream)).call(this,tokenSource));_this230.channel=channel;return _this230;}createClass(CommonTokenStream,[{key:'adjustSeekIndex',value:function adjustSeekIndex(i){return this.nextTokenOnChannel(i,this.channel);}},{key:'tryLB',value:function tryLB(k){if(this.p-k<0){return undefined;}var i=this.p;var n=1;// find k good tokens looking backwards
	while(n<=k&&i>0){// skip off-channel tokens
	i=this.previousTokenOnChannel(i-1,this.channel);n++;}if(i<0){return undefined;}return this.tokens[i];}},{key:'tryLT',value:function tryLT(k){//System.out.println("enter LT("+k+")");
	this.lazyInit();if(k===0){throw new RangeError("0 is not a valid lookahead index");}if(k<0){return this.tryLB(-k);}var i=this.p;var n=1;// we know tokens[p] is a good one
	// find k good tokens
	while(n<k){// skip off-channel tokens, but make sure to not look past EOF
	if(this.sync(i+1)){i=this.nextTokenOnChannel(i+1,this.channel);}n++;}//		if ( i>range ) range = i;
	return this.tokens[i];}/** Count EOF just once. */},{key:'getNumberOfOnChannelTokens',value:function getNumberOfOnChannelTokens(){var n=0;this.fill();var _iteratorNormalCompletion70=true;var _didIteratorError70=false;var _iteratorError70=undefined;try{for(var _iterator70=this.tokens[Symbol.iterator](),_step70;!(_iteratorNormalCompletion70=(_step70=_iterator70.next()).done);_iteratorNormalCompletion70=true){var t=_step70.value;if(t.channel===this.channel){n++;}if(t.type===Token_1.Token.EOF){break;}}}catch(err){_didIteratorError70=true;_iteratorError70=err;}finally{try{if(!_iteratorNormalCompletion70&&_iterator70.return){_iterator70.return();}}finally{if(_didIteratorError70){throw _iteratorError70;}}}return n;}}]);return CommonTokenStream;}(BufferedTokenStream_1.BufferedTokenStream);__decorate([Decorators_1.Override],CommonTokenStream.prototype,"adjustSeekIndex",null);__decorate([Decorators_1.Override],CommonTokenStream.prototype,"tryLB",null);__decorate([Decorators_1.Override],CommonTokenStream.prototype,"tryLT",null);CommonTokenStream=__decorate([__param(0,Decorators_1.NotNull)],CommonTokenStream);exports.CommonTokenStream=CommonTokenStream;},{"./BufferedTokenStream":216,"./Decorators":224,"./Token":248}],223:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 *
	 * @author Sam Harwell
	 */var ConsoleErrorListener=function(){function ConsoleErrorListener(){classCallCheck(this,ConsoleErrorListener);}createClass(ConsoleErrorListener,[{key:'syntaxError',/**
	     * {@inheritDoc}
	     *
	     * This implementation prints messages to {@link System#err} containing the
	     * values of `line`, `charPositionInLine`, and `msg` using
	     * the following format.
	     *
	     * <pre>
	     * line *line*:*charPositionInLine* *msg*
	     * </pre>
	     */value:function syntaxError(recognizer,offendingSymbol,line,charPositionInLine,msg,e){console.error('line '+line+':'+charPositionInLine+' '+msg);}}]);return ConsoleErrorListener;}();/**
	 * Provides a default instance of {@link ConsoleErrorListener}.
	 */ConsoleErrorListener.INSTANCE=new ConsoleErrorListener();exports.ConsoleErrorListener=ConsoleErrorListener;},{}],224:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});function NotNull(target,propertyKey,propertyDescriptor){// intentionally empty
	}exports.NotNull=NotNull;function Nullable(target,propertyKey,propertyDescriptor){// intentionally empty
	}exports.Nullable=Nullable;function Override(target,propertyKey,propertyDescriptor){// do something with 'target' ...
	}exports.Override=Override;function SuppressWarnings(options){return function(target,propertyKey,descriptor){// intentionally empty
	};}exports.SuppressWarnings=SuppressWarnings;},{}],225:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ATNState_1=require("./atn/ATNState");var ATNStateType_1=require("./atn/ATNStateType");var FailedPredicateException_1=require("./FailedPredicateException");var InputMismatchException_1=require("./InputMismatchException");var IntervalSet_1=require("./misc/IntervalSet");var NoViableAltException_1=require("./NoViableAltException");var PredictionContext_1=require("./atn/PredictionContext");var Token_1=require("./Token");var Decorators_1=require("./Decorators");/**
	 * This is the default implementation of {@link ANTLRErrorStrategy} used for
	 * error reporting and recovery in ANTLR parsers.
	 */var DefaultErrorStrategy=function(){function DefaultErrorStrategy(){classCallCheck(this,DefaultErrorStrategy);/**
	         * Indicates whether the error strategy is currently "recovering from an
	         * error". This is used to suppress reporting multiple error messages while
	         * attempting to recover from a detected syntax error.
	         *
	         * @see #inErrorRecoveryMode
	         */this.errorRecoveryMode=false;/** The index into the input stream where the last error occurred.
	         * 	This is used to prevent infinite loops where an error is found
	         *  but no token is consumed during recovery...another error is found,
	         *  ad nauseum.  This is a failsafe mechanism to guarantee that at least
	         *  one token/tree node is consumed for two errors.
	         */this.lastErrorIndex=-1;/**
	         * @see #nextTokensContext
	         */this.nextTokensState=ATNState_1.ATNState.INVALID_STATE_NUMBER;}/**
	     * {@inheritDoc}
	     *
	     * The default implementation simply calls {@link #endErrorCondition} to
	     * ensure that the handler is not in error recovery mode.
	     */createClass(DefaultErrorStrategy,[{key:'reset',value:function reset(recognizer){this.endErrorCondition(recognizer);}/**
	     * This method is called to enter error recovery mode when a recognition
	     * exception is reported.
	     *
	     * @param recognizer the parser instance
	     */},{key:'beginErrorCondition',value:function beginErrorCondition(recognizer){this.errorRecoveryMode=true;}/**
	     * {@inheritDoc}
	     */},{key:'inErrorRecoveryMode',value:function inErrorRecoveryMode(recognizer){return this.errorRecoveryMode;}/**
	     * This method is called to leave error recovery mode after recovering from
	     * a recognition exception.
	     *
	     * @param recognizer
	     */},{key:'endErrorCondition',value:function endErrorCondition(recognizer){this.errorRecoveryMode=false;this.lastErrorStates=undefined;this.lastErrorIndex=-1;}/**
	     * {@inheritDoc}
	     *
	     * The default implementation simply calls {@link #endErrorCondition}.
	     */},{key:'reportMatch',value:function reportMatch(recognizer){this.endErrorCondition(recognizer);}/**
	     * {@inheritDoc}
	     *
	     * The default implementation returns immediately if the handler is already
	     * in error recovery mode. Otherwise, it calls {@link #beginErrorCondition}
	     * and dispatches the reporting task based on the runtime type of `e`
	     * according to the following table.
	     *
	     * * {@link NoViableAltException}: Dispatches the call to
	     *   {@link #reportNoViableAlternative}
	     * * {@link InputMismatchException}: Dispatches the call to
	     *   {@link #reportInputMismatch}
	     * * {@link FailedPredicateException}: Dispatches the call to
	     *   {@link #reportFailedPredicate}
	     * * All other types: calls {@link Parser#notifyErrorListeners} to report
	     *   the exception
	     */},{key:'reportError',value:function reportError(recognizer,e){// if we've already reported an error and have not matched a token
	// yet successfully, don't report any errors.
	if(this.inErrorRecoveryMode(recognizer)){//			System.err.print("[SPURIOUS] ");
	return;// don't report spurious errors
	}this.beginErrorCondition(recognizer);if(e instanceof NoViableAltException_1.NoViableAltException){this.reportNoViableAlternative(recognizer,e);}else if(e instanceof InputMismatchException_1.InputMismatchException){this.reportInputMismatch(recognizer,e);}else if(e instanceof FailedPredicateException_1.FailedPredicateException){this.reportFailedPredicate(recognizer,e);}else {console.error('unknown recognition error type: '+e);this.notifyErrorListeners(recognizer,e.toString(),e);}}},{key:'notifyErrorListeners',value:function notifyErrorListeners(recognizer,message,e){var offendingToken=e.getOffendingToken(recognizer);if(offendingToken===undefined){// Pass null to notifyErrorListeners so it in turn calls the error listeners with undefined as the offending
	// token. If we passed undefined, it would instead call the listeners with currentToken from the parser.
	offendingToken=null;}recognizer.notifyErrorListeners(message,offendingToken,e);}/**
	     * {@inheritDoc}
	     *
	     * The default implementation resynchronizes the parser by consuming tokens
	     * until we find one in the resynchronization set--loosely the set of tokens
	     * that can follow the current rule.
	     */},{key:'recover',value:function recover(recognizer,e){//		System.out.println("recover in "+recognizer.getRuleInvocationStack()+
	//						   " index="+recognizer.inputStream.index+
	//						   ", lastErrorIndex="+
	//						   lastErrorIndex+
	//						   ", states="+lastErrorStates);
	if(this.lastErrorIndex===recognizer.inputStream.index&&this.lastErrorStates&&this.lastErrorStates.contains(recognizer.state)){// uh oh, another error at same token index and previously-visited
	// state in ATN; must be a case where LT(1) is in the recovery
	// token set so nothing got consumed. Consume a single token
	// at least to prevent an infinite loop; this is a failsafe.
	//			System.err.println("seen error condition before index="+
	//							   lastErrorIndex+", states="+lastErrorStates);
	//			System.err.println("FAILSAFE consumes "+recognizer.getTokenNames()[recognizer.inputStream.LA(1)]);
	recognizer.consume();}this.lastErrorIndex=recognizer.inputStream.index;if(!this.lastErrorStates){this.lastErrorStates=new IntervalSet_1.IntervalSet();}this.lastErrorStates.add(recognizer.state);var followSet=this.getErrorRecoverySet(recognizer);this.consumeUntil(recognizer,followSet);}/**
	     * The default implementation of {@link ANTLRErrorStrategy#sync} makes sure
	     * that the current lookahead symbol is consistent with what were expecting
	     * at this point in the ATN. You can call this anytime but ANTLR only
	     * generates code to check before subrules/loops and each iteration.
	     *
	     * Implements Jim Idle's magic sync mechanism in closures and optional
	     * subrules. E.g.,
	     *
	     * ```antlr
	     * a : sync ( stuff sync )* ;
	     * sync : {consume to what can follow sync} ;
	     * ```
	     *
	     * At the start of a sub rule upon error, {@link #sync} performs single
	     * token deletion, if possible. If it can't do that, it bails on the current
	     * rule and uses the default error recovery, which consumes until the
	     * resynchronization set of the current rule.
	     *
	     * If the sub rule is optional (`(...)?`, `(...)*`, or block
	     * with an empty alternative), then the expected set includes what follows
	     * the subrule.
	     *
	     * During loop iteration, it consumes until it sees a token that can start a
	     * sub rule or what follows loop. Yes, that is pretty aggressive. We opt to
	     * stay in the loop as long as possible.
	     *
	     * **ORIGINS**
	     *
	     * Previous versions of ANTLR did a poor job of their recovery within loops.
	     * A single mismatch token or missing token would force the parser to bail
	     * out of the entire rules surrounding the loop. So, for rule
	     *
	     * ```antlr
	     * classDef : 'class' ID '{' member* '}'
	     * ```
	     *
	     * input with an extra token between members would force the parser to
	     * consume until it found the next class definition rather than the next
	     * member definition of the current class.
	     *
	     * This functionality cost a little bit of effort because the parser has to
	     * compare token set at the start of the loop and at each iteration. If for
	     * some reason speed is suffering for you, you can turn off this
	     * functionality by simply overriding this method as a blank { }.
	     */},{key:'sync',value:function sync(recognizer){var s=recognizer.interpreter.atn.states[recognizer.state];//		System.err.println("sync @ "+s.stateNumber+"="+s.getClass().getSimpleName());
	// If already recovering, don't try to sync
	if(this.inErrorRecoveryMode(recognizer)){return;}var tokens=recognizer.inputStream;var la=tokens.LA(1);// try cheaper subset first; might get lucky. seems to shave a wee bit off
	var nextTokens=recognizer.atn.nextTokens(s);if(nextTokens.contains(la)){// We are sure the token matches
	this.nextTokensContext=undefined;this.nextTokensState=ATNState_1.ATNState.INVALID_STATE_NUMBER;return;}if(nextTokens.contains(Token_1.Token.EPSILON)){if(this.nextTokensContext===undefined){// It's possible the next token won't match; information tracked
	// by sync is restricted for performance.
	this.nextTokensContext=recognizer.context;this.nextTokensState=recognizer.state;}return;}switch(s.stateType){case ATNStateType_1.ATNStateType.BLOCK_START:case ATNStateType_1.ATNStateType.STAR_BLOCK_START:case ATNStateType_1.ATNStateType.PLUS_BLOCK_START:case ATNStateType_1.ATNStateType.STAR_LOOP_ENTRY:// report error and recover if possible
	if(this.singleTokenDeletion(recognizer)){return;}throw new InputMismatchException_1.InputMismatchException(recognizer);case ATNStateType_1.ATNStateType.PLUS_LOOP_BACK:case ATNStateType_1.ATNStateType.STAR_LOOP_BACK://			System.err.println("at loop back: "+s.getClass().getSimpleName());
	this.reportUnwantedToken(recognizer);var expecting=recognizer.getExpectedTokens();var whatFollowsLoopIterationOrRule=expecting.or(this.getErrorRecoverySet(recognizer));this.consumeUntil(recognizer,whatFollowsLoopIterationOrRule);break;}}/**
	     * This is called by {@link #reportError} when the exception is a
	     * {@link NoViableAltException}.
	     *
	     * @see #reportError
	     *
	     * @param recognizer the parser instance
	     * @param e the recognition exception
	     */},{key:'reportNoViableAlternative',value:function reportNoViableAlternative(recognizer,e){var tokens=recognizer.inputStream;var input=void 0;if(tokens){if(e.startToken.type===Token_1.Token.EOF){input="<EOF>";}else {input=tokens.getTextFromRange(e.startToken,e.getOffendingToken());}}else {input="<unknown input>";}var msg="no viable alternative at input "+this.escapeWSAndQuote(input);this.notifyErrorListeners(recognizer,msg,e);}/**
	     * This is called by {@link #reportError} when the exception is an
	     * {@link InputMismatchException}.
	     *
	     * @see #reportError
	     *
	     * @param recognizer the parser instance
	     * @param e the recognition exception
	     */},{key:'reportInputMismatch',value:function reportInputMismatch(recognizer,e){var expected=e.expectedTokens;var expectedString=expected?expected.toStringVocabulary(recognizer.vocabulary):"";var msg="mismatched input "+this.getTokenErrorDisplay(e.getOffendingToken(recognizer))+" expecting "+expectedString;this.notifyErrorListeners(recognizer,msg,e);}/**
	     * This is called by {@link #reportError} when the exception is a
	     * {@link FailedPredicateException}.
	     *
	     * @see #reportError
	     *
	     * @param recognizer the parser instance
	     * @param e the recognition exception
	     */},{key:'reportFailedPredicate',value:function reportFailedPredicate(recognizer,e){var ruleName=recognizer.ruleNames[recognizer.context.ruleIndex];var msg="rule "+ruleName+" "+e.message;this.notifyErrorListeners(recognizer,msg,e);}/**
	     * This method is called to report a syntax error which requires the removal
	     * of a token from the input stream. At the time this method is called, the
	     * erroneous symbol is current `LT(1)` symbol and has not yet been
	     * removed from the input stream. When this method returns,
	     * `recognizer` is in error recovery mode.
	     *
	     * This method is called when {@link #singleTokenDeletion} identifies
	     * single-token deletion as a viable recovery strategy for a mismatched
	     * input error.
	     *
	     * The default implementation simply returns if the handler is already in
	     * error recovery mode. Otherwise, it calls {@link #beginErrorCondition} to
	     * enter error recovery mode, followed by calling
	     * {@link Parser#notifyErrorListeners}.
	     *
	     * @param recognizer the parser instance
	     */},{key:'reportUnwantedToken',value:function reportUnwantedToken(recognizer){if(this.inErrorRecoveryMode(recognizer)){return;}this.beginErrorCondition(recognizer);var t=recognizer.currentToken;var tokenName=this.getTokenErrorDisplay(t);var expecting=this.getExpectedTokens(recognizer);var msg="extraneous input "+tokenName+" expecting "+expecting.toStringVocabulary(recognizer.vocabulary);recognizer.notifyErrorListeners(msg,t,undefined);}/**
	     * This method is called to report a syntax error which requires the
	     * insertion of a missing token into the input stream. At the time this
	     * method is called, the missing token has not yet been inserted. When this
	     * method returns, `recognizer` is in error recovery mode.
	     *
	     * This method is called when {@link #singleTokenInsertion} identifies
	     * single-token insertion as a viable recovery strategy for a mismatched
	     * input error.
	     *
	     * The default implementation simply returns if the handler is already in
	     * error recovery mode. Otherwise, it calls {@link #beginErrorCondition} to
	     * enter error recovery mode, followed by calling
	     * {@link Parser#notifyErrorListeners}.
	     *
	     * @param recognizer the parser instance
	     */},{key:'reportMissingToken',value:function reportMissingToken(recognizer){if(this.inErrorRecoveryMode(recognizer)){return;}this.beginErrorCondition(recognizer);var t=recognizer.currentToken;var expecting=this.getExpectedTokens(recognizer);var msg="missing "+expecting.toStringVocabulary(recognizer.vocabulary)+" at "+this.getTokenErrorDisplay(t);recognizer.notifyErrorListeners(msg,t,undefined);}/**
	     * {@inheritDoc}
	     *
	     * The default implementation attempts to recover from the mismatched input
	     * by using single token insertion and deletion as described below. If the
	     * recovery attempt fails, this method
	     * {@link InputMismatchException}.
	     *
	     * **EXTRA TOKEN** (single token deletion)
	     *
	     * `LA(1)` is not what we are looking for. If `LA(2)` has the
	     * right token, however, then assume `LA(1)` is some extra spurious
	     * token and delete it. Then consume and return the next token (which was
	     * the `LA(2)` token) as the successful result of the match operation.
	     *
	     * This recovery strategy is implemented by {@link #singleTokenDeletion}.
	     *
	     * **MISSING TOKEN** (single token insertion)
	     *
	     * If current token (at `LA(1)`) is consistent with what could come
	     * after the expected `LA(1)` token, then assume the token is missing
	     * and use the parser's {@link TokenFactory} to create it on the fly. The
	     * "insertion" is performed by returning the created token as the successful
	     * result of the match operation.
	     *
	     * This recovery strategy is implemented by {@link #singleTokenInsertion}.
	     *
	     * **EXAMPLE**
	     *
	     * For example, Input `i=(3;` is clearly missing the `')'`. When
	     * the parser returns from the nested call to `expr`, it will have
	     * call chain:
	     *
	     * ```
	     * stat → expr → atom
	     * ```
	     *
	     * and it will be trying to match the `')'` at this point in the
	     * derivation:
	     *
	     * ```
	     * => ID '=' '(' INT ')' ('+' atom)* ';'
	     *                    ^
	     * ```
	     *
	     * The attempt to match `')'` will fail when it sees `';'` and
	     * call {@link #recoverInline}. To recover, it sees that `LA(1)==';'`
	     * is in the set of tokens that can follow the `')'` token reference
	     * in rule `atom`. It can assume that you forgot the `')'`.
	     */},{key:'recoverInline',value:function recoverInline(recognizer){// SINGLE TOKEN DELETION
	var matchedSymbol=this.singleTokenDeletion(recognizer);if(matchedSymbol){// we have deleted the extra token.
	// now, move past ttype token as if all were ok
	recognizer.consume();return matchedSymbol;}// SINGLE TOKEN INSERTION
	if(this.singleTokenInsertion(recognizer)){return this.getMissingSymbol(recognizer);}// even that didn't work; must throw the exception
	if(this.nextTokensContext===undefined){throw new InputMismatchException_1.InputMismatchException(recognizer);}else {throw new InputMismatchException_1.InputMismatchException(recognizer,this.nextTokensState,this.nextTokensContext);}}/**
	     * This method implements the single-token insertion inline error recovery
	     * strategy. It is called by {@link #recoverInline} if the single-token
	     * deletion strategy fails to recover from the mismatched input. If this
	     * method returns `true`, `recognizer` will be in error recovery
	     * mode.
	     *
	     * This method determines whether or not single-token insertion is viable by
	     * checking if the `LA(1)` input symbol could be successfully matched
	     * if it were instead the `LA(2)` symbol. If this method returns
	     * `true`, the caller is responsible for creating and inserting a
	     * token with the correct type to produce this behavior.
	     *
	     * @param recognizer the parser instance
	     * @returns `true` if single-token insertion is a viable recovery
	     * strategy for the current mismatched input, otherwise `false`
	     */},{key:'singleTokenInsertion',value:function singleTokenInsertion(recognizer){var currentSymbolType=recognizer.inputStream.LA(1);// if current token is consistent with what could come after current
	// ATN state, then we know we're missing a token; error recovery
	// is free to conjure up and insert the missing token
	var currentState=recognizer.interpreter.atn.states[recognizer.state];var next=currentState.transition(0).target;var atn=recognizer.interpreter.atn;var expectingAtLL2=atn.nextTokens(next,PredictionContext_1.PredictionContext.fromRuleContext(atn,recognizer.context));//		console.warn("LT(2) set="+expectingAtLL2.toString(recognizer.getTokenNames()));
	if(expectingAtLL2.contains(currentSymbolType)){this.reportMissingToken(recognizer);return true;}return false;}/**
	     * This method implements the single-token deletion inline error recovery
	     * strategy. It is called by {@link #recoverInline} to attempt to recover
	     * from mismatched input. If this method returns `undefined`, the parser and error
	     * handler state will not have changed. If this method returns non-`undefined`,
	     * `recognizer` will *not* be in error recovery mode since the
	     * returned token was a successful match.
	     *
	     * If the single-token deletion is successful, this method calls
	     * {@link #reportUnwantedToken} to report the error, followed by
	     * {@link Parser#consume} to actually "delete" the extraneous token. Then,
	     * before returning {@link #reportMatch} is called to signal a successful
	     * match.
	     *
	     * @param recognizer the parser instance
	     * @returns the successfully matched {@link Token} instance if single-token
	     * deletion successfully recovers from the mismatched input, otherwise
	     * `undefined`
	     */},{key:'singleTokenDeletion',value:function singleTokenDeletion(recognizer){var nextTokenType=recognizer.inputStream.LA(2);var expecting=this.getExpectedTokens(recognizer);if(expecting.contains(nextTokenType)){this.reportUnwantedToken(recognizer);/*
	            System.err.println("recoverFromMismatchedToken deleting "+
	                               ((TokenStream)recognizer.inputStream).LT(1)+
	                               " since "+((TokenStream)recognizer.inputStream).LT(2)+
	                               " is what we want");
	            */recognizer.consume();// simply delete extra token
	// we want to return the token we're actually matching
	var matchedSymbol=recognizer.currentToken;this.reportMatch(recognizer);// we know current token is correct
	return matchedSymbol;}return undefined;}/** Conjure up a missing token during error recovery.
	     *
	     *  The recognizer attempts to recover from single missing
	     *  symbols. But, actions might refer to that missing symbol.
	     *  For example, x=ID {f($x);}. The action clearly assumes
	     *  that there has been an identifier matched previously and that
	     *  $x points at that token. If that token is missing, but
	     *  the next token in the stream is what we want we assume that
	     *  this token is missing and we keep going. Because we
	     *  have to return some token to replace the missing token,
	     *  we have to conjure one up. This method gives the user control
	     *  over the tokens returned for missing tokens. Mostly,
	     *  you will want to create something special for identifier
	     *  tokens. For literals such as '{' and ',', the default
	     *  action in the parser or tree parser works. It simply creates
	     *  a CommonToken of the appropriate type. The text will be the token.
	     *  If you change what tokens must be created by the lexer,
	     *  override this method to create the appropriate tokens.
	     */},{key:'getMissingSymbol',value:function getMissingSymbol(recognizer){var currentSymbol=recognizer.currentToken;var expecting=this.getExpectedTokens(recognizer);var expectedTokenType=Token_1.Token.INVALID_TYPE;if(!expecting.isNil){// get any element
	expectedTokenType=expecting.minElement;}var tokenText=void 0;if(expectedTokenType===Token_1.Token.EOF){tokenText="<missing EOF>";}else {tokenText="<missing "+recognizer.vocabulary.getDisplayName(expectedTokenType)+">";}var current=currentSymbol;var lookback=recognizer.inputStream.tryLT(-1);if(current.type===Token_1.Token.EOF&&lookback!=null){current=lookback;}return this.constructToken(recognizer.inputStream.tokenSource,expectedTokenType,tokenText,current);}},{key:'constructToken',value:function constructToken(tokenSource,expectedTokenType,tokenText,current){var factory=tokenSource.tokenFactory;var x=current.tokenSource;var stream=x?x.inputStream:undefined;return factory.create({source:tokenSource,stream:stream},expectedTokenType,tokenText,Token_1.Token.DEFAULT_CHANNEL,-1,-1,current.line,current.charPositionInLine);}},{key:'getExpectedTokens',value:function getExpectedTokens(recognizer){return recognizer.getExpectedTokens();}/** How should a token be displayed in an error message? The default
	     *  is to display just the text, but during development you might
	     *  want to have a lot of information spit out.  Override in that case
	     *  to use t.toString() (which, for CommonToken, dumps everything about
	     *  the token). This is better than forcing you to override a method in
	     *  your token objects because you don't have to go modify your lexer
	     *  so that it creates a new Java type.
	     */},{key:'getTokenErrorDisplay',value:function getTokenErrorDisplay(t){if(!t){return "<no token>";}var s=this.getSymbolText(t);if(!s){if(this.getSymbolType(t)===Token_1.Token.EOF){s="<EOF>";}else {s='<'+this.getSymbolType(t)+'>';}}return this.escapeWSAndQuote(s);}},{key:'getSymbolText',value:function getSymbolText(symbol){return symbol.text;}},{key:'getSymbolType',value:function getSymbolType(symbol){return symbol.type;}},{key:'escapeWSAndQuote',value:function escapeWSAndQuote(s){//		if ( s==null ) return s;
	s=s.replace("\n","\\n");s=s.replace("\r","\\r");s=s.replace("\t","\\t");return "'"+s+"'";}/*  Compute the error recovery set for the current rule.  During
	     *  rule invocation, the parser pushes the set of tokens that can
	     *  follow that rule reference on the stack; this amounts to
	     *  computing FIRST of what follows the rule reference in the
	     *  enclosing rule. See LinearApproximator.FIRST().
	     *  This local follow set only includes tokens
	     *  from within the rule; i.e., the FIRST computation done by
	     *  ANTLR stops at the end of a rule.
	     *
	     *  EXAMPLE
	     *
	     *  When you find a "no viable alt exception", the input is not
	     *  consistent with any of the alternatives for rule r.  The best
	     *  thing to do is to consume tokens until you see something that
	     *  can legally follow a call to r *or* any rule that called r.
	     *  You don't want the exact set of viable next tokens because the
	     *  input might just be missing a token--you might consume the
	     *  rest of the input looking for one of the missing tokens.
	     *
	     *  Consider grammar:
	     *
	     *  a : '[' b ']'
	     *    | '(' b ')'
	     *    ;
	     *  b : c '^' INT ;
	     *  c : ID
	     *    | INT
	     *    ;
	     *
	     *  At each rule invocation, the set of tokens that could follow
	     *  that rule is pushed on a stack.  Here are the various
	     *  context-sensitive follow sets:
	     *
	     *  FOLLOW(b1_in_a) = FIRST(']') = ']'
	     *  FOLLOW(b2_in_a) = FIRST(')') = ')'
	     *  FOLLOW(c_in_b) = FIRST('^') = '^'
	     *
	     *  Upon erroneous input "[]", the call chain is
	     *
	     *  a -> b -> c
	     *
	     *  and, hence, the follow context stack is:
	     *
	     *  depth     follow set       start of rule execution
	     *    0         <EOF>                    a (from main())
	     *    1          ']'                     b
	     *    2          '^'                     c
	     *
	     *  Notice that ')' is not included, because b would have to have
	     *  been called from a different context in rule a for ')' to be
	     *  included.
	     *
	     *  For error recovery, we cannot consider FOLLOW(c)
	     *  (context-sensitive or otherwise).  We need the combined set of
	     *  all context-sensitive FOLLOW sets--the set of all tokens that
	     *  could follow any reference in the call chain.  We need to
	     *  resync to one of those tokens.  Note that FOLLOW(c)='^' and if
	     *  we resync'd to that token, we'd consume until EOF.  We need to
	     *  sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.
	     *  In this case, for input "[]", LA(1) is ']' and in the set, so we would
	     *  not consume anything. After printing an error, rule c would
	     *  return normally.  Rule b would not find the required '^' though.
	     *  At this point, it gets a mismatched token error and
	     *  exception (since LA(1) is not in the viable following token
	     *  set).  The rule exception handler tries to recover, but finds
	     *  the same recovery set and doesn't consume anything.  Rule b
	     *  exits normally returning to rule a.  Now it finds the ']' (and
	     *  with the successful match exits errorRecovery mode).
	     *
	     *  So, you can see that the parser walks up the call chain looking
	     *  for the token that was a member of the recovery set.
	     *
	     *  Errors are not generated in errorRecovery mode.
	     *
	     *  ANTLR's error recovery mechanism is based upon original ideas:
	     *
	     *  "Algorithms + Data Structures = Programs" by Niklaus Wirth
	     *
	     *  and
	     *
	     *  "A note on error recovery in recursive descent parsers":
	     *  http://portal.acm.org/citation.cfm?id=947902.947905
	     *
	     *  Later, Josef Grosch had some good ideas:
	     *
	     *  "Efficient and Comfortable Error Recovery in Recursive Descent
	     *  Parsers":
	     *  ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip
	     *
	     *  Like Grosch I implement context-sensitive FOLLOW sets that are combined
	     *  at run-time upon error to avoid overhead during parsing.
	     */},{key:'getErrorRecoverySet',value:function getErrorRecoverySet(recognizer){var atn=recognizer.interpreter.atn;var ctx=recognizer.context;var recoverSet=new IntervalSet_1.IntervalSet();while(ctx&&ctx.invokingState>=0){// compute what follows who invoked us
	var invokingState=atn.states[ctx.invokingState];var rt=invokingState.transition(0);var follow=atn.nextTokens(rt.followState);recoverSet.addAll(follow);ctx=ctx._parent;}recoverSet.remove(Token_1.Token.EPSILON);//		System.out.println("recover set "+recoverSet.toString(recognizer.getTokenNames()));
	return recoverSet;}/** Consume tokens until one matches the given token set. */},{key:'consumeUntil',value:function consumeUntil(recognizer,set){//		System.err.println("consumeUntil("+set.toString(recognizer.getTokenNames())+")");
	var ttype=recognizer.inputStream.LA(1);while(ttype!==Token_1.Token.EOF&&!set.contains(ttype)){//System.out.println("consume during recover LA(1)="+getTokenNames()[input.LA(1)]);
	//			recognizer.inputStream.consume();
	recognizer.consume();ttype=recognizer.inputStream.LA(1);}}}]);return DefaultErrorStrategy;}();__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"reset",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"beginErrorCondition",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"inErrorRecoveryMode",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"endErrorCondition",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"reportMatch",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"reportError",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"notifyErrorListeners",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"recover",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"sync",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"reportNoViableAlternative",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"reportInputMismatch",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"reportFailedPredicate",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"reportUnwantedToken",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"reportMissingToken",null);__decorate([Decorators_1.Override],DefaultErrorStrategy.prototype,"recoverInline",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"singleTokenInsertion",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"singleTokenDeletion",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"getMissingSymbol",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"getExpectedTokens",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"getSymbolText",null);__decorate([__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"getSymbolType",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"escapeWSAndQuote",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"getErrorRecoverySet",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],DefaultErrorStrategy.prototype,"consumeUntil",null);exports.DefaultErrorStrategy=DefaultErrorStrategy;},{"./Decorators":224,"./FailedPredicateException":228,"./InputMismatchException":229,"./NoViableAltException":236,"./Token":248,"./atn/ATNState":257,"./atn/ATNStateType":258,"./atn/PredictionContext":298,"./misc/IntervalSet":331}],226:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:51.1349829-07:00
	(function(Dependents){/**
	     * The element is dependent upon the specified rule.
	     */Dependents[Dependents["SELF"]=0]="SELF";/**
	     * The element is dependent upon the set of the specified rule's parents
	     * (rules which directly reference it).
	     */Dependents[Dependents["PARENTS"]=1]="PARENTS";/**
	     * The element is dependent upon the set of the specified rule's children
	     * (rules which it directly references).
	     */Dependents[Dependents["CHILDREN"]=2]="CHILDREN";/**
	     * The element is dependent upon the set of the specified rule's ancestors
	     * (the transitive closure of `PARENTS` rules).
	     */Dependents[Dependents["ANCESTORS"]=3]="ANCESTORS";/**
	     * The element is dependent upon the set of the specified rule's descendants
	     * (the transitive closure of `CHILDREN` rules).
	     */Dependents[Dependents["DESCENDANTS"]=4]="DESCENDANTS";/**
	     * The element is dependent upon the set of the specified rule's siblings
	     * (the union of `CHILDREN` of its `PARENTS`).
	     */Dependents[Dependents["SIBLINGS"]=5]="SIBLINGS";/**
	     * The element is dependent upon the set of the specified rule's preceeding
	     * siblings (the union of `CHILDREN` of its `PARENTS` which
	     * appear before a reference to the rule).
	     */Dependents[Dependents["PRECEEDING_SIBLINGS"]=6]="PRECEEDING_SIBLINGS";/**
	     * The element is dependent upon the set of the specified rule's following
	     * siblings (the union of `CHILDREN` of its `PARENTS` which
	     * appear after a reference to the rule).
	     */Dependents[Dependents["FOLLOWING_SIBLINGS"]=7]="FOLLOWING_SIBLINGS";/**
	     * The element is dependent upon the set of the specified rule's preceeding
	     * elements (rules which might end before the start of the specified rule
	     * while parsing). This is calculated by taking the
	     * `PRECEEDING_SIBLINGS` of the rule and each of its
	     * `ANCESTORS`, along with the `DESCENDANTS` of those
	     * elements.
	     */Dependents[Dependents["PRECEEDING"]=8]="PRECEEDING";/**
	     * The element is dependent upon the set of the specified rule's following
	     * elements (rules which might start after the end of the specified rule
	     * while parsing). This is calculated by taking the
	     * `FOLLOWING_SIBLINGS` of the rule and each of its
	     * `ANCESTORS`, along with the `DESCENDANTS` of those
	     * elements.
	     */Dependents[Dependents["FOLLOWING"]=9]="FOLLOWING";})(exports.Dependents||(exports.Dependents={}));},{}],227:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var BitSet_1=require("./misc/BitSet");var Decorators_1=require("./Decorators");var Interval_1=require("./misc/Interval");/**
	 * This implementation of {@link ANTLRErrorListener} can be used to identify
	 * certain potential correctness and performance problems in grammars. "Reports"
	 * are made by calling {@link Parser#notifyErrorListeners} with the appropriate
	 * message.
	 *
	 * * **Ambiguities**: These are cases where more than one path through the
	 *   grammar can match the input.
	 * * **Weak context sensitivity**: These are cases where full-context
	 *   prediction resolved an SLL conflict to a unique alternative which equaled the
	 *   minimum alternative of the SLL conflict.
	 * * **Strong (forced) context sensitivity**: These are cases where the
	 *   full-context prediction resolved an SLL conflict to a unique alternative,
	 *   *and* the minimum alternative of the SLL conflict was found to not be
	 *   a truly viable alternative. Two-stage parsing cannot be used for inputs where
	 *   this situation occurs.
	 *
	 * @author Sam Harwell
	 */var DiagnosticErrorListener=function(){/**
	     * Initializes a new instance of {@link DiagnosticErrorListener}, specifying
	     * whether all ambiguities or only exact ambiguities are reported.
	     *
	     * @param exactOnly `true` to report only exact ambiguities, otherwise
	     * `false` to report all ambiguities.  Defaults to true.
	     */function DiagnosticErrorListener(){var exactOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;classCallCheck(this,DiagnosticErrorListener);this.exactOnly=exactOnly;this.exactOnly=exactOnly;}createClass(DiagnosticErrorListener,[{key:'syntaxError',value:function syntaxError(/*@NotNull*/recognizer,offendingSymbol,line,charPositionInLine,/*@NotNull*/msg,e){// intentionally empty
	}},{key:'reportAmbiguity',value:function reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs){if(this.exactOnly&&!exact){return;}var decision=this.getDecisionDescription(recognizer,dfa);var conflictingAlts=this.getConflictingAlts(ambigAlts,configs);var text=recognizer.inputStream.getText(Interval_1.Interval.of(startIndex,stopIndex));var message='reportAmbiguity d='+decision+': ambigAlts='+conflictingAlts+', input=\''+text+'\'';recognizer.notifyErrorListeners(message);}},{key:'reportAttemptingFullContext',value:function reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,conflictState){var decision=this.getDecisionDescription(recognizer,dfa);var text=recognizer.inputStream.getText(Interval_1.Interval.of(startIndex,stopIndex));var message='reportAttemptingFullContext d='+decision+', input=\''+text+'\'';recognizer.notifyErrorListeners(message);}},{key:'reportContextSensitivity',value:function reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,acceptState){var decision=this.getDecisionDescription(recognizer,dfa);var text=recognizer.inputStream.getText(Interval_1.Interval.of(startIndex,stopIndex));var message='reportContextSensitivity d='+decision+', input=\''+text+'\'';recognizer.notifyErrorListeners(message);}},{key:'getDecisionDescription',value:function getDecisionDescription(recognizer,dfa){var decision=dfa.decision;var ruleIndex=dfa.atnStartState.ruleIndex;var ruleNames=recognizer.ruleNames;if(ruleIndex<0||ruleIndex>=ruleNames.length){return decision.toString();}var ruleName=ruleNames[ruleIndex];if(!ruleName){return decision.toString();}return decision+' ('+ruleName+')';}/**
	     * Computes the set of conflicting or ambiguous alternatives from a
	     * configuration set, if that information was not already provided by the
	     * parser.
	     *
	     * @param reportedAlts The set of conflicting or ambiguous alternatives, as
	     * reported by the parser.
	     * @param configs The conflicting or ambiguous configuration set.
	     * @returns Returns `reportedAlts` if it is not `undefined`, otherwise
	     * returns the set of alternatives represented in `configs`.
	     */},{key:'getConflictingAlts',value:function getConflictingAlts(reportedAlts,configs){if(reportedAlts!=null){return reportedAlts;}var result=new BitSet_1.BitSet();var _iteratorNormalCompletion71=true;var _didIteratorError71=false;var _iteratorError71=undefined;try{for(var _iterator71=configs[Symbol.iterator](),_step71;!(_iteratorNormalCompletion71=(_step71=_iterator71.next()).done);_iteratorNormalCompletion71=true){var config=_step71.value;result.set(config.alt);}}catch(err){_didIteratorError71=true;_iteratorError71=err;}finally{try{if(!_iteratorNormalCompletion71&&_iterator71.return){_iterator71.return();}}finally{if(_didIteratorError71){throw _iteratorError71;}}}return result;}}]);return DiagnosticErrorListener;}();__decorate([Decorators_1.Override],DiagnosticErrorListener.prototype,"syntaxError",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(6,Decorators_1.NotNull)],DiagnosticErrorListener.prototype,"reportAmbiguity",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(5,Decorators_1.NotNull)],DiagnosticErrorListener.prototype,"reportAttemptingFullContext",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(5,Decorators_1.NotNull)],DiagnosticErrorListener.prototype,"reportContextSensitivity",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],DiagnosticErrorListener.prototype,"getDecisionDescription",null);__decorate([Decorators_1.NotNull,__param(1,Decorators_1.NotNull)],DiagnosticErrorListener.prototype,"getConflictingAlts",null);exports.DiagnosticErrorListener=DiagnosticErrorListener;},{"./Decorators":224,"./misc/BitSet":325,"./misc/Interval":330}],228:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var RecognitionException_1=require("./RecognitionException");var Decorators_1=require("./Decorators");var PredicateTransition_1=require("./atn/PredicateTransition");/** A semantic predicate failed during validation.  Validation of predicates
	 *  occurs when normally parsing the alternative just like matching a token.
	 *  Disambiguating predicate evaluation occurs when we test a predicate during
	 *  prediction.
	 */var FailedPredicateException=function(_RecognitionException){inherits(FailedPredicateException,_RecognitionException);function FailedPredicateException(recognizer,predicate,message){classCallCheck(this,FailedPredicateException);var _this231=possibleConstructorReturn(this,(FailedPredicateException.__proto__||Object.getPrototypeOf(FailedPredicateException)).call(this,recognizer,recognizer.inputStream,recognizer.context,FailedPredicateException.formatMessage(predicate,message)));var s=recognizer.interpreter.atn.states[recognizer.state];var trans=s.transition(0);if(trans instanceof PredicateTransition_1.PredicateTransition){_this231._ruleIndex=trans.ruleIndex;_this231._predicateIndex=trans.predIndex;}else {_this231._ruleIndex=0;_this231._predicateIndex=0;}_this231._predicate=predicate;get(FailedPredicateException.prototype.__proto__||Object.getPrototypeOf(FailedPredicateException.prototype),'setOffendingToken',_this231).call(_this231,recognizer,recognizer.currentToken);return _this231;}createClass(FailedPredicateException,[{key:'ruleIndex',get:function get(){return this._ruleIndex;}},{key:'predicateIndex',get:function get(){return this._predicateIndex;}},{key:'predicate',get:function get(){return this._predicate;}}],[{key:'formatMessage',value:function formatMessage(predicate,message){if(message){return message;}return 'failed predicate: {'+predicate+'}?';}}]);return FailedPredicateException;}(RecognitionException_1.RecognitionException);__decorate([Decorators_1.NotNull],FailedPredicateException,"formatMessage",null);FailedPredicateException=__decorate([__param(0,Decorators_1.NotNull)],FailedPredicateException);exports.FailedPredicateException=FailedPredicateException;},{"./Decorators":224,"./RecognitionException":242,"./atn/PredicateTransition":297}],229:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:51.5187682-07:00
	var RecognitionException_1=require("./RecognitionException");var Decorators_1=require("./Decorators");/** This signifies any kind of mismatched input exceptions such as
	 *  when the current input does not match the expected token.
	 */var InputMismatchException=function(_RecognitionException2){inherits(InputMismatchException,_RecognitionException2);function InputMismatchException(recognizer,state,context){classCallCheck(this,InputMismatchException);if(context===undefined){context=recognizer.context;}var _this232=possibleConstructorReturn(this,(InputMismatchException.__proto__||Object.getPrototypeOf(InputMismatchException)).call(this,recognizer,recognizer.inputStream,context));if(state!==undefined){_this232.setOffendingState(state);}_this232.setOffendingToken(recognizer,recognizer.currentToken);return _this232;}return InputMismatchException;}(RecognitionException_1.RecognitionException);InputMismatchException=__decorate([__param(0,Decorators_1.NotNull)],InputMismatchException);exports.InputMismatchException=InputMismatchException;},{"./Decorators":224,"./RecognitionException":242}],230:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:51.6934376-07:00
	(function(IntStream){/**
	     * The value returned by {@link #LA LA()} when the end of the stream is
	     * reached.
	     */IntStream.EOF=-1;/**
	     * The value returned by {@link #getSourceName} when the actual name of the
	     * underlying source is not known.
	     */IntStream.UNKNOWN_SOURCE_NAME="<unknown>";})(exports.IntStream||(exports.IntStream={}));},{}],231:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:51.5898546-07:00
	var Decorators_1=require("./Decorators");var ParserRuleContext_1=require("./ParserRuleContext");/**
	 * This class extends {@link ParserRuleContext} by allowing the value of
	 * {@link #getRuleIndex} to be explicitly set for the context.
	 *
	 * {@link ParserRuleContext} does not include field storage for the rule index
	 * since the context classes created by the code generator override the
	 * {@link #getRuleIndex} method to return the correct value for that context.
	 * Since the parser interpreter does not use the context classes generated for a
	 * parser, this class (with slightly more memory overhead per node) is used to
	 * provide equivalent functionality.
	 */var InterpreterRuleContext=function(_ParserRuleContext_1$38){inherits(InterpreterRuleContext,_ParserRuleContext_1$38);function InterpreterRuleContext(ruleIndex,parent,invokingStateNumber){classCallCheck(this,InterpreterRuleContext);if(invokingStateNumber!==undefined){var _this233=possibleConstructorReturn(this,(InterpreterRuleContext.__proto__||Object.getPrototypeOf(InterpreterRuleContext)).call(this,parent,invokingStateNumber));}else {var _this233=possibleConstructorReturn(this,(InterpreterRuleContext.__proto__||Object.getPrototypeOf(InterpreterRuleContext)).call(this));}_this233._ruleIndex=ruleIndex;return possibleConstructorReturn(_this233);}createClass(InterpreterRuleContext,[{key:'ruleIndex',get:function get(){return this._ruleIndex;}}]);return InterpreterRuleContext;}(ParserRuleContext_1.ParserRuleContext);__decorate([Decorators_1.Override],InterpreterRuleContext.prototype,"ruleIndex",null);exports.InterpreterRuleContext=InterpreterRuleContext;},{"./Decorators":224,"./ParserRuleContext":239}],232:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var CommonTokenFactory_1=require("./CommonTokenFactory");var IntegerStack_1=require("./misc/IntegerStack");var Interval_1=require("./misc/Interval");var IntStream_1=require("./IntStream");var LexerATNSimulator_1=require("./atn/LexerATNSimulator");var LexerNoViableAltException_1=require("./LexerNoViableAltException");var Decorators_1=require("./Decorators");var Recognizer_1=require("./Recognizer");var Token_1=require("./Token");/** A lexer is recognizer that draws input symbols from a character stream.
	 *  lexer grammars result in a subclass of this object. A Lexer object
	 *  uses simplified match() and error recovery mechanisms in the interest
	 *  of speed.
	 */var Lexer=function(_Recognizer_1$Recogni){inherits(Lexer,_Recognizer_1$Recogni);function Lexer(input){classCallCheck(this,Lexer);/** How to create token objects */var _this234=possibleConstructorReturn(this,(Lexer.__proto__||Object.getPrototypeOf(Lexer)).call(this));_this234._factory=CommonTokenFactory_1.CommonTokenFactory.DEFAULT;/** What character index in the stream did the current token start at?
	         *  Needed, for example, to get the text for current token.  Set at
	         *  the start of nextToken.
	         */_this234._tokenStartCharIndex=-1;/** The line on which the first character of the token resides */_this234._tokenStartLine=0;/** The character position of first character within the line */_this234._tokenStartCharPositionInLine=0;/** Once we see EOF on char stream, next token will be EOF.
	         *  If you have DONE : EOF ; then you see DONE EOF.
	         */_this234._hitEOF=false;/** The channel number for the current token */_this234._channel=0;/** The token type for the current token */_this234._type=0;_this234._modeStack=new IntegerStack_1.IntegerStack();_this234._mode=Lexer.DEFAULT_MODE;_this234._input=input;_this234._tokenFactorySourcePair={source:_this234,stream:input};return _this234;}createClass(Lexer,[{key:'reset',value:function reset(resetInput){// wack Lexer state variables
	if(resetInput===undefined||resetInput){this._input.seek(0);// rewind the input
	}this._token=undefined;this._type=Token_1.Token.INVALID_TYPE;this._channel=Token_1.Token.DEFAULT_CHANNEL;this._tokenStartCharIndex=-1;this._tokenStartCharPositionInLine=-1;this._tokenStartLine=-1;this._text=undefined;this._hitEOF=false;this._mode=Lexer.DEFAULT_MODE;this._modeStack.clear();this.interpreter.reset();}/** Return a token from this source; i.e., match a token on the char
	     *  stream.
	     */},{key:'nextToken',value:function nextToken(){if(this._input==null){throw new Error("nextToken requires a non-null input stream.");}// Mark start location in char stream so unbuffered streams are
	// guaranteed at least have text of current token
	var tokenStartMarker=this._input.mark();try{outer:while(true){if(this._hitEOF){return this.emitEOF();}this._token=undefined;this._channel=Token_1.Token.DEFAULT_CHANNEL;this._tokenStartCharIndex=this._input.index;this._tokenStartCharPositionInLine=this.interpreter.charPositionInLine;this._tokenStartLine=this.interpreter.line;this._text=undefined;do{this._type=Token_1.Token.INVALID_TYPE;//				System.out.println("nextToken line "+tokenStartLine+" at "+((char)input.LA(1))+
	//								   " in mode "+mode+
	//								   " at index "+input.index);
	var ttype=void 0;try{ttype=this.interpreter.match(this._input,this._mode);}catch(e){if(e instanceof LexerNoViableAltException_1.LexerNoViableAltException){this.notifyListeners(e);// report error
	this.recover(e);ttype=Lexer.SKIP;}else {throw e;}}if(this._input.LA(1)===IntStream_1.IntStream.EOF){this._hitEOF=true;}if(this._type===Token_1.Token.INVALID_TYPE){this._type=ttype;}if(this._type===Lexer.SKIP){continue outer;}}while(this._type===Lexer.MORE);if(this._token==null){return this.emit();}return this._token;}}finally{// make sure we release marker after match or
	// unbuffered char stream will keep buffering
	this._input.release(tokenStartMarker);}}/** Instruct the lexer to skip creating a token for current lexer rule
	     *  and look for another token.  nextToken() knows to keep looking when
	     *  a lexer rule finishes with token set to SKIP_TOKEN.  Recall that
	     *  if token==undefined at end of any token rule, it creates one for you
	     *  and emits it.
	     */},{key:'skip',value:function skip(){this._type=Lexer.SKIP;}},{key:'more',value:function more(){this._type=Lexer.MORE;}},{key:'mode',value:function mode(m){this._mode=m;}},{key:'pushMode',value:function pushMode(m){if(LexerATNSimulator_1.LexerATNSimulator.debug){console.log("pushMode "+m);}this._modeStack.push(this._mode);this.mode(m);}},{key:'popMode',value:function popMode(){if(this._modeStack.isEmpty){throw new Error("EmptyStackException");}if(LexerATNSimulator_1.LexerATNSimulator.debug){console.log("popMode back to "+this._modeStack.peek());}this.mode(this._modeStack.pop());return this._mode;}},{key:'emit',value:function emit(token){if(!token){token=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.charIndex-1,this._tokenStartLine,this._tokenStartCharPositionInLine);}this._token=token;return token;}},{key:'emitEOF',value:function emitEOF(){var cpos=this.charPositionInLine;var line=this.line;var eof=this._factory.create(this._tokenFactorySourcePair,Token_1.Token.EOF,undefined,Token_1.Token.DEFAULT_CHANNEL,this._input.index,this._input.index-1,line,cpos);this.emit(eof);return eof;}},{key:'getAllTokens',/** Return a list of all Token objects in input char stream.
	     *  Forces load of all tokens. Does not include EOF token.
	     */value:function getAllTokens(){var tokens=[];var t=this.nextToken();while(t.type!==Token_1.Token.EOF){tokens.push(t);t=this.nextToken();}return tokens;}},{key:'notifyListeners',value:function notifyListeners(e){var text=this._input.getText(Interval_1.Interval.of(this._tokenStartCharIndex,this._input.index));var msg="token recognition error at: '"+this.getErrorDisplay(text)+"'";var listener=this.getErrorListenerDispatch();if(listener.syntaxError){listener.syntaxError(this,undefined,this._tokenStartLine,this._tokenStartCharPositionInLine,msg,e);}}},{key:'getErrorDisplay',value:function getErrorDisplay(s){if(typeof s==="number"){switch(s){case Token_1.Token.EOF:return "<EOF>";case 0x0a:return "\\n";case 0x09:return "\\t";case 0x0d:return "\\r";}return String.fromCharCode(s);}return s.replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/\r/g,"\\r");}},{key:'getCharErrorDisplay',value:function getCharErrorDisplay(c){var s=this.getErrorDisplay(c);return "'"+s+"'";}},{key:'recover',value:function recover(re){if(re instanceof LexerNoViableAltException_1.LexerNoViableAltException){if(this._input.LA(1)!==IntStream_1.IntStream.EOF){// skip a char and try again
	this.interpreter.consume(this._input);}}else {//System.out.println("consuming char "+(char)input.LA(1)+" during recovery");
	//re.printStackTrace();
	// TODO: Do we lose character or line position information?
	this._input.consume();}}},{key:'tokenFactory',get:function get(){return this._factory;}// @Override
	,set:function set(factory){this._factory=factory;}},{key:'inputStream',get:function get(){return this._input;}/** Set the char stream and reset the lexer */,set:function set(input){this.reset(false);this._input=input;this._tokenFactorySourcePair={source:this,stream:this._input};}},{key:'sourceName',get:function get(){return this._input.sourceName;}},{key:'line',get:function get(){return this.interpreter.line;},set:function set(line){this.interpreter.line=line;}},{key:'charPositionInLine',get:function get(){return this.interpreter.charPositionInLine;},set:function set(charPositionInLine){this.interpreter.charPositionInLine=charPositionInLine;}/** What is the index of the current character of lookahead? */},{key:'charIndex',get:function get(){return this._input.index;}/** Return the text matched so far for the current token or any
	     *  text override.
	     */},{key:'text',get:function get(){if(this._text!=null){return this._text;}return this.interpreter.getText(this._input);}/** Set the complete text of this token; it wipes any previous
	     *  changes to the text.
	     */,set:function set(text){this._text=text;}/** Override if emitting multiple tokens. */},{key:'token',get:function get(){return this._token;},set:function set(_token){this._token=_token;}},{key:'type',set:function set(ttype){this._type=ttype;},get:function get(){return this._type;}},{key:'channel',set:function set(channel){this._channel=channel;},get:function get(){return this._channel;}}],[{key:'DEFAULT_TOKEN_CHANNEL',get:function get(){return Token_1.Token.DEFAULT_CHANNEL;}},{key:'HIDDEN',get:function get(){return Token_1.Token.HIDDEN_CHANNEL;}}]);return Lexer;}(Recognizer_1.Recognizer);Lexer.DEFAULT_MODE=0;Lexer.MORE=-2;Lexer.SKIP=-3;Lexer.MIN_CHAR_VALUE=0x0000;Lexer.MAX_CHAR_VALUE=0x10FFFF;__decorate([Decorators_1.Override],Lexer.prototype,"nextToken",null);__decorate([Decorators_1.Override],Lexer.prototype,"tokenFactory",null);__decorate([Decorators_1.Override],Lexer.prototype,"inputStream",null);__decorate([Decorators_1.Override],Lexer.prototype,"sourceName",null);__decorate([Decorators_1.Override],Lexer.prototype,"line",null);__decorate([Decorators_1.Override],Lexer.prototype,"charPositionInLine",null);exports.Lexer=Lexer;},{"./CommonTokenFactory":221,"./Decorators":224,"./IntStream":230,"./LexerNoViableAltException":234,"./Recognizer":243,"./Token":248,"./atn/LexerATNSimulator":276,"./misc/IntegerStack":329,"./misc/Interval":330}],233:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Lexer_1=require("./Lexer");var LexerATNSimulator_1=require("./atn/LexerATNSimulator");var Decorators_1=require("./Decorators");var Decorators_2=require("./Decorators");var LexerInterpreter=function(_Lexer_1$Lexer3){inherits(LexerInterpreter,_Lexer_1$Lexer3);function LexerInterpreter(grammarFileName,vocabulary,ruleNames,channelNames,modeNames,atn,input){classCallCheck(this,LexerInterpreter);var _this235=possibleConstructorReturn(this,(LexerInterpreter.__proto__||Object.getPrototypeOf(LexerInterpreter)).call(this,input));if(atn.grammarType!==0/* LEXER */){throw new Error("IllegalArgumentException: The ATN must be a lexer ATN.");}_this235._grammarFileName=grammarFileName;_this235._atn=atn;_this235._ruleNames=ruleNames.slice(0);_this235._channelNames=channelNames.slice(0);_this235._modeNames=modeNames.slice(0);_this235._vocabulary=vocabulary;_this235._interp=new LexerATNSimulator_1.LexerATNSimulator(atn,_this235);return _this235;}createClass(LexerInterpreter,[{key:'atn',get:function get(){return this._atn;}},{key:'grammarFileName',get:function get(){return this._grammarFileName;}},{key:'ruleNames',get:function get(){return this._ruleNames;}},{key:'channelNames',get:function get(){return this._channelNames;}},{key:'modeNames',get:function get(){return this._modeNames;}},{key:'vocabulary',get:function get(){return this._vocabulary;}}]);return LexerInterpreter;}(Lexer_1.Lexer);__decorate([Decorators_1.NotNull],LexerInterpreter.prototype,"_vocabulary",void 0);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"atn",null);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"grammarFileName",null);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"ruleNames",null);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"channelNames",null);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"modeNames",null);__decorate([Decorators_2.Override],LexerInterpreter.prototype,"vocabulary",null);LexerInterpreter=__decorate([__param(1,Decorators_1.NotNull)],LexerInterpreter);exports.LexerInterpreter=LexerInterpreter;},{"./Decorators":224,"./Lexer":232,"./atn/LexerATNSimulator":276}],234:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var RecognitionException_1=require("./RecognitionException");var Decorators_1=require("./Decorators");var Interval_1=require("./misc/Interval");var Utils=require("./misc/Utils");var LexerNoViableAltException=function(_RecognitionException3){inherits(LexerNoViableAltException,_RecognitionException3);function LexerNoViableAltException(lexer,input,startIndex,deadEndConfigs){classCallCheck(this,LexerNoViableAltException);var _this236=possibleConstructorReturn(this,(LexerNoViableAltException.__proto__||Object.getPrototypeOf(LexerNoViableAltException)).call(this,lexer,input));_this236._startIndex=startIndex;_this236._deadEndConfigs=deadEndConfigs;return _this236;}createClass(LexerNoViableAltException,[{key:'toString',value:function toString(){var symbol="";if(this._startIndex>=0&&this._startIndex<this.inputStream.size){symbol=this.inputStream.getText(Interval_1.Interval.of(this._startIndex,this._startIndex));symbol=Utils.escapeWhitespace(symbol,false);}// return String.format(Locale.getDefault(), "%s('%s')", LexerNoViableAltException.class.getSimpleName(), symbol);
	return 'LexerNoViableAltException(\''+symbol+'\')';}},{key:'startIndex',get:function get(){return this._startIndex;}},{key:'deadEndConfigs',get:function get(){return this._deadEndConfigs;}},{key:'inputStream',get:function get$1(){return get(LexerNoViableAltException.prototype.__proto__||Object.getPrototypeOf(LexerNoViableAltException.prototype),'inputStream',this);}}]);return LexerNoViableAltException;}(RecognitionException_1.RecognitionException);__decorate([Decorators_1.Override],LexerNoViableAltException.prototype,"inputStream",null);__decorate([Decorators_1.Override],LexerNoViableAltException.prototype,"toString",null);LexerNoViableAltException=__decorate([__param(1,Decorators_1.NotNull)],LexerNoViableAltException);exports.LexerNoViableAltException=LexerNoViableAltException;},{"./Decorators":224,"./RecognitionException":242,"./misc/Interval":330,"./misc/Utils":337}],235:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var CommonTokenFactory_1=require("./CommonTokenFactory");var Decorators_1=require("./Decorators");var Token_1=require("./Token");/**
	 * Provides an implementation of {@link TokenSource} as a wrapper around a list
	 * of {@link Token} objects.
	 *
	 * If the final token in the list is an {@link Token#EOF} token, it will be used
	 * as the EOF token for every call to {@link #nextToken} after the end of the
	 * list is reached. Otherwise, an EOF token will be created.
	 */var ListTokenSource=function(){/**
	     * Constructs a new {@link ListTokenSource} instance from the specified
	     * collection of {@link Token} objects and source name.
	     *
	     * @param tokens The collection of {@link Token} objects to provide as a
	     * {@link TokenSource}.
	     * @param sourceName The name of the {@link TokenSource}. If this value is
	     * `undefined`, {@link #getSourceName} will attempt to infer the name from
	     * the next {@link Token} (or the previous token if the end of the input has
	     * been reached).
	     *
	     * @exception NullPointerException if `tokens` is `undefined`
	     */function ListTokenSource(tokens,sourceName){classCallCheck(this,ListTokenSource);/**
	         * The index into {@link #tokens} of token to return by the next call to
	         * {@link #nextToken}. The end of the input is indicated by this value
	         * being greater than or equal to the number of items in {@link #tokens}.
	         */this.i=0;/**
	         * This is the backing field for {@link #getTokenFactory} and
	         * {@link setTokenFactory}.
	         */this._factory=CommonTokenFactory_1.CommonTokenFactory.DEFAULT;if(tokens==null){throw new Error("tokens cannot be null");}this.tokens=tokens;this._sourceName=sourceName;}/**
	     * {@inheritDoc}
	     */createClass(ListTokenSource,[{key:'nextToken',/**
	     * {@inheritDoc}
	     */value:function nextToken(){if(this.i>=this.tokens.length){if(this.eofToken==null){var start=-1;if(this.tokens.length>0){var previousStop=this.tokens[this.tokens.length-1].stopIndex;if(previousStop!==-1){start=previousStop+1;}}var stop=Math.max(-1,start-1);this.eofToken=this._factory.create({source:this,stream:this.inputStream},Token_1.Token.EOF,"EOF",Token_1.Token.DEFAULT_CHANNEL,start,stop,this.line,this.charPositionInLine);}return this.eofToken;}var t=this.tokens[this.i];if(this.i===this.tokens.length-1&&t.type===Token_1.Token.EOF){this.eofToken=t;}this.i++;return t;}/**
	     * {@inheritDoc}
	     */},{key:'charPositionInLine',get:function get(){if(this.i<this.tokens.length){return this.tokens[this.i].charPositionInLine;}else if(this.eofToken!=null){return this.eofToken.charPositionInLine;}else if(this.tokens.length>0){// have to calculate the result from the line/column of the previous
	// token, along with the text of the token.
	var lastToken=this.tokens[this.tokens.length-1];var tokenText=lastToken.text;if(tokenText!=null){var lastNewLine=tokenText.lastIndexOf("\n");if(lastNewLine>=0){return tokenText.length-lastNewLine-1;}}return lastToken.charPositionInLine+lastToken.stopIndex-lastToken.startIndex+1;}// only reach this if tokens is empty, meaning EOF occurs at the first
	// position in the input
	return 0;}},{key:'line',get:function get(){if(this.i<this.tokens.length){return this.tokens[this.i].line;}else if(this.eofToken!=null){return this.eofToken.line;}else if(this.tokens.length>0){// have to calculate the result from the line/column of the previous
	// token, along with the text of the token.
	var lastToken=this.tokens[this.tokens.length-1];var line=lastToken.line;var tokenText=lastToken.text;if(tokenText!=null){for(var i=0;i<tokenText.length;i++){if(tokenText.charAt(i)==="\n"){line++;}}}// if no text is available, assume the token did not contain any newline characters.
	return line;}// only reach this if tokens is empty, meaning EOF occurs at the first
	// position in the input
	return 1;}/**
	     * {@inheritDoc}
	     */},{key:'inputStream',get:function get(){if(this.i<this.tokens.length){return this.tokens[this.i].inputStream;}else if(this.eofToken!=null){return this.eofToken.inputStream;}else if(this.tokens.length>0){return this.tokens[this.tokens.length-1].inputStream;}// no input stream information is available
	return undefined;}/**
	     * {@inheritDoc}
	     */},{key:'sourceName',get:function get(){if(this._sourceName){return this._sourceName;}var inputStream=this.inputStream;if(inputStream!=null){return inputStream.sourceName;}return "List";}/**
	     * {@inheritDoc}
	     */// @Override
	},{key:'tokenFactory',set:function set(factory){this._factory=factory;}/**
	     * {@inheritDoc}
	     */,get:function get(){return this._factory;}}]);return ListTokenSource;}();__decorate([Decorators_1.Override],ListTokenSource.prototype,"charPositionInLine",null);__decorate([Decorators_1.Override],ListTokenSource.prototype,"nextToken",null);__decorate([Decorators_1.Override],ListTokenSource.prototype,"line",null);__decorate([Decorators_1.Override],ListTokenSource.prototype,"inputStream",null);__decorate([Decorators_1.Override],ListTokenSource.prototype,"sourceName",null);__decorate([Decorators_1.Override,Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ListTokenSource.prototype,"tokenFactory",null);ListTokenSource=__decorate([__param(0,Decorators_1.NotNull)],ListTokenSource);exports.ListTokenSource=ListTokenSource;},{"./CommonTokenFactory":221,"./Decorators":224,"./Token":248}],236:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Parser_1=require("./Parser");var RecognitionException_1=require("./RecognitionException");var Decorators_1=require("./Decorators");/** Indicates that the parser could not decide which of two or more paths
	 *  to take based upon the remaining input. It tracks the starting token
	 *  of the offending input and also knows where the parser was
	 *  in the various paths when the error. Reported by reportNoViableAlternative()
	 */var NoViableAltException=function(_RecognitionException4){inherits(NoViableAltException,_RecognitionException4);function NoViableAltException(recognizer,input,startToken,offendingToken,deadEndConfigs,ctx){classCallCheck(this,NoViableAltException);if(recognizer instanceof Parser_1.Parser){if(input===undefined){input=recognizer.inputStream;}if(startToken===undefined){startToken=recognizer.currentToken;}if(offendingToken===undefined){offendingToken=recognizer.currentToken;}if(ctx===undefined){ctx=recognizer.context;}}var _this237=possibleConstructorReturn(this,(NoViableAltException.__proto__||Object.getPrototypeOf(NoViableAltException)).call(this,recognizer,input,ctx));_this237._deadEndConfigs=deadEndConfigs;_this237._startToken=startToken;_this237.setOffendingToken(recognizer,offendingToken);return _this237;}createClass(NoViableAltException,[{key:'startToken',get:function get(){return this._startToken;}},{key:'deadEndConfigs',get:function get(){return this._deadEndConfigs;}}]);return NoViableAltException;}(RecognitionException_1.RecognitionException);__decorate([Decorators_1.NotNull],NoViableAltException.prototype,"_startToken",void 0);exports.NoViableAltException=NoViableAltException;},{"./Decorators":224,"./Parser":237,"./RecognitionException":242}],237:[function(require,module,exports){(function(process){(function(){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value);}).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,"__esModule",{value:true});var Utils=require("./misc/Utils");var ATNDeserializationOptions_1=require("./atn/ATNDeserializationOptions");var ATNDeserializer_1=require("./atn/ATNDeserializer");var DefaultErrorStrategy_1=require("./DefaultErrorStrategy");var ErrorNode_1=require("./tree/ErrorNode");var IntegerStack_1=require("./misc/IntegerStack");var Lexer_1=require("./Lexer");var Decorators_1=require("./Decorators");var ParseInfo_1=require("./atn/ParseInfo");var ParserATNSimulator_1=require("./atn/ParserATNSimulator");var ProxyParserErrorListener_1=require("./ProxyParserErrorListener");var Recognizer_1=require("./Recognizer");var TerminalNode_1=require("./tree/TerminalNode");var Token_1=require("./Token");var TraceListener=function(){function TraceListener(ruleNames,tokenStream){classCallCheck(this,TraceListener);this.ruleNames=ruleNames;this.tokenStream=tokenStream;}createClass(TraceListener,[{key:'enterEveryRule',value:function enterEveryRule(ctx){console.log("enter   "+this.ruleNames[ctx.ruleIndex]+", LT(1)="+this.tokenStream.LT(1).text);}},{key:'exitEveryRule',value:function exitEveryRule(ctx){console.log("exit    "+this.ruleNames[ctx.ruleIndex]+", LT(1)="+this.tokenStream.LT(1).text);}},{key:'visitErrorNode',value:function visitErrorNode(node){// intentionally empty
	}},{key:'visitTerminal',value:function visitTerminal(node){var parent=node.parent.ruleContext;var token=node.symbol;console.log("consume "+token+" rule "+this.ruleNames[parent.ruleIndex]);}}]);return TraceListener;}();__decorate([Decorators_1.Override],TraceListener.prototype,"enterEveryRule",null);__decorate([Decorators_1.Override],TraceListener.prototype,"exitEveryRule",null);__decorate([Decorators_1.Override],TraceListener.prototype,"visitErrorNode",null);__decorate([Decorators_1.Override],TraceListener.prototype,"visitTerminal",null);/** This is all the parsing support code essentially; most of it is error recovery stuff. */var Parser=function(_Recognizer_1$Recogni2){inherits(Parser,_Recognizer_1$Recogni2);function Parser(input){classCallCheck(this,Parser);/**
	         * The error handling strategy for the parser. The default value is a new
	         * instance of {@link DefaultErrorStrategy}.
	         *
	         * @see #getErrorHandler
	         * @see #setErrorHandler
	         */var _this238=possibleConstructorReturn(this,(Parser.__proto__||Object.getPrototypeOf(Parser)).call(this));_this238._errHandler=new DefaultErrorStrategy_1.DefaultErrorStrategy();_this238._precedenceStack=new IntegerStack_1.IntegerStack();/**
	         * Specifies whether or not the parser should construct a parse tree during
	         * the parsing process. The default value is `true`.
	         *
	         * @see `buildParseTree`
	         */_this238._buildParseTrees=true;/**
	         * The list of {@link ParseTreeListener} listeners registered to receive
	         * events during the parse.
	         *
	         * @see #addParseListener
	         */_this238._parseListeners=[];/**
	         * The number of syntax errors reported during parsing. This value is
	         * incremented each time {@link #notifyErrorListeners} is called.
	         */_this238._syntaxErrors=0;/** Indicates parser has match()ed EOF token. See {@link #exitRule()}. */_this238.matchedEOF=false;_this238._precedenceStack.push(0);_this238.inputStream=input;return _this238;}createClass(Parser,[{key:'reset',value:function reset(resetInput){// Note: this method executes when not parsing, so _ctx can be undefined
	if(resetInput===undefined||resetInput){this.inputStream.seek(0);}this._errHandler.reset(this);this._ctx=undefined;this._syntaxErrors=0;this.matchedEOF=false;this.isTrace=false;this._precedenceStack.clear();this._precedenceStack.push(0);var interpreter=this.interpreter;if(interpreter!=null){interpreter.reset();}}/**
	     * Match current input symbol against `ttype`. If the symbol type
	     * matches, {@link ANTLRErrorStrategy#reportMatch} and {@link #consume} are
	     * called to complete the match process.
	     *
	     * If the symbol type does not match,
	     * {@link ANTLRErrorStrategy#recoverInline} is called on the current error
	     * strategy to attempt recovery. If {@link #getBuildParseTree} is
	     * `true` and the token index of the symbol returned by
	     * {@link ANTLRErrorStrategy#recoverInline} is -1, the symbol is added to
	     * the parse tree by calling {@link #createErrorNode(ParserRuleContext, Token)} then
	     * {@link ParserRuleContext#addErrorNode(ErrorNode)}.
	     *
	     * @param ttype the token type to match
	     * @returns the matched symbol
	     * @ if the current input symbol did not match
	     * `ttype` and the error strategy could not recover from the
	     * mismatched symbol
	     */},{key:'match',value:function match(ttype){var t=this.currentToken;if(t.type===ttype){if(ttype===Token_1.Token.EOF){this.matchedEOF=true;}this._errHandler.reportMatch(this);this.consume();}else {t=this._errHandler.recoverInline(this);if(this._buildParseTrees&&t.tokenIndex===-1){// we must have conjured up a new token during single token insertion
	// if it's not the current symbol
	this._ctx.addErrorNode(this.createErrorNode(this._ctx,t));}}return t;}/**
	     * Match current input symbol as a wildcard. If the symbol type matches
	     * (i.e. has a value greater than 0), {@link ANTLRErrorStrategy#reportMatch}
	     * and {@link #consume} are called to complete the match process.
	     *
	     * If the symbol type does not match,
	     * {@link ANTLRErrorStrategy#recoverInline} is called on the current error
	     * strategy to attempt recovery. If {@link #getBuildParseTree} is
	     * `true` and the token index of the symbol returned by
	     * {@link ANTLRErrorStrategy#recoverInline} is -1, the symbol is added to
	     * the parse tree by calling {@link Parser#createErrorNode(ParserRuleContext, Token)} then
	     * {@link ParserRuleContext#addErrorNode(ErrorNode)}.
	     *
	     * @returns the matched symbol
	     * @ if the current input symbol did not match
	     * a wildcard and the error strategy could not recover from the mismatched
	     * symbol
	     */},{key:'matchWildcard',value:function matchWildcard(){var t=this.currentToken;if(t.type>0){this._errHandler.reportMatch(this);this.consume();}else {t=this._errHandler.recoverInline(this);if(this._buildParseTrees&&t.tokenIndex===-1){// we must have conjured up a new token during single token insertion
	// if it's not the current symbol
	this._ctx.addErrorNode(this.createErrorNode(this._ctx,t));}}return t;}/**
	     * Track the {@link ParserRuleContext} objects during the parse and hook
	     * them up using the {@link ParserRuleContext#children} list so that it
	     * forms a parse tree. The {@link ParserRuleContext} returned from the start
	     * rule represents the root of the parse tree.
	     *
	     * Note that if we are not building parse trees, rule contexts only point
	     * upwards. When a rule exits, it returns the context but that gets garbage
	     * collected if nobody holds a reference. It points upwards but nobody
	     * points at it.
	     *
	     * When we build parse trees, we are adding all of these contexts to
	     * {@link ParserRuleContext#children} list. Contexts are then not candidates
	     * for garbage collection.
	     */},{key:'getParseListeners',value:function getParseListeners(){return this._parseListeners;}/**
	     * Registers `listener` to receive events during the parsing process.
	     *
	     * To support output-preserving grammar transformations (including but not
	     * limited to left-recursion removal, automated left-factoring, and
	     * optimized code generation), calls to listener methods during the parse
	     * may differ substantially from calls made by
	     * {@link ParseTreeWalker#DEFAULT} used after the parse is complete. In
	     * particular, rule entry and exit events may occur in a different order
	     * during the parse than after the parser. In addition, calls to certain
	     * rule entry methods may be omitted.
	     *
	     * With the following specific exceptions, calls to listener events are
	     * *deterministic*, i.e. for identical input the calls to listener
	     * methods will be the same.
	     *
	     * * Alterations to the grammar used to generate code may change the
	     *   behavior of the listener calls.
	     * * Alterations to the command line options passed to ANTLR 4 when
	     *   generating the parser may change the behavior of the listener calls.
	     * * Changing the version of the ANTLR Tool used to generate the parser
	     *   may change the behavior of the listener calls.
	     *
	     * @param listener the listener to add
	     *
	     * @throws {@link TypeError} if `listener` is `undefined`
	     */},{key:'addParseListener',value:function addParseListener(listener){if(listener==null){throw new TypeError("listener cannot be null");}this._parseListeners.push(listener);}/**
	     * Remove `listener` from the list of parse listeners.
	     *
	     * If `listener` is `undefined` or has not been added as a parse
	     * listener, this method does nothing.
	     *
	     * @see #addParseListener
	     *
	     * @param listener the listener to remove
	     */},{key:'removeParseListener',value:function removeParseListener(listener){var index=this._parseListeners.findIndex(function(l){return l===listener;});if(index!==-1){this._parseListeners.splice(index,1);}}/**
	     * Remove all parse listeners.
	     *
	     * @see #addParseListener
	     */},{key:'removeParseListeners',value:function removeParseListeners(){this._parseListeners.length=0;}/**
	     * Notify any parse listeners of an enter rule event.
	     *
	     * @see #addParseListener
	     */},{key:'triggerEnterRuleEvent',value:function triggerEnterRuleEvent(){var _iteratorNormalCompletion72=true;var _didIteratorError72=false;var _iteratorError72=undefined;try{for(var _iterator72=this._parseListeners[Symbol.iterator](),_step72;!(_iteratorNormalCompletion72=(_step72=_iterator72.next()).done);_iteratorNormalCompletion72=true){var listener=_step72.value;if(listener.enterEveryRule){listener.enterEveryRule(this._ctx);}this._ctx.enterRule(listener);}}catch(err){_didIteratorError72=true;_iteratorError72=err;}finally{try{if(!_iteratorNormalCompletion72&&_iterator72.return){_iterator72.return();}}finally{if(_didIteratorError72){throw _iteratorError72;}}}}/**
	     * Notify any parse listeners of an exit rule event.
	     *
	     * @see #addParseListener
	     */},{key:'triggerExitRuleEvent',value:function triggerExitRuleEvent(){// reverse order walk of listeners
	for(var i=this._parseListeners.length-1;i>=0;i--){var listener=this._parseListeners[i];this._ctx.exitRule(listener);if(listener.exitEveryRule){listener.exitEveryRule(this._ctx);}}}/**
	     * Gets the number of syntax errors reported during parsing. This value is
	     * incremented each time {@link #notifyErrorListeners} is called.
	     *
	     * @see #notifyErrorListeners
	     */},{key:'getATNWithBypassAlts',/**
	     * The ATN with bypass alternatives is expensive to create so we create it
	     * lazily.
	     *
	     * @ if the current parser does not
	     * implement the `serializedATN` property.
	     */value:function getATNWithBypassAlts(){var serializedAtn=this.serializedATN;if(serializedAtn==null){throw new Error("The current parser does not support an ATN with bypass alternatives.");}var result=Parser.bypassAltsAtnCache.get(serializedAtn);if(result==null){var deserializationOptions=new ATNDeserializationOptions_1.ATNDeserializationOptions();deserializationOptions.isGenerateRuleBypassTransitions=true;result=new ATNDeserializer_1.ATNDeserializer(deserializationOptions).deserialize(Utils.toCharArray(serializedAtn));Parser.bypassAltsAtnCache.set(serializedAtn,result);}return result;}},{key:'compileParseTreePattern',value:function compileParseTreePattern(pattern,patternRuleIndex,lexer){return __awaiter(this,void 0,void 0,/*#__PURE__*/regeneratorRuntime.mark(function _callee(){var tokenSource,currentLexer,m,matcher;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(lexer){_context.next=4;break;}if(this.inputStream){tokenSource=this.inputStream.tokenSource;if(tokenSource instanceof Lexer_1.Lexer){lexer=tokenSource;}}if(lexer){_context.next=4;break;}throw new Error("Parser can't discover a lexer to use");case 4:currentLexer=lexer;_context.next=7;return Promise.resolve().then(function(){return require("./tree/pattern/ParseTreePatternMatcher");});case 7:m=_context.sent;matcher=new m.ParseTreePatternMatcher(currentLexer,this);return _context.abrupt('return',matcher.compile(pattern,patternRuleIndex));case 10:case'end':return _context.stop();}}},_callee,this);}));}},{key:'notifyErrorListeners',value:function notifyErrorListeners(msg,offendingToken,e){if(offendingToken===undefined){offendingToken=this.currentToken;}else if(offendingToken===null){offendingToken=undefined;}this._syntaxErrors++;var line=-1;var charPositionInLine=-1;if(offendingToken!=null){line=offendingToken.line;charPositionInLine=offendingToken.charPositionInLine;}var listener=this.getErrorListenerDispatch();if(listener.syntaxError){listener.syntaxError(this,offendingToken,line,charPositionInLine,msg,e);}}/**
	     * Consume and return the [current symbol](`currentToken`).
	     *
	     * E.g., given the following input with `A` being the current
	     * lookahead symbol, this function moves the cursor to `B` and returns
	     * `A`.
	     *
	     * ```
	     * A B
	     * ^
	     * ```
	     *
	     * If the parser is not in error recovery mode, the consumed symbol is added
	     * to the parse tree using {@link ParserRuleContext#addChild(TerminalNode)}, and
	     * {@link ParseTreeListener#visitTerminal} is called on any parse listeners.
	     * If the parser *is* in error recovery mode, the consumed symbol is
	     * added to the parse tree using {@link #createErrorNode(ParserRuleContext, Token)} then
	     * {@link ParserRuleContext#addErrorNode(ErrorNode)} and
	     * {@link ParseTreeListener#visitErrorNode} is called on any parse
	     * listeners.
	     */},{key:'consume',value:function consume(){var o=this.currentToken;if(o.type!==Parser.EOF){this.inputStream.consume();}var hasListener=this._parseListeners.length!==0;if(this._buildParseTrees||hasListener){if(this._errHandler.inErrorRecoveryMode(this)){var node=this._ctx.addErrorNode(this.createErrorNode(this._ctx,o));if(hasListener){var _iteratorNormalCompletion73=true;var _didIteratorError73=false;var _iteratorError73=undefined;try{for(var _iterator73=this._parseListeners[Symbol.iterator](),_step73;!(_iteratorNormalCompletion73=(_step73=_iterator73.next()).done);_iteratorNormalCompletion73=true){var listener=_step73.value;if(listener.visitErrorNode){listener.visitErrorNode(node);}}}catch(err){_didIteratorError73=true;_iteratorError73=err;}finally{try{if(!_iteratorNormalCompletion73&&_iterator73.return){_iterator73.return();}}finally{if(_didIteratorError73){throw _iteratorError73;}}}}}else {var _node=this.createTerminalNode(this._ctx,o);this._ctx.addChild(_node);if(hasListener){var _iteratorNormalCompletion74=true;var _didIteratorError74=false;var _iteratorError74=undefined;try{for(var _iterator74=this._parseListeners[Symbol.iterator](),_step74;!(_iteratorNormalCompletion74=(_step74=_iterator74.next()).done);_iteratorNormalCompletion74=true){var _listener=_step74.value;if(_listener.visitTerminal){_listener.visitTerminal(_node);}}}catch(err){_didIteratorError74=true;_iteratorError74=err;}finally{try{if(!_iteratorNormalCompletion74&&_iterator74.return){_iterator74.return();}}finally{if(_didIteratorError74){throw _iteratorError74;}}}}}}return o;}/**
	     * How to create a token leaf node associated with a parent.
	     * Typically, the terminal node to create is not a function of the parent.
	     *
	     * @since 4.7
	     */},{key:'createTerminalNode',value:function createTerminalNode(parent,t){return new TerminalNode_1.TerminalNode(t);}/**
	     * How to create an error node, given a token, associated with a parent.
	     * Typically, the error node to create is not a function of the parent.
	     *
	     * @since 4.7
	     */},{key:'createErrorNode',value:function createErrorNode(parent,t){return new ErrorNode_1.ErrorNode(t);}},{key:'addContextToParseTree',value:function addContextToParseTree(){var parent=this._ctx._parent;// add current context to parent if we have a parent
	if(parent!=null){parent.addChild(this._ctx);}}/**
	     * Always called by generated parsers upon entry to a rule. Access field
	     * {@link #_ctx} get the current context.
	     */},{key:'enterRule',value:function enterRule(localctx,state,ruleIndex){this.state=state;this._ctx=localctx;this._ctx._start=this._input.LT(1);if(this._buildParseTrees){this.addContextToParseTree();}this.triggerEnterRuleEvent();}},{key:'enterLeftFactoredRule',value:function enterLeftFactoredRule(localctx,state,ruleIndex){this.state=state;if(this._buildParseTrees){var factoredContext=this._ctx.getChild(this._ctx.childCount-1);this._ctx.removeLastChild();factoredContext._parent=localctx;localctx.addChild(factoredContext);}this._ctx=localctx;this._ctx._start=this._input.LT(1);if(this._buildParseTrees){this.addContextToParseTree();}this.triggerEnterRuleEvent();}},{key:'exitRule',value:function exitRule(){if(this.matchedEOF){// if we have matched EOF, it cannot consume past EOF so we use LT(1) here
	this._ctx._stop=this._input.LT(1);// LT(1) will be end of file
	}else {this._ctx._stop=this._input.tryLT(-1);// stop node is what we just matched
	}// trigger event on _ctx, before it reverts to parent
	this.triggerExitRuleEvent();this.state=this._ctx.invokingState;this._ctx=this._ctx._parent;}},{key:'enterOuterAlt',value:function enterOuterAlt(localctx,altNum){localctx.altNumber=altNum;// if we have new localctx, make sure we replace existing ctx
	// that is previous child of parse tree
	if(this._buildParseTrees&&this._ctx!==localctx){var parent=this._ctx._parent;if(parent!=null){parent.removeLastChild();parent.addChild(localctx);}}this._ctx=localctx;}/**
	     * Get the precedence level for the top-most precedence rule.
	     *
	     * @returns The precedence level for the top-most precedence rule, or -1 if
	     * the parser context is not nested within a precedence rule.
	     */},{key:'enterRecursionRule',value:function enterRecursionRule(localctx,state,ruleIndex,precedence){this.state=state;this._precedenceStack.push(precedence);this._ctx=localctx;this._ctx._start=this._input.LT(1);this.triggerEnterRuleEvent();// simulates rule entry for left-recursive rules
	}/** Like {@link #enterRule} but for recursive rules.
	     *  Make the current context the child of the incoming localctx.
	     */},{key:'pushNewRecursionContext',value:function pushNewRecursionContext(localctx,state,ruleIndex){var previous=this._ctx;previous._parent=localctx;previous.invokingState=state;previous._stop=this._input.tryLT(-1);this._ctx=localctx;this._ctx._start=previous._start;if(this._buildParseTrees){this._ctx.addChild(previous);}this.triggerEnterRuleEvent();// simulates rule entry for left-recursive rules
	}},{key:'unrollRecursionContexts',value:function unrollRecursionContexts(_parentctx){this._precedenceStack.pop();this._ctx._stop=this._input.tryLT(-1);var retctx=this._ctx;// save current ctx (return value)
	// unroll so _ctx is as it was before call to recursive method
	if(this._parseListeners.length>0){while(this._ctx!==_parentctx){this.triggerExitRuleEvent();this._ctx=this._ctx._parent;}}else {this._ctx=_parentctx;}// hook into tree
	retctx._parent=_parentctx;if(this._buildParseTrees&&_parentctx!=null){// add return ctx into invoking rule's tree
	_parentctx.addChild(retctx);}}},{key:'getInvokingContext',value:function getInvokingContext(ruleIndex){var p=this._ctx;while(p&&p.ruleIndex!==ruleIndex){p=p._parent;}return p;}},{key:'precpred',value:function precpred(localctx,precedence){return precedence>=this._precedenceStack.peek();}},{key:'getErrorListenerDispatch',value:function getErrorListenerDispatch(){return new ProxyParserErrorListener_1.ProxyParserErrorListener(this.getErrorListeners());}},{key:'inContext',value:function inContext(context){// TODO: useful in parser?
	return false;}/**
	     * Checks whether or not `symbol` can follow the current state in the
	     * ATN. The behavior of this method is equivalent to the following, but is
	     * implemented such that the complete context-sensitive follow set does not
	     * need to be explicitly constructed.
	     *
	     * ```
	     * return getExpectedTokens().contains(symbol);
	     * ```
	     *
	     * @param symbol the symbol type to check
	     * @returns `true` if `symbol` can follow the current state in
	     * the ATN, otherwise `false`.
	     */},{key:'isExpectedToken',value:function isExpectedToken(symbol){//   		return interpreter.atn.nextTokens(_ctx);
	var atn=this.interpreter.atn;var ctx=this._ctx;var s=atn.states[this.state];var following=atn.nextTokens(s);if(following.contains(symbol)){return true;}//        System.out.println("following "+s+"="+following);
	if(!following.contains(Token_1.Token.EPSILON)){return false;}while(ctx!=null&&ctx.invokingState>=0&&following.contains(Token_1.Token.EPSILON)){var invokingState=atn.states[ctx.invokingState];var rt=invokingState.transition(0);following=atn.nextTokens(rt.followState);if(following.contains(symbol)){return true;}ctx=ctx._parent;}if(following.contains(Token_1.Token.EPSILON)&&symbol===Token_1.Token.EOF){return true;}return false;}},{key:'getExpectedTokens',/**
	     * Computes the set of input symbols which could follow the current parser
	     * state and context, as given by {@link #getState} and {@link #getContext},
	     * respectively.
	     *
	     * @see ATN#getExpectedTokens(int, RuleContext)
	     */value:function getExpectedTokens(){return this.atn.getExpectedTokens(this.state,this.context);}},{key:'getExpectedTokensWithinCurrentRule',value:function getExpectedTokensWithinCurrentRule(){var atn=this.interpreter.atn;var s=atn.states[this.state];return atn.nextTokens(s);}/** Get a rule's index (i.e., `RULE_ruleName` field) or -1 if not found. */},{key:'getRuleIndex',value:function getRuleIndex(ruleName){var ruleIndex=this.getRuleIndexMap().get(ruleName);if(ruleIndex!=null){return ruleIndex;}return -1;}},{key:'getRuleInvocationStack',/** Return List&lt;String&gt; of the rule names in your parser instance
	     *  leading up to a call to the current rule.  You could override if
	     *  you want more details such as the file/line info of where
	     *  in the ATN a rule is invoked.
	     *
	     *  This is very useful for error messages.
	     */value:function getRuleInvocationStack(){var ctx=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this._ctx;var p=ctx;// Workaround for Microsoft/TypeScript#14487
	var ruleNames=this.ruleNames;var stack=[];while(p!=null){// compute what follows who invoked us
	var ruleIndex=p.ruleIndex;if(ruleIndex<0){stack.push("n/a");}else {stack.push(ruleNames[ruleIndex]);}p=p._parent;}return stack;}/** For debugging and other purposes. */},{key:'getDFAStrings',value:function getDFAStrings(){var s=[];var _iteratorNormalCompletion75=true;var _didIteratorError75=false;var _iteratorError75=undefined;try{for(var _iterator75=this._interp.atn.decisionToDFA[Symbol.iterator](),_step75;!(_iteratorNormalCompletion75=(_step75=_iterator75.next()).done);_iteratorNormalCompletion75=true){var dfa=_step75.value;s.push(dfa.toString(this.vocabulary,this.ruleNames));}}catch(err){_didIteratorError75=true;_iteratorError75=err;}finally{try{if(!_iteratorNormalCompletion75&&_iterator75.return){_iterator75.return();}}finally{if(_didIteratorError75){throw _iteratorError75;}}}return s;}/** For debugging and other purposes. */},{key:'dumpDFA',value:function dumpDFA(){var seenOne=false;var _iteratorNormalCompletion76=true;var _didIteratorError76=false;var _iteratorError76=undefined;try{for(var _iterator76=this._interp.atn.decisionToDFA[Symbol.iterator](),_step76;!(_iteratorNormalCompletion76=(_step76=_iterator76.next()).done);_iteratorNormalCompletion76=true){var dfa=_step76.value;if(!dfa.isEmpty){if(seenOne){console.log();}console.log("Decision "+dfa.decision+":");process.stdout.write(dfa.toString(this.vocabulary,this.ruleNames));seenOne=true;}}}catch(err){_didIteratorError76=true;_iteratorError76=err;}finally{try{if(!_iteratorNormalCompletion76&&_iterator76.return){_iterator76.return();}}finally{if(_didIteratorError76){throw _iteratorError76;}}}}},{key:'setProfile',/**
	     * @since 4.3
	     */value:function setProfile(profile){return __awaiter(this,void 0,void 0,/*#__PURE__*/regeneratorRuntime.mark(function _callee2(){var m,interp;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.resolve().then(function(){return require("./atn/ProfilingATNSimulator");});case 2:m=_context2.sent;interp=this.interpreter;if(profile){if(!(interp instanceof m.ProfilingATNSimulator)){this.interpreter=new m.ProfilingATNSimulator(this);}}else if(interp instanceof m.ProfilingATNSimulator){this.interpreter=new ParserATNSimulator_1.ParserATNSimulator(this.atn,this);}this.interpreter.setPredictionMode(interp.getPredictionMode());case 6:case'end':return _context2.stop();}}},_callee2,this);}));}/** During a parse is sometimes useful to listen in on the rule entry and exit
	     *  events as well as token matches. This is for quick and dirty debugging.
	     */},{key:'buildParseTree',set:function set(buildParseTrees){this._buildParseTrees=buildParseTrees;}/**
	     * Gets whether or not a complete parse tree will be constructed while
	     * parsing. This property is `true` for a newly constructed parser.
	     *
	     * @returns `true` if a complete parse tree will be constructed while
	     * parsing, otherwise `false`
	     */,get:function get(){return this._buildParseTrees;}},{key:'numberOfSyntaxErrors',get:function get(){return this._syntaxErrors;}},{key:'tokenFactory',get:function get(){return this._input.tokenSource.tokenFactory;}},{key:'errorHandler',get:function get(){return this._errHandler;},set:function set(handler){this._errHandler=handler;}},{key:'inputStream',get:function get(){return this._input;}/** Set the token stream and reset the parser. */,set:function set(input){this.reset(false);this._input=input;}/** Match needs to return the current input symbol, which gets put
	     *  into the label for the associated token ref; e.g., x=ID.
	     */},{key:'currentToken',get:function get(){return this._input.LT(1);}},{key:'precedence',get:function get(){if(this._precedenceStack.isEmpty){return -1;}return this._precedenceStack.peek();}},{key:'context',get:function get(){return this._ctx;},set:function set(ctx){this._ctx=ctx;}},{key:'isMatchedEOF',get:function get(){return this.matchedEOF;}},{key:'ruleContext',get:function get(){return this._ctx;}},{key:'sourceName',get:function get(){return this._input.sourceName;}},{key:'parseInfo',get:function get(){var _this239=this;return Promise.resolve().then(function(){return require("./atn/ProfilingATNSimulator");}).then(function(m){var interp=_this239.interpreter;if(interp instanceof m.ProfilingATNSimulator){return new ParseInfo_1.ParseInfo(interp);}return undefined;});}},{key:'isTrace',set:function set(trace){if(!trace){if(this._tracer){this.removeParseListener(this._tracer);this._tracer=undefined;}}else {if(this._tracer){this.removeParseListener(this._tracer);}else {this._tracer=new TraceListener(this.ruleNames,this._input);}this.addParseListener(this._tracer);}}/**
	     * Gets whether a {@link TraceListener} is registered as a parse listener
	     * for the parser.
	     */,get:function get(){return this._tracer!=null;}}]);return Parser;}(Recognizer_1.Recognizer);/**
	 * This field maps from the serialized ATN string to the deserialized {@link ATN} with
	 * bypass alternatives.
	 *
	 * @see ATNDeserializationOptions.isGenerateRuleBypassTransitions
	 */Parser.bypassAltsAtnCache=new Map();__decorate([Decorators_1.NotNull],Parser.prototype,"_errHandler",void 0);__decorate([Decorators_1.NotNull],Parser.prototype,"match",null);__decorate([Decorators_1.NotNull],Parser.prototype,"matchWildcard",null);__decorate([Decorators_1.NotNull],Parser.prototype,"getParseListeners",null);__decorate([__param(0,Decorators_1.NotNull)],Parser.prototype,"addParseListener",null);__decorate([Decorators_1.NotNull],Parser.prototype,"getATNWithBypassAlts",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],Parser.prototype,"errorHandler",null);__decorate([Decorators_1.Override],Parser.prototype,"inputStream",null);__decorate([Decorators_1.NotNull],Parser.prototype,"currentToken",null);__decorate([__param(0,Decorators_1.NotNull)],Parser.prototype,"enterRule",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.Nullable)],Parser.prototype,"precpred",null);__decorate([Decorators_1.Override],Parser.prototype,"getErrorListenerDispatch",null);__decorate([Decorators_1.NotNull],Parser.prototype,"getExpectedTokens",null);__decorate([Decorators_1.NotNull],Parser.prototype,"getExpectedTokensWithinCurrentRule",null);__decorate([Decorators_1.Override],Parser.prototype,"parseInfo",null);exports.Parser=Parser;}).call(this);}).call(this,require('_process'));},{"./Decorators":224,"./DefaultErrorStrategy":225,"./Lexer":232,"./ProxyParserErrorListener":241,"./Recognizer":243,"./Token":248,"./atn/ATNDeserializationOptions":254,"./atn/ATNDeserializer":255,"./atn/ParseInfo":291,"./atn/ParserATNSimulator":292,"./atn/ProfilingATNSimulator":301,"./misc/IntegerStack":329,"./misc/Utils":337,"./tree/ErrorNode":339,"./tree/TerminalNode":343,"./tree/pattern/ParseTreePatternMatcher":349,"_process":516}],238:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ATNState_1=require("./atn/ATNState");var ATNStateType_1=require("./atn/ATNStateType");var BitSet_1=require("./misc/BitSet");var FailedPredicateException_1=require("./FailedPredicateException");var InputMismatchException_1=require("./InputMismatchException");var InterpreterRuleContext_1=require("./InterpreterRuleContext");var LoopEndState_1=require("./atn/LoopEndState");var Decorators_1=require("./Decorators");var Decorators_2=require("./Decorators");var Parser_1=require("./Parser");var ParserATNSimulator_1=require("./atn/ParserATNSimulator");var RecognitionException_1=require("./RecognitionException");var StarLoopEntryState_1=require("./atn/StarLoopEntryState");var Token_1=require("./Token");/** A parser simulator that mimics what ANTLR's generated
	 *  parser code does. A ParserATNSimulator is used to make
	 *  predictions via adaptivePredict but this class moves a pointer through the
	 *  ATN to simulate parsing. ParserATNSimulator just
	 *  makes us efficient rather than having to backtrack, for example.
	 *
	 *  This properly creates parse trees even for left recursive rules.
	 *
	 *  We rely on the left recursive rule invocation and special predicate
	 *  transitions to make left recursive rules work.
	 *
	 *  See TestParserInterpreter for examples.
	 */var ParserInterpreter=function(_Parser_1$Parser3){inherits(ParserInterpreter,_Parser_1$Parser3);function ParserInterpreter(grammarFileName,vocabulary,ruleNames,atn,input){classCallCheck(this,ParserInterpreter);/** This stack corresponds to the _parentctx, _parentState pair of locals
	         *  that would exist on call stack frames with a recursive descent parser;
	         *  in the generated function for a left-recursive rule you'd see:
	         *
	         *  private EContext e(int _p) {
	         *      ParserRuleContext _parentctx = _ctx;    // Pair.a
	         *      int _parentState = state;          // Pair.b
	         *      ...
	         *  }
	         *
	         *  Those values are used to create new recursive rule invocation contexts
	         *  associated with left operand of an alt like "expr '*' expr".
	         */var _this240=possibleConstructorReturn(this,(ParserInterpreter.__proto__||Object.getPrototypeOf(ParserInterpreter)).call(this,grammarFileName instanceof ParserInterpreter?grammarFileName.inputStream:input));_this240._parentContextStack=[];/** We need a map from (decision,inputIndex)->forced alt for computing ambiguous
	         *  parse trees. For now, we allow exactly one override.
	         */_this240.overrideDecision=-1;_this240.overrideDecisionInputIndex=-1;_this240.overrideDecisionAlt=-1;_this240.overrideDecisionReached=false;// latch and only override once; error might trigger infinite loop
	/** What is the current context when we override a decisions?  This tells
	         *  us what the root of the parse tree is when using override
	         *  for an ambiguity/lookahead check.
	         */_this240._overrideDecisionRoot=undefined;if(grammarFileName instanceof ParserInterpreter){var old=grammarFileName;_this240._grammarFileName=old._grammarFileName;_this240._atn=old._atn;_this240.pushRecursionContextStates=old.pushRecursionContextStates;_this240._ruleNames=old._ruleNames;_this240._vocabulary=old._vocabulary;_this240.interpreter=new ParserATNSimulator_1.ParserATNSimulator(_this240._atn,_this240);}else {// The second constructor requires non-null arguments
	vocabulary=vocabulary;ruleNames=ruleNames;atn=atn;_this240._grammarFileName=grammarFileName;_this240._atn=atn;_this240._ruleNames=ruleNames.slice(0);_this240._vocabulary=vocabulary;// identify the ATN states where pushNewRecursionContext() must be called
	_this240.pushRecursionContextStates=new BitSet_1.BitSet(atn.states.length);var _iteratorNormalCompletion77=true;var _didIteratorError77=false;var _iteratorError77=undefined;try{for(var _iterator77=atn.states[Symbol.iterator](),_step77;!(_iteratorNormalCompletion77=(_step77=_iterator77.next()).done);_iteratorNormalCompletion77=true){var state=_step77.value;if(!(state instanceof StarLoopEntryState_1.StarLoopEntryState)){continue;}if(state.precedenceRuleDecision){_this240.pushRecursionContextStates.set(state.stateNumber);}}// get atn simulator that knows how to do predictions
	}catch(err){_didIteratorError77=true;_iteratorError77=err;}finally{try{if(!_iteratorNormalCompletion77&&_iterator77.return){_iterator77.return();}}finally{if(_didIteratorError77){throw _iteratorError77;}}}_this240.interpreter=new ParserATNSimulator_1.ParserATNSimulator(atn,_this240);}return _this240;}createClass(ParserInterpreter,[{key:'reset',value:function reset(resetInput){if(resetInput===undefined){get(ParserInterpreter.prototype.__proto__||Object.getPrototypeOf(ParserInterpreter.prototype),'reset',this).call(this);}else {get(ParserInterpreter.prototype.__proto__||Object.getPrototypeOf(ParserInterpreter.prototype),'reset',this).call(this,resetInput);}this.overrideDecisionReached=false;this._overrideDecisionRoot=undefined;}},{key:'parse',/** Begin parsing at startRuleIndex */value:function parse(startRuleIndex){var startRuleStartState=this._atn.ruleToStartState[startRuleIndex];this._rootContext=this.createInterpreterRuleContext(undefined,ATNState_1.ATNState.INVALID_STATE_NUMBER,startRuleIndex);if(startRuleStartState.isPrecedenceRule){this.enterRecursionRule(this._rootContext,startRuleStartState.stateNumber,startRuleIndex,0);}else {this.enterRule(this._rootContext,startRuleStartState.stateNumber,startRuleIndex);}while(true){var p=this.atnState;switch(p.stateType){case ATNStateType_1.ATNStateType.RULE_STOP:// pop; return from rule
	if(this._ctx.isEmpty){if(startRuleStartState.isPrecedenceRule){var result=this._ctx;var parentContext=this._parentContextStack.pop();this.unrollRecursionContexts(parentContext[0]);return result;}else {this.exitRule();return this._rootContext;}}this.visitRuleStopState(p);break;default:try{this.visitState(p);}catch(e){if(e instanceof RecognitionException_1.RecognitionException){this.state=this._atn.ruleToStopState[p.ruleIndex].stateNumber;this.context.exception=e;this.errorHandler.reportError(this,e);this.recover(e);}else {throw e;}}break;}}}},{key:'enterRecursionRule',value:function enterRecursionRule(localctx,state,ruleIndex,precedence){this._parentContextStack.push([this._ctx,localctx.invokingState]);get(ParserInterpreter.prototype.__proto__||Object.getPrototypeOf(ParserInterpreter.prototype),'enterRecursionRule',this).call(this,localctx,state,ruleIndex,precedence);}},{key:'visitState',value:function visitState(p){var predictedAlt=1;if(p.numberOfTransitions>1){predictedAlt=this.visitDecisionState(p);}var transition=p.transition(predictedAlt-1);switch(transition.serializationType){case 1/* EPSILON */:if(this.pushRecursionContextStates.get(p.stateNumber)&&!(transition.target instanceof LoopEndState_1.LoopEndState)){// We are at the start of a left recursive rule's (...)* loop
	// and we're not taking the exit branch of loop.
	var parentContext=this._parentContextStack[this._parentContextStack.length-1];var localctx=this.createInterpreterRuleContext(parentContext[0],parentContext[1],this._ctx.ruleIndex);this.pushNewRecursionContext(localctx,this._atn.ruleToStartState[p.ruleIndex].stateNumber,this._ctx.ruleIndex);}break;case 5/* ATOM */:this.match(transition._label);break;case 2/* RANGE */:case 7/* SET */:case 8/* NOT_SET */:if(!transition.matches(this._input.LA(1),Token_1.Token.MIN_USER_TOKEN_TYPE,65535)){this.recoverInline();}this.matchWildcard();break;case 9/* WILDCARD */:this.matchWildcard();break;case 3/* RULE */:var ruleStartState=transition.target;var ruleIndex=ruleStartState.ruleIndex;var newctx=this.createInterpreterRuleContext(this._ctx,p.stateNumber,ruleIndex);if(ruleStartState.isPrecedenceRule){this.enterRecursionRule(newctx,ruleStartState.stateNumber,ruleIndex,transition.precedence);}else {this.enterRule(newctx,transition.target.stateNumber,ruleIndex);}break;case 4/* PREDICATE */:var predicateTransition=transition;if(!this.sempred(this._ctx,predicateTransition.ruleIndex,predicateTransition.predIndex)){throw new FailedPredicateException_1.FailedPredicateException(this);}break;case 6/* ACTION */:var actionTransition=transition;this.action(this._ctx,actionTransition.ruleIndex,actionTransition.actionIndex);break;case 10/* PRECEDENCE */:if(!this.precpred(this._ctx,transition.precedence)){var precedence=transition.precedence;throw new FailedPredicateException_1.FailedPredicateException(this,'precpred(_ctx, '+precedence+')');}break;default:throw new Error("UnsupportedOperationException: Unrecognized ATN transition type.");}this.state=transition.target.stateNumber;}/** Method visitDecisionState() is called when the interpreter reaches
	     *  a decision state (instance of DecisionState). It gives an opportunity
	     *  for subclasses to track interesting things.
	     */},{key:'visitDecisionState',value:function visitDecisionState(p){var predictedAlt=void 0;this.errorHandler.sync(this);var decision=p.decision;if(decision===this.overrideDecision&&this._input.index===this.overrideDecisionInputIndex&&!this.overrideDecisionReached){predictedAlt=this.overrideDecisionAlt;this.overrideDecisionReached=true;}else {predictedAlt=this.interpreter.adaptivePredict(this._input,decision,this._ctx);}return predictedAlt;}/** Provide simple "factory" for InterpreterRuleContext's.
	     *  @since 4.5.1
	     */},{key:'createInterpreterRuleContext',value:function createInterpreterRuleContext(parent,invokingStateNumber,ruleIndex){return new InterpreterRuleContext_1.InterpreterRuleContext(ruleIndex,parent,invokingStateNumber);}},{key:'visitRuleStopState',value:function visitRuleStopState(p){var ruleStartState=this._atn.ruleToStartState[p.ruleIndex];if(ruleStartState.isPrecedenceRule){var parentContext=this._parentContextStack.pop();this.unrollRecursionContexts(parentContext[0]);this.state=parentContext[1];}else {this.exitRule();}var ruleTransition=this._atn.states[this.state].transition(0);this.state=ruleTransition.followState.stateNumber;}/** Override this parser interpreters normal decision-making process
	     *  at a particular decision and input token index. Instead of
	     *  allowing the adaptive prediction mechanism to choose the
	     *  first alternative within a block that leads to a successful parse,
	     *  force it to take the alternative, 1..n for n alternatives.
	     *
	     *  As an implementation limitation right now, you can only specify one
	     *  override. This is sufficient to allow construction of different
	     *  parse trees for ambiguous input. It means re-parsing the entire input
	     *  in general because you're never sure where an ambiguous sequence would
	     *  live in the various parse trees. For example, in one interpretation,
	     *  an ambiguous input sequence would be matched completely in expression
	     *  but in another it could match all the way back to the root.
	     *
	     *  s : e '!'? ;
	     *  e : ID
	     *    | ID '!'
	     *    ;
	     *
	     *  Here, x! can be matched as (s (e ID) !) or (s (e ID !)). In the first
	     *  case, the ambiguous sequence is fully contained only by the root.
	     *  In the second case, the ambiguous sequences fully contained within just
	     *  e, as in: (e ID !).
	     *
	     *  Rather than trying to optimize this and make
	     *  some intelligent decisions for optimization purposes, I settled on
	     *  just re-parsing the whole input and then using
	     *  {link Trees#getRootOfSubtreeEnclosingRegion} to find the minimal
	     *  subtree that contains the ambiguous sequence. I originally tried to
	     *  record the call stack at the point the parser detected and ambiguity but
	     *  left recursive rules create a parse tree stack that does not reflect
	     *  the actual call stack. That impedance mismatch was enough to make
	     *  it it challenging to restart the parser at a deeply nested rule
	     *  invocation.
	     *
	     *  Only parser interpreters can override decisions so as to avoid inserting
	     *  override checking code in the critical ALL(*) prediction execution path.
	     *
	     *  @since 4.5
	     */},{key:'addDecisionOverride',value:function addDecisionOverride(decision,tokenIndex,forcedAlt){this.overrideDecision=decision;this.overrideDecisionInputIndex=tokenIndex;this.overrideDecisionAlt=forcedAlt;}},{key:'recover',/** Rely on the error handler for this parser but, if no tokens are consumed
	     *  to recover, add an error node. Otherwise, nothing is seen in the parse
	     *  tree.
	     */value:function recover(e){var i=this._input.index;this.errorHandler.recover(this,e);if(this._input.index===i){// no input consumed, better add an error node
	var tok=e.getOffendingToken();if(!tok){throw new Error("Expected exception to have an offending token");}var source=tok.tokenSource;var stream=source!==undefined?source.inputStream:undefined;var sourcePair={source:source,stream:stream};if(e instanceof InputMismatchException_1.InputMismatchException){var expectedTokens=e.expectedTokens;if(expectedTokens===undefined){throw new Error("Expected the exception to provide expected tokens");}var expectedTokenType=Token_1.Token.INVALID_TYPE;if(!expectedTokens.isNil){// get any element
	expectedTokenType=expectedTokens.minElement;}var errToken=this.tokenFactory.create(sourcePair,expectedTokenType,tok.text,Token_1.Token.DEFAULT_CHANNEL,-1,-1,// invalid start/stop
	tok.line,tok.charPositionInLine);this._ctx.addErrorNode(this.createErrorNode(this._ctx,errToken));}else {// NoViableAlt
	var _source=tok.tokenSource;var _errToken=this.tokenFactory.create(sourcePair,Token_1.Token.INVALID_TYPE,tok.text,Token_1.Token.DEFAULT_CHANNEL,-1,-1,// invalid start/stop
	tok.line,tok.charPositionInLine);this._ctx.addErrorNode(this.createErrorNode(this._ctx,_errToken));}}}},{key:'recoverInline',value:function recoverInline(){return this._errHandler.recoverInline(this);}/** Return the root of the parse, which can be useful if the parser
	     *  bails out. You still can access the top node. Note that,
	     *  because of the way left recursive rules add children, it's possible
	     *  that the root will not have any children if the start rule immediately
	     *  called and left recursive rule that fails.
	     *
	     * @since 4.5.1
	     */},{key:'atn',get:function get(){return this._atn;}},{key:'vocabulary',get:function get(){return this._vocabulary;}},{key:'ruleNames',get:function get(){return this._ruleNames;}},{key:'grammarFileName',get:function get(){return this._grammarFileName;}},{key:'atnState',get:function get(){return this._atn.states[this.state];}},{key:'overrideDecisionRoot',get:function get(){return this._overrideDecisionRoot;}},{key:'rootContext',get:function get(){return this._rootContext;}}]);return ParserInterpreter;}(Parser_1.Parser);__decorate([Decorators_1.NotNull],ParserInterpreter.prototype,"_vocabulary",void 0);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"reset",null);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"atn",null);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"vocabulary",null);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"ruleNames",null);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"grammarFileName",null);__decorate([Decorators_2.Override],ParserInterpreter.prototype,"enterRecursionRule",null);ParserInterpreter=__decorate([__param(1,Decorators_1.NotNull)],ParserInterpreter);exports.ParserInterpreter=ParserInterpreter;},{"./Decorators":224,"./FailedPredicateException":228,"./InputMismatchException":229,"./InterpreterRuleContext":231,"./Parser":237,"./RecognitionException":242,"./Token":248,"./atn/ATNState":257,"./atn/ATNStateType":258,"./atn/LoopEndState":288,"./atn/ParserATNSimulator":292,"./atn/StarLoopEntryState":310,"./misc/BitSet":325}],239:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:56.6285494-07:00
	var ErrorNode_1=require("./tree/ErrorNode");var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");var RuleContext_1=require("./RuleContext");var TerminalNode_1=require("./tree/TerminalNode");/** A rule invocation record for parsing.
	 *
	 *  Contains all of the information about the current rule not stored in the
	 *  RuleContext. It handles parse tree children list, Any ATN state
	 *  tracing, and the default values available for rule invocations:
	 *  start, stop, rule index, current alt number.
	 *
	 *  Subclasses made for each rule and grammar track the parameters,
	 *  return values, locals, and labels specific to that rule. These
	 *  are the objects that are returned from rules.
	 *
	 *  Note text is not an actual field of a rule return value; it is computed
	 *  from start and stop using the input stream's toString() method.  I
	 *  could add a ctor to this so that we can pass in and store the input
	 *  stream, but I'm not sure we want to do that.  It would seem to be undefined
	 *  to get the .text property anyway if the rule matches tokens from multiple
	 *  input streams.
	 *
	 *  I do not use getters for fields of objects that are used simply to
	 *  group values such as this aggregate.  The getters/setters are there to
	 *  satisfy the superclass interface.
	 */var ParserRuleContext=function(_RuleContext_1$RuleCo){inherits(ParserRuleContext,_RuleContext_1$RuleCo);function ParserRuleContext(parent,invokingStateNumber){classCallCheck(this,ParserRuleContext);if(invokingStateNumber==null){var _this241=possibleConstructorReturn(this,(ParserRuleContext.__proto__||Object.getPrototypeOf(ParserRuleContext)).call(this));}else {var _this241=possibleConstructorReturn(this,(ParserRuleContext.__proto__||Object.getPrototypeOf(ParserRuleContext)).call(this,parent,invokingStateNumber));}return possibleConstructorReturn(_this241);}createClass(ParserRuleContext,[{key:'copyFrom',/**
	     * COPY a ctx (I'm deliberately not using copy constructor) to avoid
	     * confusion with creating node with parent. Does not copy children
	     * (except error leaves).
	     *
	     * This is used in the generated parser code to flip a generic XContext
	     * node for rule X to a YContext for alt label Y. In that sense, it is not
	     * really a generic copy function.
	     *
	     * If we do an error sync() at start of a rule, we might add error nodes
	     * to the generic XContext so this function must copy those nodes to the
	     * YContext as well else they are lost!
	     */value:function copyFrom(ctx){this._parent=ctx._parent;this.invokingState=ctx.invokingState;this._start=ctx._start;this._stop=ctx._stop;// copy any error nodes to alt label node
	if(ctx.children){this.children=[];// reset parent pointer for any error nodes
	var _iteratorNormalCompletion78=true;var _didIteratorError78=false;var _iteratorError78=undefined;try{for(var _iterator78=ctx.children[Symbol.iterator](),_step78;!(_iteratorNormalCompletion78=(_step78=_iterator78.next()).done);_iteratorNormalCompletion78=true){var child=_step78.value;if(child instanceof ErrorNode_1.ErrorNode){this.addChild(child);}}}catch(err){_didIteratorError78=true;_iteratorError78=err;}finally{try{if(!_iteratorNormalCompletion78&&_iterator78.return){_iterator78.return();}}finally{if(_didIteratorError78){throw _iteratorError78;}}}}}// Double dispatch methods for listeners
	},{key:'enterRule',value:function enterRule(listener){// intentionally empty
	}},{key:'exitRule',value:function exitRule(listener){}// intentionally empty
	/** Add a parse tree node to this as a child.  Works for
	     *  internal and leaf nodes. Does not set parent link;
	     *  other add methods must do that. Other addChild methods
	     *  call this.
	     *
	     *  We cannot set the parent pointer of the incoming node
	     *  because the existing interfaces do not have a setParent()
	     *  method and I don't want to break backward compatibility for this.
	     *
	     *  @since 4.7
	     */},{key:'addAnyChild',value:function addAnyChild(t){if(!this.children){this.children=[t];}else {this.children.push(t);}return t;}},{key:'addChild',value:function addChild(t){if(t instanceof TerminalNode_1.TerminalNode){t.setParent(this);this.addAnyChild(t);return;}else if(t instanceof RuleContext_1.RuleContext){// Does not set parent link
	this.addAnyChild(t);return;}else {// Deprecated code path
	t=new TerminalNode_1.TerminalNode(t);this.addAnyChild(t);t.setParent(this);return t;}}},{key:'addErrorNode',value:function addErrorNode(node){if(node instanceof ErrorNode_1.ErrorNode){var errorNode=node;errorNode.setParent(this);return this.addAnyChild(errorNode);}else {// deprecated path
	var badToken=node;var t=new ErrorNode_1.ErrorNode(badToken);this.addAnyChild(t);t.setParent(this);return t;}}//	public void trace(int s) {
	//		if ( states==null ) states = new ArrayList<Integer>();
	//		states.add(s);
	//	}
	/** Used by enterOuterAlt to toss out a RuleContext previously added as
	     *  we entered a rule. If we have # label, we will need to remove
	     *  generic ruleContext object.
	     */},{key:'removeLastChild',value:function removeLastChild(){if(this.children){this.children.pop();}}},{key:'getChild',// Note: in TypeScript, order or arguments reversed
	value:function getChild(i,ctxType){if(!this.children||i<0||i>=this.children.length){throw new RangeError("index parameter must be between >= 0 and <= number of children.");}if(ctxType==null){return this.children[i];}var result=this.tryGetChild(i,ctxType);if(result===undefined){throw new Error("The specified node does not exist");}return result;}},{key:'tryGetChild',value:function tryGetChild(i,ctxType){if(!this.children||i<0||i>=this.children.length){return undefined;}var j=-1;// what node with ctxType have we found?
	var _iteratorNormalCompletion79=true;var _didIteratorError79=false;var _iteratorError79=undefined;try{for(var _iterator79=this.children[Symbol.iterator](),_step79;!(_iteratorNormalCompletion79=(_step79=_iterator79.next()).done);_iteratorNormalCompletion79=true){var o=_step79.value;if(o instanceof ctxType){j++;if(j===i){return o;}}}}catch(err){_didIteratorError79=true;_iteratorError79=err;}finally{try{if(!_iteratorNormalCompletion79&&_iterator79.return){_iterator79.return();}}finally{if(_didIteratorError79){throw _iteratorError79;}}}return undefined;}},{key:'getToken',value:function getToken(ttype,i){var result=this.tryGetToken(ttype,i);if(result===undefined){throw new Error("The specified token does not exist");}return result;}},{key:'tryGetToken',value:function tryGetToken(ttype,i){if(!this.children||i<0||i>=this.children.length){return undefined;}var j=-1;// what token with ttype have we found?
	var _iteratorNormalCompletion80=true;var _didIteratorError80=false;var _iteratorError80=undefined;try{for(var _iterator80=this.children[Symbol.iterator](),_step80;!(_iteratorNormalCompletion80=(_step80=_iterator80.next()).done);_iteratorNormalCompletion80=true){var o=_step80.value;if(o instanceof TerminalNode_1.TerminalNode){var symbol=o.symbol;if(symbol.type===ttype){j++;if(j===i){return o;}}}}}catch(err){_didIteratorError80=true;_iteratorError80=err;}finally{try{if(!_iteratorNormalCompletion80&&_iterator80.return){_iterator80.return();}}finally{if(_didIteratorError80){throw _iteratorError80;}}}return undefined;}},{key:'getTokens',value:function getTokens(ttype){var tokens=[];if(!this.children){return tokens;}var _iteratorNormalCompletion81=true;var _didIteratorError81=false;var _iteratorError81=undefined;try{for(var _iterator81=this.children[Symbol.iterator](),_step81;!(_iteratorNormalCompletion81=(_step81=_iterator81.next()).done);_iteratorNormalCompletion81=true){var o=_step81.value;if(o instanceof TerminalNode_1.TerminalNode){var symbol=o.symbol;if(symbol.type===ttype){tokens.push(o);}}}}catch(err){_didIteratorError81=true;_iteratorError81=err;}finally{try{if(!_iteratorNormalCompletion81&&_iterator81.return){_iterator81.return();}}finally{if(_didIteratorError81){throw _iteratorError81;}}}return tokens;}},{key:'getRuleContext',// NOTE: argument order change from Java version
	value:function getRuleContext(i,ctxType){return this.getChild(i,ctxType);}},{key:'tryGetRuleContext',value:function tryGetRuleContext(i,ctxType){return this.tryGetChild(i,ctxType);}},{key:'getRuleContexts',value:function getRuleContexts(ctxType){var contexts=[];if(!this.children){return contexts;}var _iteratorNormalCompletion82=true;var _didIteratorError82=false;var _iteratorError82=undefined;try{for(var _iterator82=this.children[Symbol.iterator](),_step82;!(_iteratorNormalCompletion82=(_step82=_iterator82.next()).done);_iteratorNormalCompletion82=true){var o=_step82.value;if(o instanceof ctxType){contexts.push(o);}}}catch(err){_didIteratorError82=true;_iteratorError82=err;}finally{try{if(!_iteratorNormalCompletion82&&_iterator82.return){_iterator82.return();}}finally{if(_didIteratorError82){throw _iteratorError82;}}}return contexts;}},{key:'toInfoString',/** Used for rule context info debugging during parse-time, not so much for ATN debugging */value:function toInfoString(recognizer){var rules=recognizer.getRuleInvocationStack(this).reverse();return "ParserRuleContext"+rules+"{"+"start="+this._start+", stop="+this._stop+"}";}},{key:'parent',get:function get$1(){var parent=get(ParserRuleContext.prototype.__proto__||Object.getPrototypeOf(ParserRuleContext.prototype),'parent',this);if(parent===undefined||parent instanceof ParserRuleContext){return parent;}throw new TypeError("Invalid parent type for ParserRuleContext");}},{key:'ruleContext',get:function get(){return this;}},{key:'childCount',get:function get(){return this.children?this.children.length:0;}},{key:'sourceInterval',get:function get(){if(!this._start){return Interval_1.Interval.INVALID;}if(!this._stop||this._stop.tokenIndex<this._start.tokenIndex){return Interval_1.Interval.of(this._start.tokenIndex,this._start.tokenIndex-1);// empty
	}return Interval_1.Interval.of(this._start.tokenIndex,this._stop.tokenIndex);}/**
	     * Get the initial token in this context.
	     * Note that the range from start to stop is inclusive, so for rules that do not consume anything
	     * (for example, zero length or error productions) this token may exceed stop.
	     */},{key:'start',get:function get(){return this._start;}/**
	     * Get the final token in this context.
	     * Note that the range from start to stop is inclusive, so for rules that do not consume anything
	     * (for example, zero length or error productions) this token may precede start.
	     */},{key:'stop',get:function get(){return this._stop;}}],[{key:'emptyContext',value:function emptyContext(){return ParserRuleContext.EMPTY;}}]);return ParserRuleContext;}(RuleContext_1.RuleContext);ParserRuleContext.EMPTY=new ParserRuleContext();__decorate([Decorators_1.Override/** Override to make type more specific */],ParserRuleContext.prototype,"parent",null);__decorate([Decorators_1.Override],ParserRuleContext.prototype,"childCount",null);__decorate([Decorators_1.Override],ParserRuleContext.prototype,"sourceInterval",null);exports.ParserRuleContext=ParserRuleContext;},{"./Decorators":224,"./RuleContext":244,"./misc/Interval":330,"./tree/ErrorNode":339,"./tree/TerminalNode":343}],240:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("./Decorators");/**
	 * This implementation of {@link ANTLRErrorListener} dispatches all calls to a
	 * collection of delegate listeners. This reduces the effort required to support multiple
	 * listeners.
	 *
	 * @author Sam Harwell
	 */var ProxyErrorListener=function(){function ProxyErrorListener(delegates){classCallCheck(this,ProxyErrorListener);this.delegates=delegates;if(!delegates){throw new Error("Invalid delegates");}}createClass(ProxyErrorListener,[{key:'getDelegates',value:function getDelegates(){return this.delegates;}},{key:'syntaxError',value:function syntaxError(recognizer,offendingSymbol,line,charPositionInLine,msg,e){this.delegates.forEach(function(listener){if(listener.syntaxError){listener.syntaxError(recognizer,offendingSymbol,line,charPositionInLine,msg,e);}});}}]);return ProxyErrorListener;}();__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull),__param(4,Decorators_1.NotNull)],ProxyErrorListener.prototype,"syntaxError",null);exports.ProxyErrorListener=ProxyErrorListener;},{"./Decorators":224}],241:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var ProxyErrorListener_1=require("./ProxyErrorListener");var Decorators_1=require("./Decorators");/**
	 * @author Sam Harwell
	 */var ProxyParserErrorListener=function(_ProxyErrorListener_){inherits(ProxyParserErrorListener,_ProxyErrorListener_);function ProxyParserErrorListener(delegates){classCallCheck(this,ProxyParserErrorListener);return possibleConstructorReturn(this,(ProxyParserErrorListener.__proto__||Object.getPrototypeOf(ProxyParserErrorListener)).call(this,delegates));}createClass(ProxyParserErrorListener,[{key:'reportAmbiguity',value:function reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs){this.getDelegates().forEach(function(listener){if(listener.reportAmbiguity){listener.reportAmbiguity(recognizer,dfa,startIndex,stopIndex,exact,ambigAlts,configs);}});}},{key:'reportAttemptingFullContext',value:function reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,conflictState){this.getDelegates().forEach(function(listener){if(listener.reportAttemptingFullContext){listener.reportAttemptingFullContext(recognizer,dfa,startIndex,stopIndex,conflictingAlts,conflictState);}});}},{key:'reportContextSensitivity',value:function reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,acceptState){this.getDelegates().forEach(function(listener){if(listener.reportContextSensitivity){listener.reportContextSensitivity(recognizer,dfa,startIndex,stopIndex,prediction,acceptState);}});}}]);return ProxyParserErrorListener;}(ProxyErrorListener_1.ProxyErrorListener);__decorate([Decorators_1.Override],ProxyParserErrorListener.prototype,"reportAmbiguity",null);__decorate([Decorators_1.Override],ProxyParserErrorListener.prototype,"reportAttemptingFullContext",null);__decorate([Decorators_1.Override],ProxyParserErrorListener.prototype,"reportContextSensitivity",null);exports.ProxyParserErrorListener=ProxyParserErrorListener;},{"./Decorators":224,"./ProxyErrorListener":240}],242:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/** The root of the ANTLR exception hierarchy. In general, ANTLR tracks just
	 *  3 kinds of errors: prediction errors, failed predicate errors, and
	 *  mismatched input errors. In each case, the parser knows where it is
	 *  in the input, where it is in the ATN, the rule invocation stack,
	 *  and what kind of problem occurred.
	 */var RecognitionException=function(_Error){inherits(RecognitionException,_Error);function RecognitionException(recognizer,input,ctx,message){classCallCheck(this,RecognitionException);var _this243=possibleConstructorReturn(this,(RecognitionException.__proto__||Object.getPrototypeOf(RecognitionException)).call(this,message));_this243._offendingState=-1;_this243._recognizer=recognizer;_this243.input=input;_this243.ctx=ctx;if(recognizer){_this243._offendingState=recognizer.state;}return _this243;}/**
	     * Get the ATN state number the parser was in at the time the error
	     * occurred. For {@link NoViableAltException} and
	     * {@link LexerNoViableAltException} exceptions, this is the
	     * {@link DecisionState} number. For others, it is the state whose outgoing
	     * edge we couldn't match.
	     *
	     * If the state number is not known, this method returns -1.
	     */createClass(RecognitionException,[{key:'setOffendingState',value:function setOffendingState(offendingState){this._offendingState=offendingState;}/**
	     * Gets the set of input symbols which could potentially follow the
	     * previously matched symbol at the time this exception was thrown.
	     *
	     * If the set of expected tokens is not known and could not be computed,
	     * this method returns `undefined`.
	     *
	     * @returns The set of token types that could potentially follow the current
	     * state in the ATN, or `undefined` if the information is not available.
	     */},{key:'getOffendingToken',value:function getOffendingToken(recognizer){if(recognizer&&recognizer!==this._recognizer){return undefined;}return this.offendingToken;}},{key:'setOffendingToken',value:function setOffendingToken(recognizer,offendingToken){if(recognizer===this._recognizer){this.offendingToken=offendingToken;}}/**
	     * Gets the {@link Recognizer} where this exception occurred.
	     *
	     * If the recognizer is not available, this method returns `undefined`.
	     *
	     * @returns The recognizer where this exception occurred, or `undefined` if
	     * the recognizer is not available.
	     */},{key:'offendingState',get:function get(){return this._offendingState;}},{key:'expectedTokens',get:function get(){if(this._recognizer){return this._recognizer.atn.getExpectedTokens(this._offendingState,this.ctx);}return undefined;}/**
	     * Gets the {@link RuleContext} at the time this exception was thrown.
	     *
	     * If the context is not available, this method returns `undefined`.
	     *
	     * @returns The {@link RuleContext} at the time this exception was thrown.
	     * If the context is not available, this method returns `undefined`.
	     */},{key:'context',get:function get(){return this.ctx;}/**
	     * Gets the input stream which is the symbol source for the recognizer where
	     * this exception was thrown.
	     *
	     * If the input stream is not available, this method returns `undefined`.
	     *
	     * @returns The input stream which is the symbol source for the recognizer
	     * where this exception was thrown, or `undefined` if the stream is not
	     * available.
	     */},{key:'inputStream',get:function get(){return this.input;}},{key:'recognizer',get:function get(){return this._recognizer;}}]);return RecognitionException;}(Error);exports.RecognitionException=RecognitionException;},{}],243:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ConsoleErrorListener_1=require("./ConsoleErrorListener");var ProxyErrorListener_1=require("./ProxyErrorListener");var Decorators_1=require("./Decorators");var Token_1=require("./Token");var Utils=require("./misc/Utils");var Recognizer=function(){function Recognizer(){classCallCheck(this,Recognizer);this._listeners=[ConsoleErrorListener_1.ConsoleErrorListener.INSTANCE];this._stateNumber=-1;}/**
	     * Get a map from token names to token types.
	     *
	     * Used for XPath and tree pattern compilation.
	     */createClass(Recognizer,[{key:'getTokenTypeMap',value:function getTokenTypeMap(){var vocabulary=this.vocabulary;var result=Recognizer.tokenTypeMapCache.get(vocabulary);if(result==null){var intermediateResult=new Map();for(var i=0;i<=this.atn.maxTokenType;i++){var literalName=vocabulary.getLiteralName(i);if(literalName!=null){intermediateResult.set(literalName,i);}var symbolicName=vocabulary.getSymbolicName(i);if(symbolicName!=null){intermediateResult.set(symbolicName,i);}}intermediateResult.set("EOF",Token_1.Token.EOF);result=intermediateResult;Recognizer.tokenTypeMapCache.set(vocabulary,result);}return result;}/**
	     * Get a map from rule names to rule indexes.
	     *
	     * Used for XPath and tree pattern compilation.
	     */},{key:'getRuleIndexMap',value:function getRuleIndexMap(){var ruleNames=this.ruleNames;if(ruleNames==null){throw new Error("The current recognizer does not provide a list of rule names.");}var result=Recognizer.ruleIndexMapCache.get(ruleNames);if(result==null){result=Utils.toMap(ruleNames);Recognizer.ruleIndexMapCache.set(ruleNames,result);}return result;}},{key:'getTokenType',value:function getTokenType(tokenName){var ttype=this.getTokenTypeMap().get(tokenName);if(ttype!=null){return ttype;}return Token_1.Token.INVALID_TYPE;}/**
	     * If this recognizer was generated, it will have a serialized ATN
	     * representation of the grammar.
	     *
	     * For interpreters, we don't know their serialized ATN despite having
	     * created the interpreter from it.
	     */},{key:'getErrorHeader',/** What is the error header, normally line/character position information? */value:function getErrorHeader(e){var token=e.getOffendingToken();if(!token){return "";}var line=token.line;var charPositionInLine=token.charPositionInLine;return "line "+line+":"+charPositionInLine;}/**
	     * @exception NullPointerException if `listener` is `undefined`.
	     */},{key:'addErrorListener',value:function addErrorListener(listener){if(!listener){throw new TypeError("listener must not be null");}this._listeners.push(listener);}},{key:'removeErrorListener',value:function removeErrorListener(listener){var position=this._listeners.indexOf(listener);if(position!==-1){this._listeners.splice(position,1);}}},{key:'removeErrorListeners',value:function removeErrorListeners(){this._listeners.length=0;}},{key:'getErrorListeners',value:function getErrorListeners(){return this._listeners.slice(0);}},{key:'getErrorListenerDispatch',value:function getErrorListenerDispatch(){return new ProxyErrorListener_1.ProxyErrorListener(this.getErrorListeners());}// subclass needs to override these if there are sempreds or actions
	// that the ATN interp needs to execute
	},{key:'sempred',value:function sempred(_localctx,ruleIndex,actionIndex){return true;}},{key:'precpred',value:function precpred(localctx,precedence){return true;}},{key:'action',value:function action(_localctx,ruleIndex,actionIndex){// intentionally empty
	}},{key:'serializedATN',get:function get(){throw new Error("there is no serialized ATN");}/**
	     * Get the {@link ATN} used by the recognizer for prediction.
	     *
	     * @returns The {@link ATN} used by the recognizer for prediction.
	     */},{key:'atn',get:function get(){return this._interp.atn;}/**
	     * Get the ATN interpreter used by the recognizer for prediction.
	     *
	     * @returns The ATN interpreter used by the recognizer for prediction.
	     */},{key:'interpreter',get:function get(){return this._interp;}/**
	     * Set the ATN interpreter used by the recognizer for prediction.
	     *
	     * @param interpreter The ATN interpreter used by the recognizer for
	     * prediction.
	     */,set:function set(interpreter){this._interp=interpreter;}/** If profiling during the parse/lex, this will return DecisionInfo records
	     *  for each decision in recognizer in a ParseInfo object.
	     *
	     * @since 4.3
	     */},{key:'parseInfo',get:function get(){return Promise.resolve(undefined);}},{key:'state',get:function get(){return this._stateNumber;}/** Indicate that the recognizer has changed internal state that is
	     *  consistent with the ATN state passed in.  This way we always know
	     *  where we are in the ATN as the parser goes along. The rule
	     *  context objects form a stack that lets us see the stack of
	     *  invoking rules. Combine this and we have complete ATN
	     *  configuration information.
	     */,set:function set(atnState){//		System.err.println("setState "+atnState);
	this._stateNumber=atnState;//		if ( traceATNStates ) _ctx.trace(atnState);
	}}]);return Recognizer;}();Recognizer.EOF=-1;Recognizer.tokenTypeMapCache=new WeakMap();Recognizer.ruleIndexMapCache=new WeakMap();__decorate([Decorators_1.SuppressWarnings("serial"),Decorators_1.NotNull],Recognizer.prototype,"_listeners",void 0);__decorate([Decorators_1.NotNull],Recognizer.prototype,"getTokenTypeMap",null);__decorate([Decorators_1.NotNull],Recognizer.prototype,"getRuleIndexMap",null);__decorate([Decorators_1.NotNull],Recognizer.prototype,"serializedATN",null);__decorate([Decorators_1.NotNull],Recognizer.prototype,"atn",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],Recognizer.prototype,"interpreter",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],Recognizer.prototype,"getErrorHeader",null);__decorate([__param(0,Decorators_1.NotNull)],Recognizer.prototype,"addErrorListener",null);__decorate([__param(0,Decorators_1.NotNull)],Recognizer.prototype,"removeErrorListener",null);__decorate([Decorators_1.NotNull],Recognizer.prototype,"getErrorListeners",null);exports.Recognizer=Recognizer;},{"./ConsoleErrorListener":223,"./Decorators":224,"./ProxyErrorListener":240,"./Token":248,"./misc/Utils":337}],244:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:57.3490837-07:00
	var ATN_1=require("./atn/ATN");var Recognizer_1=require("./Recognizer");var RuleNode_1=require("./tree/RuleNode");var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");var Trees_1=require("./tree/Trees");var ParserRuleContext_1=require("./ParserRuleContext");/** A rule context is a record of a single rule invocation.
	 *
	 *  We form a stack of these context objects using the parent
	 *  pointer. A parent pointer of `undefined` indicates that the current
	 *  context is the bottom of the stack. The ParserRuleContext subclass
	 *  as a children list so that we can turn this data structure into a
	 *  tree.
	 *
	 *  The root node always has a `undefined` pointer and invokingState of -1.
	 *
	 *  Upon entry to parsing, the first invoked rule function creates a
	 *  context object (a subclass specialized for that rule such as
	 *  SContext) and makes it the root of a parse tree, recorded by field
	 *  Parser._ctx.
	 *
	 *  public final SContext s() throws RecognitionException {
	 *      SContext _localctx = new SContext(_ctx, state); <-- create new node
	 *      enterRule(_localctx, 0, RULE_s);                     <-- push it
	 *      ...
	 *      exitRule();                                          <-- pop back to _localctx
	 *      return _localctx;
	 *  }
	 *
	 *  A subsequent rule invocation of r from the start rule s pushes a
	 *  new context object for r whose parent points at s and use invoking
	 *  state is the state with r emanating as edge label.
	 *
	 *  The invokingState fields from a context object to the root
	 *  together form a stack of rule indication states where the root
	 *  (bottom of the stack) has a -1 sentinel value. If we invoke start
	 *  symbol s then call r1, which calls r2, the  would look like
	 *  this:
	 *
	 *     SContext[-1]   <- root node (bottom of the stack)
	 *     R1Context[p]   <- p in rule s called r1
	 *     R2Context[q]   <- q in rule r1 called r2
	 *
	 *  So the top of the stack, _ctx, represents a call to the current
	 *  rule and it holds the return address from another rule that invoke
	 *  to this rule. To invoke a rule, we must always have a current context.
	 *
	 *  The parent contexts are useful for computing lookahead sets and
	 *  getting error information.
	 *
	 *  These objects are used during parsing and prediction.
	 *  For the special case of parsers, we use the subclass
	 *  ParserRuleContext.
	 *
	 *  @see ParserRuleContext
	 */var RuleContext=function(_RuleNode_1$RuleNode){inherits(RuleContext,_RuleNode_1$RuleNode);function RuleContext(parent,invokingState){classCallCheck(this,RuleContext);var _this244=possibleConstructorReturn(this,(RuleContext.__proto__||Object.getPrototypeOf(RuleContext)).call(this));_this244._parent=parent;_this244.invokingState=invokingState!=null?invokingState:-1;return _this244;}createClass(RuleContext,[{key:'depth',value:function depth(){var n=0;var p=this;while(p){p=p._parent;n++;}return n;}/** A context is empty if there is no invoking state; meaning nobody called
	     *  current context.
	     */},{key:'setParent',/** @since 4.7. {@see ParseTree#setParent} comment */value:function setParent(parent){this._parent=parent;}},{key:'getChild',value:function getChild(i){throw new RangeError("i must be greater than or equal to 0 and less than childCount");}},{key:'accept',value:function accept(visitor){return visitor.visitChildren(this);}},{key:'toStringTree',value:function toStringTree(recog){return Trees_1.Trees.toStringTree(this,recog);}},{key:'toString',value:function toString(arg1,stop){var ruleNames=arg1 instanceof Recognizer_1.Recognizer?arg1.ruleNames:arg1;stop=stop||ParserRuleContext_1.ParserRuleContext.emptyContext();var buf="";var p=this;buf+="[";while(p&&p!==stop){if(!ruleNames){if(!p.isEmpty){buf+=p.invokingState;}}else {var ruleIndex=p.ruleIndex;var ruleName=ruleIndex>=0&&ruleIndex<ruleNames.length?ruleNames[ruleIndex]:ruleIndex.toString();buf+=ruleName;}if(p._parent&&(ruleNames||!p._parent.isEmpty)){buf+=" ";}p=p._parent;}buf+="]";return buf.toString();}},{key:'isEmpty',get:function get(){return this.invokingState===-1;}// satisfy the ParseTree / SyntaxTree interface
	},{key:'sourceInterval',get:function get(){return Interval_1.Interval.INVALID;}},{key:'ruleContext',get:function get(){return this;}},{key:'parent',get:function get(){return this._parent;}},{key:'payload',get:function get(){return this;}/** Return the combined text of all child nodes. This method only considers
	     *  tokens which have been added to the parse tree.
	     *
	     *  Since tokens on hidden channels (e.g. whitespace or comments) are not
	     *  added to the parse trees, they will not appear in the output of this
	     *  method.
	     */},{key:'text',get:function get(){if(this.childCount===0){return "";}var builder="";for(var i=0;i<this.childCount;i++){builder+=this.getChild(i).text;}return builder.toString();}},{key:'ruleIndex',get:function get(){return -1;}/** For rule associated with this parse tree internal node, return
	     *  the outer alternative number used to match the input. Default
	     *  implementation does not compute nor store this alt num. Create
	     *  a subclass of ParserRuleContext with backing field and set
	     *  option contextSuperClass.
	     *  to set it.
	     *
	     *  @since 4.5.3
	     */},{key:'altNumber',get:function get(){return ATN_1.ATN.INVALID_ALT_NUMBER;}/** Set the outer alternative number for this context node. Default
	     *  implementation does nothing to avoid backing field overhead for
	     *  trees that don't need it.  Create
	     *  a subclass of ParserRuleContext with backing field and set
	     *  option contextSuperClass.
	     *
	     *  @since 4.5.3
	     */,set:function set(altNumber){// intentionally ignored by the base implementation
	}},{key:'childCount',get:function get(){return 0;}}],[{key:'getChildContext',value:function getChildContext(parent,invokingState){return new RuleContext(parent,invokingState);}}]);return RuleContext;}(RuleNode_1.RuleNode);__decorate([Decorators_1.Override],RuleContext.prototype,"sourceInterval",null);__decorate([Decorators_1.Override],RuleContext.prototype,"ruleContext",null);__decorate([Decorators_1.Override],RuleContext.prototype,"parent",null);__decorate([Decorators_1.Override],RuleContext.prototype,"setParent",null);__decorate([Decorators_1.Override],RuleContext.prototype,"payload",null);__decorate([Decorators_1.Override],RuleContext.prototype,"text",null);__decorate([Decorators_1.Override],RuleContext.prototype,"getChild",null);__decorate([Decorators_1.Override],RuleContext.prototype,"childCount",null);__decorate([Decorators_1.Override],RuleContext.prototype,"accept",null);__decorate([Decorators_1.Override],RuleContext.prototype,"toStringTree",null);exports.RuleContext=RuleContext;},{"./Decorators":224,"./ParserRuleContext":239,"./Recognizer":243,"./atn/ATN":251,"./misc/Interval":330,"./tree/RuleNode":342,"./tree/Trees":344}],245:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:57.4741196-07:00
	var ATN_1=require("./atn/ATN");var Decorators_1=require("./Decorators");var ParserRuleContext_1=require("./ParserRuleContext");/** A handy class for use with
	 *
	 *  options {contextSuperClass=org.antlr.v4.runtime.RuleContextWithAltNum;}
	 *
	 *  that provides a backing field / impl for the outer alternative number
	 *  matched for an internal parse tree node.
	 *
	 *  I'm only putting into Java runtime as I'm certain I'm the only one that
	 *  will really every use this.
	 */var RuleContextWithAltNum=function(_ParserRuleContext_1$39){inherits(RuleContextWithAltNum,_ParserRuleContext_1$39);function RuleContextWithAltNum(parent,invokingStateNumber){classCallCheck(this,RuleContextWithAltNum);if(invokingStateNumber!==undefined){var _this245=possibleConstructorReturn(this,(RuleContextWithAltNum.__proto__||Object.getPrototypeOf(RuleContextWithAltNum)).call(this,parent,invokingStateNumber));}else {var _this245=possibleConstructorReturn(this,(RuleContextWithAltNum.__proto__||Object.getPrototypeOf(RuleContextWithAltNum)).call(this));}_this245._altNumber=ATN_1.ATN.INVALID_ALT_NUMBER;return possibleConstructorReturn(_this245);}createClass(RuleContextWithAltNum,[{key:'altNumber',get:function get(){return this._altNumber;}// @Override
	,set:function set(altNum){this._altNumber=altNum;}}]);return RuleContextWithAltNum;}(ParserRuleContext_1.ParserRuleContext);__decorate([Decorators_1.Override],RuleContextWithAltNum.prototype,"altNumber",null);exports.RuleContextWithAltNum=RuleContextWithAltNum;},{"./Decorators":224,"./ParserRuleContext":239,"./atn/ATN":251}],246:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Declares a dependency upon a grammar rule, along with a set of zero or more dependent rules.
	 *
	 * Version numbers within a grammar should be assigned on a monotonically increasing basis to allow for accurate
	 * tracking of dependent rules.
	 *
	 * @author Sam Harwell
	 */function RuleDependency(dependency){return function(target,propertyKey,propertyDescriptor){// intentionally empty
	};}exports.RuleDependency=RuleDependency;},{}],247:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 *
	 * @author Sam Harwell
	 */function RuleVersion(version){return function(target,propertyKey,propertyDescriptor){// intentionally empty
	};}exports.RuleVersion=RuleVersion;},{}],248:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var IntStream_1=require("./IntStream");(function(Token){Token.INVALID_TYPE=0;/** During lookahead operations, this "token" signifies we hit rule end ATN state
	     *  and did not follow it despite needing to.
	     */Token.EPSILON=-2;Token.MIN_USER_TOKEN_TYPE=1;Token.EOF=IntStream_1.IntStream.EOF;/** All tokens go to the parser (unless skip() is called in that rule)
	     *  on a particular "channel".  The parser tunes to a particular channel
	     *  so that whitespace etc... can go to the parser on a "hidden" channel.
	     */Token.DEFAULT_CHANNEL=0;/** Anything on different channel than DEFAULT_CHANNEL is not parsed
	     *  by parser.
	     */Token.HIDDEN_CHANNEL=1;/**
	     * This is the minimum constant value which can be assigned to a
	     * user-defined token channel.
	     *
	     * The non-negative numbers less than {@link #MIN_USER_CHANNEL_VALUE} are
	     * assigned to the predefined channels {@link #DEFAULT_CHANNEL} and
	     * {@link #HIDDEN_CHANNEL}.
	     *
	     * @see `Token.channel`
	     */Token.MIN_USER_CHANNEL_VALUE=2;})(exports.Token||(exports.Token={}));},{"./IntStream":230}],249:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:58.1768850-07:00
	var Interval_1=require("./misc/Interval");var Decorators_1=require("./Decorators");var Token_1=require("./Token");/**
	 * Useful for rewriting out a buffered input token stream after doing some
	 * augmentation or other manipulations on it.
	 *
	 * You can insert stuff, replace, and delete chunks. Note that the operations
	 * are done lazily--only if you convert the buffer to a {@link String} with
	 * {@link TokenStream#getText()}. This is very efficient because you are not
	 * moving data around all the time. As the buffer of tokens is converted to
	 * strings, the {@link #getText()} method(s) scan the input token stream and
	 * check to see if there is an operation at the current index. If so, the
	 * operation is done and then normal {@link String} rendering continues on the
	 * buffer. This is like having multiple Turing machine instruction streams
	 * (programs) operating on a single input tape. :)
	 *
	 * This rewriter makes no modifications to the token stream. It does not ask the
	 * stream to fill itself up nor does it advance the input cursor. The token
	 * stream `TokenStream.index` will return the same value before and
	 * after any {@link #getText()} call.
	 *
	 * The rewriter only works on tokens that you have in the buffer and ignores the
	 * current input cursor. If you are buffering tokens on-demand, calling
	 * {@link #getText()} halfway through the input will only do rewrites for those
	 * tokens in the first half of the file.
	 *
	 * Since the operations are done lazily at {@link #getText}-time, operations do
	 * not screw up the token index values. That is, an insert operation at token
	 * index `i` does not change the index values for tokens
	 * `i`+1..n-1.
	 *
	 * Because operations never actually alter the buffer, you may always get the
	 * original token stream back without undoing anything. Since the instructions
	 * are queued up, you can easily simulate transactions and roll back any changes
	 * if there is an error just by removing instructions. For example,
	 *
	 * ```
	 * CharStream input = new ANTLRFileStream("input");
	 * TLexer lex = new TLexer(input);
	 * CommonTokenStream tokens = new CommonTokenStream(lex);
	 * T parser = new T(tokens);
	 * TokenStreamRewriter rewriter = new TokenStreamRewriter(tokens);
	 * parser.startRule();
	 * ```
	 *
	 * Then in the rules, you can execute (assuming rewriter is visible):
	 *
	 * ```
	 * Token t,u;
	 * ...
	 * rewriter.insertAfter(t, "text to put after t");}
	 * rewriter.insertAfter(u, "text after u");}
	 * System.out.println(rewriter.getText());
	 * ```
	 *
	 * You can also have multiple "instruction streams" and get multiple rewrites
	 * from a single pass over the input. Just name the instruction streams and use
	 * that name again when printing the buffer. This could be useful for generating
	 * a C file and also its header file--all from the same buffer:
	 *
	 * ```
	 * rewriter.insertAfter("pass1", t, "text to put after t");}
	 * rewriter.insertAfter("pass2", u, "text after u");}
	 * System.out.println(rewriter.getText("pass1"));
	 * System.out.println(rewriter.getText("pass2"));
	 * ```
	 *
	 * If you don't use named rewrite streams, a "default" stream is used as the
	 * first example shows.
	 */var TokenStreamRewriter=function(){function TokenStreamRewriter(tokens){classCallCheck(this,TokenStreamRewriter);this.tokens=tokens;this.programs=new Map();this.programs.set(TokenStreamRewriter.DEFAULT_PROGRAM_NAME,[]);this.lastRewriteTokenIndexes=new Map();}createClass(TokenStreamRewriter,[{key:'getTokenStream',value:function getTokenStream(){return this.tokens;}},{key:'rollback',value:function rollback(instructionIndex){var programName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;var is=this.programs.get(programName);if(is!=null){this.programs.set(programName,is.slice(TokenStreamRewriter.MIN_TOKEN_INDEX,instructionIndex));}}},{key:'deleteProgram',value:function deleteProgram(){var programName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;this.rollback(TokenStreamRewriter.MIN_TOKEN_INDEX,programName);}},{key:'insertAfter',value:function insertAfter(tokenOrIndex,text){var programName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;var index=void 0;if(typeof tokenOrIndex==="number"){index=tokenOrIndex;}else {index=tokenOrIndex.tokenIndex;}// to insert after, just insert before next index (even if past end)
	var op=new InsertAfterOp(this.tokens,index,text);var rewrites=this.getProgram(programName);op.instructionIndex=rewrites.length;rewrites.push(op);}},{key:'insertBefore',value:function insertBefore(tokenOrIndex,text){var programName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;var index=void 0;if(typeof tokenOrIndex==="number"){index=tokenOrIndex;}else {index=tokenOrIndex.tokenIndex;}var op=new InsertBeforeOp(this.tokens,index,text);var rewrites=this.getProgram(programName);op.instructionIndex=rewrites.length;rewrites.push(op);}},{key:'replaceSingle',value:function replaceSingle(index,text){if(typeof index==="number"){this.replace(index,index,text);}else {this.replace(index,index,text);}}},{key:'replace',value:function replace(from,to,text){var programName=arguments.length>3&&arguments[3]!==undefined?arguments[3]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;if(typeof from!=="number"){from=from.tokenIndex;}if(typeof to!=="number"){to=to.tokenIndex;}if(from>to||from<0||to<0||to>=this.tokens.size){throw new RangeError('replace: range invalid: '+from+'..'+to+'(size='+this.tokens.size+')');}var op=new ReplaceOp(this.tokens,from,to,text);var rewrites=this.getProgram(programName);op.instructionIndex=rewrites.length;rewrites.push(op);}},{key:'delete',value:function _delete(from,to){var programName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;if(to===undefined){to=from;}if(typeof from==="number"){this.replace(from,to,"",programName);}else {this.replace(from,to,"",programName);}}},{key:'getLastRewriteTokenIndex',value:function getLastRewriteTokenIndex(){var programName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;var I=this.lastRewriteTokenIndexes.get(programName);if(I==null){return -1;}return I;}},{key:'setLastRewriteTokenIndex',value:function setLastRewriteTokenIndex(programName,i){this.lastRewriteTokenIndexes.set(programName,i);}},{key:'getProgram',value:function getProgram(name){var is=this.programs.get(name);if(is==null){is=this.initializeProgram(name);}return is;}},{key:'initializeProgram',value:function initializeProgram(name){var is=[];this.programs.set(name,is);return is;}},{key:'getText',value:function getText(intervalOrProgram){var programName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:TokenStreamRewriter.DEFAULT_PROGRAM_NAME;var interval=void 0;if(intervalOrProgram instanceof Interval_1.Interval){interval=intervalOrProgram;}else {interval=Interval_1.Interval.of(0,this.tokens.size-1);}if(typeof intervalOrProgram==="string"){programName=intervalOrProgram;}var rewrites=this.programs.get(programName);var start=interval.a;var stop=interval.b;// ensure start/end are in range
	if(stop>this.tokens.size-1){stop=this.tokens.size-1;}if(start<0){start=0;}if(rewrites==null||rewrites.length===0){return this.tokens.getText(interval);// no instructions to execute
	}var buf=[];// First, optimize instruction stream
	var indexToOp=this.reduceToSingleOperationPerIndex(rewrites);// Walk buffer, executing instructions and emitting tokens
	var i=start;while(i<=stop&&i<this.tokens.size){var op=indexToOp.get(i);indexToOp.delete(i);// remove so any left have index size-1
	var t=this.tokens.get(i);if(op==null){// no operation at that index, just dump token
	if(t.type!==Token_1.Token.EOF){buf.push(String(t.text));}i++;// move to next token
	}else {i=op.execute(buf);// execute operation and skip
	}}// include stuff after end if it's last index in buffer
	// So, if they did an insertAfter(lastValidIndex, "foo"), include
	// foo if end==lastValidIndex.
	if(stop===this.tokens.size-1){// Scan any remaining operations after last token
	// should be included (they will be inserts).
	var _iteratorNormalCompletion83=true;var _didIteratorError83=false;var _iteratorError83=undefined;try{for(var _iterator83=indexToOp.values()[Symbol.iterator](),_step83;!(_iteratorNormalCompletion83=(_step83=_iterator83.next()).done);_iteratorNormalCompletion83=true){var _op=_step83.value;if(_op.index>=this.tokens.size-1){buf.push(_op.text.toString());}}}catch(err){_didIteratorError83=true;_iteratorError83=err;}finally{try{if(!_iteratorNormalCompletion83&&_iterator83.return){_iterator83.return();}}finally{if(_didIteratorError83){throw _iteratorError83;}}}}return buf.join("");}/** We need to combine operations and report invalid operations (like
	     *  overlapping replaces that are not completed nested). Inserts to
	     *  same index need to be combined etc...  Here are the cases:
	     *
	     *  I.i.u I.j.v								leave alone, nonoverlapping
	     *  I.i.u I.i.v								combine: Iivu
	     *
	     *  R.i-j.u R.x-y.v	| i-j in x-y			delete first R
	     *  R.i-j.u R.i-j.v							delete first R
	     *  R.i-j.u R.x-y.v	| x-y in i-j			ERROR
	     *  R.i-j.u R.x-y.v	| boundaries overlap	ERROR
	     *
	     *  Delete special case of replace (text==undefined):
	     *  D.i-j.u D.x-y.v	| boundaries overlap	combine to max(min)..max(right)
	     *
	     *  I.i.u R.x-y.v | i in (x+1)-y			delete I (since insert before
	     * 											we're not deleting i)
	     *  I.i.u R.x-y.v | i not in (x+1)-y		leave alone, nonoverlapping
	     *  R.x-y.v I.i.u | i in x-y				ERROR
	     *  R.x-y.v I.x.u 							R.x-y.uv (combine, delete I)
	     *  R.x-y.v I.i.u | i not in x-y			leave alone, nonoverlapping
	     *
	     *  I.i.u = insert u before op @ index i
	     *  R.x-y.u = replace x-y indexed tokens with u
	     *
	     *  First we need to examine replaces. For any replace op:
	     *
	     * 		1. wipe out any insertions before op within that range.
	     * 		2. Drop any replace op before that is contained completely within
	     * 	 that range.
	     * 		3. Throw exception upon boundary overlap with any previous replace.
	     *
	     *  Then we can deal with inserts:
	     *
	     * 		1. for any inserts to same index, combine even if not adjacent.
	     * 		2. for any prior replace with same left boundary, combine this
	     * 	 insert with replace and delete this replace.
	     * 		3. throw exception if index in same range as previous replace
	     *
	     *  Don't actually delete; make op undefined in list. Easier to walk list.
	     *  Later we can throw as we add to index &rarr; op map.
	     *
	     *  Note that I.2 R.2-2 will wipe out I.2 even though, technically, the
	     *  inserted stuff would be before the replace range. But, if you
	     *  add tokens in front of a method body '{' and then delete the method
	     *  body, I think the stuff before the '{' you added should disappear too.
	     *
	     *  Return a map from token index to operation.
	     */},{key:'reduceToSingleOperationPerIndex',value:function reduceToSingleOperationPerIndex(rewrites){// console.log(`rewrites=[${Utils.join(rewrites, ", ")}]`);
	// WALK REPLACES
	for(var i=0;i<rewrites.length;i++){var op=rewrites[i];if(op==null){continue;}if(!(op instanceof ReplaceOp)){continue;}var rop=op;// Wipe prior inserts within range
	var inserts=this.getKindOfOps(rewrites,InsertBeforeOp,i);var _iteratorNormalCompletion84=true;var _didIteratorError84=false;var _iteratorError84=undefined;try{for(var _iterator84=inserts[Symbol.iterator](),_step84;!(_iteratorNormalCompletion84=(_step84=_iterator84.next()).done);_iteratorNormalCompletion84=true){var iop=_step84.value;if(iop.index===rop.index){// E.g., insert before 2, delete 2..2; update replace
	// text to include insert before, kill insert
	rewrites[iop.instructionIndex]=undefined;rop.text=iop.text.toString()+(rop.text!=null?rop.text.toString():"");}else if(iop.index>rop.index&&iop.index<=rop.lastIndex){// delete insert as it's a no-op.
	rewrites[iop.instructionIndex]=undefined;}}// Drop any prior replaces contained within
	}catch(err){_didIteratorError84=true;_iteratorError84=err;}finally{try{if(!_iteratorNormalCompletion84&&_iterator84.return){_iterator84.return();}}finally{if(_didIteratorError84){throw _iteratorError84;}}}var prevReplaces=this.getKindOfOps(rewrites,ReplaceOp,i);var _iteratorNormalCompletion85=true;var _didIteratorError85=false;var _iteratorError85=undefined;try{for(var _iterator85=prevReplaces[Symbol.iterator](),_step85;!(_iteratorNormalCompletion85=(_step85=_iterator85.next()).done);_iteratorNormalCompletion85=true){var prevRop=_step85.value;if(prevRop.index>=rop.index&&prevRop.lastIndex<=rop.lastIndex){// delete replace as it's a no-op.
	rewrites[prevRop.instructionIndex]=undefined;continue;}// throw exception unless disjoint or identical
	var disjoint=prevRop.lastIndex<rop.index||prevRop.index>rop.lastIndex;// Delete special case of replace (text==null):
	// D.i-j.u D.x-y.v	| boundaries overlap	combine to max(min)..max(right)
	if(prevRop.text==null&&rop.text==null&&!disjoint){// console.log(`overlapping deletes: ${prevRop}, ${rop}`);
	rewrites[prevRop.instructionIndex]=undefined;// kill first delete
	rop.index=Math.min(prevRop.index,rop.index);rop.lastIndex=Math.max(prevRop.lastIndex,rop.lastIndex);// console.log(`new rop ${rop}`);
	}else if(!disjoint){throw new Error('replace op boundaries of '+rop+' overlap with previous '+prevRop);}}}catch(err){_didIteratorError85=true;_iteratorError85=err;}finally{try{if(!_iteratorNormalCompletion85&&_iterator85.return){_iterator85.return();}}finally{if(_didIteratorError85){throw _iteratorError85;}}}}// WALK INSERTS
	for(var _i9=0;_i9<rewrites.length;_i9++){var _op2=rewrites[_i9];if(_op2==null){continue;}if(!(_op2 instanceof InsertBeforeOp)){continue;}var _iop=_op2;// combine current insert with prior if any at same index
	var prevInserts=this.getKindOfOps(rewrites,InsertBeforeOp,_i9);var _iteratorNormalCompletion86=true;var _didIteratorError86=false;var _iteratorError86=undefined;try{for(var _iterator86=prevInserts[Symbol.iterator](),_step86;!(_iteratorNormalCompletion86=(_step86=_iterator86.next()).done);_iteratorNormalCompletion86=true){var prevIop=_step86.value;if(prevIop.index===_iop.index){if(prevIop instanceof InsertAfterOp){_iop.text=this.catOpText(prevIop.text,_iop.text);rewrites[prevIop.instructionIndex]=undefined;}else if(prevIop instanceof InsertBeforeOp){// combine objects
	// convert to strings...we're in process of toString'ing
	// whole token buffer so no lazy eval issue with any templates
	_iop.text=this.catOpText(_iop.text,prevIop.text);// delete redundant prior insert
	rewrites[prevIop.instructionIndex]=undefined;}}}// look for replaces where iop.index is in range; error
	}catch(err){_didIteratorError86=true;_iteratorError86=err;}finally{try{if(!_iteratorNormalCompletion86&&_iterator86.return){_iterator86.return();}}finally{if(_didIteratorError86){throw _iteratorError86;}}}var _prevReplaces=this.getKindOfOps(rewrites,ReplaceOp,_i9);var _iteratorNormalCompletion87=true;var _didIteratorError87=false;var _iteratorError87=undefined;try{for(var _iterator87=_prevReplaces[Symbol.iterator](),_step87;!(_iteratorNormalCompletion87=(_step87=_iterator87.next()).done);_iteratorNormalCompletion87=true){var _rop=_step87.value;if(_iop.index===_rop.index){_rop.text=this.catOpText(_iop.text,_rop.text);rewrites[_i9]=undefined;// delete current insert
	continue;}if(_iop.index>=_rop.index&&_iop.index<=_rop.lastIndex){throw new Error('insert op '+_iop+' within boundaries of previous '+_rop);}}}catch(err){_didIteratorError87=true;_iteratorError87=err;}finally{try{if(!_iteratorNormalCompletion87&&_iterator87.return){_iterator87.return();}}finally{if(_didIteratorError87){throw _iteratorError87;}}}}// console.log(`rewrites after=[${Utils.join(rewrites, ", ")}]`);
	var m=new Map();var _iteratorNormalCompletion88=true;var _didIteratorError88=false;var _iteratorError88=undefined;try{for(var _iterator88=rewrites[Symbol.iterator](),_step88;!(_iteratorNormalCompletion88=(_step88=_iterator88.next()).done);_iteratorNormalCompletion88=true){var _op3=_step88.value;if(_op3==null){// ignore deleted ops
	continue;}if(m.get(_op3.index)!=null){throw new Error("should only be one op per index");}m.set(_op3.index,_op3);}// console.log(`index to op: ${m}`);
	}catch(err){_didIteratorError88=true;_iteratorError88=err;}finally{try{if(!_iteratorNormalCompletion88&&_iterator88.return){_iterator88.return();}}finally{if(_didIteratorError88){throw _iteratorError88;}}}return m;}},{key:'catOpText',value:function catOpText(a,b){var x="";var y="";if(a!=null){x=a.toString();}if(b!=null){y=b.toString();}return x+y;}/** Get all operations before an index of a particular kind */},{key:'getKindOfOps',value:function getKindOfOps(rewrites,kind,before){var ops=[];for(var i=0;i<before&&i<rewrites.length;i++){var op=rewrites[i];if(op==null){// ignore deleted
	continue;}if(op instanceof kind){ops.push(op);}}return ops;}}]);return TokenStreamRewriter;}();TokenStreamRewriter.DEFAULT_PROGRAM_NAME="default";TokenStreamRewriter.PROGRAM_INIT_SIZE=100;TokenStreamRewriter.MIN_TOKEN_INDEX=0;exports.TokenStreamRewriter=TokenStreamRewriter;// Define the rewrite operation hierarchy
	var RewriteOperation=function(){function RewriteOperation(tokens,index,text){classCallCheck(this,RewriteOperation);this.tokens=tokens;this.index=index;this.text=text===undefined?"":text;}/** Execute the rewrite operation by possibly adding to the buffer.
	     *  Return the index of the next token to operate on.
	     */createClass(RewriteOperation,[{key:'execute',value:function execute(buf){return this.index;}},{key:'toString',value:function toString(){var opName=this.constructor.name;var $index=opName.indexOf("$");opName=opName.substring($index+1,opName.length);return "<"+opName+"@"+this.tokens.get(this.index)+":\""+this.text+"\">";}}]);return RewriteOperation;}();__decorate([Decorators_1.Override],RewriteOperation.prototype,"toString",null);exports.RewriteOperation=RewriteOperation;var InsertBeforeOp=function(_RewriteOperation){inherits(InsertBeforeOp,_RewriteOperation);function InsertBeforeOp(tokens,index,text){classCallCheck(this,InsertBeforeOp);return possibleConstructorReturn(this,(InsertBeforeOp.__proto__||Object.getPrototypeOf(InsertBeforeOp)).call(this,tokens,index,text));}createClass(InsertBeforeOp,[{key:'execute',value:function execute(buf){buf.push(this.text.toString());if(this.tokens.get(this.index).type!==Token_1.Token.EOF){buf.push(String(this.tokens.get(this.index).text));}return this.index+1;}}]);return InsertBeforeOp;}(RewriteOperation);__decorate([Decorators_1.Override],InsertBeforeOp.prototype,"execute",null);/** Distinguish between insert after/before to do the "insert afters"
	 *  first and then the "insert befores" at same index. Implementation
	 *  of "insert after" is "insert before index+1".
	 */var InsertAfterOp=function(_InsertBeforeOp){inherits(InsertAfterOp,_InsertBeforeOp);function InsertAfterOp(tokens,index,text){classCallCheck(this,InsertAfterOp);return possibleConstructorReturn(this,(InsertAfterOp.__proto__||Object.getPrototypeOf(InsertAfterOp)).call(this,tokens,index+1,text));// insert after is insert before index+1
	}return InsertAfterOp;}(InsertBeforeOp);/** I'm going to try replacing range from x..y with (y-x)+1 ReplaceOp
	 *  instructions.
	 */var ReplaceOp=function(_RewriteOperation2){inherits(ReplaceOp,_RewriteOperation2);function ReplaceOp(tokens,from,to,text){classCallCheck(this,ReplaceOp);var _this248=possibleConstructorReturn(this,(ReplaceOp.__proto__||Object.getPrototypeOf(ReplaceOp)).call(this,tokens,from,text));_this248.lastIndex=to;return _this248;}createClass(ReplaceOp,[{key:'execute',value:function execute(buf){if(this.text!=null){buf.push(this.text.toString());}return this.lastIndex+1;}},{key:'toString',value:function toString(){if(this.text==null){return "<DeleteOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+">";}return "<ReplaceOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+":\""+this.text+"\">";}}]);return ReplaceOp;}(RewriteOperation);__decorate([Decorators_1.Override],ReplaceOp.prototype,"execute",null);__decorate([Decorators_1.Override],ReplaceOp.prototype,"toString",null);},{"./Decorators":224,"./Token":248,"./misc/Interval":330}],250:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:59.5829654-07:00
	var Decorators_1=require("./Decorators");var Token_1=require("./Token");/**
	 * This class provides a default implementation of the {@link Vocabulary}
	 * interface.
	 *
	 * @author Sam Harwell
	 */var VocabularyImpl=function(){/**
	     * Constructs a new instance of {@link VocabularyImpl} from the specified
	     * literal, symbolic, and display token names.
	     *
	     * @param literalNames The literal names assigned to tokens, or an empty array
	     * if no literal names are assigned.
	     * @param symbolicNames The symbolic names assigned to tokens, or
	     * an empty array if no symbolic names are assigned.
	     * @param displayNames The display names assigned to tokens, or an empty array
	     * to use the values in `literalNames` and `symbolicNames` as
	     * the source of display names, as described in
	     * {@link #getDisplayName(int)}.
	     *
	     * @see #getLiteralName(int)
	     * @see #getSymbolicName(int)
	     * @see #getDisplayName(int)
	     */function VocabularyImpl(literalNames,symbolicNames,displayNames){classCallCheck(this,VocabularyImpl);this.literalNames=literalNames;this.symbolicNames=symbolicNames;this.displayNames=displayNames;// See note here on -1 part: https://github.com/antlr/antlr4/pull/1146
	this._maxTokenType=Math.max(this.displayNames.length,Math.max(this.literalNames.length,this.symbolicNames.length))-1;}createClass(VocabularyImpl,[{key:'getLiteralName',value:function getLiteralName(tokenType){if(tokenType>=0&&tokenType<this.literalNames.length){return this.literalNames[tokenType];}return undefined;}},{key:'getSymbolicName',value:function getSymbolicName(tokenType){if(tokenType>=0&&tokenType<this.symbolicNames.length){return this.symbolicNames[tokenType];}if(tokenType===Token_1.Token.EOF){return "EOF";}return undefined;}},{key:'getDisplayName',value:function getDisplayName(tokenType){if(tokenType>=0&&tokenType<this.displayNames.length){var displayName=this.displayNames[tokenType];if(displayName){return displayName;}}var literalName=this.getLiteralName(tokenType);if(literalName){return literalName;}var symbolicName=this.getSymbolicName(tokenType);if(symbolicName){return symbolicName;}return String(tokenType);}},{key:'maxTokenType',get:function get(){return this._maxTokenType;}}]);return VocabularyImpl;}();/**
	 * Gets an empty {@link Vocabulary} instance.
	 *
	 * No literal or symbol names are assigned to token types, so
	 * {@link #getDisplayName(int)} returns the numeric value for all tokens
	 * except {@link Token#EOF}.
	 */VocabularyImpl.EMPTY_VOCABULARY=new VocabularyImpl([],[],[]);__decorate([Decorators_1.NotNull],VocabularyImpl.prototype,"literalNames",void 0);__decorate([Decorators_1.NotNull],VocabularyImpl.prototype,"symbolicNames",void 0);__decorate([Decorators_1.NotNull],VocabularyImpl.prototype,"displayNames",void 0);__decorate([Decorators_1.Override],VocabularyImpl.prototype,"maxTokenType",null);__decorate([Decorators_1.Override],VocabularyImpl.prototype,"getLiteralName",null);__decorate([Decorators_1.Override],VocabularyImpl.prototype,"getSymbolicName",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],VocabularyImpl.prototype,"getDisplayName",null);__decorate([Decorators_1.NotNull],VocabularyImpl,"EMPTY_VOCABULARY",void 0);exports.VocabularyImpl=VocabularyImpl;},{"./Decorators":224,"./Token":248}],251:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:25.1063510-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var DFA_1=require("../dfa/DFA");var IntervalSet_1=require("../misc/IntervalSet");var InvalidState_1=require("./InvalidState");var LL1Analyzer_1=require("./LL1Analyzer");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var PredictionContext_1=require("./PredictionContext");var Token_1=require("../Token");var assert=require("assert");/** */var ATN=function(){/** Used for runtime deserialization of ATNs from strings */function ATN(grammarType,maxTokenType){classCallCheck(this,ATN);this.states=[];/** Each subrule/rule is a decision point and we must track them so we
	         *  can go back later and build DFA predictors for them.  This includes
	         *  all the rules, subrules, optional blocks, ()+, ()* etc...
	         */this.decisionToState=[];this.modeNameToStartState=new Map();this.modeToStartState=[];this.contextCache=new Array2DHashMap_1.Array2DHashMap(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);this.decisionToDFA=[];this.modeToDFA=[];this.LL1Table=new Map();this.grammarType=grammarType;this.maxTokenType=maxTokenType;}createClass(ATN,[{key:'clearDFA',value:function clearDFA(){this.decisionToDFA=new Array(this.decisionToState.length);for(var i=0;i<this.decisionToDFA.length;i++){this.decisionToDFA[i]=new DFA_1.DFA(this.decisionToState[i],i);}this.modeToDFA=new Array(this.modeToStartState.length);for(var _i10=0;_i10<this.modeToDFA.length;_i10++){this.modeToDFA[_i10]=new DFA_1.DFA(this.modeToStartState[_i10]);}this.contextCache.clear();this.LL1Table.clear();}},{key:'getCachedContext',value:function getCachedContext(context){return PredictionContext_1.PredictionContext.getCachedContext(context,this.contextCache,new PredictionContext_1.PredictionContext.IdentityHashMap());}},{key:'getDecisionToDFA',value:function getDecisionToDFA(){assert(this.decisionToDFA!=null&&this.decisionToDFA.length===this.decisionToState.length);return this.decisionToDFA;}},{key:'nextTokens',value:function nextTokens(s,ctx){if(ctx){var anal=new LL1Analyzer_1.LL1Analyzer(this);var _next=anal.LOOK(s,ctx);return _next;}else {if(s.nextTokenWithinRule){return s.nextTokenWithinRule;}s.nextTokenWithinRule=this.nextTokens(s,PredictionContext_1.PredictionContext.EMPTY_LOCAL);s.nextTokenWithinRule.setReadonly(true);return s.nextTokenWithinRule;}}},{key:'addState',value:function addState(state){state.atn=this;state.stateNumber=this.states.length;this.states.push(state);}},{key:'removeState',value:function removeState(state){// just replace the state, don't shift states in list
	var invalidState=new InvalidState_1.InvalidState();invalidState.atn=this;invalidState.stateNumber=state.stateNumber;this.states[state.stateNumber]=invalidState;}},{key:'defineMode',value:function defineMode(name,s){this.modeNameToStartState.set(name,s);this.modeToStartState.push(s);this.modeToDFA.push(new DFA_1.DFA(s));this.defineDecisionState(s);}},{key:'defineDecisionState',value:function defineDecisionState(s){this.decisionToState.push(s);s.decision=this.decisionToState.length-1;this.decisionToDFA.push(new DFA_1.DFA(s,s.decision));return s.decision;}},{key:'getDecisionState',value:function getDecisionState(decision){if(this.decisionToState.length>0){return this.decisionToState[decision];}return undefined;}},{key:'getExpectedTokens',/**
	     * Computes the set of input symbols which could follow ATN state number
	     * `stateNumber` in the specified full `context`. This method
	     * considers the complete parser context, but does not evaluate semantic
	     * predicates (i.e. all predicates encountered during the calculation are
	     * assumed true). If a path in the ATN exists from the starting state to the
	     * {@link RuleStopState} of the outermost context without matching any
	     * symbols, {@link Token#EOF} is added to the returned set.
	     *
	     * If `context` is `undefined`, it is treated as
	     * {@link ParserRuleContext#EMPTY}.
	     *
	     * Note that this does NOT give you the set of all tokens that could
	     * appear at a given token position in the input phrase.  In other words, it
	     * does not answer:
	     *
	     * > Given a specific partial input phrase, return the set of all
	     * > tokens that can follow the last token in the input phrase.
	     *
	     * The big difference is that with just the input, the parser could land
	     * right in the middle of a lookahead decision. Getting all
	     * *possible* tokens given a partial input stream is a separate
	     * computation. See https://github.com/antlr/antlr4/issues/1428
	     *
	     * For this function, we are specifying an ATN state and call stack to
	     * compute what token(s) can come next and specifically: outside of a
	     * lookahead decision. That is what you want for error reporting and
	     * recovery upon parse error.
	     *
	     * @param stateNumber the ATN state number
	     * @param context the full parse context
	     * @returns The set of potentially valid input symbols which could follow the
	     * specified state in the specified context.
	     * @ if the ATN does not contain a state with
	     * number `stateNumber`
	     */value:function getExpectedTokens(stateNumber,context){if(stateNumber<0||stateNumber>=this.states.length){throw new RangeError("Invalid state number.");}var ctx=context;var s=this.states[stateNumber];var following=this.nextTokens(s);if(!following.contains(Token_1.Token.EPSILON)){return following;}var expected=new IntervalSet_1.IntervalSet();expected.addAll(following);expected.remove(Token_1.Token.EPSILON);while(ctx!=null&&ctx.invokingState>=0&&following.contains(Token_1.Token.EPSILON)){var invokingState=this.states[ctx.invokingState];var rt=invokingState.transition(0);following=this.nextTokens(rt.followState);expected.addAll(following);expected.remove(Token_1.Token.EPSILON);ctx=ctx._parent;}if(following.contains(Token_1.Token.EPSILON)){expected.add(Token_1.Token.EOF);}return expected;}},{key:'contextCacheSize',get:function get(){return this.contextCache.size;}},{key:'numberOfDecisions',get:function get(){return this.decisionToState.length;}}]);return ATN;}();__decorate([Decorators_1.NotNull],ATN.prototype,"states",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"decisionToState",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"modeNameToStartState",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"modeToStartState",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"decisionToDFA",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"modeToDFA",void 0);__decorate([Decorators_1.NotNull],ATN.prototype,"nextTokens",null);__decorate([__param(0,Decorators_1.NotNull)],ATN.prototype,"removeState",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ATN.prototype,"defineMode",null);__decorate([__param(0,Decorators_1.NotNull)],ATN.prototype,"defineDecisionState",null);__decorate([Decorators_1.NotNull],ATN.prototype,"getExpectedTokens",null);ATN=__decorate([__param(0,Decorators_1.NotNull)],ATN);exports.ATN=ATN;(function(ATN){ATN.INVALID_ALT_NUMBER=0;})(ATN=exports.ATN||(exports.ATN={}));exports.ATN=ATN;},{"../Decorators":224,"../Token":248,"../dfa/DFA":316,"../misc/Array2DHashMap":321,"../misc/IntervalSet":331,"../misc/ObjectEqualityComparator":334,"./InvalidState":274,"./LL1Analyzer":275,"./PredictionContext":298,"assert":364}],252:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:25.2796692-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var DecisionState_1=require("./DecisionState");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var PredictionContext_1=require("./PredictionContext");var SemanticContext_1=require("./SemanticContext");var assert=require("assert");/**
	 * This field stores the bit mask for implementing the
	 * {@link #isPrecedenceFilterSuppressed} property as a bit within the
	 * existing {@link #altAndOuterContextDepth} field.
	 */var SUPPRESS_PRECEDENCE_FILTER=0x80000000;/**
	 * Represents a location with context in an ATN. The location is identified by the following values:
	 *
	 * * The current ATN state
	 * * The predicted alternative
	 * * The semantic context which must be true for this configuration to be enabled
	 * * The syntactic context, which is represented as a graph-structured stack whose path(s) lead to the root of the rule
	 *   invocations leading to this state
	 *
	 * In addition to these values, `ATNConfig` stores several properties about paths taken to get to the location which
	 * were added over time to help with performance, correctness, and/or debugging.
	 *
	 * * `reachesIntoOuterContext`:: Used to ensure semantic predicates are not evaluated in the wrong context.
	 * * `hasPassedThroughNonGreedyDecision`: Used for enabling first-match-wins instead of longest-match-wins after
	 *   crossing a non-greedy decision.
	 * * `lexerActionExecutor`: Used for tracking the lexer action(s) to execute should this instance be selected during
	 *   lexing.
	 * * `isPrecedenceFilterSuppressed`: A state variable for one of the dynamic disambiguation strategies employed by
	 *   `ParserATNSimulator.applyPrecedenceFilter`.
	 *
	 * Due to the use of a graph-structured stack, a single `ATNConfig` is capable of representing many individual ATN
	 * configurations which reached the same location in an ATN by following different paths.
	 *
	 * PERF: To conserve memory, `ATNConfig` is split into several different concrete types. `ATNConfig` itself stores the
	 * minimum amount of information typically used to define an `ATNConfig` instance. Various derived types provide
	 * additional storage space for cases where a non-default value is used for some of the object properties. The
	 * `ATNConfig.create` and `ATNConfig.transform` methods automatically select the smallest concrete type capable of
	 * representing the unique information for any given `ATNConfig`.
	 */var ATNConfig=function(){function ATNConfig(state,altOrConfig,context){classCallCheck(this,ATNConfig);if(typeof altOrConfig==="number"){assert((altOrConfig&0xFFFFFF)===altOrConfig);this._state=state;this.altAndOuterContextDepth=altOrConfig;this._context=context;}else {this._state=state;this.altAndOuterContextDepth=altOrConfig.altAndOuterContextDepth;this._context=context;}}createClass(ATNConfig,[{key:'clone',value:function clone(){return this.transform(this.state,false);}},{key:'transform',value:function transform(/*@NotNull*/state,checkNonGreedy,arg2){if(arg2==null){return this.transformImpl(state,this._context,this.semanticContext,checkNonGreedy,this.lexerActionExecutor);}else if(arg2 instanceof PredictionContext_1.PredictionContext){return this.transformImpl(state,arg2,this.semanticContext,checkNonGreedy,this.lexerActionExecutor);}else if(arg2 instanceof SemanticContext_1.SemanticContext){return this.transformImpl(state,this._context,arg2,checkNonGreedy,this.lexerActionExecutor);}else {return this.transformImpl(state,this._context,this.semanticContext,checkNonGreedy,arg2);}}},{key:'transformImpl',value:function transformImpl(state,context,semanticContext,checkNonGreedy,lexerActionExecutor){var passedThroughNonGreedy=checkNonGreedy&&ATNConfig.checkNonGreedyDecision(this,state);if(semanticContext!==SemanticContext_1.SemanticContext.NONE){if(lexerActionExecutor!=null||passedThroughNonGreedy){return new ActionSemanticContextATNConfig(lexerActionExecutor,semanticContext,state,this,context,passedThroughNonGreedy);}else {return new SemanticContextATNConfig(semanticContext,state,this,context);}}else if(lexerActionExecutor!=null||passedThroughNonGreedy){return new ActionATNConfig(lexerActionExecutor,state,this,context,passedThroughNonGreedy);}else {return new ATNConfig(state,this,context);}}},{key:'appendContext',value:function appendContext(context,contextCache){if(typeof context==="number"){var appendedContext=this.context.appendSingleContext(context,contextCache);var result=this.transform(this.state,false,appendedContext);return result;}else {var _appendedContext=this.context.appendContext(context,contextCache);var _result5=this.transform(this.state,false,_appendedContext);return _result5;}}/**
	     * Determines if this `ATNConfig` fully contains another `ATNConfig`.
	     *
	     * An ATN configuration represents a position (including context) in an ATN during parsing. Since `ATNConfig` stores
	     * the context as a graph, a single `ATNConfig` instance is capable of representing many ATN configurations which
	     * are all in the same "location" but have different contexts. These `ATNConfig` instances are again merged when
	     * they are added to an `ATNConfigSet`. This method supports `ATNConfigSet.contains` by evaluating whether a
	     * particular `ATNConfig` contains all of the ATN configurations represented by another `ATNConfig`.
	     *
	     * An `ATNConfig` _a_ contains another `ATNConfig` _b_ if all of the following conditions are met:
	     *
	     * * The configurations are in the same state (`state`)
	     * * The configurations predict the same alternative (`alt`)
	     * * The semantic context of _a_ implies the semantic context of _b_ (this method performs a weaker equality check)
	     * * Joining the prediction contexts of _a_ and _b_ results in the prediction context of _a_
	     *
	     * This method implements a conservative approximation of containment. As a result, when this method returns `true`
	     * it is known that parsing from `subconfig` can only recognize a subset of the inputs which can be recognized
	     * starting at the current `ATNConfig`. However, due to the imprecise evaluation of implication for the semantic
	     * contexts, no assumptions can be made about the relationship between the configurations when this method returns
	     * `false`.
	     *
	     * @param subconfig The sub configuration.
	     * @returns `true` if this configuration contains `subconfig`; otherwise, `false`.
	     */},{key:'contains',value:function contains(subconfig){if(this.state.stateNumber!==subconfig.state.stateNumber||this.alt!==subconfig.alt||!this.semanticContext.equals(subconfig.semanticContext)){return false;}var leftWorkList=[];var rightWorkList=[];leftWorkList.push(this.context);rightWorkList.push(subconfig.context);while(true){var left=leftWorkList.pop();var right=rightWorkList.pop();if(!left||!right){break;}if(left===right){return true;}if(left.size<right.size){return false;}if(right.isEmpty){return left.hasEmpty;}else {for(var i=0;i<right.size;i++){var index=left.findReturnState(right.getReturnState(i));if(index<0){// assumes invokingStates has no duplicate entries
	return false;}leftWorkList.push(left.getParent(index));rightWorkList.push(right.getParent(i));}}}return false;}},{key:'equals',/** An ATN configuration is equal to another if both have
	     *  the same state, they predict the same alternative, and
	     *  syntactic/semantic contexts are the same.
	     */value:function equals(o){if(this===o){return true;}else if(!(o instanceof ATNConfig)){return false;}return this.state.stateNumber===o.state.stateNumber&&this.alt===o.alt&&this.reachesIntoOuterContext===o.reachesIntoOuterContext&&this.context.equals(o.context)&&this.semanticContext.equals(o.semanticContext)&&this.isPrecedenceFilterSuppressed===o.isPrecedenceFilterSuppressed&&this.hasPassedThroughNonGreedyDecision===o.hasPassedThroughNonGreedyDecision&&ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE.equals(this.lexerActionExecutor,o.lexerActionExecutor);}},{key:'hashCode',value:function hashCode(){var hashCode=MurmurHash_1.MurmurHash.initialize(7);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.state.stateNumber);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.alt);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.reachesIntoOuterContext?1:0);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.context);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.semanticContext);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.hasPassedThroughNonGreedyDecision?1:0);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.lexerActionExecutor);hashCode=MurmurHash_1.MurmurHash.finish(hashCode,7);return hashCode;}/**
	     * Returns a graphical representation of the current `ATNConfig` in Graphviz format. The graph can be stored to a
	     * **.dot** file and then rendered to an image using Graphviz.
	     *
	     * @returns A Graphviz graph representing the current `ATNConfig`.
	     *
	     * @see http://www.graphviz.org/
	     */},{key:'toDotString',value:function toDotString(){var builder="";builder+="digraph G {\n";builder+="rankdir=LR;\n";var visited=new Array2DHashMap_1.Array2DHashMap(PredictionContext_1.PredictionContext.IdentityEqualityComparator.INSTANCE);var workList=[];function getOrAddContext(context){var newNumber=visited.size;var result=visited.putIfAbsent(context,newNumber);if(result!=null){// Already saw this context
	return result;}workList.push(context);return newNumber;}workList.push(this.context);visited.put(this.context,0);while(true){var current=workList.pop();if(!current){break;}for(var i=0;i<current.size;i++){builder+="  s"+getOrAddContext(current);builder+="->";builder+="s"+getOrAddContext(current.getParent(i));builder+="[label=\""+current.getReturnState(i)+"\"];\n";}}builder+="}\n";return builder.toString();}},{key:'toString',value:function toString(recog,showAlt,showContext){// Must check showContext before showAlt to preserve original overload behavior
	if(showContext==null){showContext=showAlt!=null;}if(showAlt==null){showAlt=true;}var buf="";// if (this.state.ruleIndex >= 0) {
	// 	if (recog != null) {
	// 		buf += (recog.ruleNames[this.state.ruleIndex] + ":");
	// 	} else {
	// 		buf += (this.state.ruleIndex + ":");
	// 	}
	// }
	var contexts=void 0;if(showContext){contexts=this.context.toStrings(recog,this.state.stateNumber);}else {contexts=["?"];}var first=true;var _iteratorNormalCompletion89=true;var _didIteratorError89=false;var _iteratorError89=undefined;try{for(var _iterator89=contexts[Symbol.iterator](),_step89;!(_iteratorNormalCompletion89=(_step89=_iterator89.next()).done);_iteratorNormalCompletion89=true){var contextDesc=_step89.value;if(first){first=false;}else {buf+=", ";}buf+="(";buf+=this.state;if(showAlt){buf+=",";buf+=this.alt;}if(this.context){buf+=",";buf+=contextDesc;}if(this.semanticContext!==SemanticContext_1.SemanticContext.NONE){buf+=",";buf+=this.semanticContext;}if(this.reachesIntoOuterContext){buf+=",up="+this.outerContextDepth;}buf+=")";}}catch(err){_didIteratorError89=true;_iteratorError89=err;}finally{try{if(!_iteratorNormalCompletion89&&_iterator89.return){_iterator89.return();}}finally{if(_didIteratorError89){throw _iteratorError89;}}}return buf.toString();}},{key:'state',/** Gets the ATN state associated with this configuration */get:function get(){return this._state;}/** What alt (or lexer rule) is predicted by this configuration */},{key:'alt',get:function get(){return this.altAndOuterContextDepth&0x00FFFFFF;}},{key:'context',get:function get(){return this._context;},set:function set(context){this._context=context;}},{key:'reachesIntoOuterContext',get:function get(){return this.outerContextDepth!==0;}/**
	     * We cannot execute predicates dependent upon local context unless
	     * we know for sure we are in the correct context. Because there is
	     * no way to do this efficiently, we simply cannot evaluate
	     * dependent predicates unless we are in the rule that initially
	     * invokes the ATN simulator.
	     *
	     * closure() tracks the depth of how far we dip into the outer context:
	     * depth &gt; 0.  Note that it may not be totally accurate depth since I
	     * don't ever decrement. TODO: make it a boolean then
	     */},{key:'outerContextDepth',get:function get(){return this.altAndOuterContextDepth>>>24&0x7F;},set:function set(outerContextDepth){assert(outerContextDepth>=0);// saturate at 0x7F - everything but zero/positive is only used for debug information anyway
	outerContextDepth=Math.min(outerContextDepth,0x7F);this.altAndOuterContextDepth=outerContextDepth<<24|(this.altAndOuterContextDepth&~0x7F000000)>>>0;}},{key:'lexerActionExecutor',get:function get(){return undefined;}},{key:'semanticContext',get:function get(){return SemanticContext_1.SemanticContext.NONE;}},{key:'hasPassedThroughNonGreedyDecision',get:function get(){return false;}},{key:'isPrecedenceFilterSuppressed',get:function get(){return (this.altAndOuterContextDepth&SUPPRESS_PRECEDENCE_FILTER)!==0;},set:function set(value){if(value){this.altAndOuterContextDepth|=SUPPRESS_PRECEDENCE_FILTER;}else {this.altAndOuterContextDepth&=~SUPPRESS_PRECEDENCE_FILTER;}}}],[{key:'create',value:function create(state,alt,context){var semanticContext=arguments.length>3&&arguments[3]!==undefined?arguments[3]:SemanticContext_1.SemanticContext.NONE;var lexerActionExecutor=arguments[4];if(semanticContext!==SemanticContext_1.SemanticContext.NONE){if(lexerActionExecutor!=null){return new ActionSemanticContextATNConfig(lexerActionExecutor,semanticContext,state,alt,context,false);}else {return new SemanticContextATNConfig(semanticContext,state,alt,context);}}else if(lexerActionExecutor!=null){return new ActionATNConfig(lexerActionExecutor,state,alt,context,false);}else {return new ATNConfig(state,alt,context);}}},{key:'checkNonGreedyDecision',value:function checkNonGreedyDecision(source,target){return source.hasPassedThroughNonGreedyDecision||target instanceof DecisionState_1.DecisionState&&target.nonGreedy;}}]);return ATNConfig;}();__decorate([Decorators_1.NotNull],ATNConfig.prototype,"_state",void 0);__decorate([Decorators_1.NotNull],ATNConfig.prototype,"_context",void 0);__decorate([Decorators_1.NotNull],ATNConfig.prototype,"state",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ATNConfig.prototype,"context",null);__decorate([Decorators_1.NotNull],ATNConfig.prototype,"semanticContext",null);__decorate([Decorators_1.Override],ATNConfig.prototype,"clone",null);__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ATNConfig.prototype,"transformImpl",null);__decorate([Decorators_1.Override],ATNConfig.prototype,"equals",null);__decorate([Decorators_1.Override],ATNConfig.prototype,"hashCode",null);__decorate([__param(0,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],ATNConfig,"create",null);ATNConfig=__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ATNConfig);exports.ATNConfig=ATNConfig;/**
	 * This class was derived from `ATNConfig` purely as a memory optimization. It allows for the creation of an `ATNConfig`
	 * with a non-default semantic context.
	 *
	 * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete
	 * types.
	 */var SemanticContextATNConfig=function(_ATNConfig){inherits(SemanticContextATNConfig,_ATNConfig);function SemanticContextATNConfig(semanticContext,state,altOrConfig,context){classCallCheck(this,SemanticContextATNConfig);if(typeof altOrConfig==="number"){var _this249=possibleConstructorReturn(this,(SemanticContextATNConfig.__proto__||Object.getPrototypeOf(SemanticContextATNConfig)).call(this,state,altOrConfig,context));}else {var _this249=possibleConstructorReturn(this,(SemanticContextATNConfig.__proto__||Object.getPrototypeOf(SemanticContextATNConfig)).call(this,state,altOrConfig,context));}_this249._semanticContext=semanticContext;return possibleConstructorReturn(_this249);}createClass(SemanticContextATNConfig,[{key:'semanticContext',get:function get(){return this._semanticContext;}}]);return SemanticContextATNConfig;}(ATNConfig);__decorate([Decorators_1.NotNull],SemanticContextATNConfig.prototype,"_semanticContext",void 0);__decorate([Decorators_1.Override],SemanticContextATNConfig.prototype,"semanticContext",null);SemanticContextATNConfig=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],SemanticContextATNConfig);/**
	 * This class was derived from `ATNConfig` purely as a memory optimization. It allows for the creation of an `ATNConfig`
	 * with a lexer action.
	 *
	 * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete
	 * types.
	 */var ActionATNConfig=function(_ATNConfig2){inherits(ActionATNConfig,_ATNConfig2);function ActionATNConfig(lexerActionExecutor,state,altOrConfig,context,passedThroughNonGreedyDecision){classCallCheck(this,ActionATNConfig);if(typeof altOrConfig==="number"){var _this250=possibleConstructorReturn(this,(ActionATNConfig.__proto__||Object.getPrototypeOf(ActionATNConfig)).call(this,state,altOrConfig,context));}else {var _this250=possibleConstructorReturn(this,(ActionATNConfig.__proto__||Object.getPrototypeOf(ActionATNConfig)).call(this,state,altOrConfig,context));if(altOrConfig.semanticContext!==SemanticContext_1.SemanticContext.NONE){throw new Error("Not supported");}}_this250._lexerActionExecutor=lexerActionExecutor;_this250.passedThroughNonGreedyDecision=passedThroughNonGreedyDecision;return possibleConstructorReturn(_this250);}createClass(ActionATNConfig,[{key:'lexerActionExecutor',get:function get(){return this._lexerActionExecutor;}},{key:'hasPassedThroughNonGreedyDecision',get:function get(){return this.passedThroughNonGreedyDecision;}}]);return ActionATNConfig;}(ATNConfig);__decorate([Decorators_1.Override],ActionATNConfig.prototype,"lexerActionExecutor",null);__decorate([Decorators_1.Override],ActionATNConfig.prototype,"hasPassedThroughNonGreedyDecision",null);ActionATNConfig=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ActionATNConfig);/**
	 * This class was derived from `SemanticContextATNConfig` purely as a memory optimization. It allows for the creation of
	 * an `ATNConfig` with both a lexer action and a non-default semantic context.
	 *
	 * See the `ATNConfig` documentation for more information about conserving memory through the use of several concrete
	 * types.
	 */var ActionSemanticContextATNConfig=function(_SemanticContextATNCo){inherits(ActionSemanticContextATNConfig,_SemanticContextATNCo);function ActionSemanticContextATNConfig(lexerActionExecutor,semanticContext,state,altOrConfig,context,passedThroughNonGreedyDecision){classCallCheck(this,ActionSemanticContextATNConfig);if(typeof altOrConfig==="number"){var _this251=possibleConstructorReturn(this,(ActionSemanticContextATNConfig.__proto__||Object.getPrototypeOf(ActionSemanticContextATNConfig)).call(this,semanticContext,state,altOrConfig,context));}else {var _this251=possibleConstructorReturn(this,(ActionSemanticContextATNConfig.__proto__||Object.getPrototypeOf(ActionSemanticContextATNConfig)).call(this,semanticContext,state,altOrConfig,context));}_this251._lexerActionExecutor=lexerActionExecutor;_this251.passedThroughNonGreedyDecision=passedThroughNonGreedyDecision;return possibleConstructorReturn(_this251);}createClass(ActionSemanticContextATNConfig,[{key:'lexerActionExecutor',get:function get(){return this._lexerActionExecutor;}},{key:'hasPassedThroughNonGreedyDecision',get:function get(){return this.passedThroughNonGreedyDecision;}}]);return ActionSemanticContextATNConfig;}(SemanticContextATNConfig);__decorate([Decorators_1.Override],ActionSemanticContextATNConfig.prototype,"lexerActionExecutor",null);__decorate([Decorators_1.Override],ActionSemanticContextATNConfig.prototype,"hasPassedThroughNonGreedyDecision",null);ActionSemanticContextATNConfig=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ActionSemanticContextATNConfig);},{"../Decorators":224,"../misc/Array2DHashMap":321,"../misc/MurmurHash":333,"../misc/ObjectEqualityComparator":334,"./DecisionState":271,"./PredictionContext":298,"./SemanticContext":306,"assert":364}],253:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:25.5488013-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var Array2DHashSet_1=require("../misc/Array2DHashSet");var ArrayEqualityComparator_1=require("../misc/ArrayEqualityComparator");var ATN_1=require("./ATN");var ATNConfig_1=require("./ATNConfig");var BitSet_1=require("../misc/BitSet");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var PredictionContext_1=require("./PredictionContext");var PredictionContextCache_1=require("./PredictionContextCache");var SemanticContext_1=require("./SemanticContext");var assert=require("assert");var Utils=require("../misc/Utils");var KeyTypeEqualityComparer=function(){function KeyTypeEqualityComparer(){classCallCheck(this,KeyTypeEqualityComparer);}createClass(KeyTypeEqualityComparer,[{key:'hashCode',value:function hashCode(key){return key.state^key.alt;}},{key:'equals',value:function equals(a,b){return a.state===b.state&&a.alt===b.alt;}}]);return KeyTypeEqualityComparer;}();KeyTypeEqualityComparer.INSTANCE=new KeyTypeEqualityComparer();function NewKeyedConfigMap(map){if(map){return new Array2DHashMap_1.Array2DHashMap(map);}else {return new Array2DHashMap_1.Array2DHashMap(KeyTypeEqualityComparer.INSTANCE);}}/**
	 * Represents a set of ATN configurations (see `ATNConfig`). As configurations are added to the set, they are merged
	 * with other `ATNConfig` instances already in the set when possible using the graph-structured stack.
	 *
	 * An instance of this class represents the complete set of positions (with context) in an ATN which would be associated
	 * with a single DFA state. Its internal representation is more complex than traditional state used for NFA to DFA
	 * conversion due to performance requirements (both improving speed and reducing memory overhead) as well as supporting
	 * features such as semantic predicates and non-greedy operators in a form to support ANTLR's prediction algorithm.
	 *
	 * @author Sam Harwell
	 */var ATNConfigSet=function(){function ATNConfigSet(set,readonly){classCallCheck(this,ATNConfigSet);this._uniqueAlt=0;// Used in parser and lexer. In lexer, it indicates we hit a pred
	// while computing a closure operation.  Don't make a DFA state from this.
	this._hasSemanticContext=false;this._dipsIntoOuterContext=false;/**
	         * When `true`, this config set represents configurations where the entire
	         * outer context has been consumed by the ATN interpreter. This prevents the
	         * {@link ParserATNSimulator#closure} from pursuing the global FOLLOW when a
	         * rule stop state is reached with an empty prediction context.
	         *
	         * Note: `outermostConfigSet` and {@link #dipsIntoOuterContext} should never
	         * be true at the same time.
	         */this.outermostConfigSet=false;this.cachedHashCode=-1;if(!set){this.mergedConfigs=NewKeyedConfigMap();this.unmerged=[];this.configs=[];this._uniqueAlt=ATN_1.ATN.INVALID_ALT_NUMBER;}else {if(readonly){this.mergedConfigs=undefined;this.unmerged=undefined;}else if(!set.isReadOnly){this.mergedConfigs=NewKeyedConfigMap(set.mergedConfigs);this.unmerged=set.unmerged.slice(0);}else {this.mergedConfigs=NewKeyedConfigMap();this.unmerged=[];}this.configs=set.configs.slice(0);this._dipsIntoOuterContext=set._dipsIntoOuterContext;this._hasSemanticContext=set._hasSemanticContext;this.outermostConfigSet=set.outermostConfigSet;if(readonly||!set.isReadOnly){this._uniqueAlt=set._uniqueAlt;this._conflictInfo=set._conflictInfo;}// if (!readonly && set.isReadOnly) -> addAll is called from clone()
	}}/**
	     * Get the set of all alternatives represented by configurations in this
	     * set.
	     */createClass(ATNConfigSet,[{key:'getRepresentedAlternatives',value:function getRepresentedAlternatives(){if(this._conflictInfo!=null){return this._conflictInfo.conflictedAlts.clone();}var alts=new BitSet_1.BitSet();var _iteratorNormalCompletion90=true;var _didIteratorError90=false;var _iteratorError90=undefined;try{for(var _iterator90=this[Symbol.iterator](),_step90;!(_iteratorNormalCompletion90=(_step90=_iterator90.next()).done);_iteratorNormalCompletion90=true){var config=_step90.value;alts.set(config.alt);}}catch(err){_didIteratorError90=true;_iteratorError90=err;}finally{try{if(!_iteratorNormalCompletion90&&_iterator90.return){_iterator90.return();}}finally{if(_didIteratorError90){throw _iteratorError90;}}}return alts;}},{key:'getStates',value:function getStates(){var states=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);var _iteratorNormalCompletion91=true;var _didIteratorError91=false;var _iteratorError91=undefined;try{for(var _iterator91=this.configs[Symbol.iterator](),_step91;!(_iteratorNormalCompletion91=(_step91=_iterator91.next()).done);_iteratorNormalCompletion91=true){var c=_step91.value;states.add(c.state);}}catch(err){_didIteratorError91=true;_iteratorError91=err;}finally{try{if(!_iteratorNormalCompletion91&&_iterator91.return){_iterator91.return();}}finally{if(_didIteratorError91){throw _iteratorError91;}}}return states;}},{key:'optimizeConfigs',value:function optimizeConfigs(interpreter){if(this.configs.length===0){return;}var _iteratorNormalCompletion92=true;var _didIteratorError92=false;var _iteratorError92=undefined;try{for(var _iterator92=this.configs[Symbol.iterator](),_step92;!(_iteratorNormalCompletion92=(_step92=_iterator92.next()).done);_iteratorNormalCompletion92=true){var config=_step92.value;config.context=interpreter.atn.getCachedContext(config.context);}}catch(err){_didIteratorError92=true;_iteratorError92=err;}finally{try{if(!_iteratorNormalCompletion92&&_iterator92.return){_iterator92.return();}}finally{if(_didIteratorError92){throw _iteratorError92;}}}}},{key:'clone',value:function clone(readonly){var copy=new ATNConfigSet(this,readonly);if(!readonly&&this.isReadOnly){copy.addAll(this.configs);}return copy;}},{key:'contains',value:function contains(o){if(!(o instanceof ATNConfig_1.ATNConfig)){return false;}if(this.mergedConfigs&&this.unmerged){var config=o;var configKey=this.getKey(config);var mergedConfig=this.mergedConfigs.get(configKey);if(mergedConfig!=null&&this.canMerge(config,configKey,mergedConfig)){return mergedConfig.contains(config);}var _iteratorNormalCompletion93=true;var _didIteratorError93=false;var _iteratorError93=undefined;try{for(var _iterator93=this.unmerged[Symbol.iterator](),_step93;!(_iteratorNormalCompletion93=(_step93=_iterator93.next()).done);_iteratorNormalCompletion93=true){var c=_step93.value;if(c.contains(o)){return true;}}}catch(err){_didIteratorError93=true;_iteratorError93=err;}finally{try{if(!_iteratorNormalCompletion93&&_iterator93.return){_iterator93.return();}}finally{if(_didIteratorError93){throw _iteratorError93;}}}}else {var _iteratorNormalCompletion94=true;var _didIteratorError94=false;var _iteratorError94=undefined;try{for(var _iterator94=this.configs[Symbol.iterator](),_step94;!(_iteratorNormalCompletion94=(_step94=_iterator94.next()).done);_iteratorNormalCompletion94=true){var _c=_step94.value;if(_c.contains(o)){return true;}}}catch(err){_didIteratorError94=true;_iteratorError94=err;}finally{try{if(!_iteratorNormalCompletion94&&_iterator94.return){_iterator94.return();}}finally{if(_didIteratorError94){throw _iteratorError94;}}}}return false;}},{key:Symbol.iterator,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.delegateYield(this.configs,'t0',1);case 1:case'end':return _context3.stop();}}},value,this);})},{key:'toArray',value:function toArray(){return this.configs;}},{key:'add',value:function add(e,contextCache){this.ensureWritable();if(!this.mergedConfigs||!this.unmerged){throw new Error("Covered by ensureWritable but duplicated here for strict null check limitation");}assert(!this.outermostConfigSet||!e.reachesIntoOuterContext);if(contextCache==null){contextCache=PredictionContextCache_1.PredictionContextCache.UNCACHED;}var addKey=void 0;var key=this.getKey(e);var mergedConfig=this.mergedConfigs.get(key);addKey=mergedConfig==null;if(mergedConfig!=null&&this.canMerge(e,key,mergedConfig)){mergedConfig.outerContextDepth=Math.max(mergedConfig.outerContextDepth,e.outerContextDepth);if(e.isPrecedenceFilterSuppressed){mergedConfig.isPrecedenceFilterSuppressed=true;}var joined=PredictionContext_1.PredictionContext.join(mergedConfig.context,e.context,contextCache);this.updatePropertiesForMergedConfig(e);if(mergedConfig.context===joined){return false;}mergedConfig.context=joined;return true;}for(var i=0;i<this.unmerged.length;i++){var unmergedConfig=this.unmerged[i];if(this.canMerge(e,key,unmergedConfig)){unmergedConfig.outerContextDepth=Math.max(unmergedConfig.outerContextDepth,e.outerContextDepth);if(e.isPrecedenceFilterSuppressed){unmergedConfig.isPrecedenceFilterSuppressed=true;}var _joined=PredictionContext_1.PredictionContext.join(unmergedConfig.context,e.context,contextCache);this.updatePropertiesForMergedConfig(e);if(unmergedConfig.context===_joined){return false;}unmergedConfig.context=_joined;if(addKey){this.mergedConfigs.put(key,unmergedConfig);this.unmerged.splice(i,1);}return true;}}this.configs.push(e);if(addKey){this.mergedConfigs.put(key,e);}else {this.unmerged.push(e);}this.updatePropertiesForAddedConfig(e);return true;}},{key:'updatePropertiesForMergedConfig',value:function updatePropertiesForMergedConfig(config){// merged configs can't change the alt or semantic context
	this._dipsIntoOuterContext=this._dipsIntoOuterContext||config.reachesIntoOuterContext;assert(!this.outermostConfigSet||!this._dipsIntoOuterContext);}},{key:'updatePropertiesForAddedConfig',value:function updatePropertiesForAddedConfig(config){if(this.configs.length===1){this._uniqueAlt=config.alt;}else if(this._uniqueAlt!==config.alt){this._uniqueAlt=ATN_1.ATN.INVALID_ALT_NUMBER;}this._hasSemanticContext=this._hasSemanticContext||!SemanticContext_1.SemanticContext.NONE.equals(config.semanticContext);this._dipsIntoOuterContext=this._dipsIntoOuterContext||config.reachesIntoOuterContext;assert(!this.outermostConfigSet||!this._dipsIntoOuterContext);}},{key:'canMerge',value:function canMerge(left,leftKey,right){if(left.state.stateNumber!==right.state.stateNumber){return false;}if(leftKey.alt!==right.alt){return false;}return left.semanticContext.equals(right.semanticContext);}},{key:'getKey',value:function getKey(e){return {state:e.state.stateNumber,alt:e.alt};}},{key:'containsAll',value:function containsAll(c){var _iteratorNormalCompletion95=true;var _didIteratorError95=false;var _iteratorError95=undefined;try{for(var _iterator95=c[Symbol.iterator](),_step95;!(_iteratorNormalCompletion95=(_step95=_iterator95.next()).done);_iteratorNormalCompletion95=true){var o=_step95.value;if(!(o instanceof ATNConfig_1.ATNConfig)){return false;}if(!this.contains(o)){return false;}}}catch(err){_didIteratorError95=true;_iteratorError95=err;}finally{try{if(!_iteratorNormalCompletion95&&_iterator95.return){_iterator95.return();}}finally{if(_didIteratorError95){throw _iteratorError95;}}}return true;}},{key:'addAll',value:function addAll(c,contextCache){this.ensureWritable();var changed=false;var _iteratorNormalCompletion96=true;var _didIteratorError96=false;var _iteratorError96=undefined;try{for(var _iterator96=c[Symbol.iterator](),_step96;!(_iteratorNormalCompletion96=(_step96=_iterator96.next()).done);_iteratorNormalCompletion96=true){var group=_step96.value;if(this.add(group,contextCache)){changed=true;}}}catch(err){_didIteratorError96=true;_iteratorError96=err;}finally{try{if(!_iteratorNormalCompletion96&&_iterator96.return){_iterator96.return();}}finally{if(_didIteratorError96){throw _iteratorError96;}}}return changed;}},{key:'clear',value:function clear(){this.ensureWritable();if(!this.mergedConfigs||!this.unmerged){throw new Error("Covered by ensureWritable but duplicated here for strict null check limitation");}this.mergedConfigs.clear();this.unmerged.length=0;this.configs.length=0;this._dipsIntoOuterContext=false;this._hasSemanticContext=false;this._uniqueAlt=ATN_1.ATN.INVALID_ALT_NUMBER;this._conflictInfo=undefined;}},{key:'equals',value:function equals(obj){if(this===obj){return true;}if(!(obj instanceof ATNConfigSet)){return false;}return this.outermostConfigSet===obj.outermostConfigSet&&Utils.equals(this._conflictInfo,obj._conflictInfo)&&ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.equals(this.configs,obj.configs);}},{key:'hashCode',value:function hashCode(){if(this.isReadOnly&&this.cachedHashCode!==-1){return this.cachedHashCode;}var hashCode=1;hashCode=5*hashCode^(this.outermostConfigSet?1:0);hashCode=5*hashCode^ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.hashCode(this.configs);if(this.isReadOnly){this.cachedHashCode=hashCode;}return hashCode;}},{key:'toString',value:function toString(showContext){if(showContext==null){showContext=false;}var buf="";var sortedConfigs=this.configs.slice(0);sortedConfigs.sort(function(o1,o2){if(o1.alt!==o2.alt){return o1.alt-o2.alt;}else if(o1.state.stateNumber!==o2.state.stateNumber){return o1.state.stateNumber-o2.state.stateNumber;}else {return o1.semanticContext.toString().localeCompare(o2.semanticContext.toString());}});buf+="[";for(var i=0;i<sortedConfigs.length;i++){if(i>0){buf+=", ";}buf+=sortedConfigs[i].toString(undefined,true,showContext);}buf+="]";if(this._hasSemanticContext){buf+=",hasSemanticContext="+this._hasSemanticContext;}if(this._uniqueAlt!==ATN_1.ATN.INVALID_ALT_NUMBER){buf+=",uniqueAlt="+this._uniqueAlt;}if(this._conflictInfo!=null){buf+=",conflictingAlts="+this._conflictInfo.conflictedAlts;if(!this._conflictInfo.isExact){buf+="*";}}if(this._dipsIntoOuterContext){buf+=",dipsIntoOuterContext";}return buf.toString();}},{key:'get',value:function get(index){return this.configs[index];}},{key:'ensureWritable',value:function ensureWritable(){if(this.isReadOnly){throw new Error("This ATNConfigSet is read only.");}}},{key:'isReadOnly',get:function get(){return this.mergedConfigs==null;}},{key:'isOutermostConfigSet',get:function get(){return this.outermostConfigSet;},set:function set(outermostConfigSet){if(this.outermostConfigSet&&!outermostConfigSet){throw new Error("IllegalStateException");}assert(!outermostConfigSet||!this._dipsIntoOuterContext);this.outermostConfigSet=outermostConfigSet;}},{key:'size',get:function get(){return this.configs.length;}},{key:'isEmpty',get:function get(){return this.configs.length===0;}},{key:'uniqueAlt',get:function get(){return this._uniqueAlt;}},{key:'hasSemanticContext',get:function get(){return this._hasSemanticContext;},set:function set(value){this.ensureWritable();this._hasSemanticContext=value;}},{key:'conflictInfo',get:function get(){return this._conflictInfo;},set:function set(conflictInfo){this.ensureWritable();this._conflictInfo=conflictInfo;}},{key:'conflictingAlts',get:function get(){if(this._conflictInfo==null){return undefined;}return this._conflictInfo.conflictedAlts;}},{key:'isExactConflict',get:function get(){if(this._conflictInfo==null){return false;}return this._conflictInfo.isExact;}},{key:'dipsIntoOuterContext',get:function get(){return this._dipsIntoOuterContext;}}]);return ATNConfigSet;}();__decorate([Decorators_1.NotNull],ATNConfigSet.prototype,"getRepresentedAlternatives",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"size",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"isEmpty",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"contains",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,Symbol.iterator,null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"toArray",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"containsAll",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"clear",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"equals",null);__decorate([Decorators_1.Override],ATNConfigSet.prototype,"hashCode",null);exports.ATNConfigSet=ATNConfigSet;},{"../Decorators":224,"../misc/Array2DHashMap":321,"../misc/Array2DHashSet":322,"../misc/ArrayEqualityComparator":323,"../misc/BitSet":325,"../misc/ObjectEqualityComparator":334,"../misc/Utils":337,"./ATN":251,"./ATNConfig":252,"./PredictionContext":298,"./PredictionContextCache":299,"./SemanticContext":306,"assert":364}],254:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:25.8187912-07:00
	var Decorators_1=require("../Decorators");/**
	 *
	 * @author Sam Harwell
	 */var ATNDeserializationOptions=function(){function ATNDeserializationOptions(options){classCallCheck(this,ATNDeserializationOptions);this.readOnly=false;if(options){this.verifyATN=options.verifyATN;this.generateRuleBypassTransitions=options.generateRuleBypassTransitions;this.optimize=options.optimize;}else {this.verifyATN=true;this.generateRuleBypassTransitions=false;this.optimize=true;}}createClass(ATNDeserializationOptions,[{key:'makeReadOnly',value:function makeReadOnly(){this.readOnly=true;}},{key:'throwIfReadOnly',value:function throwIfReadOnly(){if(this.isReadOnly){throw new Error("The object is read only.");}}},{key:'isReadOnly',get:function get(){return this.readOnly;}},{key:'isVerifyATN',get:function get(){return this.verifyATN;},set:function set(verifyATN){this.throwIfReadOnly();this.verifyATN=verifyATN;}},{key:'isGenerateRuleBypassTransitions',get:function get(){return this.generateRuleBypassTransitions;},set:function set(generateRuleBypassTransitions){this.throwIfReadOnly();this.generateRuleBypassTransitions=generateRuleBypassTransitions;}},{key:'isOptimize',get:function get(){return this.optimize;},set:function set(optimize){this.throwIfReadOnly();this.optimize=optimize;}}],[{key:'defaultOptions',get:function get(){if(ATNDeserializationOptions._defaultOptions==null){ATNDeserializationOptions._defaultOptions=new ATNDeserializationOptions();ATNDeserializationOptions._defaultOptions.makeReadOnly();}return ATNDeserializationOptions._defaultOptions;}}]);return ATNDeserializationOptions;}();__decorate([Decorators_1.NotNull],ATNDeserializationOptions,"defaultOptions",null);exports.ATNDeserializationOptions=ATNDeserializationOptions;},{"../Decorators":224}],255:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:25.9683447-07:00
	var ActionTransition_1=require("./ActionTransition");var Array2DHashSet_1=require("../misc/Array2DHashSet");var ATN_1=require("./ATN");var ATNDeserializationOptions_1=require("./ATNDeserializationOptions");var ATNStateType_1=require("./ATNStateType");var AtomTransition_1=require("./AtomTransition");var BasicBlockStartState_1=require("./BasicBlockStartState");var BasicState_1=require("./BasicState");var BitSet_1=require("../misc/BitSet");var BlockEndState_1=require("./BlockEndState");var BlockStartState_1=require("./BlockStartState");var DecisionState_1=require("./DecisionState");var DFA_1=require("../dfa/DFA");var EpsilonTransition_1=require("./EpsilonTransition");var IntervalSet_1=require("../misc/IntervalSet");var InvalidState_1=require("./InvalidState");var LexerChannelAction_1=require("./LexerChannelAction");var LexerCustomAction_1=require("./LexerCustomAction");var LexerModeAction_1=require("./LexerModeAction");var LexerMoreAction_1=require("./LexerMoreAction");var LexerPopModeAction_1=require("./LexerPopModeAction");var LexerPushModeAction_1=require("./LexerPushModeAction");var LexerSkipAction_1=require("./LexerSkipAction");var LexerTypeAction_1=require("./LexerTypeAction");var LoopEndState_1=require("./LoopEndState");var Decorators_1=require("../Decorators");var NotSetTransition_1=require("./NotSetTransition");var ParserATNSimulator_1=require("./ParserATNSimulator");var PlusBlockStartState_1=require("./PlusBlockStartState");var PlusLoopbackState_1=require("./PlusLoopbackState");var PrecedencePredicateTransition_1=require("./PrecedencePredicateTransition");var PredicateTransition_1=require("./PredicateTransition");var RangeTransition_1=require("./RangeTransition");var RuleStartState_1=require("./RuleStartState");var RuleStopState_1=require("./RuleStopState");var RuleTransition_1=require("./RuleTransition");var SetTransition_1=require("./SetTransition");var StarBlockStartState_1=require("./StarBlockStartState");var StarLoopbackState_1=require("./StarLoopbackState");var StarLoopEntryState_1=require("./StarLoopEntryState");var Token_1=require("../Token");var TokensStartState_1=require("./TokensStartState");var UUID_1=require("../misc/UUID");var WildcardTransition_1=require("./WildcardTransition");var UnicodeDeserializingMode;(function(UnicodeDeserializingMode){UnicodeDeserializingMode[UnicodeDeserializingMode["UNICODE_BMP"]=0]="UNICODE_BMP";UnicodeDeserializingMode[UnicodeDeserializingMode["UNICODE_SMP"]=1]="UNICODE_SMP";})(UnicodeDeserializingMode||(UnicodeDeserializingMode={}));/**
	 *
	 * @author Sam Harwell
	 */var ATNDeserializer=function(){function ATNDeserializer(deserializationOptions){classCallCheck(this,ATNDeserializer);if(deserializationOptions==null){deserializationOptions=ATNDeserializationOptions_1.ATNDeserializationOptions.defaultOptions;}this.deserializationOptions=deserializationOptions;}createClass(ATNDeserializer,[{key:'deserialize',value:function deserialize(data){data=data.slice(0);// Each Uint16 value in data is shifted by +2 at the entry to this method. This is an encoding optimization
	// targeting the serialized values 0 and -1 (serialized to 0xFFFF), each of which are very common in the
	// serialized form of the ATN. In the modified UTF-8 that Java uses for compiled string literals, these two
	// character values have multi-byte forms. By shifting each value by +2, they become characters 2 and 1 prior to
	// writing the string, each of which have single-byte representations. Since the shift occurs in the tool during
	// ATN serialization, each target is responsible for adjusting the values during deserialization.
	//
	// As a special case, note that the first element of data is not adjusted because it contains the major version
	// number of the serialized ATN, which was fixed at 3 at the time the value shifting was implemented.
	for(var i=1;i<data.length;i++){data[i]=data[i]-2&0xFFFF;}var p=0;var version=ATNDeserializer.toInt(data[p++]);if(version!==ATNDeserializer.SERIALIZED_VERSION){var reason='Could not deserialize ATN with version '+version+' (expected '+ATNDeserializer.SERIALIZED_VERSION+').';throw new Error(reason);}var uuid=ATNDeserializer.toUUID(data,p);p+=8;if(ATNDeserializer.SUPPORTED_UUIDS.findIndex(function(e){return e.equals(uuid);})<0){var _reason='Could not deserialize ATN with UUID '+uuid+' (expected '+ATNDeserializer.SERIALIZED_UUID+' or a legacy UUID).';throw new Error(_reason);}var supportsLexerActions=ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_LEXER_ACTIONS,uuid);var grammarType=ATNDeserializer.toInt(data[p++]);var maxTokenType=ATNDeserializer.toInt(data[p++]);var atn=new ATN_1.ATN(grammarType,maxTokenType);//
	// STATES
	//
	var loopBackStateNumbers=[];var endStateNumbers=[];var nstates=ATNDeserializer.toInt(data[p++]);for(var _i11=0;_i11<nstates;_i11++){var stype=ATNDeserializer.toInt(data[p++]);// ignore bad type of states
	if(stype===ATNStateType_1.ATNStateType.INVALID_TYPE){atn.addState(new InvalidState_1.InvalidState());continue;}var ruleIndex=ATNDeserializer.toInt(data[p++]);if(ruleIndex===0xFFFF){ruleIndex=-1;}var s=this.stateFactory(stype,ruleIndex);if(stype===ATNStateType_1.ATNStateType.LOOP_END){// special case
	var loopBackStateNumber=ATNDeserializer.toInt(data[p++]);loopBackStateNumbers.push([s,loopBackStateNumber]);}else if(s instanceof BlockStartState_1.BlockStartState){var endStateNumber=ATNDeserializer.toInt(data[p++]);endStateNumbers.push([s,endStateNumber]);}atn.addState(s);}// delay the assignment of loop back and end states until we know all the state instances have been initialized
	var _iteratorNormalCompletion97=true;var _didIteratorError97=false;var _iteratorError97=undefined;try{for(var _iterator97=loopBackStateNumbers[Symbol.iterator](),_step97;!(_iteratorNormalCompletion97=(_step97=_iterator97.next()).done);_iteratorNormalCompletion97=true){var pair=_step97.value;pair[0].loopBackState=atn.states[pair[1]];}}catch(err){_didIteratorError97=true;_iteratorError97=err;}finally{try{if(!_iteratorNormalCompletion97&&_iterator97.return){_iterator97.return();}}finally{if(_didIteratorError97){throw _iteratorError97;}}}var _iteratorNormalCompletion98=true;var _didIteratorError98=false;var _iteratorError98=undefined;try{for(var _iterator98=endStateNumbers[Symbol.iterator](),_step98;!(_iteratorNormalCompletion98=(_step98=_iterator98.next()).done);_iteratorNormalCompletion98=true){var _pair=_step98.value;_pair[0].endState=atn.states[_pair[1]];}}catch(err){_didIteratorError98=true;_iteratorError98=err;}finally{try{if(!_iteratorNormalCompletion98&&_iterator98.return){_iterator98.return();}}finally{if(_didIteratorError98){throw _iteratorError98;}}}var numNonGreedyStates=ATNDeserializer.toInt(data[p++]);for(var _i12=0;_i12<numNonGreedyStates;_i12++){var stateNumber=ATNDeserializer.toInt(data[p++]);atn.states[stateNumber].nonGreedy=true;}var numSllDecisions=ATNDeserializer.toInt(data[p++]);for(var _i13=0;_i13<numSllDecisions;_i13++){var _stateNumber=ATNDeserializer.toInt(data[p++]);atn.states[_stateNumber].sll=true;}var numPrecedenceStates=ATNDeserializer.toInt(data[p++]);for(var _i14=0;_i14<numPrecedenceStates;_i14++){var _stateNumber2=ATNDeserializer.toInt(data[p++]);atn.states[_stateNumber2].isPrecedenceRule=true;}//
	// RULES
	//
	var nrules=ATNDeserializer.toInt(data[p++]);if(atn.grammarType===0/* LEXER */){atn.ruleToTokenType=new Int32Array(nrules);}atn.ruleToStartState=new Array(nrules);for(var _i15=0;_i15<nrules;_i15++){var _s=ATNDeserializer.toInt(data[p++]);var startState=atn.states[_s];startState.leftFactored=ATNDeserializer.toInt(data[p++])!==0;atn.ruleToStartState[_i15]=startState;if(atn.grammarType===0/* LEXER */){var tokenType=ATNDeserializer.toInt(data[p++]);if(tokenType===0xFFFF){tokenType=Token_1.Token.EOF;}atn.ruleToTokenType[_i15]=tokenType;if(!ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_LEXER_ACTIONS,uuid)){// this piece of unused metadata was serialized prior to the
	// addition of LexerAction
	var actionIndexIgnored=ATNDeserializer.toInt(data[p++]);if(actionIndexIgnored===0xFFFF){actionIndexIgnored=-1;}}}}atn.ruleToStopState=new Array(nrules);var _iteratorNormalCompletion99=true;var _didIteratorError99=false;var _iteratorError99=undefined;try{for(var _iterator99=atn.states[Symbol.iterator](),_step99;!(_iteratorNormalCompletion99=(_step99=_iterator99.next()).done);_iteratorNormalCompletion99=true){var _state3=_step99.value;if(!(_state3 instanceof RuleStopState_1.RuleStopState)){continue;}atn.ruleToStopState[_state3.ruleIndex]=_state3;atn.ruleToStartState[_state3.ruleIndex].stopState=_state3;}//
	// MODES
	//
	}catch(err){_didIteratorError99=true;_iteratorError99=err;}finally{try{if(!_iteratorNormalCompletion99&&_iterator99.return){_iterator99.return();}}finally{if(_didIteratorError99){throw _iteratorError99;}}}var nmodes=ATNDeserializer.toInt(data[p++]);for(var _i16=0;_i16<nmodes;_i16++){var _s2=ATNDeserializer.toInt(data[p++]);atn.modeToStartState.push(atn.states[_s2]);}atn.modeToDFA=new Array(nmodes);for(var _i17=0;_i17<nmodes;_i17++){atn.modeToDFA[_i17]=new DFA_1.DFA(atn.modeToStartState[_i17]);}//
	// SETS
	//
	var sets=[];// First, read all sets with 16-bit Unicode code points <= U+FFFF.
	p=this.deserializeSets(data,p,sets,ATNDeserializer.getUnicodeDeserializer(0/* UNICODE_BMP */));// Next, if the ATN was serialized with the Unicode SMP feature,
	// deserialize sets with 32-bit arguments <= U+10FFFF.
	if(ATNDeserializer.isFeatureSupported(ATNDeserializer.ADDED_UNICODE_SMP,uuid)){p=this.deserializeSets(data,p,sets,ATNDeserializer.getUnicodeDeserializer(1/* UNICODE_SMP */));}//
	// EDGES
	//
	var nedges=ATNDeserializer.toInt(data[p++]);for(var _i18=0;_i18<nedges;_i18++){var src=ATNDeserializer.toInt(data[p]);var trg=ATNDeserializer.toInt(data[p+1]);var ttype=ATNDeserializer.toInt(data[p+2]);var arg1=ATNDeserializer.toInt(data[p+3]);var arg2=ATNDeserializer.toInt(data[p+4]);var arg3=ATNDeserializer.toInt(data[p+5]);var trans=this.edgeFactory(atn,ttype,src,trg,arg1,arg2,arg3,sets);// console.log(`EDGE ${trans.constructor.name} ${src}->${trg} ${Transition.serializationNames[ttype]} ${arg1},${arg2},${arg3}`);
	var srcState=atn.states[src];srcState.addTransition(trans);p+=6;}var returnTransitionsSet=new Array2DHashSet_1.Array2DHashSet({hashCode:function hashCode(o){return o.stopState^o.returnState^o.outermostPrecedenceReturn;},equals:function equals(a,b){return a.stopState===b.stopState&&a.returnState===b.returnState&&a.outermostPrecedenceReturn===b.outermostPrecedenceReturn;}});var returnTransitions=[];var _iteratorNormalCompletion100=true;var _didIteratorError100=false;var _iteratorError100=undefined;try{for(var _iterator100=atn.states[Symbol.iterator](),_step100;!(_iteratorNormalCompletion100=(_step100=_iterator100.next()).done);_iteratorNormalCompletion100=true){var _state4=_step100.value;var returningToLeftFactored=_state4.ruleIndex>=0&&atn.ruleToStartState[_state4.ruleIndex].leftFactored;for(var _i26=0;_i26<_state4.numberOfTransitions;_i26++){var t=_state4.transition(_i26);if(!(t instanceof RuleTransition_1.RuleTransition)){continue;}var ruleTransition=t;var returningFromLeftFactored=atn.ruleToStartState[ruleTransition.target.ruleIndex].leftFactored;if(!returningFromLeftFactored&&returningToLeftFactored){continue;}var outermostPrecedenceReturn=-1;if(atn.ruleToStartState[ruleTransition.target.ruleIndex].isPrecedenceRule){if(ruleTransition.precedence===0){outermostPrecedenceReturn=ruleTransition.target.ruleIndex;}}var current={stopState:ruleTransition.target.ruleIndex,returnState:ruleTransition.followState.stateNumber,outermostPrecedenceReturn:outermostPrecedenceReturn};if(returnTransitionsSet.add(current)){returnTransitions.push(current);}}}// Add all elements from returnTransitions to the ATN
	}catch(err){_didIteratorError100=true;_iteratorError100=err;}finally{try{if(!_iteratorNormalCompletion100&&_iterator100.return){_iterator100.return();}}finally{if(_didIteratorError100){throw _iteratorError100;}}}var _iteratorNormalCompletion101=true;var _didIteratorError101=false;var _iteratorError101=undefined;try{for(var _iterator101=returnTransitions[Symbol.iterator](),_step101;!(_iteratorNormalCompletion101=(_step101=_iterator101.next()).done);_iteratorNormalCompletion101=true){var returnTransition=_step101.value;var _transition3=new EpsilonTransition_1.EpsilonTransition(atn.states[returnTransition.returnState],returnTransition.outermostPrecedenceReturn);atn.ruleToStopState[returnTransition.stopState].addTransition(_transition3);}}catch(err){_didIteratorError101=true;_iteratorError101=err;}finally{try{if(!_iteratorNormalCompletion101&&_iterator101.return){_iterator101.return();}}finally{if(_didIteratorError101){throw _iteratorError101;}}}var _iteratorNormalCompletion102=true;var _didIteratorError102=false;var _iteratorError102=undefined;try{for(var _iterator102=atn.states[Symbol.iterator](),_step102;!(_iteratorNormalCompletion102=(_step102=_iterator102.next()).done);_iteratorNormalCompletion102=true){var _state5=_step102.value;if(_state5 instanceof BlockStartState_1.BlockStartState){// we need to know the end state to set its start state
	if(_state5.endState==null){throw new Error("IllegalStateException");}// block end states can only be associated to a single block start state
	if(_state5.endState.startState!=null){throw new Error("IllegalStateException");}_state5.endState.startState=_state5;}if(_state5 instanceof PlusLoopbackState_1.PlusLoopbackState){var loopbackState=_state5;for(var _i27=0;_i27<loopbackState.numberOfTransitions;_i27++){var target=loopbackState.transition(_i27).target;if(target instanceof PlusBlockStartState_1.PlusBlockStartState){target.loopBackState=loopbackState;}}}else if(_state5 instanceof StarLoopbackState_1.StarLoopbackState){var _loopbackState=_state5;for(var _i28=0;_i28<_loopbackState.numberOfTransitions;_i28++){var _target=_loopbackState.transition(_i28).target;if(_target instanceof StarLoopEntryState_1.StarLoopEntryState){_target.loopBackState=_loopbackState;}}}}//
	// DECISIONS
	//
	}catch(err){_didIteratorError102=true;_iteratorError102=err;}finally{try{if(!_iteratorNormalCompletion102&&_iterator102.return){_iterator102.return();}}finally{if(_didIteratorError102){throw _iteratorError102;}}}var ndecisions=ATNDeserializer.toInt(data[p++]);for(var _i19=1;_i19<=ndecisions;_i19++){var _s3=ATNDeserializer.toInt(data[p++]);var decState=atn.states[_s3];atn.decisionToState.push(decState);decState.decision=_i19-1;}//
	// LEXER ACTIONS
	//
	if(atn.grammarType===0/* LEXER */){if(supportsLexerActions){atn.lexerActions=new Array(ATNDeserializer.toInt(data[p++]));for(var _i20=0;_i20<atn.lexerActions.length;_i20++){var actionType=ATNDeserializer.toInt(data[p++]);var data1=ATNDeserializer.toInt(data[p++]);if(data1===0xFFFF){data1=-1;}var data2=ATNDeserializer.toInt(data[p++]);if(data2===0xFFFF){data2=-1;}var lexerAction=this.lexerActionFactory(actionType,data1,data2);atn.lexerActions[_i20]=lexerAction;}}else {// for compatibility with older serialized ATNs, convert the old
	// serialized action index for action transitions to the new
	// form, which is the index of a LexerCustomAction
	var legacyLexerActions=[];var _iteratorNormalCompletion103=true;var _didIteratorError103=false;var _iteratorError103=undefined;try{for(var _iterator103=atn.states[Symbol.iterator](),_step103;!(_iteratorNormalCompletion103=(_step103=_iterator103.next()).done);_iteratorNormalCompletion103=true){var state=_step103.value;for(var _i21=0;_i21<state.numberOfTransitions;_i21++){var transition=state.transition(_i21);if(!(transition instanceof ActionTransition_1.ActionTransition)){continue;}var _ruleIndex=transition.ruleIndex;var actionIndex=transition.actionIndex;var _lexerAction=new LexerCustomAction_1.LexerCustomAction(_ruleIndex,actionIndex);state.setTransition(_i21,new ActionTransition_1.ActionTransition(transition.target,_ruleIndex,legacyLexerActions.length,false));legacyLexerActions.push(_lexerAction);}}}catch(err){_didIteratorError103=true;_iteratorError103=err;}finally{try{if(!_iteratorNormalCompletion103&&_iterator103.return){_iterator103.return();}}finally{if(_didIteratorError103){throw _iteratorError103;}}}atn.lexerActions=legacyLexerActions;}}this.markPrecedenceDecisions(atn);atn.decisionToDFA=new Array(ndecisions);for(var _i22=0;_i22<ndecisions;_i22++){atn.decisionToDFA[_i22]=new DFA_1.DFA(atn.decisionToState[_i22],_i22);}if(this.deserializationOptions.isVerifyATN){this.verifyATN(atn);}if(this.deserializationOptions.isGenerateRuleBypassTransitions&&atn.grammarType===1/* PARSER */){atn.ruleToTokenType=new Int32Array(atn.ruleToStartState.length);for(var _i23=0;_i23<atn.ruleToStartState.length;_i23++){atn.ruleToTokenType[_i23]=atn.maxTokenType+_i23+1;}for(var _i24=0;_i24<atn.ruleToStartState.length;_i24++){var bypassStart=new BasicBlockStartState_1.BasicBlockStartState();bypassStart.ruleIndex=_i24;atn.addState(bypassStart);var bypassStop=new BlockEndState_1.BlockEndState();bypassStop.ruleIndex=_i24;atn.addState(bypassStop);bypassStart.endState=bypassStop;atn.defineDecisionState(bypassStart);bypassStop.startState=bypassStart;var endState=void 0;var excludeTransition=void 0;if(atn.ruleToStartState[_i24].isPrecedenceRule){// wrap from the beginning of the rule to the StarLoopEntryState
	endState=undefined;var _iteratorNormalCompletion104=true;var _didIteratorError104=false;var _iteratorError104=undefined;try{for(var _iterator104=atn.states[Symbol.iterator](),_step104;!(_iteratorNormalCompletion104=(_step104=_iterator104.next()).done);_iteratorNormalCompletion104=true){var _state=_step104.value;if(_state.ruleIndex!==_i24){continue;}if(!(_state instanceof StarLoopEntryState_1.StarLoopEntryState)){continue;}var maybeLoopEndState=_state.transition(_state.numberOfTransitions-1).target;if(!(maybeLoopEndState instanceof LoopEndState_1.LoopEndState)){continue;}if(maybeLoopEndState.epsilonOnlyTransitions&&maybeLoopEndState.transition(0).target instanceof RuleStopState_1.RuleStopState){endState=_state;break;}}}catch(err){_didIteratorError104=true;_iteratorError104=err;}finally{try{if(!_iteratorNormalCompletion104&&_iterator104.return){_iterator104.return();}}finally{if(_didIteratorError104){throw _iteratorError104;}}}if(!endState){throw new Error("Couldn't identify final state of the precedence rule prefix section.");}excludeTransition=endState.loopBackState.transition(0);}else {endState=atn.ruleToStopState[_i24];}// all non-excluded transitions that currently target end state need to target blockEnd instead
	var _iteratorNormalCompletion105=true;var _didIteratorError105=false;var _iteratorError105=undefined;try{for(var _iterator105=atn.states[Symbol.iterator](),_step105;!(_iteratorNormalCompletion105=(_step105=_iterator105.next()).done);_iteratorNormalCompletion105=true){var _state2=_step105.value;for(var _i25=0;_i25<_state2.numberOfTransitions;_i25++){var _transition2=_state2.transition(_i25);if(_transition2===excludeTransition){continue;}if(_transition2.target===endState){_transition2.target=bypassStop;}}}// all transitions leaving the rule start state need to leave blockStart instead
	}catch(err){_didIteratorError105=true;_iteratorError105=err;}finally{try{if(!_iteratorNormalCompletion105&&_iterator105.return){_iterator105.return();}}finally{if(_didIteratorError105){throw _iteratorError105;}}}while(atn.ruleToStartState[_i24].numberOfTransitions>0){var _transition=atn.ruleToStartState[_i24].removeTransition(atn.ruleToStartState[_i24].numberOfTransitions-1);bypassStart.addTransition(_transition);}// link the new states
	atn.ruleToStartState[_i24].addTransition(new EpsilonTransition_1.EpsilonTransition(bypassStart));bypassStop.addTransition(new EpsilonTransition_1.EpsilonTransition(endState));var matchState=new BasicState_1.BasicState();atn.addState(matchState);matchState.addTransition(new AtomTransition_1.AtomTransition(bypassStop,atn.ruleToTokenType[_i24]));bypassStart.addTransition(new EpsilonTransition_1.EpsilonTransition(matchState));}if(this.deserializationOptions.isVerifyATN){// reverify after modification
	this.verifyATN(atn);}}if(this.deserializationOptions.isOptimize){while(true){var optimizationCount=0;optimizationCount+=ATNDeserializer.inlineSetRules(atn);optimizationCount+=ATNDeserializer.combineChainedEpsilons(atn);var preserveOrder=atn.grammarType===0/* LEXER */;optimizationCount+=ATNDeserializer.optimizeSets(atn,preserveOrder);if(optimizationCount===0){break;}}if(this.deserializationOptions.isVerifyATN){// reverify after modification
	this.verifyATN(atn);}}ATNDeserializer.identifyTailCalls(atn);return atn;}},{key:'deserializeSets',value:function deserializeSets(data,p,sets,unicodeDeserializer){var nsets=ATNDeserializer.toInt(data[p++]);for(var i=0;i<nsets;i++){var nintervals=ATNDeserializer.toInt(data[p]);p++;var set=new IntervalSet_1.IntervalSet();sets.push(set);var containsEof=ATNDeserializer.toInt(data[p++])!==0;if(containsEof){set.add(-1);}for(var j=0;j<nintervals;j++){var a=unicodeDeserializer.readUnicode(data,p);p+=unicodeDeserializer.size;var b=unicodeDeserializer.readUnicode(data,p);p+=unicodeDeserializer.size;set.add(a,b);}}return p;}/**
	     * Analyze the {@link StarLoopEntryState} states in the specified ATN to set
	     * the {@link StarLoopEntryState#precedenceRuleDecision} field to the
	     * correct value.
	     *
	     * @param atn The ATN.
	     */},{key:'markPrecedenceDecisions',value:function markPrecedenceDecisions(atn){// Map rule index -> precedence decision for that rule
	var rulePrecedenceDecisions=new Map();var _iteratorNormalCompletion106=true;var _didIteratorError106=false;var _iteratorError106=undefined;try{for(var _iterator106=atn.states[Symbol.iterator](),_step106;!(_iteratorNormalCompletion106=(_step106=_iterator106.next()).done);_iteratorNormalCompletion106=true){var state=_step106.value;if(!(state instanceof StarLoopEntryState_1.StarLoopEntryState)){continue;}/* We analyze the ATN to determine if this ATN decision state is the
	             * decision for the closure block that determines whether a
	             * precedence rule should continue or complete.
	             */if(atn.ruleToStartState[state.ruleIndex].isPrecedenceRule){var maybeLoopEndState=state.transition(state.numberOfTransitions-1).target;if(maybeLoopEndState instanceof LoopEndState_1.LoopEndState){if(maybeLoopEndState.epsilonOnlyTransitions&&maybeLoopEndState.transition(0).target instanceof RuleStopState_1.RuleStopState){rulePrecedenceDecisions.set(state.ruleIndex,state);state.precedenceRuleDecision=true;state.precedenceLoopbackStates=new BitSet_1.BitSet(atn.states.length);}}}}// After marking precedence decisions, we go back through and fill in
	// StarLoopEntryState.precedenceLoopbackStates.
	}catch(err){_didIteratorError106=true;_iteratorError106=err;}finally{try{if(!_iteratorNormalCompletion106&&_iterator106.return){_iterator106.return();}}finally{if(_didIteratorError106){throw _iteratorError106;}}}var _iteratorNormalCompletion107=true;var _didIteratorError107=false;var _iteratorError107=undefined;try{for(var _iterator107=rulePrecedenceDecisions[Symbol.iterator](),_step107;!(_iteratorNormalCompletion107=(_step107=_iterator107.next()).done);_iteratorNormalCompletion107=true){var precedenceDecision=_step107.value;var _iteratorNormalCompletion108=true;var _didIteratorError108=false;var _iteratorError108=undefined;try{for(var _iterator108=atn.ruleToStopState[precedenceDecision[0]].getTransitions()[Symbol.iterator](),_step108;!(_iteratorNormalCompletion108=(_step108=_iterator108.next()).done);_iteratorNormalCompletion108=true){var transition=_step108.value;if(transition.serializationType!==1/* EPSILON */){continue;}var epsilonTransition=transition;if(epsilonTransition.outermostPrecedenceReturn!==-1){continue;}precedenceDecision[1].precedenceLoopbackStates.set(transition.target.stateNumber);}}catch(err){_didIteratorError108=true;_iteratorError108=err;}finally{try{if(!_iteratorNormalCompletion108&&_iterator108.return){_iterator108.return();}}finally{if(_didIteratorError108){throw _iteratorError108;}}}}}catch(err){_didIteratorError107=true;_iteratorError107=err;}finally{try{if(!_iteratorNormalCompletion107&&_iterator107.return){_iterator107.return();}}finally{if(_didIteratorError107){throw _iteratorError107;}}}}},{key:'verifyATN',value:function verifyATN(atn){// verify assumptions
	var _iteratorNormalCompletion109=true;var _didIteratorError109=false;var _iteratorError109=undefined;try{for(var _iterator109=atn.states[Symbol.iterator](),_step109;!(_iteratorNormalCompletion109=(_step109=_iterator109.next()).done);_iteratorNormalCompletion109=true){var state=_step109.value;this.checkCondition(state!=null,"ATN states should not be null.");if(state.stateType===ATNStateType_1.ATNStateType.INVALID_TYPE){continue;}this.checkCondition(state.onlyHasEpsilonTransitions||state.numberOfTransitions<=1);if(state instanceof PlusBlockStartState_1.PlusBlockStartState){this.checkCondition(state.loopBackState!=null);}if(state instanceof StarLoopEntryState_1.StarLoopEntryState){var starLoopEntryState=state;this.checkCondition(starLoopEntryState.loopBackState!=null);this.checkCondition(starLoopEntryState.numberOfTransitions===2);if(starLoopEntryState.transition(0).target instanceof StarBlockStartState_1.StarBlockStartState){this.checkCondition(starLoopEntryState.transition(1).target instanceof LoopEndState_1.LoopEndState);this.checkCondition(!starLoopEntryState.nonGreedy);}else if(starLoopEntryState.transition(0).target instanceof LoopEndState_1.LoopEndState){this.checkCondition(starLoopEntryState.transition(1).target instanceof StarBlockStartState_1.StarBlockStartState);this.checkCondition(starLoopEntryState.nonGreedy);}else {throw new Error("IllegalStateException");}}if(state instanceof StarLoopbackState_1.StarLoopbackState){this.checkCondition(state.numberOfTransitions===1);this.checkCondition(state.transition(0).target instanceof StarLoopEntryState_1.StarLoopEntryState);}if(state instanceof LoopEndState_1.LoopEndState){this.checkCondition(state.loopBackState!=null);}if(state instanceof RuleStartState_1.RuleStartState){this.checkCondition(state.stopState!=null);}if(state instanceof BlockStartState_1.BlockStartState){this.checkCondition(state.endState!=null);}if(state instanceof BlockEndState_1.BlockEndState){this.checkCondition(state.startState!=null);}if(state instanceof DecisionState_1.DecisionState){var decisionState=state;this.checkCondition(decisionState.numberOfTransitions<=1||decisionState.decision>=0);}else {this.checkCondition(state.numberOfTransitions<=1||state instanceof RuleStopState_1.RuleStopState);}}}catch(err){_didIteratorError109=true;_iteratorError109=err;}finally{try{if(!_iteratorNormalCompletion109&&_iterator109.return){_iterator109.return();}}finally{if(_didIteratorError109){throw _iteratorError109;}}}}},{key:'checkCondition',value:function checkCondition(condition,message){if(!condition){throw new Error("IllegalStateException: "+message);}}},{key:'edgeFactory',value:function edgeFactory(atn,type,src,trg,arg1,arg2,arg3,sets){var target=atn.states[trg];switch(type){case 1/* EPSILON */:return new EpsilonTransition_1.EpsilonTransition(target);case 2/* RANGE */:if(arg3!==0){return new RangeTransition_1.RangeTransition(target,Token_1.Token.EOF,arg2);}else {return new RangeTransition_1.RangeTransition(target,arg1,arg2);}case 3/* RULE */:var rt=new RuleTransition_1.RuleTransition(atn.states[arg1],arg2,arg3,target);return rt;case 4/* PREDICATE */:var pt=new PredicateTransition_1.PredicateTransition(target,arg1,arg2,arg3!==0);return pt;case 10/* PRECEDENCE */:return new PrecedencePredicateTransition_1.PrecedencePredicateTransition(target,arg1);case 5/* ATOM */:if(arg3!==0){return new AtomTransition_1.AtomTransition(target,Token_1.Token.EOF);}else {return new AtomTransition_1.AtomTransition(target,arg1);}case 6/* ACTION */:var a=new ActionTransition_1.ActionTransition(target,arg1,arg2,arg3!==0);return a;case 7/* SET */:return new SetTransition_1.SetTransition(target,sets[arg1]);case 8/* NOT_SET */:return new NotSetTransition_1.NotSetTransition(target,sets[arg1]);case 9/* WILDCARD */:return new WildcardTransition_1.WildcardTransition(target);}throw new Error("The specified transition type is not valid.");}},{key:'stateFactory',value:function stateFactory(type,ruleIndex){var s=void 0;switch(type){case ATNStateType_1.ATNStateType.INVALID_TYPE:return new InvalidState_1.InvalidState();case ATNStateType_1.ATNStateType.BASIC:s=new BasicState_1.BasicState();break;case ATNStateType_1.ATNStateType.RULE_START:s=new RuleStartState_1.RuleStartState();break;case ATNStateType_1.ATNStateType.BLOCK_START:s=new BasicBlockStartState_1.BasicBlockStartState();break;case ATNStateType_1.ATNStateType.PLUS_BLOCK_START:s=new PlusBlockStartState_1.PlusBlockStartState();break;case ATNStateType_1.ATNStateType.STAR_BLOCK_START:s=new StarBlockStartState_1.StarBlockStartState();break;case ATNStateType_1.ATNStateType.TOKEN_START:s=new TokensStartState_1.TokensStartState();break;case ATNStateType_1.ATNStateType.RULE_STOP:s=new RuleStopState_1.RuleStopState();break;case ATNStateType_1.ATNStateType.BLOCK_END:s=new BlockEndState_1.BlockEndState();break;case ATNStateType_1.ATNStateType.STAR_LOOP_BACK:s=new StarLoopbackState_1.StarLoopbackState();break;case ATNStateType_1.ATNStateType.STAR_LOOP_ENTRY:s=new StarLoopEntryState_1.StarLoopEntryState();break;case ATNStateType_1.ATNStateType.PLUS_LOOP_BACK:s=new PlusLoopbackState_1.PlusLoopbackState();break;case ATNStateType_1.ATNStateType.LOOP_END:s=new LoopEndState_1.LoopEndState();break;default:var message='The specified state type '+type+' is not valid.';throw new Error(message);}s.ruleIndex=ruleIndex;return s;}},{key:'lexerActionFactory',value:function lexerActionFactory(type,data1,data2){switch(type){case 0/* CHANNEL */:return new LexerChannelAction_1.LexerChannelAction(data1);case 1/* CUSTOM */:return new LexerCustomAction_1.LexerCustomAction(data1,data2);case 2/* MODE */:return new LexerModeAction_1.LexerModeAction(data1);case 3/* MORE */:return LexerMoreAction_1.LexerMoreAction.INSTANCE;case 4/* POP_MODE */:return LexerPopModeAction_1.LexerPopModeAction.INSTANCE;case 5/* PUSH_MODE */:return new LexerPushModeAction_1.LexerPushModeAction(data1);case 6/* SKIP */:return LexerSkipAction_1.LexerSkipAction.INSTANCE;case 7/* TYPE */:return new LexerTypeAction_1.LexerTypeAction(data1);default:var message='The specified lexer action type '+type+' is not valid.';throw new Error(message);}}}],[{key:'isFeatureSupported',/**
	     * Determines if a particular serialized representation of an ATN supports
	     * a particular feature, identified by the {@link UUID} used for serializing
	     * the ATN at the time the feature was first introduced.
	     *
	     * @param feature The {@link UUID} marking the first time the feature was
	     * supported in the serialized ATN.
	     * @param actualUuid The {@link UUID} of the actual serialized ATN which is
	     * currently being deserialized.
	     * @returns `true` if the `actualUuid` value represents a
	     * serialized ATN at or after the feature identified by `feature` was
	     * introduced; otherwise, `false`.
	     */value:function isFeatureSupported(feature,actualUuid){var featureIndex=ATNDeserializer.SUPPORTED_UUIDS.findIndex(function(e){return e.equals(feature);});if(featureIndex<0){return false;}return ATNDeserializer.SUPPORTED_UUIDS.findIndex(function(e){return e.equals(actualUuid);})>=featureIndex;}},{key:'getUnicodeDeserializer',value:function getUnicodeDeserializer(mode){if(mode===0/* UNICODE_BMP */){return {readUnicode:function readUnicode(data,p){return ATNDeserializer.toInt(data[p]);},size:1};}else {return {readUnicode:function readUnicode(data,p){return ATNDeserializer.toInt32(data,p);},size:2};}}},{key:'inlineSetRules',value:function inlineSetRules(atn){var inlinedCalls=0;var ruleToInlineTransition=new Array(atn.ruleToStartState.length);for(var i=0;i<atn.ruleToStartState.length;i++){var startState=atn.ruleToStartState[i];var middleState=startState;while(middleState.onlyHasEpsilonTransitions&&middleState.numberOfOptimizedTransitions===1&&middleState.getOptimizedTransition(0).serializationType===1/* EPSILON */){middleState=middleState.getOptimizedTransition(0).target;}if(middleState.numberOfOptimizedTransitions!==1){continue;}var matchTransition=middleState.getOptimizedTransition(0);var matchTarget=matchTransition.target;if(matchTransition.isEpsilon||!matchTarget.onlyHasEpsilonTransitions||matchTarget.numberOfOptimizedTransitions!==1||!(matchTarget.getOptimizedTransition(0).target instanceof RuleStopState_1.RuleStopState)){continue;}switch(matchTransition.serializationType){case 5/* ATOM */:case 2/* RANGE */:case 7/* SET */:ruleToInlineTransition[i]=matchTransition;break;case 8/* NOT_SET */:case 9/* WILDCARD */:// not implemented yet
	continue;default:continue;}}var _iteratorNormalCompletion110=true;var _didIteratorError110=false;var _iteratorError110=undefined;try{for(var _iterator110=atn.states[Symbol.iterator](),_step110;!(_iteratorNormalCompletion110=(_step110=_iterator110.next()).done);_iteratorNormalCompletion110=true){var state=_step110.value;if(state.ruleIndex<0){continue;}var optimizedTransitions=void 0;for(var _i29=0;_i29<state.numberOfOptimizedTransitions;_i29++){var transition=state.getOptimizedTransition(_i29);if(!(transition instanceof RuleTransition_1.RuleTransition)){if(optimizedTransitions!=null){optimizedTransitions.push(transition);}continue;}var ruleTransition=transition;var effective=ruleToInlineTransition[ruleTransition.target.ruleIndex];if(effective==null){if(optimizedTransitions!=null){optimizedTransitions.push(transition);}continue;}if(optimizedTransitions==null){optimizedTransitions=[];for(var j=0;j<_i29;j++){optimizedTransitions.push(state.getOptimizedTransition(_i29));}}inlinedCalls++;var target=ruleTransition.followState;var intermediateState=new BasicState_1.BasicState();intermediateState.setRuleIndex(target.ruleIndex);atn.addState(intermediateState);optimizedTransitions.push(new EpsilonTransition_1.EpsilonTransition(intermediateState));switch(effective.serializationType){case 5/* ATOM */:intermediateState.addTransition(new AtomTransition_1.AtomTransition(target,effective._label));break;case 2/* RANGE */:intermediateState.addTransition(new RangeTransition_1.RangeTransition(target,effective.from,effective.to));break;case 7/* SET */:intermediateState.addTransition(new SetTransition_1.SetTransition(target,effective.label));break;default:throw new Error("UnsupportedOperationException");}}if(optimizedTransitions!=null){if(state.isOptimized){while(state.numberOfOptimizedTransitions>0){state.removeOptimizedTransition(state.numberOfOptimizedTransitions-1);}}var _iteratorNormalCompletion111=true;var _didIteratorError111=false;var _iteratorError111=undefined;try{for(var _iterator111=optimizedTransitions[Symbol.iterator](),_step111;!(_iteratorNormalCompletion111=(_step111=_iterator111.next()).done);_iteratorNormalCompletion111=true){var _transition4=_step111.value;state.addOptimizedTransition(_transition4);}}catch(err){_didIteratorError111=true;_iteratorError111=err;}finally{try{if(!_iteratorNormalCompletion111&&_iterator111.return){_iterator111.return();}}finally{if(_didIteratorError111){throw _iteratorError111;}}}}}}catch(err){_didIteratorError110=true;_iteratorError110=err;}finally{try{if(!_iteratorNormalCompletion110&&_iterator110.return){_iterator110.return();}}finally{if(_didIteratorError110){throw _iteratorError110;}}}if(ParserATNSimulator_1.ParserATNSimulator.debug){console.log("ATN runtime optimizer removed "+inlinedCalls+" rule invocations by inlining sets.");}return inlinedCalls;}},{key:'combineChainedEpsilons',value:function combineChainedEpsilons(atn){var removedEdges=0;var _iteratorNormalCompletion112=true;var _didIteratorError112=false;var _iteratorError112=undefined;try{for(var _iterator112=atn.states[Symbol.iterator](),_step112;!(_iteratorNormalCompletion112=(_step112=_iterator112.next()).done);_iteratorNormalCompletion112=true){var state=_step112.value;if(!state.onlyHasEpsilonTransitions||state instanceof RuleStopState_1.RuleStopState){continue;}var optimizedTransitions=void 0;nextTransition:for(var i=0;i<state.numberOfOptimizedTransitions;i++){var transition=state.getOptimizedTransition(i);var intermediate=transition.target;if(transition.serializationType!==1/* EPSILON */||transition.outermostPrecedenceReturn!==-1||intermediate.stateType!==ATNStateType_1.ATNStateType.BASIC||!intermediate.onlyHasEpsilonTransitions){if(optimizedTransitions!=null){optimizedTransitions.push(transition);}continue nextTransition;}for(var j=0;j<intermediate.numberOfOptimizedTransitions;j++){if(intermediate.getOptimizedTransition(j).serializationType!==1/* EPSILON */||intermediate.getOptimizedTransition(j).outermostPrecedenceReturn!==-1){if(optimizedTransitions!=null){optimizedTransitions.push(transition);}continue nextTransition;}}removedEdges++;if(optimizedTransitions==null){optimizedTransitions=[];for(var _j2=0;_j2<i;_j2++){optimizedTransitions.push(state.getOptimizedTransition(_j2));}}for(var _j3=0;_j3<intermediate.numberOfOptimizedTransitions;_j3++){var target=intermediate.getOptimizedTransition(_j3).target;optimizedTransitions.push(new EpsilonTransition_1.EpsilonTransition(target));}}if(optimizedTransitions!=null){if(state.isOptimized){while(state.numberOfOptimizedTransitions>0){state.removeOptimizedTransition(state.numberOfOptimizedTransitions-1);}}var _iteratorNormalCompletion113=true;var _didIteratorError113=false;var _iteratorError113=undefined;try{for(var _iterator113=optimizedTransitions[Symbol.iterator](),_step113;!(_iteratorNormalCompletion113=(_step113=_iterator113.next()).done);_iteratorNormalCompletion113=true){var _transition5=_step113.value;state.addOptimizedTransition(_transition5);}}catch(err){_didIteratorError113=true;_iteratorError113=err;}finally{try{if(!_iteratorNormalCompletion113&&_iterator113.return){_iterator113.return();}}finally{if(_didIteratorError113){throw _iteratorError113;}}}}}}catch(err){_didIteratorError112=true;_iteratorError112=err;}finally{try{if(!_iteratorNormalCompletion112&&_iterator112.return){_iterator112.return();}}finally{if(_didIteratorError112){throw _iteratorError112;}}}if(ParserATNSimulator_1.ParserATNSimulator.debug){console.log("ATN runtime optimizer removed "+removedEdges+" transitions by combining chained epsilon transitions.");}return removedEdges;}},{key:'optimizeSets',value:function optimizeSets(atn,preserveOrder){if(preserveOrder){// this optimization currently doesn't preserve edge order.
	return 0;}var removedPaths=0;var decisions=atn.decisionToState;var _iteratorNormalCompletion114=true;var _didIteratorError114=false;var _iteratorError114=undefined;try{for(var _iterator114=decisions[Symbol.iterator](),_step114;!(_iteratorNormalCompletion114=(_step114=_iterator114.next()).done);_iteratorNormalCompletion114=true){var decision=_step114.value;var setTransitions=new IntervalSet_1.IntervalSet();for(var i=0;i<decision.numberOfOptimizedTransitions;i++){var epsTransition=decision.getOptimizedTransition(i);if(!(epsTransition instanceof EpsilonTransition_1.EpsilonTransition)){continue;}if(epsTransition.target.numberOfOptimizedTransitions!==1){continue;}var transition=epsTransition.target.getOptimizedTransition(0);if(!(transition.target instanceof BlockEndState_1.BlockEndState)){continue;}if(transition instanceof NotSetTransition_1.NotSetTransition){// TODO: not yet implemented
	continue;}if(transition instanceof AtomTransition_1.AtomTransition||transition instanceof RangeTransition_1.RangeTransition||transition instanceof SetTransition_1.SetTransition){setTransitions.add(i);}}if(setTransitions.size<=1){continue;}var optimizedTransitions=[];for(var _i30=0;_i30<decision.numberOfOptimizedTransitions;_i30++){if(!setTransitions.contains(_i30)){optimizedTransitions.push(decision.getOptimizedTransition(_i30));}}var blockEndState=decision.getOptimizedTransition(setTransitions.minElement).target.getOptimizedTransition(0).target;var matchSet=new IntervalSet_1.IntervalSet();var _iteratorNormalCompletion115=true;var _didIteratorError115=false;var _iteratorError115=undefined;try{for(var _iterator115=setTransitions.intervals[Symbol.iterator](),_step115;!(_iteratorNormalCompletion115=(_step115=_iterator115.next()).done);_iteratorNormalCompletion115=true){var interval=_step115.value;for(var j=interval.a;j<=interval.b;j++){var matchTransition=decision.getOptimizedTransition(j).target.getOptimizedTransition(0);if(matchTransition instanceof NotSetTransition_1.NotSetTransition){throw new Error("Not yet implemented.");}else {matchSet.addAll(matchTransition.label);}}}}catch(err){_didIteratorError115=true;_iteratorError115=err;}finally{try{if(!_iteratorNormalCompletion115&&_iterator115.return){_iterator115.return();}}finally{if(_didIteratorError115){throw _iteratorError115;}}}var newTransition=void 0;if(matchSet.intervals.length===1){if(matchSet.size===1){newTransition=new AtomTransition_1.AtomTransition(blockEndState,matchSet.minElement);}else {var matchInterval=matchSet.intervals[0];newTransition=new RangeTransition_1.RangeTransition(blockEndState,matchInterval.a,matchInterval.b);}}else {newTransition=new SetTransition_1.SetTransition(blockEndState,matchSet);}var setOptimizedState=new BasicState_1.BasicState();setOptimizedState.setRuleIndex(decision.ruleIndex);atn.addState(setOptimizedState);setOptimizedState.addTransition(newTransition);optimizedTransitions.push(new EpsilonTransition_1.EpsilonTransition(setOptimizedState));removedPaths+=decision.numberOfOptimizedTransitions-optimizedTransitions.length;if(decision.isOptimized){while(decision.numberOfOptimizedTransitions>0){decision.removeOptimizedTransition(decision.numberOfOptimizedTransitions-1);}}var _iteratorNormalCompletion116=true;var _didIteratorError116=false;var _iteratorError116=undefined;try{for(var _iterator116=optimizedTransitions[Symbol.iterator](),_step116;!(_iteratorNormalCompletion116=(_step116=_iterator116.next()).done);_iteratorNormalCompletion116=true){var _transition6=_step116.value;decision.addOptimizedTransition(_transition6);}}catch(err){_didIteratorError116=true;_iteratorError116=err;}finally{try{if(!_iteratorNormalCompletion116&&_iterator116.return){_iterator116.return();}}finally{if(_didIteratorError116){throw _iteratorError116;}}}}}catch(err){_didIteratorError114=true;_iteratorError114=err;}finally{try{if(!_iteratorNormalCompletion114&&_iterator114.return){_iterator114.return();}}finally{if(_didIteratorError114){throw _iteratorError114;}}}if(ParserATNSimulator_1.ParserATNSimulator.debug){console.log("ATN runtime optimizer removed "+removedPaths+" paths by collapsing sets.");}return removedPaths;}},{key:'identifyTailCalls',value:function identifyTailCalls(atn){var _iteratorNormalCompletion117=true;var _didIteratorError117=false;var _iteratorError117=undefined;try{for(var _iterator117=atn.states[Symbol.iterator](),_step117;!(_iteratorNormalCompletion117=(_step117=_iterator117.next()).done);_iteratorNormalCompletion117=true){var state=_step117.value;for(var i=0;i<state.numberOfTransitions;i++){var transition=state.transition(i);if(!(transition instanceof RuleTransition_1.RuleTransition)){continue;}transition.tailCall=this.testTailCall(atn,transition,false);transition.optimizedTailCall=this.testTailCall(atn,transition,true);}if(!state.isOptimized){continue;}for(var _i31=0;_i31<state.numberOfOptimizedTransitions;_i31++){var _transition7=state.getOptimizedTransition(_i31);if(!(_transition7 instanceof RuleTransition_1.RuleTransition)){continue;}_transition7.tailCall=this.testTailCall(atn,_transition7,false);_transition7.optimizedTailCall=this.testTailCall(atn,_transition7,true);}}}catch(err){_didIteratorError117=true;_iteratorError117=err;}finally{try{if(!_iteratorNormalCompletion117&&_iterator117.return){_iterator117.return();}}finally{if(_didIteratorError117){throw _iteratorError117;}}}}},{key:'testTailCall',value:function testTailCall(atn,transition,optimizedPath){if(!optimizedPath&&transition.tailCall){return true;}if(optimizedPath&&transition.optimizedTailCall){return true;}var reachable=new BitSet_1.BitSet(atn.states.length);var worklist=[];worklist.push(transition.followState);while(true){var state=worklist.pop();if(!state){break;}if(reachable.get(state.stateNumber)){continue;}if(state instanceof RuleStopState_1.RuleStopState){continue;}if(!state.onlyHasEpsilonTransitions){return false;}var transitionCount=optimizedPath?state.numberOfOptimizedTransitions:state.numberOfTransitions;for(var i=0;i<transitionCount;i++){var t=optimizedPath?state.getOptimizedTransition(i):state.transition(i);if(t.serializationType!==1/* EPSILON */){return false;}worklist.push(t.target);}}return true;}},{key:'toInt',value:function toInt(c){return c;}},{key:'toInt32',value:function toInt32(data,offset){return (data[offset]|data[offset+1]<<16)>>>0;}},{key:'toUUID',value:function toUUID(data,offset){var leastSigBits=ATNDeserializer.toInt32(data,offset);var lessSigBits=ATNDeserializer.toInt32(data,offset+2);var moreSigBits=ATNDeserializer.toInt32(data,offset+4);var mostSigBits=ATNDeserializer.toInt32(data,offset+6);return new UUID_1.UUID(mostSigBits,moreSigBits,lessSigBits,leastSigBits);}},{key:'SERIALIZED_VERSION',get:function get(){/* This value should never change. Updates following this version are
	         * reflected as change in the unique ID SERIALIZED_UUID.
	         */return 3;}}]);return ATNDeserializer;}();/* WARNING: DO NOT MERGE THESE LINES. If UUIDs differ during a merge,
	 * resolve the conflict by generating a new ID!
	 *//**
	 * This is the earliest supported serialized UUID.
	 */ATNDeserializer.BASE_SERIALIZED_UUID=UUID_1.UUID.fromString("E4178468-DF95-44D0-AD87-F22A5D5FB6D3");/**
	 * This UUID indicates an extension of {@link #ADDED_PRECEDENCE_TRANSITIONS}
	 * for the addition of lexer actions encoded as a sequence of
	 * {@link LexerAction} instances.
	 */ATNDeserializer.ADDED_LEXER_ACTIONS=UUID_1.UUID.fromString("AB35191A-1603-487E-B75A-479B831EAF6D");/**
	 * This UUID indicates the serialized ATN contains two sets of
	 * IntervalSets, where the second set's values are encoded as
	 * 32-bit integers to support the full Unicode SMP range up to U+10FFFF.
	 */ATNDeserializer.ADDED_UNICODE_SMP=UUID_1.UUID.fromString("C23FEA89-0605-4f51-AFB8-058BCAB8C91B");/**
	 * This list contains all of the currently supported UUIDs, ordered by when
	 * the feature first appeared in this branch.
	 */ATNDeserializer.SUPPORTED_UUIDS=[ATNDeserializer.BASE_SERIALIZED_UUID,ATNDeserializer.ADDED_LEXER_ACTIONS,ATNDeserializer.ADDED_UNICODE_SMP];/**
	 * This is the current serialized UUID.
	 */ATNDeserializer.SERIALIZED_UUID=ATNDeserializer.ADDED_UNICODE_SMP;__decorate([Decorators_1.NotNull],ATNDeserializer.prototype,"deserializationOptions",void 0);__decorate([__param(0,Decorators_1.NotNull)],ATNDeserializer.prototype,"deserialize",null);__decorate([__param(0,Decorators_1.NotNull)],ATNDeserializer.prototype,"markPrecedenceDecisions",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ATNDeserializer.prototype,"edgeFactory",null);exports.ATNDeserializer=ATNDeserializer;},{"../Decorators":224,"../Token":248,"../dfa/DFA":316,"../misc/Array2DHashSet":322,"../misc/BitSet":325,"../misc/IntervalSet":331,"../misc/UUID":336,"./ATN":251,"./ATNDeserializationOptions":254,"./ATNStateType":258,"./ActionTransition":260,"./AtomTransition":262,"./BasicBlockStartState":263,"./BasicState":264,"./BlockEndState":265,"./BlockStartState":266,"./DecisionState":271,"./EpsilonTransition":272,"./InvalidState":274,"./LexerChannelAction":278,"./LexerCustomAction":279,"./LexerModeAction":281,"./LexerMoreAction":282,"./LexerPopModeAction":283,"./LexerPushModeAction":284,"./LexerSkipAction":285,"./LexerTypeAction":286,"./LoopEndState":288,"./NotSetTransition":289,"./ParserATNSimulator":292,"./PlusBlockStartState":293,"./PlusLoopbackState":294,"./PrecedencePredicateTransition":295,"./PredicateTransition":297,"./RangeTransition":302,"./RuleStartState":303,"./RuleStopState":304,"./RuleTransition":305,"./SetTransition":307,"./StarBlockStartState":309,"./StarLoopEntryState":310,"./StarLoopbackState":311,"./TokensStartState":312,"./WildcardTransition":314}],256:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ATNConfigSet_1=require("./ATNConfigSet");var DFAState_1=require("../dfa/DFAState");var Decorators_1=require("../Decorators");var PredictionContext_1=require("./PredictionContext");var ATNSimulator=function(){function ATNSimulator(atn){classCallCheck(this,ATNSimulator);this.atn=atn;}createClass(ATNSimulator,[{key:'clearDFA',/**
	     * Clear the DFA cache used by the current instance. Since the DFA cache may
	     * be shared by multiple ATN simulators, this method may affect the
	     * performance (but not accuracy) of other parsers which are being used
	     * concurrently.
	     *
	     * @ if the current instance does not
	     * support clearing the DFA.
	     *
	     * @since 4.3
	     */value:function clearDFA(){this.atn.clearDFA();}}],[{key:'ERROR',get:function get(){if(!ATNSimulator._ERROR){ATNSimulator._ERROR=new DFAState_1.DFAState(new ATNConfigSet_1.ATNConfigSet());ATNSimulator._ERROR.stateNumber=PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY;}return ATNSimulator._ERROR;}}]);return ATNSimulator;}();__decorate([Decorators_1.NotNull],ATNSimulator.prototype,"atn",void 0);__decorate([Decorators_1.NotNull],ATNSimulator,"ERROR",null);ATNSimulator=__decorate([__param(0,Decorators_1.NotNull)],ATNSimulator);exports.ATNSimulator=ATNSimulator;(function(ATNSimulator){})(ATNSimulator=exports.ATNSimulator||(exports.ATNSimulator={}));exports.ATNSimulator=ATNSimulator;},{"../Decorators":224,"../dfa/DFAState":318,"./ATNConfigSet":253,"./PredictionContext":298}],257:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");/**
	 * The following images show the relation of states and
	 * {@link ATNState#transitions} for various grammar constructs.
	 *
	 * * Solid edges marked with an &#0949; indicate a required
	 *   {@link EpsilonTransition}.
	 *
	 * * Dashed edges indicate locations where any transition derived from
	 *   {@link Transition} might appear.
	 *
	 * * Dashed nodes are place holders for either a sequence of linked
	 *   {@link BasicState} states or the inclusion of a block representing a nested
	 *   construct in one of the forms below.
	 *
	 * * Nodes showing multiple outgoing alternatives with a `...` support
	 *   any number of alternatives (one or more). Nodes without the `...` only
	 *   support the exact number of alternatives shown in the diagram.
	 *
	 * <h2>Basic Blocks</h2>
	 *
	 * <h3>Rule</h3>
	 *
	 * <embed src="images/Rule.svg" type="image/svg+xml"/>
	 *
	 * <h3>Block of 1 or more alternatives</h3>
	 *
	 * <embed src="images/Block.svg" type="image/svg+xml"/>
	 *
	 * <h2>Greedy Loops</h2>
	 *
	 * <h3>Greedy Closure: `(...)*`</h3>
	 *
	 * <embed src="images/ClosureGreedy.svg" type="image/svg+xml"/>
	 *
	 * <h3>Greedy Positive Closure: `(...)+`</h3>
	 *
	 * <embed src="images/PositiveClosureGreedy.svg" type="image/svg+xml"/>
	 *
	 * <h3>Greedy Optional: `(...)?`</h3>
	 *
	 * <embed src="images/OptionalGreedy.svg" type="image/svg+xml"/>
	 *
	 * <h2>Non-Greedy Loops</h2>
	 *
	 * <h3>Non-Greedy Closure: `(...)*?`</h3>
	 *
	 * <embed src="images/ClosureNonGreedy.svg" type="image/svg+xml"/>
	 *
	 * <h3>Non-Greedy Positive Closure: `(...)+?`</h3>
	 *
	 * <embed src="images/PositiveClosureNonGreedy.svg" type="image/svg+xml"/>
	 *
	 * <h3>Non-Greedy Optional: `(...)??`</h3>
	 *
	 * <embed src="images/OptionalNonGreedy.svg" type="image/svg+xml"/>
	 */var ATNState=function(){function ATNState(){classCallCheck(this,ATNState);this.stateNumber=ATNState.INVALID_STATE_NUMBER;this.ruleIndex=0;// at runtime, we don't have Rule objects
	this.epsilonOnlyTransitions=false;/** Track the transitions emanating from this ATN state. */this.transitions=[];this.optimizedTransitions=this.transitions;}/**
	     * Gets the state number.
	     *
	     * @returns the state number
	     */createClass(ATNState,[{key:'getStateNumber',value:function getStateNumber(){return this.stateNumber;}/**
	     * For all states except {@link RuleStopState}, this returns the state
	     * number. Returns -1 for stop states.
	     *
	     * @returns -1 for {@link RuleStopState}, otherwise the state number
	     */},{key:'hashCode',value:function hashCode(){return this.stateNumber;}},{key:'equals',value:function equals(o){// are these states same object?
	if(o instanceof ATNState){return this.stateNumber===o.stateNumber;}return false;}},{key:'toString',value:function toString(){return String(this.stateNumber);}},{key:'getTransitions',value:function getTransitions(){return this.transitions.slice(0);}},{key:'addTransition',value:function addTransition(e,index){if(this.transitions.length===0){this.epsilonOnlyTransitions=e.isEpsilon;}else if(this.epsilonOnlyTransitions!==e.isEpsilon){this.epsilonOnlyTransitions=false;throw new Error("ATN state "+this.stateNumber+" has both epsilon and non-epsilon transitions.");}this.transitions.splice(index!==undefined?index:this.transitions.length,0,e);}},{key:'transition',value:function transition(i){return this.transitions[i];}},{key:'setTransition',value:function setTransition(i,e){this.transitions[i]=e;}},{key:'removeTransition',value:function removeTransition(index){return this.transitions.splice(index,1)[0];}},{key:'setRuleIndex',value:function setRuleIndex(ruleIndex){this.ruleIndex=ruleIndex;}},{key:'getOptimizedTransition',value:function getOptimizedTransition(i){return this.optimizedTransitions[i];}},{key:'addOptimizedTransition',value:function addOptimizedTransition(e){if(!this.isOptimized){this.optimizedTransitions=new Array();}this.optimizedTransitions.push(e);}},{key:'setOptimizedTransition',value:function setOptimizedTransition(i,e){if(!this.isOptimized){throw new Error("This ATNState is not optimized.");}this.optimizedTransitions[i]=e;}},{key:'removeOptimizedTransition',value:function removeOptimizedTransition(i){if(!this.isOptimized){throw new Error("This ATNState is not optimized.");}this.optimizedTransitions.splice(i,1);}},{key:'nonStopStateNumber',get:function get(){return this.getStateNumber();}},{key:'isNonGreedyExitState',get:function get(){return false;}},{key:'numberOfTransitions',get:function get(){return this.transitions.length;}},{key:'onlyHasEpsilonTransitions',get:function get(){return this.epsilonOnlyTransitions;}},{key:'isOptimized',get:function get(){return this.optimizedTransitions!==this.transitions;}},{key:'numberOfOptimizedTransitions',get:function get(){return this.optimizedTransitions.length;}}]);return ATNState;}();__decorate([Decorators_1.Override],ATNState.prototype,"hashCode",null);__decorate([Decorators_1.Override],ATNState.prototype,"equals",null);__decorate([Decorators_1.Override],ATNState.prototype,"toString",null);exports.ATNState=ATNState;(function(ATNState){ATNState.INVALID_STATE_NUMBER=-1;})(ATNState=exports.ATNState||(exports.ATNState={}));},{"../Decorators":224}],258:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:27.4734328-07:00
	(function(ATNStateType){ATNStateType[ATNStateType["INVALID_TYPE"]=0]="INVALID_TYPE";ATNStateType[ATNStateType["BASIC"]=1]="BASIC";ATNStateType[ATNStateType["RULE_START"]=2]="RULE_START";ATNStateType[ATNStateType["BLOCK_START"]=3]="BLOCK_START";ATNStateType[ATNStateType["PLUS_BLOCK_START"]=4]="PLUS_BLOCK_START";ATNStateType[ATNStateType["STAR_BLOCK_START"]=5]="STAR_BLOCK_START";ATNStateType[ATNStateType["TOKEN_START"]=6]="TOKEN_START";ATNStateType[ATNStateType["RULE_STOP"]=7]="RULE_STOP";ATNStateType[ATNStateType["BLOCK_END"]=8]="BLOCK_END";ATNStateType[ATNStateType["STAR_LOOP_BACK"]=9]="STAR_LOOP_BACK";ATNStateType[ATNStateType["STAR_LOOP_ENTRY"]=10]="STAR_LOOP_ENTRY";ATNStateType[ATNStateType["PLUS_LOOP_BACK"]=11]="PLUS_LOOP_BACK";ATNStateType[ATNStateType["LOOP_END"]=12]="LOOP_END";})(exports.ATNStateType||(exports.ATNStateType={}));},{}],259:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var Transition_1=require("./Transition");/**
	 *
	 * @author Sam Harwell
	 */var AbstractPredicateTransition=function(_Transition_1$Transit){inherits(AbstractPredicateTransition,_Transition_1$Transit);function AbstractPredicateTransition(target){classCallCheck(this,AbstractPredicateTransition);return possibleConstructorReturn(this,(AbstractPredicateTransition.__proto__||Object.getPrototypeOf(AbstractPredicateTransition)).call(this,target));}return AbstractPredicateTransition;}(Transition_1.Transition);exports.AbstractPredicateTransition=AbstractPredicateTransition;},{"./Transition":313}],260:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");var ActionTransition=function(_Transition_1$Transit2){inherits(ActionTransition,_Transition_1$Transit2);function ActionTransition(target,ruleIndex){var actionIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;var isCtxDependent=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;classCallCheck(this,ActionTransition);var _this253=possibleConstructorReturn(this,(ActionTransition.__proto__||Object.getPrototypeOf(ActionTransition)).call(this,target));_this253.ruleIndex=ruleIndex;_this253.actionIndex=actionIndex;_this253.isCtxDependent=isCtxDependent;return _this253;}createClass(ActionTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return false;}},{key:'toString',value:function toString(){return "action_"+this.ruleIndex+":"+this.actionIndex;}},{key:'serializationType',get:function get(){return 6/* ACTION */;}},{key:'isEpsilon',get:function get(){return true;// we are to be ignored by analysis 'cept for predicates
	}}]);return ActionTransition;}(Transition_1.Transition);__decorate([Decorators_1.Override],ActionTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],ActionTransition.prototype,"isEpsilon",null);__decorate([Decorators_1.Override],ActionTransition.prototype,"matches",null);__decorate([Decorators_1.Override],ActionTransition.prototype,"toString",null);ActionTransition=__decorate([__param(0,Decorators_1.NotNull)],ActionTransition);exports.ActionTransition=ActionTransition;},{"../Decorators":224,"./Transition":313}],261:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var DecisionEventInfo_1=require("./DecisionEventInfo");var Decorators_1=require("../Decorators");/**
	 * This class represents profiling event information for an ambiguity.
	 * Ambiguities are decisions where a particular input resulted in an SLL
	 * conflict, followed by LL prediction also reaching a conflict state
	 * (indicating a true ambiguity in the grammar).
	 *
	 * This event may be reported during SLL prediction in cases where the
	 * conflicting SLL configuration set provides sufficient information to
	 * determine that the SLL conflict is truly an ambiguity. For example, if none
	 * of the ATN configurations in the conflicting SLL configuration set have
	 * traversed a global follow transition (i.e.
	 * {@link ATNConfig#getReachesIntoOuterContext} is `false` for all
	 * configurations), then the result of SLL prediction for that input is known to
	 * be equivalent to the result of LL prediction for that input.
	 *
	 * In some cases, the minimum represented alternative in the conflicting LL
	 * configuration set is not equal to the minimum represented alternative in the
	 * conflicting SLL configuration set. Grammars and inputs which result in this
	 * scenario are unable to use {@link PredictionMode#SLL}, which in turn means
	 * they cannot use the two-stage parsing strategy to improve parsing performance
	 * for that input.
	 *
	 * @see ParserATNSimulator#reportAmbiguity
	 * @see ParserErrorListener#reportAmbiguity
	 *
	 * @since 4.3
	 */var AmbiguityInfo=function(_DecisionEventInfo_1$){inherits(AmbiguityInfo,_DecisionEventInfo_1$);/**
	     * Constructs a new instance of the {@link AmbiguityInfo} class with the
	     * specified detailed ambiguity information.
	     *
	     * @param decision The decision number
	     * @param state The final simulator state identifying the ambiguous
	     * alternatives for the current input
	     * @param ambigAlts The set of alternatives in the decision that lead to a valid parse.
	     *                  The predicted alt is the min(ambigAlts)
	     * @param input The input token stream
	     * @param startIndex The start index for the current prediction
	     * @param stopIndex The index at which the ambiguity was identified during
	     * prediction
	     */function AmbiguityInfo(decision,state,ambigAlts,input,startIndex,stopIndex){classCallCheck(this,AmbiguityInfo);var _this254=possibleConstructorReturn(this,(AmbiguityInfo.__proto__||Object.getPrototypeOf(AmbiguityInfo)).call(this,decision,state,input,startIndex,stopIndex,state.useContext));_this254.ambigAlts=ambigAlts;return _this254;}/**
	     * Gets the set of alternatives in the decision that lead to a valid parse.
	     *
	     * @since 4.5
	     */createClass(AmbiguityInfo,[{key:'ambiguousAlternatives',get:function get(){return this.ambigAlts;}}]);return AmbiguityInfo;}(DecisionEventInfo_1.DecisionEventInfo);__decorate([Decorators_1.NotNull],AmbiguityInfo.prototype,"ambigAlts",void 0);__decorate([Decorators_1.NotNull],AmbiguityInfo.prototype,"ambiguousAlternatives",null);AmbiguityInfo=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],AmbiguityInfo);exports.AmbiguityInfo=AmbiguityInfo;},{"../Decorators":224,"./DecisionEventInfo":269}],262:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var IntervalSet_1=require("../misc/IntervalSet");var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");/** TODO: make all transitions sets? no, should remove set edges */var AtomTransition=function(_Transition_1$Transit3){inherits(AtomTransition,_Transition_1$Transit3);function AtomTransition(target,label){classCallCheck(this,AtomTransition);var _this255=possibleConstructorReturn(this,(AtomTransition.__proto__||Object.getPrototypeOf(AtomTransition)).call(this,target));_this255._label=label;return _this255;}createClass(AtomTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return this._label===symbol;}},{key:'toString',value:function toString(){return String(this.label);}},{key:'serializationType',get:function get(){return 5/* ATOM */;}},{key:'label',get:function get(){return IntervalSet_1.IntervalSet.of(this._label);}}]);return AtomTransition;}(Transition_1.Transition);__decorate([Decorators_1.Override],AtomTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],AtomTransition.prototype,"label",null);__decorate([Decorators_1.Override],AtomTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],AtomTransition.prototype,"toString",null);AtomTransition=__decorate([__param(0,Decorators_1.NotNull)],AtomTransition);exports.AtomTransition=AtomTransition;},{"../Decorators":224,"../misc/IntervalSet":331,"./Transition":313}],263:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:27.7669801-07:00
	var ATNStateType_1=require("./ATNStateType");var BlockStartState_1=require("./BlockStartState");var Decorators_1=require("../Decorators");/**
	 *
	 * @author Sam Harwell
	 */var BasicBlockStartState=function(_BlockStartState_1$Bl){inherits(BasicBlockStartState,_BlockStartState_1$Bl);function BasicBlockStartState(){classCallCheck(this,BasicBlockStartState);return possibleConstructorReturn(this,(BasicBlockStartState.__proto__||Object.getPrototypeOf(BasicBlockStartState)).apply(this,arguments));}createClass(BasicBlockStartState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.BLOCK_START;}}]);return BasicBlockStartState;}(BlockStartState_1.BlockStartState);__decorate([Decorators_1.Override],BasicBlockStartState.prototype,"stateType",null);exports.BasicBlockStartState=BasicBlockStartState;},{"../Decorators":224,"./ATNStateType":258,"./BlockStartState":266}],264:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:27.8389930-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");/**
	 *
	 * @author Sam Harwell
	 */var BasicState=function(_ATNState_1$ATNState){inherits(BasicState,_ATNState_1$ATNState);function BasicState(){classCallCheck(this,BasicState);return possibleConstructorReturn(this,(BasicState.__proto__||Object.getPrototypeOf(BasicState)).apply(this,arguments));}createClass(BasicState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.BASIC;}}]);return BasicState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],BasicState.prototype,"stateType",null);exports.BasicState=BasicState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],265:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:27.9125304-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");/** Terminal node of a simple `(a|b|c)` block. */var BlockEndState=function(_ATNState_1$ATNState2){inherits(BlockEndState,_ATNState_1$ATNState2);function BlockEndState(){classCallCheck(this,BlockEndState);return possibleConstructorReturn(this,(BlockEndState.__proto__||Object.getPrototypeOf(BlockEndState)).apply(this,arguments));}createClass(BlockEndState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.BLOCK_END;}}]);return BlockEndState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],BlockEndState.prototype,"stateType",null);exports.BlockEndState=BlockEndState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],266:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var DecisionState_1=require("./DecisionState");/**  The start of a regular `(...)` block. */var BlockStartState=function(_DecisionState_1$Deci){inherits(BlockStartState,_DecisionState_1$Deci);function BlockStartState(){classCallCheck(this,BlockStartState);return possibleConstructorReturn(this,(BlockStartState.__proto__||Object.getPrototypeOf(BlockStartState)).apply(this,arguments));}return BlockStartState;}(DecisionState_1.DecisionState);exports.BlockStartState=BlockStartState;},{"./DecisionState":271}],267:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var Utils=require("../misc/Utils");/**
	 * This class stores information about a configuration conflict.
	 *
	 * @author Sam Harwell
	 */var ConflictInfo=function(){function ConflictInfo(conflictedAlts,exact){classCallCheck(this,ConflictInfo);this._conflictedAlts=conflictedAlts;this.exact=exact;}/**
	     * Gets the set of conflicting alternatives for the configuration set.
	     */createClass(ConflictInfo,[{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof ConflictInfo)){return false;}return this.isExact===obj.isExact&&Utils.equals(this.conflictedAlts,obj.conflictedAlts);}},{key:'hashCode',value:function hashCode(){return this.conflictedAlts.hashCode();}},{key:'conflictedAlts',get:function get(){return this._conflictedAlts;}/**
	     * Gets whether or not the configuration conflict is an exact conflict.
	     * An exact conflict occurs when the prediction algorithm determines that
	     * the represented alternatives for a particular configuration set cannot be
	     * further reduced by consuming additional input. After reaching an exact
	     * conflict during an SLL prediction, only switch to full-context prediction
	     * could reduce the set of viable alternatives. In LL prediction, an exact
	     * conflict indicates a true ambiguity in the input.
	     *
	     * For the {@link PredictionMode#LL_EXACT_AMBIG_DETECTION} prediction mode,
	     * accept states are conflicting but not exact are treated as non-accept
	     * states.
	     */},{key:'isExact',get:function get(){return this.exact;}}]);return ConflictInfo;}();__decorate([Decorators_1.Override],ConflictInfo.prototype,"equals",null);__decorate([Decorators_1.Override],ConflictInfo.prototype,"hashCode",null);exports.ConflictInfo=ConflictInfo;},{"../Decorators":224,"../misc/Utils":337}],268:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:28.1575933-07:00
	var DecisionEventInfo_1=require("./DecisionEventInfo");var Decorators_1=require("../Decorators");/**
	 * This class represents profiling event information for a context sensitivity.
	 * Context sensitivities are decisions where a particular input resulted in an
	 * SLL conflict, but LL prediction produced a single unique alternative.
	 *
	 * In some cases, the unique alternative identified by LL prediction is not
	 * equal to the minimum represented alternative in the conflicting SLL
	 * configuration set. Grammars and inputs which result in this scenario are
	 * unable to use {@link PredictionMode#SLL}, which in turn means they cannot use
	 * the two-stage parsing strategy to improve parsing performance for that
	 * input.
	 *
	 * @see ParserATNSimulator#reportContextSensitivity
	 * @see ParserErrorListener#reportContextSensitivity
	 *
	 * @since 4.3
	 */var ContextSensitivityInfo=function(_DecisionEventInfo_1$2){inherits(ContextSensitivityInfo,_DecisionEventInfo_1$2);/**
	     * Constructs a new instance of the {@link ContextSensitivityInfo} class
	     * with the specified detailed context sensitivity information.
	     *
	     * @param decision The decision number
	     * @param state The final simulator state containing the unique
	     * alternative identified by full-context prediction
	     * @param input The input token stream
	     * @param startIndex The start index for the current prediction
	     * @param stopIndex The index at which the context sensitivity was
	     * identified during full-context prediction
	     */function ContextSensitivityInfo(decision,state,input,startIndex,stopIndex){classCallCheck(this,ContextSensitivityInfo);return possibleConstructorReturn(this,(ContextSensitivityInfo.__proto__||Object.getPrototypeOf(ContextSensitivityInfo)).call(this,decision,state,input,startIndex,stopIndex,true));}return ContextSensitivityInfo;}(DecisionEventInfo_1.DecisionEventInfo);ContextSensitivityInfo=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ContextSensitivityInfo);exports.ContextSensitivityInfo=ContextSensitivityInfo;},{"../Decorators":224,"./DecisionEventInfo":269}],269:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:28.2401032-07:00
	var Decorators_1=require("../Decorators");/**
	 * This is the base class for gathering detailed information about prediction
	 * events which occur during parsing.
	 *
	 * Note that we could record the parser call stack at the time this event
	 * occurred but in the presence of left recursive rules, the stack is kind of
	 * meaningless. It's better to look at the individual configurations for their
	 * individual stacks. Of course that is a {@link PredictionContext} object
	 * not a parse tree node and so it does not have information about the extent
	 * (start...stop) of the various subtrees. Examining the stack tops of all
	 * configurations provide the return states for the rule invocations.
	 * From there you can get the enclosing rule.
	 *
	 * @since 4.3
	 */var DecisionEventInfo=function DecisionEventInfo(decision,state,input,startIndex,stopIndex,fullCtx){classCallCheck(this,DecisionEventInfo);this.decision=decision;this.fullCtx=fullCtx;this.stopIndex=stopIndex;this.input=input;this.startIndex=startIndex;this.state=state;};__decorate([Decorators_1.NotNull],DecisionEventInfo.prototype,"input",void 0);DecisionEventInfo=__decorate([__param(2,Decorators_1.NotNull)],DecisionEventInfo);exports.DecisionEventInfo=DecisionEventInfo;},{"../Decorators":224}],270:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");/**
	 * This class contains profiling gathered for a particular decision.
	 *
	 * Parsing performance in ANTLR 4 is heavily influenced by both static factors
	 * (e.g. the form of the rules in the grammar) and dynamic factors (e.g. the
	 * choice of input and the state of the DFA cache at the time profiling
	 * operations are started). For best results, gather and use aggregate
	 * statistics from a large sample of inputs representing the inputs expected in
	 * production before using the results to make changes in the grammar.
	 *
	 * @since 4.3
	 */var DecisionInfo=function(){/**
	     * Constructs a new instance of the {@link DecisionInfo} class to contain
	     * statistics for a particular decision.
	     *
	     * @param decision The decision number
	     */function DecisionInfo(decision){classCallCheck(this,DecisionInfo);/**
	         * The total number of times {@link ParserATNSimulator#adaptivePredict} was
	         * invoked for this decision.
	         */this.invocations=0;/**
	         * The total time spent in {@link ParserATNSimulator#adaptivePredict} for
	         * this decision, in nanoseconds.
	         *
	         * The value of this field contains the sum of differential results obtained
	         * by {@link System#nanoTime()}, and is not adjusted to compensate for JIT
	         * and/or garbage collection overhead. For best accuracy, use a modern JVM
	         * implementation that provides precise results from
	         * {@link System#nanoTime()}, and perform profiling in a separate process
	         * which is warmed up by parsing the input prior to profiling. If desired,
	         * call {@link ATNSimulator#clearDFA} to reset the DFA cache to its initial
	         * state before starting the profiling measurement pass.
	         */this.timeInPrediction=0;/**
	         * The sum of the lookahead required for SLL prediction for this decision.
	         * Note that SLL prediction is used before LL prediction for performance
	         * reasons even when {@link PredictionMode#LL} or
	         * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION} is used.
	         */this.SLL_TotalLook=0;/**
	         * Gets the minimum lookahead required for any single SLL prediction to
	         * complete for this decision, by reaching a unique prediction, reaching an
	         * SLL conflict state, or encountering a syntax error.
	         */this.SLL_MinLook=0;/**
	         * Gets the maximum lookahead required for any single SLL prediction to
	         * complete for this decision, by reaching a unique prediction, reaching an
	         * SLL conflict state, or encountering a syntax error.
	         */this.SLL_MaxLook=0;/**
	         * The sum of the lookahead required for LL prediction for this decision.
	         * Note that LL prediction is only used when SLL prediction reaches a
	         * conflict state.
	         */this.LL_TotalLook=0;/**
	         * Gets the minimum lookahead required for any single LL prediction to
	         * complete for this decision. An LL prediction completes when the algorithm
	         * reaches a unique prediction, a conflict state (for
	         * {@link PredictionMode#LL}, an ambiguity state (for
	         * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}, or a syntax error.
	         */this.LL_MinLook=0;/**
	         * Gets the maximum lookahead required for any single LL prediction to
	         * complete for this decision. An LL prediction completes when the algorithm
	         * reaches a unique prediction, a conflict state (for
	         * {@link PredictionMode#LL}, an ambiguity state (for
	         * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}, or a syntax error.
	         */this.LL_MaxLook=0;/**
	         * A collection of {@link ContextSensitivityInfo} instances describing the
	         * context sensitivities encountered during LL prediction for this decision.
	         *
	         * @see ContextSensitivityInfo
	         */this.contextSensitivities=[];/**
	         * A collection of {@link ErrorInfo} instances describing the parse errors
	         * identified during calls to {@link ParserATNSimulator#adaptivePredict} for
	         * this decision.
	         *
	         * @see ErrorInfo
	         */this.errors=[];/**
	         * A collection of {@link AmbiguityInfo} instances describing the
	         * ambiguities encountered during LL prediction for this decision.
	         *
	         * @see AmbiguityInfo
	         */this.ambiguities=[];/**
	         * A collection of {@link PredicateEvalInfo} instances describing the
	         * results of evaluating individual predicates during prediction for this
	         * decision.
	         *
	         * @see PredicateEvalInfo
	         */this.predicateEvals=[];/**
	         * The total number of ATN transitions required during SLL prediction for
	         * this decision. An ATN transition is determined by the number of times the
	         * DFA does not contain an edge that is required for prediction, resulting
	         * in on-the-fly computation of that edge.
	         *
	         * If DFA caching of SLL transitions is employed by the implementation, ATN
	         * computation may cache the computed edge for efficient lookup during
	         * future parsing of this decision. Otherwise, the SLL parsing algorithm
	         * will use ATN transitions exclusively.
	         *
	         * @see #SLL_ATNTransitions
	         * @see ParserATNSimulator#computeTargetState
	         * @see LexerATNSimulator#computeTargetState
	         */this.SLL_ATNTransitions=0;/**
	         * The total number of DFA transitions required during SLL prediction for
	         * this decision.
	         *
	         * If the ATN simulator implementation does not use DFA caching for SLL
	         * transitions, this value will be 0.
	         *
	         * @see ParserATNSimulator#getExistingTargetState
	         * @see LexerATNSimulator#getExistingTargetState
	         */this.SLL_DFATransitions=0;/**
	         * Gets the total number of times SLL prediction completed in a conflict
	         * state, resulting in fallback to LL prediction.
	         *
	         * Note that this value is not related to whether or not
	         * {@link PredictionMode#SLL} may be used successfully with a particular
	         * grammar. If the ambiguity resolution algorithm applied to the SLL
	         * conflicts for this decision produce the same result as LL prediction for
	         * this decision, {@link PredictionMode#SLL} would produce the same overall
	         * parsing result as {@link PredictionMode#LL}.
	         */this.LL_Fallback=0;/**
	         * The total number of ATN transitions required during LL prediction for
	         * this decision. An ATN transition is determined by the number of times the
	         * DFA does not contain an edge that is required for prediction, resulting
	         * in on-the-fly computation of that edge.
	         *
	         * If DFA caching of LL transitions is employed by the implementation, ATN
	         * computation may cache the computed edge for efficient lookup during
	         * future parsing of this decision. Otherwise, the LL parsing algorithm will
	         * use ATN transitions exclusively.
	         *
	         * @see #LL_DFATransitions
	         * @see ParserATNSimulator#computeTargetState
	         * @see LexerATNSimulator#computeTargetState
	         */this.LL_ATNTransitions=0;/**
	         * The total number of DFA transitions required during LL prediction for
	         * this decision.
	         *
	         * If the ATN simulator implementation does not use DFA caching for LL
	         * transitions, this value will be 0.
	         *
	         * @see ParserATNSimulator#getExistingTargetState
	         * @see LexerATNSimulator#getExistingTargetState
	         */this.LL_DFATransitions=0;this.decision=decision;}createClass(DecisionInfo,[{key:'toString',value:function toString(){return "{"+"decision="+this.decision+", contextSensitivities="+this.contextSensitivities.length+", errors="+this.errors.length+", ambiguities="+this.ambiguities.length+", SLL_lookahead="+this.SLL_TotalLook+", SLL_ATNTransitions="+this.SLL_ATNTransitions+", SLL_DFATransitions="+this.SLL_DFATransitions+", LL_Fallback="+this.LL_Fallback+", LL_lookahead="+this.LL_TotalLook+", LL_ATNTransitions="+this.LL_ATNTransitions+"}";}}]);return DecisionInfo;}();__decorate([Decorators_1.Override],DecisionInfo.prototype,"toString",null);exports.DecisionInfo=DecisionInfo;},{"../Decorators":224}],271:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:28.4381103-07:00
	var ATNState_1=require("./ATNState");var DecisionState=function(_ATNState_1$ATNState3){inherits(DecisionState,_ATNState_1$ATNState3);function DecisionState(){classCallCheck(this,DecisionState);var _this261=possibleConstructorReturn(this,(DecisionState.__proto__||Object.getPrototypeOf(DecisionState)).apply(this,arguments));_this261.decision=-1;_this261.nonGreedy=false;_this261.sll=false;return _this261;}return DecisionState;}(ATNState_1.ATNState);exports.DecisionState=DecisionState;},{"./ATNState":257}],272:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");var EpsilonTransition=function(_Transition_1$Transit4){inherits(EpsilonTransition,_Transition_1$Transit4);function EpsilonTransition(target){var outermostPrecedenceReturn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;classCallCheck(this,EpsilonTransition);var _this262=possibleConstructorReturn(this,(EpsilonTransition.__proto__||Object.getPrototypeOf(EpsilonTransition)).call(this,target));_this262._outermostPrecedenceReturn=outermostPrecedenceReturn;return _this262;}/**
	     * @returns the rule index of a precedence rule for which this transition is
	     * returning from, where the precedence value is 0; otherwise, -1.
	     *
	     * @see ATNConfig.isPrecedenceFilterSuppressed
	     * @see ParserATNSimulator#applyPrecedenceFilter(ATNConfigSet, ParserRuleContext, PredictionContextCache)
	     * @since 4.4.1
	     */createClass(EpsilonTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return false;}},{key:'toString',value:function toString(){return "epsilon";}},{key:'outermostPrecedenceReturn',get:function get(){return this._outermostPrecedenceReturn;}},{key:'serializationType',get:function get(){return 1/* EPSILON */;}},{key:'isEpsilon',get:function get(){return true;}}]);return EpsilonTransition;}(Transition_1.Transition);__decorate([Decorators_1.Override],EpsilonTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],EpsilonTransition.prototype,"isEpsilon",null);__decorate([Decorators_1.Override],EpsilonTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],EpsilonTransition.prototype,"toString",null);EpsilonTransition=__decorate([__param(0,Decorators_1.NotNull)],EpsilonTransition);exports.EpsilonTransition=EpsilonTransition;},{"../Decorators":224,"./Transition":313}],273:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:28.7213647-07:00
	var DecisionEventInfo_1=require("./DecisionEventInfo");var Decorators_1=require("../Decorators");/**
	 * This class represents profiling event information for a syntax error
	 * identified during prediction. Syntax errors occur when the prediction
	 * algorithm is unable to identify an alternative which would lead to a
	 * successful parse.
	 *
	 * @see Parser#notifyErrorListeners(Token, String, RecognitionException)
	 * @see ANTLRErrorListener#syntaxError
	 *
	 * @since 4.3
	 */var ErrorInfo=function(_DecisionEventInfo_1$3){inherits(ErrorInfo,_DecisionEventInfo_1$3);/**
	     * Constructs a new instance of the {@link ErrorInfo} class with the
	     * specified detailed syntax error information.
	     *
	     * @param decision The decision number
	     * @param state The final simulator state reached during prediction
	     * prior to reaching the {@link ATNSimulator#ERROR} state
	     * @param input The input token stream
	     * @param startIndex The start index for the current prediction
	     * @param stopIndex The index at which the syntax error was identified
	     */function ErrorInfo(decision,state,input,startIndex,stopIndex){classCallCheck(this,ErrorInfo);return possibleConstructorReturn(this,(ErrorInfo.__proto__||Object.getPrototypeOf(ErrorInfo)).call(this,decision,state,input,startIndex,stopIndex,state.useContext));}return ErrorInfo;}(DecisionEventInfo_1.DecisionEventInfo);ErrorInfo=__decorate([__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ErrorInfo);exports.ErrorInfo=ErrorInfo;},{"../Decorators":224,"./DecisionEventInfo":269}],274:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var ATNStateType_1=require("./ATNStateType");var BasicState_1=require("./BasicState");var Decorators_1=require("../Decorators");/**
	 *
	 * @author Sam Harwell
	 */var InvalidState=function(_BasicState_1$BasicSt){inherits(InvalidState,_BasicState_1$BasicSt);function InvalidState(){classCallCheck(this,InvalidState);return possibleConstructorReturn(this,(InvalidState.__proto__||Object.getPrototypeOf(InvalidState)).apply(this,arguments));}createClass(InvalidState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.INVALID_TYPE;}}]);return InvalidState;}(BasicState_1.BasicState);__decorate([Decorators_1.Override],InvalidState.prototype,"stateType",null);exports.InvalidState=InvalidState;},{"../Decorators":224,"./ATNStateType":258,"./BasicState":264}],275:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:30.4445360-07:00
	var AbstractPredicateTransition_1=require("./AbstractPredicateTransition");var Array2DHashSet_1=require("../misc/Array2DHashSet");var ATNConfig_1=require("./ATNConfig");var BitSet_1=require("../misc/BitSet");var IntervalSet_1=require("../misc/IntervalSet");var Decorators_1=require("../Decorators");var NotSetTransition_1=require("./NotSetTransition");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var PredictionContext_1=require("./PredictionContext");var RuleStopState_1=require("./RuleStopState");var RuleTransition_1=require("./RuleTransition");var Token_1=require("../Token");var WildcardTransition_1=require("./WildcardTransition");var LL1Analyzer=function(){function LL1Analyzer(atn){classCallCheck(this,LL1Analyzer);this.atn=atn;}/**
	     * Calculates the SLL(1) expected lookahead set for each outgoing transition
	     * of an {@link ATNState}. The returned array has one element for each
	     * outgoing transition in `s`. If the closure from transition
	     * *i* leads to a semantic predicate before matching a symbol, the
	     * element at index *i* of the result will be `undefined`.
	     *
	     * @param s the ATN state
	     * @returns the expected symbols for each outgoing transition of `s`.
	     */createClass(LL1Analyzer,[{key:'getDecisionLookahead',value:function getDecisionLookahead(s){//		System.out.println("LOOK("+s.stateNumber+")");
	if(s==null){return undefined;}var look=new Array(s.numberOfTransitions);for(var alt=0;alt<s.numberOfTransitions;alt++){var current=new IntervalSet_1.IntervalSet();look[alt]=current;var lookBusy=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);var seeThruPreds=false;// fail to get lookahead upon pred
	this._LOOK(s.transition(alt).target,undefined,PredictionContext_1.PredictionContext.EMPTY_LOCAL,current,lookBusy,new BitSet_1.BitSet(),seeThruPreds,false);// Wipe out lookahead for this alternative if we found nothing
	// or we had a predicate when we !seeThruPreds
	if(current.size===0||current.contains(LL1Analyzer.HIT_PRED)){current=undefined;look[alt]=current;}}return look;}},{key:'LOOK',value:function LOOK(s,ctx,stopState){if(stopState===undefined){if(s.atn==null){throw new Error("Illegal state");}stopState=s.atn.ruleToStopState[s.ruleIndex];}else if(stopState===null){// This is an explicit request to pass undefined as the stopState to _LOOK. Used to distinguish an overload
	// from the method which simply omits the stopState parameter.
	stopState=undefined;}var r=new IntervalSet_1.IntervalSet();var seeThruPreds=true;// ignore preds; get all lookahead
	var addEOF=true;this._LOOK(s,stopState,ctx,r,new Array2DHashSet_1.Array2DHashSet(),new BitSet_1.BitSet(),seeThruPreds,addEOF);return r;}/**
	     * Compute set of tokens that can follow `s` in the ATN in the
	     * specified `ctx`.
	     * <p/>
	     * If `ctx` is {@link PredictionContext#EMPTY_LOCAL} and
	     * `stopState` or the end of the rule containing `s` is reached,
	     * {@link Token#EPSILON} is added to the result set. If `ctx` is not
	     * {@link PredictionContext#EMPTY_LOCAL} and `addEOF` is `true`
	     * and `stopState` or the end of the outermost rule is reached,
	     * {@link Token#EOF} is added to the result set.
	     *
	     * @param s the ATN state.
	     * @param stopState the ATN state to stop at. This can be a
	     * {@link BlockEndState} to detect epsilon paths through a closure.
	     * @param ctx The outer context, or {@link PredictionContext#EMPTY_LOCAL} if
	     * the outer context should not be used.
	     * @param look The result lookahead set.
	     * @param lookBusy A set used for preventing epsilon closures in the ATN
	     * from causing a stack overflow. Outside code should pass
	     * `new HashSet<ATNConfig>` for this argument.
	     * @param calledRuleStack A set used for preventing left recursion in the
	     * ATN from causing a stack overflow. Outside code should pass
	     * `new BitSet()` for this argument.
	     * @param seeThruPreds `true` to true semantic predicates as
	     * implicitly `true` and "see through them", otherwise `false`
	     * to treat semantic predicates as opaque and add {@link #HIT_PRED} to the
	     * result if one is encountered.
	     * @param addEOF Add {@link Token#EOF} to the result if the end of the
	     * outermost context is reached. This parameter has no effect if `ctx`
	     * is {@link PredictionContext#EMPTY_LOCAL}.
	     */},{key:'_LOOK',value:function _LOOK(s,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF){//		System.out.println("_LOOK("+s.stateNumber+", ctx="+ctx);
	var c=ATNConfig_1.ATNConfig.create(s,0,ctx);if(!lookBusy.add(c)){return;}if(s===stopState){if(PredictionContext_1.PredictionContext.isEmptyLocal(ctx)){look.add(Token_1.Token.EPSILON);return;}else if(ctx.isEmpty){if(addEOF){look.add(Token_1.Token.EOF);}return;}}if(s instanceof RuleStopState_1.RuleStopState){if(ctx.isEmpty&&!PredictionContext_1.PredictionContext.isEmptyLocal(ctx)){if(addEOF){look.add(Token_1.Token.EOF);}return;}var _removed=calledRuleStack.get(s.ruleIndex);try{calledRuleStack.clear(s.ruleIndex);for(var i=0;i<ctx.size;i++){if(ctx.getReturnState(i)===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){continue;}var returnState=this.atn.states[ctx.getReturnState(i)];//					System.out.println("popping back to "+retState);
	this._LOOK(returnState,stopState,ctx.getParent(i),look,lookBusy,calledRuleStack,seeThruPreds,addEOF);}}finally{if(_removed){calledRuleStack.set(s.ruleIndex);}}}var n=s.numberOfTransitions;for(var _i32=0;_i32<n;_i32++){var t=s.transition(_i32);if(t instanceof RuleTransition_1.RuleTransition){if(calledRuleStack.get(t.ruleIndex)){continue;}var newContext=ctx.getChild(t.followState.stateNumber);try{calledRuleStack.set(t.ruleIndex);this._LOOK(t.target,stopState,newContext,look,lookBusy,calledRuleStack,seeThruPreds,addEOF);}finally{calledRuleStack.clear(t.ruleIndex);}}else if(t instanceof AbstractPredicateTransition_1.AbstractPredicateTransition){if(seeThruPreds){this._LOOK(t.target,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF);}else {look.add(LL1Analyzer.HIT_PRED);}}else if(t.isEpsilon){this._LOOK(t.target,stopState,ctx,look,lookBusy,calledRuleStack,seeThruPreds,addEOF);}else if(t instanceof WildcardTransition_1.WildcardTransition){look.addAll(IntervalSet_1.IntervalSet.of(Token_1.Token.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType));}else {//				System.out.println("adding "+ t);
	var set=t.label;if(set!=null){if(t instanceof NotSetTransition_1.NotSetTransition){set=set.complement(IntervalSet_1.IntervalSet.of(Token_1.Token.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType));}look.addAll(set);}}}}}]);return LL1Analyzer;}();/** Special value added to the lookahead sets to indicate that we hit
	 *  a predicate during analysis if `seeThruPreds==false`.
	 */LL1Analyzer.HIT_PRED=Token_1.Token.INVALID_TYPE;__decorate([Decorators_1.NotNull],LL1Analyzer.prototype,"atn",void 0);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],LL1Analyzer.prototype,"LOOK",null);__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull),__param(3,Decorators_1.NotNull),__param(4,Decorators_1.NotNull),__param(5,Decorators_1.NotNull)],LL1Analyzer.prototype,"_LOOK",null);LL1Analyzer=__decorate([__param(0,Decorators_1.NotNull)],LL1Analyzer);exports.LL1Analyzer=LL1Analyzer;},{"../Decorators":224,"../Token":248,"../misc/Array2DHashSet":322,"../misc/BitSet":325,"../misc/IntervalSet":331,"../misc/ObjectEqualityComparator":334,"./ATNConfig":252,"./AbstractPredicateTransition":259,"./NotSetTransition":289,"./PredictionContext":298,"./RuleStopState":304,"./RuleTransition":305,"./WildcardTransition":314}],276:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:29.1083066-07:00
	var AcceptStateInfo_1=require("../dfa/AcceptStateInfo");var ATN_1=require("./ATN");var ATNConfig_1=require("./ATNConfig");var ATNConfigSet_1=require("./ATNConfigSet");var ATNSimulator_1=require("./ATNSimulator");var DFAState_1=require("../dfa/DFAState");var Interval_1=require("../misc/Interval");var IntStream_1=require("../IntStream");var Lexer_1=require("../Lexer");var LexerActionExecutor_1=require("./LexerActionExecutor");var LexerNoViableAltException_1=require("../LexerNoViableAltException");var Decorators_1=require("../Decorators");var OrderedATNConfigSet_1=require("./OrderedATNConfigSet");var PredictionContext_1=require("./PredictionContext");var RuleStopState_1=require("./RuleStopState");var Token_1=require("../Token");var assert=require("assert");/** "dup" of ParserInterpreter */var LexerATNSimulator=function(_ATNSimulator_1$ATNSi){inherits(LexerATNSimulator,_ATNSimulator_1$ATNSi);function LexerATNSimulator(atn,recog){classCallCheck(this,LexerATNSimulator);var _this265=possibleConstructorReturn(this,(LexerATNSimulator.__proto__||Object.getPrototypeOf(LexerATNSimulator)).call(this,atn));_this265.optimize_tail_calls=true;/** The current token's starting index into the character stream.
	         *  Shared across DFA to ATN simulation in case the ATN fails and the
	         *  DFA did not have a previous accept state. In this case, we use the
	         *  ATN-generated exception object.
	         */_this265.startIndex=-1;/** line number 1..n within the input */_this265._line=1;/** The index of the character relative to the beginning of the line 0..n-1 */_this265._charPositionInLine=0;_this265.mode=Lexer_1.Lexer.DEFAULT_MODE;/** Used during DFA/ATN exec to record the most recent accept configuration info */_this265.prevAccept=new LexerATNSimulator.SimState();_this265.recog=recog;return _this265;}createClass(LexerATNSimulator,[{key:'copyState',value:function copyState(simulator){this._charPositionInLine=simulator.charPositionInLine;this._line=simulator._line;this.mode=simulator.mode;this.startIndex=simulator.startIndex;}},{key:'match',value:function match(input,mode){LexerATNSimulator.match_calls++;this.mode=mode;var mark=input.mark();try{this.startIndex=input.index;this.prevAccept.reset();var s0=this.atn.modeToDFA[mode].s0;if(s0==null){return this.matchATN(input);}else {return this.execATN(input,s0);}}finally{input.release(mark);}}},{key:'reset',value:function reset(){this.prevAccept.reset();this.startIndex=-1;this._line=1;this._charPositionInLine=0;this.mode=Lexer_1.Lexer.DEFAULT_MODE;}},{key:'matchATN',value:function matchATN(input){var startState=this.atn.modeToStartState[this.mode];if(LexerATNSimulator.debug){console.log('matchATN mode '+this.mode+' start: '+startState);}var old_mode=this.mode;var s0_closure=this.computeStartState(input,startState);var suppressEdge=s0_closure.hasSemanticContext;if(suppressEdge){s0_closure.hasSemanticContext=false;}var next=this.addDFAState(s0_closure);if(!suppressEdge){var dfa=this.atn.modeToDFA[this.mode];if(!dfa.s0){dfa.s0=next;}else {next=dfa.s0;}}var predict=this.execATN(input,next);if(LexerATNSimulator.debug){console.log('DFA after matchATN: '+this.atn.modeToDFA[old_mode].toLexerString());}return predict;}},{key:'execATN',value:function execATN(input,ds0){// console.log("enter exec index "+input.index+" from "+ds0.configs);
	if(LexerATNSimulator.debug){console.log('start state closure='+ds0.configs);}if(ds0.isAcceptState){// allow zero-length tokens
	this.captureSimState(this.prevAccept,input,ds0);}var t=input.LA(1);// @NotNull
	var s=ds0;// s is current/from DFA state
	while(true){// while more work
	if(LexerATNSimulator.debug){console.log('execATN loop starting closure: '+s.configs);}// As we move src->trg, src->trg, we keep track of the previous trg to
	// avoid looking up the DFA state again, which is expensive.
	// If the previous target was already part of the DFA, we might
	// be able to avoid doing a reach operation upon t. If s!=null,
	// it means that semantic predicates didn't prevent us from
	// creating a DFA state. Once we know s!=null, we check to see if
	// the DFA state has an edge already for t. If so, we can just reuse
	// it's configuration set; there's no point in re-computing it.
	// This is kind of like doing DFA simulation within the ATN
	// simulation because DFA simulation is really just a way to avoid
	// computing reach/closure sets. Technically, once we know that
	// we have a previously added DFA state, we could jump over to
	// the DFA simulator. But, that would mean popping back and forth
	// a lot and making things more complicated algorithmically.
	// This optimization makes a lot of sense for loops within DFA.
	// A character will take us back to an existing DFA state
	// that already has lots of edges out of it. e.g., .* in comments.
	var target=this.getExistingTargetState(s,t);if(target==null){target=this.computeTargetState(input,s,t);}if(target===ATNSimulator_1.ATNSimulator.ERROR){break;}// If this is a consumable input element, make sure to consume before
	// capturing the accept state so the input index, line, and char
	// position accurately reflect the state of the interpreter at the
	// end of the token.
	if(t!==IntStream_1.IntStream.EOF){this.consume(input);}if(target.isAcceptState){this.captureSimState(this.prevAccept,input,target);if(t===IntStream_1.IntStream.EOF){break;}}t=input.LA(1);s=target;// flip; current DFA target becomes new src/from state
	}return this.failOrAccept(this.prevAccept,input,s.configs,t);}/**
	     * Get an existing target state for an edge in the DFA. If the target state
	     * for the edge has not yet been computed or is otherwise not available,
	     * this method returns `undefined`.
	     *
	     * @param s The current DFA state
	     * @param t The next input symbol
	     * @returns The existing target DFA state for the given input symbol
	     * `t`, or `undefined` if the target state for this edge is not
	     * already cached
	     */},{key:'getExistingTargetState',value:function getExistingTargetState(s,t){var target=s.getTarget(t);if(LexerATNSimulator.debug&&target!=null){console.log("reuse state "+s.stateNumber+" edge to "+target.stateNumber);}return target;}/**
	     * Compute a target state for an edge in the DFA, and attempt to add the
	     * computed state and corresponding edge to the DFA.
	     *
	     * @param input The input stream
	     * @param s The current DFA state
	     * @param t The next input symbol
	     *
	     * @returns The computed target DFA state for the given input symbol
	     * `t`. If `t` does not lead to a valid DFA state, this method
	     * returns {@link #ERROR}.
	     */},{key:'computeTargetState',value:function computeTargetState(input,s,t){var reach=new OrderedATNConfigSet_1.OrderedATNConfigSet();// if we don't find an existing DFA state
	// Fill reach starting from closure, following t transitions
	this.getReachableConfigSet(input,s.configs,reach,t);if(reach.isEmpty){// we got nowhere on t from s
	if(!reach.hasSemanticContext){// we got nowhere on t, don't throw out this knowledge; it'd
	// cause a failover from DFA later.
	this.addDFAEdge(s,t,ATNSimulator_1.ATNSimulator.ERROR);}// stop when we can't match any more char
	return ATNSimulator_1.ATNSimulator.ERROR;}// Add an edge from s to target DFA found/created for reach
	return this.addDFAEdge(s,t,reach);}},{key:'failOrAccept',value:function failOrAccept(prevAccept,input,reach,t){if(prevAccept.dfaState!=null){var lexerActionExecutor=prevAccept.dfaState.lexerActionExecutor;this.accept(input,lexerActionExecutor,this.startIndex,prevAccept.index,prevAccept.line,prevAccept.charPos);return prevAccept.dfaState.prediction;}else {// if no accept and EOF is first char, return EOF
	if(t===IntStream_1.IntStream.EOF&&input.index===this.startIndex){return Token_1.Token.EOF;}throw new LexerNoViableAltException_1.LexerNoViableAltException(this.recog,input,this.startIndex,reach);}}/** Given a starting configuration set, figure out all ATN configurations
	     *  we can reach upon input `t`. Parameter `reach` is a return
	     *  parameter.
	     */},{key:'getReachableConfigSet',value:function getReachableConfigSet(input,closure,reach,t){// this is used to skip processing for configs which have a lower priority
	// than a config that already reached an accept state for the same rule
	var skipAlt=ATN_1.ATN.INVALID_ALT_NUMBER;var _iteratorNormalCompletion118=true;var _didIteratorError118=false;var _iteratorError118=undefined;try{for(var _iterator118=closure[Symbol.iterator](),_step118;!(_iteratorNormalCompletion118=(_step118=_iterator118.next()).done);_iteratorNormalCompletion118=true){var c=_step118.value;var currentAltReachedAcceptState=c.alt===skipAlt;if(currentAltReachedAcceptState&&c.hasPassedThroughNonGreedyDecision){continue;}if(LexerATNSimulator.debug){console.log('testing '+this.getTokenName(t)+' at '+c.toString(this.recog,true));}var n=c.state.numberOfOptimizedTransitions;for(var ti=0;ti<n;ti++){// for each optimized transition
	var trans=c.state.getOptimizedTransition(ti);var target=this.getReachableTarget(trans,t);if(target!=null){var lexerActionExecutor=c.lexerActionExecutor;var config=void 0;if(lexerActionExecutor!=null){lexerActionExecutor=lexerActionExecutor.fixOffsetBeforeMatch(input.index-this.startIndex);config=c.transform(target,true,lexerActionExecutor);}else {assert(c.lexerActionExecutor==null);config=c.transform(target,true);}var treatEofAsEpsilon=t===IntStream_1.IntStream.EOF;if(this.closure(input,config,reach,currentAltReachedAcceptState,true,treatEofAsEpsilon)){// any remaining configs for this alt have a lower priority than
	// the one that just reached an accept state.
	skipAlt=c.alt;break;}}}}}catch(err){_didIteratorError118=true;_iteratorError118=err;}finally{try{if(!_iteratorNormalCompletion118&&_iterator118.return){_iterator118.return();}}finally{if(_didIteratorError118){throw _iteratorError118;}}}}},{key:'accept',value:function accept(input,lexerActionExecutor,startIndex,index,line,charPos){if(LexerATNSimulator.debug){console.log('ACTION '+lexerActionExecutor);}// seek to after last char in token
	input.seek(index);this._line=line;this._charPositionInLine=charPos;if(lexerActionExecutor!=null&&this.recog!=null){lexerActionExecutor.execute(this.recog,input,startIndex);}}},{key:'getReachableTarget',value:function getReachableTarget(trans,t){if(trans.matches(t,Lexer_1.Lexer.MIN_CHAR_VALUE,Lexer_1.Lexer.MAX_CHAR_VALUE)){return trans.target;}return undefined;}},{key:'computeStartState',value:function computeStartState(input,p){var initialContext=PredictionContext_1.PredictionContext.EMPTY_FULL;var configs=new OrderedATNConfigSet_1.OrderedATNConfigSet();for(var i=0;i<p.numberOfTransitions;i++){var target=p.transition(i).target;var c=ATNConfig_1.ATNConfig.create(target,i+1,initialContext);this.closure(input,c,configs,false,false,false);}return configs;}/**
	     * Since the alternatives within any lexer decision are ordered by
	     * preference, this method stops pursuing the closure as soon as an accept
	     * state is reached. After the first accept state is reached by depth-first
	     * search from `config`, all other (potentially reachable) states for
	     * this rule would have a lower priority.
	     *
	     * @returns `true` if an accept state is reached, otherwise
	     * `false`.
	     */},{key:'closure',value:function closure(input,config,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon){if(LexerATNSimulator.debug){console.log("closure("+config.toString(this.recog,true)+")");}if(config.state instanceof RuleStopState_1.RuleStopState){if(LexerATNSimulator.debug){if(this.recog!=null){console.log('closure at '+this.recog.ruleNames[config.state.ruleIndex]+' rule stop '+config);}else {console.log('closure at rule stop '+config);}}var context=config.context;if(context.isEmpty){configs.add(config);return true;}else if(context.hasEmpty){configs.add(config.transform(config.state,true,PredictionContext_1.PredictionContext.EMPTY_FULL));currentAltReachedAcceptState=true;}for(var i=0;i<context.size;i++){var returnStateNumber=context.getReturnState(i);if(returnStateNumber===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){continue;}var newContext=context.getParent(i);// "pop" return state
	var returnState=this.atn.states[returnStateNumber];var c=config.transform(returnState,false,newContext);currentAltReachedAcceptState=this.closure(input,c,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon);}return currentAltReachedAcceptState;}// optimization
	if(!config.state.onlyHasEpsilonTransitions){if(!currentAltReachedAcceptState||!config.hasPassedThroughNonGreedyDecision){configs.add(config);}}var p=config.state;for(var _i33=0;_i33<p.numberOfOptimizedTransitions;_i33++){var t=p.getOptimizedTransition(_i33);var _c2=this.getEpsilonTarget(input,config,t,configs,speculative,treatEofAsEpsilon);if(_c2!=null){currentAltReachedAcceptState=this.closure(input,_c2,configs,currentAltReachedAcceptState,speculative,treatEofAsEpsilon);}}return currentAltReachedAcceptState;}// side-effect: can alter configs.hasSemanticContext
	},{key:'getEpsilonTarget',value:function getEpsilonTarget(input,config,t,configs,speculative,treatEofAsEpsilon){var c=void 0;switch(t.serializationType){case 3/* RULE */:var ruleTransition=t;if(this.optimize_tail_calls&&ruleTransition.optimizedTailCall&&!config.context.hasEmpty){c=config.transform(t.target,true);}else {var newContext=config.context.getChild(ruleTransition.followState.stateNumber);c=config.transform(t.target,true,newContext);}break;case 10/* PRECEDENCE */:throw new Error("Precedence predicates are not supported in lexers.");case 4/* PREDICATE */:/*  Track traversing semantic predicates. If we traverse,
	                    we cannot add a DFA state for this "reach" computation
	                    because the DFA would not test the predicate again in the
	                    future. Rather than creating collections of semantic predicates
	                    like v3 and testing them on prediction, v4 will test them on the
	                    fly all the time using the ATN not the DFA. This is slower but
	                    semantically it's not used that often. One of the key elements to
	                    this predicate mechanism is not adding DFA states that see
	                    predicates immediately afterwards in the ATN. For example,
	    
	                    a : ID {p1}? | ID {p2}? ;
	    
	                    should create the start state for rule 'a' (to save start state
	                    competition), but should not create target of ID state. The
	                    collection of ATN states the following ID references includes
	                    states reached by traversing predicates. Since this is when we
	                    test them, we cannot cash the DFA state target of ID.
	                */var pt=t;if(LexerATNSimulator.debug){console.log("EVAL rule "+pt.ruleIndex+":"+pt.predIndex);}configs.hasSemanticContext=true;if(this.evaluatePredicate(input,pt.ruleIndex,pt.predIndex,speculative)){c=config.transform(t.target,true);}else {c=undefined;}break;case 6/* ACTION */:if(config.context.hasEmpty){// execute actions anywhere in the start rule for a token.
	//
	// TODO: if the entry rule is invoked recursively, some
	// actions may be executed during the recursive call. The
	// problem can appear when hasEmpty is true but
	// isEmpty is false. In this case, the config needs to be
	// split into two contexts - one with just the empty path
	// and another with everything but the empty path.
	// Unfortunately, the current algorithm does not allow
	// getEpsilonTarget to return two configurations, so
	// additional modifications are needed before we can support
	// the split operation.
	var lexerActionExecutor=LexerActionExecutor_1.LexerActionExecutor.append(config.lexerActionExecutor,this.atn.lexerActions[t.actionIndex]);c=config.transform(t.target,true,lexerActionExecutor);break;}else {// ignore actions in referenced rules
	c=config.transform(t.target,true);break;}case 1/* EPSILON */:c=config.transform(t.target,true);break;case 5/* ATOM */:case 2/* RANGE */:case 7/* SET */:if(treatEofAsEpsilon){if(t.matches(IntStream_1.IntStream.EOF,Lexer_1.Lexer.MIN_CHAR_VALUE,Lexer_1.Lexer.MAX_CHAR_VALUE)){c=config.transform(t.target,false);break;}}c=undefined;break;default:c=undefined;break;}return c;}/**
	     * Evaluate a predicate specified in the lexer.
	     *
	     * If `speculative` is `true`, this method was called before
	     * {@link #consume} for the matched character. This method should call
	     * {@link #consume} before evaluating the predicate to ensure position
	     * sensitive values, including {@link Lexer#getText}, {@link Lexer#getLine},
	     * and {@link Lexer#getCharPositionInLine}, properly reflect the current
	     * lexer state. This method should restore `input` and the simulator
	     * to the original state before returning (i.e. undo the actions made by the
	     * call to {@link #consume}.
	     *
	     * @param input The input stream.
	     * @param ruleIndex The rule containing the predicate.
	     * @param predIndex The index of the predicate within the rule.
	     * @param speculative `true` if the current index in `input` is
	     * one character before the predicate's location.
	     *
	     * @returns `true` if the specified predicate evaluates to
	     * `true`.
	     */},{key:'evaluatePredicate',value:function evaluatePredicate(input,ruleIndex,predIndex,speculative){// assume true if no recognizer was provided
	if(this.recog==null){return true;}if(!speculative){return this.recog.sempred(undefined,ruleIndex,predIndex);}var savedCharPositionInLine=this._charPositionInLine;var savedLine=this._line;var index=input.index;var marker=input.mark();try{this.consume(input);return this.recog.sempred(undefined,ruleIndex,predIndex);}finally{this._charPositionInLine=savedCharPositionInLine;this._line=savedLine;input.seek(index);input.release(marker);}}},{key:'captureSimState',value:function captureSimState(settings,input,dfaState){settings.index=input.index;settings.line=this._line;settings.charPos=this._charPositionInLine;settings.dfaState=dfaState;}},{key:'addDFAEdge',value:function addDFAEdge(p,t,q){if(q instanceof ATNConfigSet_1.ATNConfigSet){/* leading to this call, ATNConfigSet.hasSemanticContext is used as a
	            * marker indicating dynamic predicate evaluation makes this edge
	            * dependent on the specific input sequence, so the static edge in the
	            * DFA should be omitted. The target DFAState is still created since
	            * execATN has the ability to resynchronize with the DFA state cache
	            * following the predicate evaluation step.
	            *
	            * TJP notes: next time through the DFA, we see a pred again and eval.
	            * If that gets us to a previously created (but dangling) DFA
	            * state, we can continue in pure DFA mode from there.
	            */var suppressEdge=q.hasSemanticContext;if(suppressEdge){q.hasSemanticContext=false;}// @NotNull
	var to=this.addDFAState(q);if(suppressEdge){return to;}this.addDFAEdge(p,t,to);return to;}else {if(LexerATNSimulator.debug){console.log("EDGE "+p+" -> "+q+" upon "+String.fromCharCode(t));}if(p!=null){p.setTarget(t,q);}}}/** Add a new DFA state if there isn't one with this set of
	     * 	configurations already. This method also detects the first
	     * 	configuration containing an ATN rule stop state. Later, when
	     * 	traversing the DFA, we will know which rule to accept.
	     */},{key:'addDFAState',value:function addDFAState(configs){/* the lexer evaluates predicates on-the-fly; by this point configs
	         * should not contain any configurations with unevaluated predicates.
	         */assert(!configs.hasSemanticContext);var proposed=new DFAState_1.DFAState(configs);var existing=this.atn.modeToDFA[this.mode].states.get(proposed);if(existing!=null){return existing;}configs.optimizeConfigs(this);var newState=new DFAState_1.DFAState(configs.clone(true));var firstConfigWithRuleStopState=void 0;var _iteratorNormalCompletion119=true;var _didIteratorError119=false;var _iteratorError119=undefined;try{for(var _iterator119=configs[Symbol.iterator](),_step119;!(_iteratorNormalCompletion119=(_step119=_iterator119.next()).done);_iteratorNormalCompletion119=true){var c=_step119.value;if(c.state instanceof RuleStopState_1.RuleStopState){firstConfigWithRuleStopState=c;break;}}}catch(err){_didIteratorError119=true;_iteratorError119=err;}finally{try{if(!_iteratorNormalCompletion119&&_iterator119.return){_iterator119.return();}}finally{if(_didIteratorError119){throw _iteratorError119;}}}if(firstConfigWithRuleStopState!=null){var prediction=this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];var lexerActionExecutor=firstConfigWithRuleStopState.lexerActionExecutor;newState.acceptStateInfo=new AcceptStateInfo_1.AcceptStateInfo(prediction,lexerActionExecutor);}return this.atn.modeToDFA[this.mode].addState(newState);}},{key:'getDFA',value:function getDFA(mode){return this.atn.modeToDFA[mode];}/** Get the text matched so far for the current token.
	     */},{key:'getText',value:function getText(input){// index is first lookahead char, don't include.
	return input.getText(Interval_1.Interval.of(this.startIndex,input.index-1));}},{key:'consume',value:function consume(input){var curChar=input.LA(1);if(curChar==="\n".charCodeAt(0)){this._line++;this._charPositionInLine=0;}else {this._charPositionInLine++;}input.consume();}},{key:'getTokenName',value:function getTokenName(t){if(t===-1){return "EOF";}//if ( atn.g!=null ) return atn.g.getTokenDisplayName(t);
	return "'"+String.fromCharCode(t)+"'";}},{key:'line',get:function get(){return this._line;},set:function set(line){this._line=line;}},{key:'charPositionInLine',get:function get(){return this._charPositionInLine;},set:function set(charPositionInLine){this._charPositionInLine=charPositionInLine;}}]);return LexerATNSimulator;}(ATNSimulator_1.ATNSimulator);LexerATNSimulator.match_calls=0;__decorate([Decorators_1.NotNull],LexerATNSimulator.prototype,"prevAccept",void 0);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"copyState",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"match",null);__decorate([Decorators_1.Override],LexerATNSimulator.prototype,"reset",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"matchATN",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],LexerATNSimulator.prototype,"execATN",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"getExistingTargetState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],LexerATNSimulator.prototype,"computeTargetState",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],LexerATNSimulator.prototype,"getReachableConfigSet",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"accept",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],LexerATNSimulator.prototype,"computeStartState",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],LexerATNSimulator.prototype,"closure",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],LexerATNSimulator.prototype,"getEpsilonTarget",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"evaluatePredicate",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],LexerATNSimulator.prototype,"captureSimState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"addDFAState",null);__decorate([Decorators_1.NotNull],LexerATNSimulator.prototype,"getDFA",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"getText",null);__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator.prototype,"consume",null);__decorate([Decorators_1.NotNull],LexerATNSimulator.prototype,"getTokenName",null);LexerATNSimulator=__decorate([__param(0,Decorators_1.NotNull)],LexerATNSimulator);exports.LexerATNSimulator=LexerATNSimulator;(function(LexerATNSimulator){LexerATNSimulator.debug=false;LexerATNSimulator.dfa_debug=false;/** When we hit an accept state in either the DFA or the ATN, we
	     *  have to notify the character stream to start buffering characters
	     *  via {@link IntStream#mark} and record the current state. The current sim state
	     *  includes the current index into the input, the current line,
	     *  and current character position in that line. Note that the Lexer is
	     *  tracking the starting line and characterization of the token. These
	     *  variables track the "state" of the simulator when it hits an accept state.
	     *
	     *  We track these variables separately for the DFA and ATN simulation
	     *  because the DFA simulation often has to fail over to the ATN
	     *  simulation. If the ATN simulation fails, we need the DFA to fall
	     *  back to its previously accepted state, if any. If the ATN succeeds,
	     *  then the ATN does the accept and the DFA simulator that invoked it
	     *  can simply return the predicted token type.
	     */var SimState=function(){function SimState(){classCallCheck(this,SimState);this.index=-1;this.line=0;this.charPos=-1;}createClass(SimState,[{key:'reset',value:function reset(){this.index=-1;this.line=0;this.charPos=-1;this.dfaState=undefined;}}]);return SimState;}();LexerATNSimulator.SimState=SimState;})(LexerATNSimulator=exports.LexerATNSimulator||(exports.LexerATNSimulator={}));exports.LexerATNSimulator=LexerATNSimulator;},{"../Decorators":224,"../IntStream":230,"../Lexer":232,"../LexerNoViableAltException":234,"../Token":248,"../dfa/AcceptStateInfo":315,"../dfa/DFAState":318,"../misc/Interval":330,"./ATN":251,"./ATNConfig":252,"./ATNConfigSet":253,"./ATNSimulator":256,"./LexerActionExecutor":277,"./OrderedATNConfigSet":290,"./PredictionContext":298,"./RuleStopState":304,"assert":364}],277:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:28.8810453-07:00
	var ArrayEqualityComparator_1=require("../misc/ArrayEqualityComparator");var LexerIndexedCustomAction_1=require("./LexerIndexedCustomAction");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Represents an executor for a sequence of lexer actions which traversed during
	 * the matching operation of a lexer rule (token).
	 *
	 * The executor tracks position information for position-dependent lexer actions
	 * efficiently, ensuring that actions appearing only at the end of the rule do
	 * not cause bloating of the {@link DFA} created for the lexer.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerActionExecutor=function(){/**
	     * Constructs an executor for a sequence of {@link LexerAction} actions.
	     * @param lexerActions The lexer actions to execute.
	     */function LexerActionExecutor(lexerActions){classCallCheck(this,LexerActionExecutor);this._lexerActions=lexerActions;var hash=MurmurHash_1.MurmurHash.initialize();var _iteratorNormalCompletion120=true;var _didIteratorError120=false;var _iteratorError120=undefined;try{for(var _iterator120=lexerActions[Symbol.iterator](),_step120;!(_iteratorNormalCompletion120=(_step120=_iterator120.next()).done);_iteratorNormalCompletion120=true){var lexerAction=_step120.value;hash=MurmurHash_1.MurmurHash.update(hash,lexerAction);}}catch(err){_didIteratorError120=true;_iteratorError120=err;}finally{try{if(!_iteratorNormalCompletion120&&_iterator120.return){_iterator120.return();}}finally{if(_didIteratorError120){throw _iteratorError120;}}}this.cachedHashCode=MurmurHash_1.MurmurHash.finish(hash,lexerActions.length);}/**
	     * Creates a {@link LexerActionExecutor} which executes the actions for
	     * the input `lexerActionExecutor` followed by a specified
	     * `lexerAction`.
	     *
	     * @param lexerActionExecutor The executor for actions already traversed by
	     * the lexer while matching a token within a particular
	     * {@link ATNConfig}. If this is `undefined`, the method behaves as though
	     * it were an empty executor.
	     * @param lexerAction The lexer action to execute after the actions
	     * specified in `lexerActionExecutor`.
	     *
	     * @returns A {@link LexerActionExecutor} for executing the combine actions
	     * of `lexerActionExecutor` and `lexerAction`.
	     */createClass(LexerActionExecutor,[{key:'fixOffsetBeforeMatch',/**
	     * Creates a {@link LexerActionExecutor} which encodes the current offset
	     * for position-dependent lexer actions.
	     *
	     * Normally, when the executor encounters lexer actions where
	     * {@link LexerAction#isPositionDependent} returns `true`, it calls
	     * {@link IntStream#seek} on the input {@link CharStream} to set the input
	     * position to the *end* of the current token. This behavior provides
	     * for efficient DFA representation of lexer actions which appear at the end
	     * of a lexer rule, even when the lexer rule matches a variable number of
	     * characters.
	     *
	     * Prior to traversing a match transition in the ATN, the current offset
	     * from the token start index is assigned to all position-dependent lexer
	     * actions which have not already been assigned a fixed offset. By storing
	     * the offsets relative to the token start index, the DFA representation of
	     * lexer actions which appear in the middle of tokens remains efficient due
	     * to sharing among tokens of the same length, regardless of their absolute
	     * position in the input stream.
	     *
	     * If the current executor already has offsets assigned to all
	     * position-dependent lexer actions, the method returns `this`.
	     *
	     * @param offset The current offset to assign to all position-dependent
	     * lexer actions which do not already have offsets assigned.
	     *
	     * @returns A {@link LexerActionExecutor} which stores input stream offsets
	     * for all position-dependent lexer actions.
	     */value:function fixOffsetBeforeMatch(offset){var updatedLexerActions=void 0;for(var i=0;i<this._lexerActions.length;i++){if(this._lexerActions[i].isPositionDependent&&!(this._lexerActions[i]instanceof LexerIndexedCustomAction_1.LexerIndexedCustomAction)){if(!updatedLexerActions){updatedLexerActions=this._lexerActions.slice(0);}updatedLexerActions[i]=new LexerIndexedCustomAction_1.LexerIndexedCustomAction(offset,this._lexerActions[i]);}}if(!updatedLexerActions){return this;}return new LexerActionExecutor(updatedLexerActions);}/**
	     * Gets the lexer actions to be executed by this executor.
	     * @returns The lexer actions to be executed by this executor.
	     */},{key:'execute',/**
	     * Execute the actions encapsulated by this executor within the context of a
	     * particular {@link Lexer}.
	     *
	     * This method calls {@link IntStream#seek} to set the position of the
	     * `input` {@link CharStream} prior to calling
	     * {@link LexerAction#execute} on a position-dependent action. Before the
	     * method returns, the input position will be restored to the same position
	     * it was in when the method was invoked.
	     *
	     * @param lexer The lexer instance.
	     * @param input The input stream which is the source for the current token.
	     * When this method is called, the current {@link IntStream#index} for
	     * `input` should be the start of the following token, i.e. 1
	     * character past the end of the current token.
	     * @param startIndex The token start index. This value may be passed to
	     * {@link IntStream#seek} to set the `input` position to the beginning
	     * of the token.
	     */value:function execute(lexer,input,startIndex){var requiresSeek=false;var stopIndex=input.index;try{var _iteratorNormalCompletion121=true;var _didIteratorError121=false;var _iteratorError121=undefined;try{for(var _iterator121=this._lexerActions[Symbol.iterator](),_step121;!(_iteratorNormalCompletion121=(_step121=_iterator121.next()).done);_iteratorNormalCompletion121=true){var lexerAction=_step121.value;if(lexerAction instanceof LexerIndexedCustomAction_1.LexerIndexedCustomAction){var offset=lexerAction.offset;input.seek(startIndex+offset);lexerAction=lexerAction.action;requiresSeek=startIndex+offset!==stopIndex;}else if(lexerAction.isPositionDependent){input.seek(stopIndex);requiresSeek=false;}lexerAction.execute(lexer);}}catch(err){_didIteratorError121=true;_iteratorError121=err;}finally{try{if(!_iteratorNormalCompletion121&&_iterator121.return){_iterator121.return();}}finally{if(_didIteratorError121){throw _iteratorError121;}}}}finally{if(requiresSeek){input.seek(stopIndex);}}}},{key:'hashCode',value:function hashCode(){return this.cachedHashCode;}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerActionExecutor)){return false;}return this.cachedHashCode===obj.cachedHashCode&&ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.equals(this._lexerActions,obj._lexerActions);}},{key:'lexerActions',get:function get(){return this._lexerActions;}}],[{key:'append',value:function append(lexerActionExecutor,lexerAction){if(!lexerActionExecutor){return new LexerActionExecutor([lexerAction]);}var lexerActions=lexerActionExecutor._lexerActions.slice(0);lexerActions.push(lexerAction);return new LexerActionExecutor(lexerActions);}}]);return LexerActionExecutor;}();__decorate([Decorators_1.NotNull],LexerActionExecutor.prototype,"_lexerActions",void 0);__decorate([Decorators_1.NotNull],LexerActionExecutor.prototype,"lexerActions",null);__decorate([__param(0,Decorators_1.NotNull)],LexerActionExecutor.prototype,"execute",null);__decorate([Decorators_1.Override],LexerActionExecutor.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerActionExecutor.prototype,"equals",null);__decorate([Decorators_1.NotNull,__param(1,Decorators_1.NotNull)],LexerActionExecutor,"append",null);LexerActionExecutor=__decorate([__param(0,Decorators_1.NotNull)],LexerActionExecutor);exports.LexerActionExecutor=LexerActionExecutor;},{"../Decorators":224,"../misc/ArrayEqualityComparator":323,"../misc/MurmurHash":333,"./LexerIndexedCustomAction":280}],278:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `channel` lexer action by calling
	 * {@link Lexer#setChannel} with the assigned channel.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerChannelAction=function(){/**
	     * Constructs a new `channel` action with the specified channel value.
	     * @param channel The channel value to pass to {@link Lexer#setChannel}.
	     */function LexerChannelAction(channel){classCallCheck(this,LexerChannelAction);this._channel=channel;}/**
	     * Gets the channel to use for the {@link Token} created by the lexer.
	     *
	     * @returns The channel to use for the {@link Token} created by the lexer.
	     */createClass(LexerChannelAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#setChannel} with the
	     * value provided by {@link #getChannel}.
	     */value:function execute(lexer){lexer.channel=this._channel;}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);hash=MurmurHash_1.MurmurHash.update(hash,this._channel);return MurmurHash_1.MurmurHash.finish(hash,2);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerChannelAction)){return false;}return this._channel===obj._channel;}},{key:'toString',value:function toString(){return 'channel('+this._channel+')';}},{key:'channel',get:function get(){return this._channel;}/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#CHANNEL}.
	     */},{key:'actionType',get:function get(){return 0/* CHANNEL */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerChannelAction;}();__decorate([Decorators_1.Override],LexerChannelAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerChannelAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerChannelAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerChannelAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerChannelAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerChannelAction.prototype,"toString",null);exports.LexerChannelAction=LexerChannelAction;},{"../Decorators":224,"../misc/MurmurHash":333}],279:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Executes a custom lexer action by calling {@link Recognizer#action} with the
	 * rule and action indexes assigned to the custom action. The implementation of
	 * a custom action is added to the generated code for the lexer in an override
	 * of {@link Recognizer#action} when the grammar is compiled.
	 *
	 * This class may represent embedded actions created with the `{...}`
	 * syntax in ANTLR 4, as well as actions created for lexer commands where the
	 * command argument could not be evaluated when the grammar was compiled.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerCustomAction=function(){/**
	     * Constructs a custom lexer action with the specified rule and action
	     * indexes.
	     *
	     * @param ruleIndex The rule index to use for calls to
	     * {@link Recognizer#action}.
	     * @param actionIndex The action index to use for calls to
	     * {@link Recognizer#action}.
	     */function LexerCustomAction(ruleIndex,actionIndex){classCallCheck(this,LexerCustomAction);this._ruleIndex=ruleIndex;this._actionIndex=actionIndex;}/**
	     * Gets the rule index to use for calls to {@link Recognizer#action}.
	     *
	     * @returns The rule index for the custom action.
	     */createClass(LexerCustomAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * Custom actions are implemented by calling {@link Lexer#action} with the
	     * appropriate rule and action indexes.
	     */value:function execute(lexer){lexer.action(undefined,this._ruleIndex,this._actionIndex);}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);hash=MurmurHash_1.MurmurHash.update(hash,this._ruleIndex);hash=MurmurHash_1.MurmurHash.update(hash,this._actionIndex);return MurmurHash_1.MurmurHash.finish(hash,3);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerCustomAction)){return false;}return this._ruleIndex===obj._ruleIndex&&this._actionIndex===obj._actionIndex;}},{key:'ruleIndex',get:function get(){return this._ruleIndex;}/**
	     * Gets the action index to use for calls to {@link Recognizer#action}.
	     *
	     * @returns The action index for the custom action.
	     */},{key:'actionIndex',get:function get(){return this._actionIndex;}/**
	     * {@inheritDoc}
	     *
	     * @returns This method returns {@link LexerActionType#CUSTOM}.
	     */},{key:'actionType',get:function get(){return 1/* CUSTOM */;}/**
	     * Gets whether the lexer action is position-dependent. Position-dependent
	     * actions may have different semantics depending on the {@link CharStream}
	     * index at the time the action is executed.
	     *
	     * Custom actions are position-dependent since they may represent a
	     * user-defined embedded action which makes calls to methods like
	     * {@link Lexer#getText}.
	     *
	     * @returns This method returns `true`.
	     */},{key:'isPositionDependent',get:function get(){return true;}}]);return LexerCustomAction;}();__decorate([Decorators_1.Override],LexerCustomAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerCustomAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerCustomAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerCustomAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerCustomAction.prototype,"equals",null);exports.LexerCustomAction=LexerCustomAction;},{"../Decorators":224,"../misc/MurmurHash":333}],280:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * This implementation of {@link LexerAction} is used for tracking input offsets
	 * for position-dependent actions within a {@link LexerActionExecutor}.
	 *
	 * This action is not serialized as part of the ATN, and is only required for
	 * position-dependent lexer actions which appear at a location other than the
	 * end of a rule. For more information about DFA optimizations employed for
	 * lexer actions, see {@link LexerActionExecutor#append} and
	 * {@link LexerActionExecutor#fixOffsetBeforeMatch}.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerIndexedCustomAction=function(){/**
	     * Constructs a new indexed custom action by associating a character offset
	     * with a {@link LexerAction}.
	     *
	     * Note: This class is only required for lexer actions for which
	     * {@link LexerAction#isPositionDependent} returns `true`.
	     *
	     * @param offset The offset into the input {@link CharStream}, relative to
	     * the token start index, at which the specified lexer action should be
	     * executed.
	     * @param action The lexer action to execute at a particular offset in the
	     * input {@link CharStream}.
	     */function LexerIndexedCustomAction(offset,action){classCallCheck(this,LexerIndexedCustomAction);this._offset=offset;this._action=action;}/**
	     * Gets the location in the input {@link CharStream} at which the lexer
	     * action should be executed. The value is interpreted as an offset relative
	     * to the token start index.
	     *
	     * @returns The location in the input {@link CharStream} at which the lexer
	     * action should be executed.
	     */createClass(LexerIndexedCustomAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This method calls {@link #execute} on the result of {@link #getAction}
	     * using the provided `lexer`.
	     */value:function execute(lexer){// assume the input stream position was properly set by the calling code
	this._action.execute(lexer);}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this._offset);hash=MurmurHash_1.MurmurHash.update(hash,this._action);return MurmurHash_1.MurmurHash.finish(hash,2);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerIndexedCustomAction)){return false;}return this._offset===obj._offset&&this._action.equals(obj._action);}},{key:'offset',get:function get(){return this._offset;}/**
	     * Gets the lexer action to execute.
	     *
	     * @returns A {@link LexerAction} object which executes the lexer action.
	     */},{key:'action',get:function get(){return this._action;}/**
	     * {@inheritDoc}
	     *
	     * @returns This method returns the result of calling {@link #getActionType}
	     * on the {@link LexerAction} returned by {@link #getAction}.
	     */},{key:'actionType',get:function get(){return this._action.actionType;}/**
	     * {@inheritDoc}
	     * @returns This method returns `true`.
	     */},{key:'isPositionDependent',get:function get(){return true;}}]);return LexerIndexedCustomAction;}();__decorate([Decorators_1.NotNull],LexerIndexedCustomAction.prototype,"action",null);__decorate([Decorators_1.Override],LexerIndexedCustomAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerIndexedCustomAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override],LexerIndexedCustomAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerIndexedCustomAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerIndexedCustomAction.prototype,"equals",null);LexerIndexedCustomAction=__decorate([__param(1,Decorators_1.NotNull)],LexerIndexedCustomAction);exports.LexerIndexedCustomAction=LexerIndexedCustomAction;},{"../Decorators":224,"../misc/MurmurHash":333}],281:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `mode` lexer action by calling {@link Lexer#mode} with
	 * the assigned mode.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerModeAction=function(){/**
	     * Constructs a new `mode` action with the specified mode value.
	     * @param mode The mode value to pass to {@link Lexer#mode}.
	     */function LexerModeAction(mode){classCallCheck(this,LexerModeAction);this._mode=mode;}/**
	     * Get the lexer mode this action should transition the lexer to.
	     *
	     * @returns The lexer mode for this `mode` command.
	     */createClass(LexerModeAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#mode} with the
	     * value provided by {@link #getMode}.
	     */value:function execute(lexer){lexer.mode(this._mode);}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);hash=MurmurHash_1.MurmurHash.update(hash,this._mode);return MurmurHash_1.MurmurHash.finish(hash,2);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerModeAction)){return false;}return this._mode===obj._mode;}},{key:'toString',value:function toString(){return 'mode('+this._mode+')';}},{key:'mode',get:function get(){return this._mode;}/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#MODE}.
	     */},{key:'actionType',get:function get(){return 2/* MODE */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerModeAction;}();__decorate([Decorators_1.Override],LexerModeAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerModeAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerModeAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerModeAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerModeAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerModeAction.prototype,"toString",null);exports.LexerModeAction=LexerModeAction;},{"../Decorators":224,"../misc/MurmurHash":333}],282:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `more` lexer action by calling {@link Lexer#more}.
	 *
	 * The `more` command does not have any parameters, so this action is
	 * implemented as a singleton instance exposed by {@link #INSTANCE}.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerMoreAction=function(){/**
	     * Constructs the singleton instance of the lexer `more` command.
	     */function LexerMoreAction(){classCallCheck(this,LexerMoreAction);}// intentionally empty
	/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#MORE}.
	     */createClass(LexerMoreAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#more}.
	     */value:function execute(lexer){lexer.more();}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);return MurmurHash_1.MurmurHash.finish(hash,1);}},{key:'equals',value:function equals(obj){return obj===this;}},{key:'toString',value:function toString(){return "more";}},{key:'actionType',get:function get(){return 3/* MORE */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerMoreAction;}();__decorate([Decorators_1.Override],LexerMoreAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerMoreAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerMoreAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerMoreAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerMoreAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerMoreAction.prototype,"toString",null);exports.LexerMoreAction=LexerMoreAction;(function(LexerMoreAction){/**
	     * Provides a singleton instance of this parameterless lexer action.
	     */LexerMoreAction.INSTANCE=new LexerMoreAction();})(LexerMoreAction=exports.LexerMoreAction||(exports.LexerMoreAction={}));},{"../Decorators":224,"../misc/MurmurHash":333}],283:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `popMode` lexer action by calling {@link Lexer#popMode}.
	 *
	 * The `popMode` command does not have any parameters, so this action is
	 * implemented as a singleton instance exposed by {@link #INSTANCE}.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerPopModeAction=function(){/**
	     * Constructs the singleton instance of the lexer `popMode` command.
	     */function LexerPopModeAction(){classCallCheck(this,LexerPopModeAction);}// intentionally empty
	/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#POP_MODE}.
	     */createClass(LexerPopModeAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#popMode}.
	     */value:function execute(lexer){lexer.popMode();}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);return MurmurHash_1.MurmurHash.finish(hash,1);}},{key:'equals',value:function equals(obj){return obj===this;}},{key:'toString',value:function toString(){return "popMode";}},{key:'actionType',get:function get(){return 4/* POP_MODE */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerPopModeAction;}();__decorate([Decorators_1.Override],LexerPopModeAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerPopModeAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerPopModeAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerPopModeAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerPopModeAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerPopModeAction.prototype,"toString",null);exports.LexerPopModeAction=LexerPopModeAction;(function(LexerPopModeAction){/**
	     * Provides a singleton instance of this parameterless lexer action.
	     */LexerPopModeAction.INSTANCE=new LexerPopModeAction();})(LexerPopModeAction=exports.LexerPopModeAction||(exports.LexerPopModeAction={}));},{"../Decorators":224,"../misc/MurmurHash":333}],284:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `pushMode` lexer action by calling
	 * {@link Lexer#pushMode} with the assigned mode.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerPushModeAction=function(){/**
	     * Constructs a new `pushMode` action with the specified mode value.
	     * @param mode The mode value to pass to {@link Lexer#pushMode}.
	     */function LexerPushModeAction(mode){classCallCheck(this,LexerPushModeAction);this._mode=mode;}/**
	     * Get the lexer mode this action should transition the lexer to.
	     *
	     * @returns The lexer mode for this `pushMode` command.
	     */createClass(LexerPushModeAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#pushMode} with the
	     * value provided by {@link #getMode}.
	     */value:function execute(lexer){lexer.pushMode(this._mode);}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);hash=MurmurHash_1.MurmurHash.update(hash,this._mode);return MurmurHash_1.MurmurHash.finish(hash,2);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerPushModeAction)){return false;}return this._mode===obj._mode;}},{key:'toString',value:function toString(){return 'pushMode('+this._mode+')';}},{key:'mode',get:function get(){return this._mode;}/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#PUSH_MODE}.
	     */},{key:'actionType',get:function get(){return 5/* PUSH_MODE */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerPushModeAction;}();__decorate([Decorators_1.Override],LexerPushModeAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerPushModeAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerPushModeAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerPushModeAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerPushModeAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerPushModeAction.prototype,"toString",null);exports.LexerPushModeAction=LexerPushModeAction;},{"../Decorators":224,"../misc/MurmurHash":333}],285:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `skip` lexer action by calling {@link Lexer#skip}.
	 *
	 * The `skip` command does not have any parameters, so this action is
	 * implemented as a singleton instance exposed by {@link #INSTANCE}.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerSkipAction=function(){/**
	     * Constructs the singleton instance of the lexer `skip` command.
	     */function LexerSkipAction(){classCallCheck(this,LexerSkipAction);}// intentionally empty
	/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#SKIP}.
	     */createClass(LexerSkipAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by calling {@link Lexer#skip}.
	     */value:function execute(lexer){lexer.skip();}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);return MurmurHash_1.MurmurHash.finish(hash,1);}},{key:'equals',value:function equals(obj){return obj===this;}},{key:'toString',value:function toString(){return "skip";}},{key:'actionType',get:function get(){return 6/* SKIP */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerSkipAction;}();__decorate([Decorators_1.Override],LexerSkipAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerSkipAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerSkipAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerSkipAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerSkipAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerSkipAction.prototype,"toString",null);exports.LexerSkipAction=LexerSkipAction;(function(LexerSkipAction){/**
	     * Provides a singleton instance of this parameterless lexer action.
	     */LexerSkipAction.INSTANCE=new LexerSkipAction();})(LexerSkipAction=exports.LexerSkipAction||(exports.LexerSkipAction={}));},{"../Decorators":224,"../misc/MurmurHash":333}],286:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");/**
	 * Implements the `type` lexer action by setting `Lexer.type`
	 * with the assigned type.
	 *
	 * @author Sam Harwell
	 * @since 4.2
	 */var LexerTypeAction=function(){/**
	     * Constructs a new `type` action with the specified token type value.
	     * @param type The type to assign to the token using `Lexer.type`.
	     */function LexerTypeAction(type){classCallCheck(this,LexerTypeAction);this._type=type;}/**
	     * Gets the type to assign to a token created by the lexer.
	     * @returns The type to assign to a token created by the lexer.
	     */createClass(LexerTypeAction,[{key:'execute',/**
	     * {@inheritDoc}
	     *
	     * This action is implemented by setting `Lexer.type` with the
	     * value provided by `type`.
	     */value:function execute(lexer){lexer.type=this._type;}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();hash=MurmurHash_1.MurmurHash.update(hash,this.actionType);hash=MurmurHash_1.MurmurHash.update(hash,this._type);return MurmurHash_1.MurmurHash.finish(hash,2);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof LexerTypeAction)){return false;}return this._type===obj._type;}},{key:'toString',value:function toString(){return 'type('+this._type+')';}},{key:'type',get:function get(){return this._type;}/**
	     * {@inheritDoc}
	     * @returns This method returns {@link LexerActionType#TYPE}.
	     */},{key:'actionType',get:function get(){return 7/* TYPE */;}/**
	     * {@inheritDoc}
	     * @returns This method returns `false`.
	     */},{key:'isPositionDependent',get:function get(){return false;}}]);return LexerTypeAction;}();__decorate([Decorators_1.Override],LexerTypeAction.prototype,"actionType",null);__decorate([Decorators_1.Override],LexerTypeAction.prototype,"isPositionDependent",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],LexerTypeAction.prototype,"execute",null);__decorate([Decorators_1.Override],LexerTypeAction.prototype,"hashCode",null);__decorate([Decorators_1.Override],LexerTypeAction.prototype,"equals",null);__decorate([Decorators_1.Override],LexerTypeAction.prototype,"toString",null);exports.LexerTypeAction=LexerTypeAction;},{"../Decorators":224,"../misc/MurmurHash":333}],287:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:30.6852565-07:00
	var DecisionEventInfo_1=require("./DecisionEventInfo");var Decorators_1=require("../Decorators");/**
	 * This class represents profiling event information for tracking the lookahead
	 * depth required in order to make a prediction.
	 *
	 * @since 4.3
	 */var LookaheadEventInfo=function(_DecisionEventInfo_1$4){inherits(LookaheadEventInfo,_DecisionEventInfo_1$4);/**
	     * Constructs a new instance of the {@link LookaheadEventInfo} class with
	     * the specified detailed lookahead information.
	     *
	     * @param decision The decision number
	     * @param state The final simulator state containing the necessary
	     * information to determine the result of a prediction, or `undefined` if
	     * the final state is not available
	     * @param input The input token stream
	     * @param startIndex The start index for the current prediction
	     * @param stopIndex The index at which the prediction was finally made
	     * @param fullCtx `true` if the current lookahead is part of an LL
	     * prediction; otherwise, `false` if the current lookahead is part of
	     * an SLL prediction
	     */function LookaheadEventInfo(decision,state,predictedAlt,input,startIndex,stopIndex,fullCtx){classCallCheck(this,LookaheadEventInfo);var _this266=possibleConstructorReturn(this,(LookaheadEventInfo.__proto__||Object.getPrototypeOf(LookaheadEventInfo)).call(this,decision,state,input,startIndex,stopIndex,fullCtx));_this266.predictedAlt=predictedAlt;return _this266;}return LookaheadEventInfo;}(DecisionEventInfo_1.DecisionEventInfo);LookaheadEventInfo=__decorate([__param(3,Decorators_1.NotNull)],LookaheadEventInfo);exports.LookaheadEventInfo=LookaheadEventInfo;},{"../Decorators":224,"./DecisionEventInfo":269}],288:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:30.7737978-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");/** Mark the end of a * or + loop. */var LoopEndState=function(_ATNState_1$ATNState4){inherits(LoopEndState,_ATNState_1$ATNState4);function LoopEndState(){classCallCheck(this,LoopEndState);return possibleConstructorReturn(this,(LoopEndState.__proto__||Object.getPrototypeOf(LoopEndState)).apply(this,arguments));}createClass(LoopEndState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.LOOP_END;}}]);return LoopEndState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],LoopEndState.prototype,"stateType",null);exports.LoopEndState=LoopEndState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],289:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var SetTransition_1=require("./SetTransition");var NotSetTransition=function(_SetTransition_1$SetT){inherits(NotSetTransition,_SetTransition_1$SetT);function NotSetTransition(target,set){classCallCheck(this,NotSetTransition);return possibleConstructorReturn(this,(NotSetTransition.__proto__||Object.getPrototypeOf(NotSetTransition)).call(this,target,set));}createClass(NotSetTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=minVocabSymbol&&symbol<=maxVocabSymbol&&!get(NotSetTransition.prototype.__proto__||Object.getPrototypeOf(NotSetTransition.prototype),'matches',this).call(this,symbol,minVocabSymbol,maxVocabSymbol);}},{key:'toString',value:function toString(){return "~"+get(NotSetTransition.prototype.__proto__||Object.getPrototypeOf(NotSetTransition.prototype),'toString',this).call(this);}},{key:'serializationType',get:function get(){return 8/* NOT_SET */;}}]);return NotSetTransition;}(SetTransition_1.SetTransition);__decorate([Decorators_1.Override],NotSetTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],NotSetTransition.prototype,"matches",null);__decorate([Decorators_1.Override],NotSetTransition.prototype,"toString",null);NotSetTransition=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.Nullable)],NotSetTransition);exports.NotSetTransition=NotSetTransition;},{"../Decorators":224,"./SetTransition":307}],290:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var ATNConfigSet_1=require("./ATNConfigSet");var Decorators_1=require("../Decorators");/**
	 *
	 * @author Sam Harwell
	 */var OrderedATNConfigSet=function(_ATNConfigSet_1$ATNCo){inherits(OrderedATNConfigSet,_ATNConfigSet_1$ATNCo);function OrderedATNConfigSet(set,readonly){classCallCheck(this,OrderedATNConfigSet);if(set!=null&&readonly!=null){var _this269=possibleConstructorReturn(this,(OrderedATNConfigSet.__proto__||Object.getPrototypeOf(OrderedATNConfigSet)).call(this,set,readonly));}else {var _this269=possibleConstructorReturn(this,(OrderedATNConfigSet.__proto__||Object.getPrototypeOf(OrderedATNConfigSet)).call(this));}return possibleConstructorReturn(_this269);}createClass(OrderedATNConfigSet,[{key:'clone',value:function clone(readonly){var copy=new OrderedATNConfigSet(this,readonly);if(!readonly&&this.isReadOnly){copy.addAll(this);}return copy;}},{key:'getKey',value:function getKey(e){// This is a specially crafted key to ensure configurations are only merged if they are equal
	return {state:0,alt:e.hashCode()};}},{key:'canMerge',value:function canMerge(left,leftKey,right){return left.equals(right);}}]);return OrderedATNConfigSet;}(ATNConfigSet_1.ATNConfigSet);__decorate([Decorators_1.Override],OrderedATNConfigSet.prototype,"clone",null);__decorate([Decorators_1.Override],OrderedATNConfigSet.prototype,"getKey",null);__decorate([Decorators_1.Override],OrderedATNConfigSet.prototype,"canMerge",null);exports.OrderedATNConfigSet=OrderedATNConfigSet;},{"../Decorators":224,"./ATNConfigSet":253}],291:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");/**
	 * This class provides access to specific and aggregate statistics gathered
	 * during profiling of a parser.
	 *
	 * @since 4.3
	 */var ParseInfo=function(){function ParseInfo(atnSimulator){classCallCheck(this,ParseInfo);this.atnSimulator=atnSimulator;}/**
	     * Gets an array of {@link DecisionInfo} instances containing the profiling
	     * information gathered for each decision in the ATN.
	     *
	     * @returns An array of {@link DecisionInfo} instances, indexed by decision
	     * number.
	     */createClass(ParseInfo,[{key:'getDecisionInfo',value:function getDecisionInfo(){return this.atnSimulator.getDecisionInfo();}/**
	     * Gets the decision numbers for decisions that required one or more
	     * full-context predictions during parsing. These are decisions for which
	     * {@link DecisionInfo#LL_Fallback} is non-zero.
	     *
	     * @returns A list of decision numbers which required one or more
	     * full-context predictions during parsing.
	     */},{key:'getLLDecisions',value:function getLLDecisions(){var decisions=this.atnSimulator.getDecisionInfo();var LL=[];for(var i=0;i<decisions.length;i++){var fallBack=decisions[i].LL_Fallback;if(fallBack>0){LL.push(i);}}return LL;}/**
	     * Gets the total time spent during prediction across all decisions made
	     * during parsing. This value is the sum of
	     * {@link DecisionInfo#timeInPrediction} for all decisions.
	     */},{key:'getTotalTimeInPrediction',value:function getTotalTimeInPrediction(){var decisions=this.atnSimulator.getDecisionInfo();var t=0;var _iteratorNormalCompletion122=true;var _didIteratorError122=false;var _iteratorError122=undefined;try{for(var _iterator122=decisions[Symbol.iterator](),_step122;!(_iteratorNormalCompletion122=(_step122=_iterator122.next()).done);_iteratorNormalCompletion122=true){var decision=_step122.value;t+=decision.timeInPrediction;}}catch(err){_didIteratorError122=true;_iteratorError122=err;}finally{try{if(!_iteratorNormalCompletion122&&_iterator122.return){_iterator122.return();}}finally{if(_didIteratorError122){throw _iteratorError122;}}}return t;}/**
	     * Gets the total number of SLL lookahead operations across all decisions
	     * made during parsing. This value is the sum of
	     * {@link DecisionInfo#SLL_TotalLook} for all decisions.
	     */},{key:'getTotalSLLLookaheadOps',value:function getTotalSLLLookaheadOps(){var decisions=this.atnSimulator.getDecisionInfo();var k=0;var _iteratorNormalCompletion123=true;var _didIteratorError123=false;var _iteratorError123=undefined;try{for(var _iterator123=decisions[Symbol.iterator](),_step123;!(_iteratorNormalCompletion123=(_step123=_iterator123.next()).done);_iteratorNormalCompletion123=true){var decision=_step123.value;k+=decision.SLL_TotalLook;}}catch(err){_didIteratorError123=true;_iteratorError123=err;}finally{try{if(!_iteratorNormalCompletion123&&_iterator123.return){_iterator123.return();}}finally{if(_didIteratorError123){throw _iteratorError123;}}}return k;}/**
	     * Gets the total number of LL lookahead operations across all decisions
	     * made during parsing. This value is the sum of
	     * {@link DecisionInfo#LL_TotalLook} for all decisions.
	     */},{key:'getTotalLLLookaheadOps',value:function getTotalLLLookaheadOps(){var decisions=this.atnSimulator.getDecisionInfo();var k=0;var _iteratorNormalCompletion124=true;var _didIteratorError124=false;var _iteratorError124=undefined;try{for(var _iterator124=decisions[Symbol.iterator](),_step124;!(_iteratorNormalCompletion124=(_step124=_iterator124.next()).done);_iteratorNormalCompletion124=true){var decision=_step124.value;k+=decision.LL_TotalLook;}}catch(err){_didIteratorError124=true;_iteratorError124=err;}finally{try{if(!_iteratorNormalCompletion124&&_iterator124.return){_iterator124.return();}}finally{if(_didIteratorError124){throw _iteratorError124;}}}return k;}/**
	     * Gets the total number of ATN lookahead operations for SLL prediction
	     * across all decisions made during parsing.
	     */},{key:'getTotalSLLATNLookaheadOps',value:function getTotalSLLATNLookaheadOps(){var decisions=this.atnSimulator.getDecisionInfo();var k=0;var _iteratorNormalCompletion125=true;var _didIteratorError125=false;var _iteratorError125=undefined;try{for(var _iterator125=decisions[Symbol.iterator](),_step125;!(_iteratorNormalCompletion125=(_step125=_iterator125.next()).done);_iteratorNormalCompletion125=true){var decision=_step125.value;k+=decision.SLL_ATNTransitions;}}catch(err){_didIteratorError125=true;_iteratorError125=err;}finally{try{if(!_iteratorNormalCompletion125&&_iterator125.return){_iterator125.return();}}finally{if(_didIteratorError125){throw _iteratorError125;}}}return k;}/**
	     * Gets the total number of ATN lookahead operations for LL prediction
	     * across all decisions made during parsing.
	     */},{key:'getTotalLLATNLookaheadOps',value:function getTotalLLATNLookaheadOps(){var decisions=this.atnSimulator.getDecisionInfo();var k=0;var _iteratorNormalCompletion126=true;var _didIteratorError126=false;var _iteratorError126=undefined;try{for(var _iterator126=decisions[Symbol.iterator](),_step126;!(_iteratorNormalCompletion126=(_step126=_iterator126.next()).done);_iteratorNormalCompletion126=true){var decision=_step126.value;k+=decision.LL_ATNTransitions;}}catch(err){_didIteratorError126=true;_iteratorError126=err;}finally{try{if(!_iteratorNormalCompletion126&&_iterator126.return){_iterator126.return();}}finally{if(_didIteratorError126){throw _iteratorError126;}}}return k;}/**
	     * Gets the total number of ATN lookahead operations for SLL and LL
	     * prediction across all decisions made during parsing.
	     *
	     * This value is the sum of {@link #getTotalSLLATNLookaheadOps} and
	     * {@link #getTotalLLATNLookaheadOps}.
	     */},{key:'getTotalATNLookaheadOps',value:function getTotalATNLookaheadOps(){var decisions=this.atnSimulator.getDecisionInfo();var k=0;var _iteratorNormalCompletion127=true;var _didIteratorError127=false;var _iteratorError127=undefined;try{for(var _iterator127=decisions[Symbol.iterator](),_step127;!(_iteratorNormalCompletion127=(_step127=_iterator127.next()).done);_iteratorNormalCompletion127=true){var decision=_step127.value;k+=decision.SLL_ATNTransitions;k+=decision.LL_ATNTransitions;}}catch(err){_didIteratorError127=true;_iteratorError127=err;}finally{try{if(!_iteratorNormalCompletion127&&_iterator127.return){_iterator127.return();}}finally{if(_didIteratorError127){throw _iteratorError127;}}}return k;}},{key:'getDFASize',value:function getDFASize(decision){if(decision){var decisionToDFA=this.atnSimulator.atn.decisionToDFA[decision];return decisionToDFA.states.size;}else {var n=0;var _decisionToDFA=this.atnSimulator.atn.decisionToDFA;for(var i=0;i<_decisionToDFA.length;i++){n+=this.getDFASize(i);}return n;}}}]);return ParseInfo;}();__decorate([Decorators_1.NotNull],ParseInfo.prototype,"getDecisionInfo",null);__decorate([Decorators_1.NotNull],ParseInfo.prototype,"getLLDecisions",null);ParseInfo=__decorate([__param(0,Decorators_1.NotNull)],ParseInfo);exports.ParseInfo=ParseInfo;},{"../Decorators":224}],292:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:31.1989835-07:00
	var AcceptStateInfo_1=require("../dfa/AcceptStateInfo");var ActionTransition_1=require("./ActionTransition");var Array2DHashSet_1=require("../misc/Array2DHashSet");var Arrays_1=require("../misc/Arrays");var ATN_1=require("./ATN");var ATNConfig_1=require("./ATNConfig");var ATNConfigSet_1=require("./ATNConfigSet");var ATNSimulator_1=require("./ATNSimulator");var ATNStateType_1=require("./ATNStateType");var AtomTransition_1=require("./AtomTransition");var BitSet_1=require("../misc/BitSet");var ConflictInfo_1=require("./ConflictInfo");var DecisionState_1=require("./DecisionState");var DFAState_1=require("../dfa/DFAState");var IntegerList_1=require("../misc/IntegerList");var Interval_1=require("../misc/Interval");var IntStream_1=require("../IntStream");var Decorators_1=require("../Decorators");var NotSetTransition_1=require("./NotSetTransition");var NoViableAltException_1=require("../NoViableAltException");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var ParserRuleContext_1=require("../ParserRuleContext");var PredictionContext_1=require("./PredictionContext");var PredictionContextCache_1=require("./PredictionContextCache");var PredictionMode_1=require("./PredictionMode");var RuleStopState_1=require("./RuleStopState");var RuleTransition_1=require("./RuleTransition");var SemanticContext_1=require("./SemanticContext");var SetTransition_1=require("./SetTransition");var SimulatorState_1=require("./SimulatorState");var Token_1=require("../Token");var VocabularyImpl_1=require("../VocabularyImpl");var assert=require("assert");var MAX_SHORT_VALUE=0xFFFF;var MIN_INTEGER_VALUE=-(1<<31>>>0);/**
	 * The embodiment of the adaptive LL(*), ALL(*), parsing strategy.
	 *
	 * The basic complexity of the adaptive strategy makes it harder to understand.
	 * We begin with ATN simulation to build paths in a DFA. Subsequent prediction
	 * requests go through the DFA first. If they reach a state without an edge for
	 * the current symbol, the algorithm fails over to the ATN simulation to
	 * complete the DFA path for the current input (until it finds a conflict state
	 * or uniquely predicting state).
	 *
	 * All of that is done without using the outer context because we want to create
	 * a DFA that is not dependent upon the rule invocation stack when we do a
	 * prediction. One DFA works in all contexts. We avoid using context not
	 * necessarily because it's slower, although it can be, but because of the DFA
	 * caching problem. The closure routine only considers the rule invocation stack
	 * created during prediction beginning in the decision rule. For example, if
	 * prediction occurs without invoking another rule's ATN, there are no context
	 * stacks in the configurations. When lack of context leads to a conflict, we
	 * don't know if it's an ambiguity or a weakness in the strong LL(*) parsing
	 * strategy (versus full LL(*)).
	 *
	 * When SLL yields a configuration set with conflict, we rewind the input and
	 * retry the ATN simulation, this time using full outer context without adding
	 * to the DFA. Configuration context stacks will be the full invocation stacks
	 * from the start rule. If we get a conflict using full context, then we can
	 * definitively say we have a true ambiguity for that input sequence. If we
	 * don't get a conflict, it implies that the decision is sensitive to the outer
	 * context. (It is not context-sensitive in the sense of context-sensitive
	 * grammars.)
	 *
	 * The next time we reach this DFA state with an SLL conflict, through DFA
	 * simulation, we will again retry the ATN simulation using full context mode.
	 * This is slow because we can't save the results and have to "interpret" the
	 * ATN each time we get that input.
	 *
	 * **CACHING FULL CONTEXT PREDICTIONS**
	 *
	 * We could cache results from full context to predicted alternative easily and
	 * that saves a lot of time but doesn't work in presence of predicates. The set
	 * of visible predicates from the ATN start state changes depending on the
	 * context, because closure can fall off the end of a rule. I tried to cache
	 * tuples (stack context, semantic context, predicted alt) but it was slower
	 * than interpreting and much more complicated. Also required a huge amount of
	 * memory. The goal is not to create the world's fastest parser anyway. I'd like
	 * to keep this algorithm simple. By launching multiple threads, we can improve
	 * the speed of parsing across a large number of files.
	 *
	 * There is no strict ordering between the amount of input used by SLL vs LL,
	 * which makes it really hard to build a cache for full context. Let's say that
	 * we have input A B C that leads to an SLL conflict with full context X. That
	 * implies that using X we might only use A B but we could also use A B C D to
	 * resolve conflict. Input A B C D could predict alternative 1 in one position
	 * in the input and A B C E could predict alternative 2 in another position in
	 * input. The conflicting SLL configurations could still be non-unique in the
	 * full context prediction, which would lead us to requiring more input than the
	 * original A B C.	To make a	prediction cache work, we have to track	the exact
	 * input	used during the previous prediction. That amounts to a cache that maps
	 * X to a specific DFA for that context.
	 *
	 * Something should be done for left-recursive expression predictions. They are
	 * likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry
	 * with full LL thing Sam does.
	 *
	 * **AVOIDING FULL CONTEXT PREDICTION**
	 *
	 * We avoid doing full context retry when the outer context is empty, we did not
	 * dip into the outer context by falling off the end of the decision state rule,
	 * or when we force SLL mode.
	 *
	 * As an example of the not dip into outer context case, consider as super
	 * constructor calls versus function calls. One grammar might look like
	 * this:
	 *
	 * ```antlr
	 * ctorBody
	 *   : '{' superCall? stat* '}'
	 *   ;
	 * ```
	 *
	 * Or, you might see something like
	 *
	 * ```antlr
	 * stat
	 *   : superCall ';'
	 *   | expression ';'
	 *   | ...
	 *   ;
	 * ```
	 *
	 * In both cases I believe that no closure operations will dip into the outer
	 * context. In the first case ctorBody in the worst case will stop at the '}'.
	 * In the 2nd case it should stop at the ';'. Both cases should stay within the
	 * entry rule and not dip into the outer context.
	 *
	 * **PREDICATES**
	 *
	 * Predicates are always evaluated if present in either SLL or LL both. SLL and
	 * LL simulation deals with predicates differently. SLL collects predicates as
	 * it performs closure operations like ANTLR v3 did. It delays predicate
	 * evaluation until it reaches and accept state. This allows us to cache the SLL
	 * ATN simulation whereas, if we had evaluated predicates on-the-fly during
	 * closure, the DFA state configuration sets would be different and we couldn't
	 * build up a suitable DFA.
	 *
	 * When building a DFA accept state during ATN simulation, we evaluate any
	 * predicates and return the sole semantically valid alternative. If there is
	 * more than 1 alternative, we report an ambiguity. If there are 0 alternatives,
	 * we throw an exception. Alternatives without predicates act like they have
	 * true predicates. The simple way to think about it is to strip away all
	 * alternatives with false predicates and choose the minimum alternative that
	 * remains.
	 *
	 * When we start in the DFA and reach an accept state that's predicated, we test
	 * those and return the minimum semantically viable alternative. If no
	 * alternatives are viable, we throw an exception.
	 *
	 * During full LL ATN simulation, closure always evaluates predicates and
	 * on-the-fly. This is crucial to reducing the configuration set size during
	 * closure. It hits a landmine when parsing with the Java grammar, for example,
	 * without this on-the-fly evaluation.
	 *
	 * **SHARING DFA**
	 *
	 * All instances of the same parser share the same decision DFAs through a
	 * static field. Each instance gets its own ATN simulator but they share the
	 * same {@link ATN#decisionToDFA} field. They also share a
	 * {@link PredictionContextCache} object that makes sure that all
	 * {@link PredictionContext} objects are shared among the DFA states. This makes
	 * a big size difference.
	 *
	 * **THREAD SAFETY**
	 *
	 * The {@link ParserATNSimulator} locks on the {@link ATN#decisionToDFA} field when
	 * it adds a new DFA object to that array. {@link #addDFAEdge}
	 * locks on the DFA for the current decision when setting the
	 * {@link DFAState#edges} field. {@link #addDFAState} locks on
	 * the DFA for the current decision when looking up a DFA state to see if it
	 * already exists. We must make sure that all requests to add DFA states that
	 * are equivalent result in the same shared DFA object. This is because lots of
	 * threads will be trying to update the DFA at once. The
	 * {@link #addDFAState} method also locks inside the DFA lock
	 * but this time on the shared context cache when it rebuilds the
	 * configurations' {@link PredictionContext} objects using cached
	 * subgraphs/nodes. No other locking occurs, even during DFA simulation. This is
	 * safe as long as we can guarantee that all threads referencing
	 * `s.edge[t]` get the same physical target {@link DFAState}, or
	 * `undefined`. Once into the DFA, the DFA simulation does not reference the
	 * {@link DFA#states} map. It follows the {@link DFAState#edges} field to new
	 * targets. The DFA simulator will either find {@link DFAState#edges} to be
	 * `undefined`, to be non-`undefined` and `dfa.edges[t]` undefined, or
	 * `dfa.edges[t]` to be non-undefined. The
	 * {@link #addDFAEdge} method could be racing to set the field
	 * but in either case the DFA simulator works; if `undefined`, and requests ATN
	 * simulation. It could also race trying to get `dfa.edges[t]`, but either
	 * way it will work because it's not doing a test and set operation.
	 *
	 * **Starting with SLL then failing to combined SLL/LL (Two-Stage
	 * Parsing)**
	 *
	 * Sam pointed out that if SLL does not give a syntax error, then there is no
	 * point in doing full LL, which is slower. We only have to try LL if we get a
	 * syntax error. For maximum speed, Sam starts the parser set to pure SLL
	 * mode with the {@link BailErrorStrategy}:
	 *
	 * ```
	 * parser.interpreter.{@link #setPredictionMode setPredictionMode}`(`{@link PredictionMode#SLL}`)`;
	 * parser.{@link Parser#setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());
	 * ```
	 *
	 * If it does not get a syntax error, then we're done. If it does get a syntax
	 * error, we need to retry with the combined SLL/LL strategy.
	 *
	 * The reason this works is as follows. If there are no SLL conflicts, then the
	 * grammar is SLL (at least for that input set). If there is an SLL conflict,
	 * the full LL analysis must yield a set of viable alternatives which is a
	 * subset of the alternatives reported by SLL. If the LL set is a singleton,
	 * then the grammar is LL but not SLL. If the LL set is the same size as the SLL
	 * set, the decision is SLL. If the LL set has size &gt; 1, then that decision
	 * is truly ambiguous on the current input. If the LL set is smaller, then the
	 * SLL conflict resolution might choose an alternative that the full LL would
	 * rule out as a possibility based upon better context information. If that's
	 * the case, then the SLL parse will definitely get an error because the full LL
	 * analysis says it's not viable. If SLL conflict resolution chooses an
	 * alternative within the LL set, them both SLL and LL would choose the same
	 * alternative because they both choose the minimum of multiple conflicting
	 * alternatives.
	 *
	 * Let's say we have a set of SLL conflicting alternatives `{1, 2, 3}` and
	 * a smaller LL set called *s*. If *s* is `{2, 3}`, then SLL
	 * parsing will get an error because SLL will pursue alternative 1. If
	 * *s* is `{1, 2}` or `{1, 3}` then both SLL and LL will
	 * choose the same alternative because alternative one is the minimum of either
	 * set. If *s* is `{2}` or `{3}` then SLL will get a syntax
	 * error. If *s* is `{1}` then SLL will succeed.
	 *
	 * Of course, if the input is invalid, then we will get an error for sure in
	 * both SLL and LL parsing. Erroneous input will therefore require 2 passes over
	 * the input.
	 */var ParserATNSimulator=function(_ATNSimulator_1$ATNSi2){inherits(ParserATNSimulator,_ATNSimulator_1$ATNSi2);function ParserATNSimulator(atn,parser){classCallCheck(this,ParserATNSimulator);var _this270=possibleConstructorReturn(this,(ParserATNSimulator.__proto__||Object.getPrototypeOf(ParserATNSimulator)).call(this,atn));_this270.predictionMode=PredictionMode_1.PredictionMode.LL;_this270.force_global_context=false;_this270.always_try_local_context=true;/**
	         * Determines whether the DFA is used for full-context predictions. When
	         * `true`, the DFA stores transition information for both full-context
	         * and SLL parsing; otherwise, the DFA only stores SLL transition
	         * information.
	         *
	         * For some grammars, enabling the full-context DFA can result in a
	         * substantial performance improvement. However, this improvement typically
	         * comes at the expense of memory used for storing the cached DFA states,
	         * configuration sets, and prediction contexts.
	         *
	         * The default value is `false`.
	         */_this270.enable_global_context_dfa=false;_this270.optimize_unique_closure=true;_this270.optimize_ll1=true;_this270.optimize_tail_calls=true;_this270.tail_call_preserves_sll=true;_this270.treat_sllk1_conflict_as_ambiguity=false;/**
	         * When `true`, ambiguous alternatives are reported when they are
	         * encountered within {@link #execATN}. When `false`, these messages
	         * are suppressed. The default is `false`.
	         *
	         * When messages about ambiguous alternatives are not required, setting this
	         * to `false` enables additional internal optimizations which may lose
	         * this information.
	         */_this270.reportAmbiguities=false;/** By default we do full context-sensitive LL(*) parsing not
	         *  Strong LL(*) parsing. If we fail with Strong LL(*) we
	         *  try full LL(*). That means we rewind and use context information
	         *  when closure operations fall off the end of the rule that
	         *  holds the decision were evaluating.
	         */_this270.userWantsCtxSensitive=true;_this270._parser=parser;return _this270;}createClass(ParserATNSimulator,[{key:'getPredictionMode',value:function getPredictionMode(){return this.predictionMode;}},{key:'setPredictionMode',value:function setPredictionMode(predictionMode){this.predictionMode=predictionMode;}},{key:'reset',value:function reset(){// intentionally empty
	}},{key:'adaptivePredict',value:function adaptivePredict(input,decision,outerContext,useContext){if(useContext===undefined){useContext=false;}var dfa=this.atn.decisionToDFA[decision];assert(dfa!=null);if(this.optimize_ll1&&!dfa.isPrecedenceDfa&&!dfa.isEmpty){var ll_1=input.LA(1);if(ll_1>=0&&ll_1<=0xFFFF){var key=(decision<<16>>>0)+ll_1;var alt=this.atn.LL1Table.get(key);if(alt!=null){return alt;}}}this.dfa=dfa;if(this.force_global_context){useContext=true;}else if(!this.always_try_local_context){useContext=useContext||dfa.isContextSensitive;}this.userWantsCtxSensitive=useContext||this.predictionMode!==PredictionMode_1.PredictionMode.SLL&&outerContext!=null&&!this.atn.decisionToState[decision].sll;if(outerContext==null){outerContext=ParserRuleContext_1.ParserRuleContext.emptyContext();}var state=void 0;if(!dfa.isEmpty){state=this.getStartState(dfa,input,outerContext,useContext);}if(state==null){if(outerContext==null){outerContext=ParserRuleContext_1.ParserRuleContext.emptyContext();}if(ParserATNSimulator.debug){console.log("ATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+", outerContext="+outerContext.toString(this._parser));}state=this.computeStartState(dfa,outerContext,useContext);}var m=input.mark();var index=input.index;try{var _alt2=this.execDFA(dfa,input,index,state);if(ParserATNSimulator.debug){console.log("DFA after predictATN: "+dfa.toString(this._parser.vocabulary,this._parser.ruleNames));}return _alt2;}finally{this.dfa=undefined;input.seek(index);input.release(m);}}},{key:'getStartState',value:function getStartState(dfa,input,outerContext,useContext){if(!useContext){if(dfa.isPrecedenceDfa){// the start state for a precedence DFA depends on the current
	// parser precedence, and is provided by a DFA method.
	var state=dfa.getPrecedenceStartState(this._parser.precedence,false);if(state==null){return undefined;}return new SimulatorState_1.SimulatorState(outerContext,state,false,outerContext);}else {if(dfa.s0==null){return undefined;}return new SimulatorState_1.SimulatorState(outerContext,dfa.s0,false,outerContext);}}if(!this.enable_global_context_dfa){return undefined;}var remainingContext=outerContext;assert(outerContext!=null);var s0=void 0;if(dfa.isPrecedenceDfa){s0=dfa.getPrecedenceStartState(this._parser.precedence,true);}else {s0=dfa.s0full;}while(remainingContext!=null&&s0!=null&&s0.isContextSensitive){remainingContext=this.skipTailCalls(remainingContext);s0=s0.getContextTarget(this.getReturnState(remainingContext));if(remainingContext.isEmpty){assert(s0==null||!s0.isContextSensitive);}else {remainingContext=remainingContext.parent;}}if(s0==null){return undefined;}return new SimulatorState_1.SimulatorState(outerContext,s0,useContext,remainingContext);}},{key:'execDFA',value:function execDFA(dfa,input,startIndex,state){var outerContext=state.outerContext;if(ParserATNSimulator.dfa_debug){console.log("DFA decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+", outerContext="+outerContext.toString(this._parser));}if(ParserATNSimulator.dfa_debug){console.log(dfa.toString(this._parser.vocabulary,this._parser.ruleNames));}var s=state.s0;var t=input.LA(1);var remainingOuterContext=state.remainingOuterContext;while(true){if(ParserATNSimulator.dfa_debug){console.log("DFA state "+s.stateNumber+" LA(1)=="+this.getLookaheadName(input));}if(state.useContext){while(s.isContextSymbol(t)){var _next2=void 0;if(remainingOuterContext!=null){remainingOuterContext=this.skipTailCalls(remainingOuterContext);_next2=s.getContextTarget(this.getReturnState(remainingOuterContext));}if(_next2==null){// fail over to ATN
	var initialState=new SimulatorState_1.SimulatorState(state.outerContext,s,state.useContext,remainingOuterContext);return this.execATN(dfa,input,startIndex,initialState);}assert(remainingOuterContext!=null);remainingOuterContext=remainingOuterContext.parent;s=_next2;}}if(this.isAcceptState(s,state.useContext)){if(s.predicates!=null){if(ParserATNSimulator.dfa_debug){console.log("accept "+s);}}else {if(ParserATNSimulator.dfa_debug){console.log("accept; predict "+s.prediction+" in state "+s.stateNumber);}}// keep going unless we're at EOF or state only has one alt number
	// mentioned in configs; check if something else could match
	// TODO: don't we always stop? only lexer would keep going
	// TODO: v3 dfa don't do this.
	break;}// t is not updated if one of these states is reached
	assert(!this.isAcceptState(s,state.useContext));// if no edge, pop over to ATN interpreter, update DFA and return
	var target=this.getExistingTargetState(s,t);if(target==null){if(ParserATNSimulator.dfa_debug&&t>=0){console.log("no edge for "+this._parser.vocabulary.getDisplayName(t));}var alt=void 0;if(ParserATNSimulator.dfa_debug){var interval=Interval_1.Interval.of(startIndex,this._parser.inputStream.index);console.log("ATN exec upon "+this._parser.inputStream.getText(interval)+" at DFA state "+s.stateNumber);}var _initialState=new SimulatorState_1.SimulatorState(outerContext,s,state.useContext,remainingOuterContext);alt=this.execATN(dfa,input,startIndex,_initialState);if(ParserATNSimulator.dfa_debug){console.log("back from DFA update, alt="+alt+", dfa=\n"+dfa.toString(this._parser.vocabulary,this._parser.ruleNames));//dump(dfa);
	}// action already executed
	if(ParserATNSimulator.dfa_debug){console.log("DFA decision "+dfa.decision+" predicts "+alt);}return alt;// we've updated DFA, exec'd action, and have our deepest answer
	}else if(target===ATNSimulator_1.ATNSimulator.ERROR){var errorState=new SimulatorState_1.SimulatorState(outerContext,s,state.useContext,remainingOuterContext);return this.handleNoViableAlt(input,startIndex,errorState);}s=target;if(!this.isAcceptState(s,state.useContext)&&t!==IntStream_1.IntStream.EOF){input.consume();t=input.LA(1);}}//		if ( acceptState==null ) {
	//			if ( debug ) System.out.println("!!! no viable alt in dfa");
	//			return -1;
	//		}
	if(!state.useContext&&s.configs.conflictInfo!=null){if(dfa.atnStartState instanceof DecisionState_1.DecisionState){if(!this.userWantsCtxSensitive||!s.configs.dipsIntoOuterContext&&s.configs.isExactConflict||this.treat_sllk1_conflict_as_ambiguity&&input.index===startIndex);else {assert(!state.useContext);// Before attempting full context prediction, check to see if there are
	// disambiguating or validating predicates to evaluate which allow an
	// immediate decision
	var conflictingAlts=void 0;var _predicates=s.predicates;if(_predicates!=null){var conflictIndex=input.index;if(conflictIndex!==startIndex){input.seek(startIndex);}conflictingAlts=this.evalSemanticContext(_predicates,outerContext,true);if(conflictingAlts.cardinality()===1){return conflictingAlts.nextSetBit(0);}if(conflictIndex!==startIndex){// restore the index so reporting the fallback to full
	// context occurs with the index at the correct spot
	input.seek(conflictIndex);}}if(this.reportAmbiguities){var conflictState=new SimulatorState_1.SimulatorState(outerContext,s,state.useContext,remainingOuterContext);this.reportAttemptingFullContext(dfa,conflictingAlts,conflictState,startIndex,input.index);}input.seek(startIndex);return this.adaptivePredict(input,dfa.decision,outerContext,true);}}}// Before jumping to prediction, check to see if there are
	// disambiguating or validating predicates to evaluate
	var predicates=s.predicates;if(predicates!=null){var stopIndex=input.index;if(startIndex!==stopIndex){input.seek(startIndex);}var alts=this.evalSemanticContext(predicates,outerContext,this.reportAmbiguities&&this.predictionMode===PredictionMode_1.PredictionMode.LL_EXACT_AMBIG_DETECTION);switch(alts.cardinality()){case 0:throw this.noViableAlt(input,outerContext,s.configs,startIndex);case 1:return alts.nextSetBit(0);default:// report ambiguity after predicate evaluation to make sure the correct
	// set of ambig alts is reported.
	if(startIndex!==stopIndex){input.seek(stopIndex);}this.reportAmbiguity(dfa,s,startIndex,stopIndex,s.configs.isExactConflict,alts,s.configs);return alts.nextSetBit(0);}}if(ParserATNSimulator.dfa_debug){console.log("DFA decision "+dfa.decision+" predicts "+s.prediction);}return s.prediction;}/**
	     * Determines if a particular DFA state should be treated as an accept state
	     * for the current prediction mode. In addition to the `useContext`
	     * parameter, the {@link #getPredictionMode()} method provides the
	     * prediction mode controlling the prediction algorithm as a whole.
	     *
	     * The default implementation simply returns the value of
	     * `DFAState.isAcceptState` except for conflict states when
	     * `useContext` is `true` and {@link #getPredictionMode()} is
	     * {@link PredictionMode#LL_EXACT_AMBIG_DETECTION}. In that case, only
	     * conflict states where {@link ATNConfigSet#isExactConflict} is
	     * `true` are considered accept states.
	     *
	     * @param state The DFA state to check.
	     * @param useContext `true` if the prediction algorithm is currently
	     * considering the full parser context; otherwise, `false` if the
	     * algorithm is currently performing a local context prediction.
	     *
	     * @returns `true` if the specified `state` is an accept state;
	     * otherwise, `false`.
	     */},{key:'isAcceptState',value:function isAcceptState(state,useContext){if(!state.isAcceptState){return false;}if(state.configs.conflictingAlts==null){// unambiguous
	return true;}// More picky when we need exact conflicts
	if(useContext&&this.predictionMode===PredictionMode_1.PredictionMode.LL_EXACT_AMBIG_DETECTION){return state.configs.isExactConflict;}return true;}/** Performs ATN simulation to compute a predicted alternative based
	     *  upon the remaining input, but also updates the DFA cache to avoid
	     *  having to traverse the ATN again for the same input sequence.
	     *
	     * There are some key conditions we're looking for after computing a new
	     * set of ATN configs (proposed DFA state):
	     *
	     * * if the set is empty, there is no viable alternative for current symbol
	     * * does the state uniquely predict an alternative?
	     * * does the state have a conflict that would prevent us from
	     *   putting it on the work list?
	     * * if in non-greedy decision is there a config at a rule stop state?
	     *
	     * We also have some key operations to do:
	     *
	     * * add an edge from previous DFA state to potentially new DFA state, D,
	     *   upon current symbol but only if adding to work list, which means in all
	     *   cases except no viable alternative (and possibly non-greedy decisions?)
	     * * collecting predicates and adding semantic context to DFA accept states
	     * * adding rule context to context-sensitive DFA accept states
	     * * consuming an input symbol
	     * * reporting a conflict
	     * * reporting an ambiguity
	     * * reporting a context sensitivity
	     * * reporting insufficient predicates
	     *
	     * We should isolate those operations, which are side-effecting, to the
	     * main work loop. We can isolate lots of code into other functions, but
	     * they should be side effect free. They can return package that
	     * indicates whether we should report something, whether we need to add a
	     * DFA edge, whether we need to augment accept state with semantic
	     * context or rule invocation context. Actually, it seems like we always
	     * add predicates if they exist, so that can simply be done in the main
	     * loop for any accept state creation or modification request.
	     *
	     * cover these cases:
	     *   dead end
	     *   single alt
	     *   single alt + preds
	     *   conflict
	     *   conflict + preds
	     *
	     * TODO: greedy + those
	     */},{key:'execATN',value:function execATN(dfa,input,startIndex,initialState){if(ParserATNSimulator.debug){console.log("execATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input));}var outerContext=initialState.outerContext;var useContext=initialState.useContext;var t=input.LA(1);var previous=initialState;var contextCache=new PredictionContextCache_1.PredictionContextCache();while(true){// while more work
	var nextState=this.computeReachSet(dfa,previous,t,contextCache);if(nextState==null){this.setDFAEdge(previous.s0,input.LA(1),ATNSimulator_1.ATNSimulator.ERROR);return this.handleNoViableAlt(input,startIndex,previous);}var D=nextState.s0;// predicted alt => accept state
	assert(D.isAcceptState||D.prediction===ATN_1.ATN.INVALID_ALT_NUMBER);// conflicted => accept state
	assert(D.isAcceptState||D.configs.conflictInfo==null);if(this.isAcceptState(D,useContext)){var conflictingAlts=D.configs.conflictingAlts;var predictedAlt=conflictingAlts==null?D.prediction:ATN_1.ATN.INVALID_ALT_NUMBER;if(predictedAlt!==ATN_1.ATN.INVALID_ALT_NUMBER){if(this.optimize_ll1&&input.index===startIndex&&!dfa.isPrecedenceDfa&&nextState.outerContext===nextState.remainingOuterContext&&dfa.decision>=0&&!D.configs.hasSemanticContext){if(t>=0&&t<=MAX_SHORT_VALUE){var key=(dfa.decision<<16>>>0)+t;this.atn.LL1Table.set(key,predictedAlt);}}if(useContext&&this.always_try_local_context){this.reportContextSensitivity(dfa,predictedAlt,nextState,startIndex,input.index);}}predictedAlt=D.prediction;//				int k = input.index - startIndex + 1; // how much input we used
	//				System.out.println("used k="+k);
	var attemptFullContext=conflictingAlts!=null&&this.userWantsCtxSensitive;if(attemptFullContext){// Only exact conflicts are known to be ambiguous when local
	// prediction does not step out of the decision rule.
	attemptFullContext=!useContext&&(D.configs.dipsIntoOuterContext||!D.configs.isExactConflict)&&(!this.treat_sllk1_conflict_as_ambiguity||input.index!==startIndex);}if(D.configs.hasSemanticContext){var predPredictions=D.predicates;if(predPredictions!=null){var conflictIndex=input.index;if(conflictIndex!==startIndex){input.seek(startIndex);}// use complete evaluation here if we'll want to retry with full context if still ambiguous
	conflictingAlts=this.evalSemanticContext(predPredictions,outerContext,attemptFullContext||this.reportAmbiguities);switch(conflictingAlts.cardinality()){case 0:throw this.noViableAlt(input,outerContext,D.configs,startIndex);case 1:return conflictingAlts.nextSetBit(0);}if(conflictIndex!==startIndex){// restore the index so reporting the fallback to full
	// context occurs with the index at the correct spot
	input.seek(conflictIndex);}}}if(!attemptFullContext){if(conflictingAlts!=null){if(this.reportAmbiguities&&conflictingAlts.cardinality()>1){this.reportAmbiguity(dfa,D,startIndex,input.index,D.configs.isExactConflict,conflictingAlts,D.configs);}predictedAlt=conflictingAlts.nextSetBit(0);}return predictedAlt;}else {assert(!useContext);assert(this.isAcceptState(D,false));if(ParserATNSimulator.debug){console.log("RETRY with outerContext="+outerContext);}var fullContextState=this.computeStartState(dfa,outerContext,true);if(this.reportAmbiguities){this.reportAttemptingFullContext(dfa,conflictingAlts,nextState,startIndex,input.index);}input.seek(startIndex);return this.execATN(dfa,input,startIndex,fullContextState);}}previous=nextState;if(t!==IntStream_1.IntStream.EOF){input.consume();t=input.LA(1);}}}/**
	     * This method is used to improve the localization of error messages by
	     * choosing an alternative rather than throwing a
	     * {@link NoViableAltException} in particular prediction scenarios where the
	     * {@link #ERROR} state was reached during ATN simulation.
	     *
	     * The default implementation of this method uses the following
	     * algorithm to identify an ATN configuration which successfully parsed the
	     * decision entry rule. Choosing such an alternative ensures that the
	     * {@link ParserRuleContext} returned by the calling rule will be complete
	     * and valid, and the syntax error will be reported later at a more
	     * localized location.
	     *
	     * * If no configuration in `configs` reached the end of the
	     *   decision rule, return {@link ATN#INVALID_ALT_NUMBER}.
	     * * If all configurations in `configs` which reached the end of the
	     *   decision rule predict the same alternative, return that alternative.
	     * * If the configurations in `configs` which reached the end of the
	     *   decision rule predict multiple alternatives (call this *S*),
	     *   choose an alternative in the following order.
	     *
	     *     1. Filter the configurations in `configs` to only those
	     *        configurations which remain viable after evaluating semantic predicates.
	     *        If the set of these filtered configurations which also reached the end of
	     *        the decision rule is not empty, return the minimum alternative
	     *        represented in this set.
	     *     1. Otherwise, choose the minimum alternative in *S*.
	     *
	     * In some scenarios, the algorithm described above could predict an
	     * alternative which will result in a {@link FailedPredicateException} in
	     * parser. Specifically, this could occur if the *only* configuration
	     * capable of successfully parsing to the end of the decision rule is
	     * blocked by a semantic predicate. By choosing this alternative within
	     * {@link #adaptivePredict} instead of throwing a
	     * {@link NoViableAltException}, the resulting
	     * {@link FailedPredicateException} in the parser will identify the specific
	     * predicate which is preventing the parser from successfully parsing the
	     * decision rule, which helps developers identify and correct logic errors
	     * in semantic predicates.
	     *
	     * @param input The input {@link TokenStream}
	     * @param startIndex The start index for the current prediction, which is
	     * the input index where any semantic context in `configs` should be
	     * evaluated
	     * @param previous The ATN simulation state immediately before the
	     * {@link #ERROR} state was reached
	     *
	     * @returns The value to return from {@link #adaptivePredict}, or
	     * {@link ATN#INVALID_ALT_NUMBER} if a suitable alternative was not
	     * identified and {@link #adaptivePredict} should report an error instead.
	     */},{key:'handleNoViableAlt',value:function handleNoViableAlt(input,startIndex,previous){if(previous.s0!=null){var alts=new BitSet_1.BitSet();var maxAlt=0;var _iteratorNormalCompletion128=true;var _didIteratorError128=false;var _iteratorError128=undefined;try{for(var _iterator128=previous.s0.configs[Symbol.iterator](),_step128;!(_iteratorNormalCompletion128=(_step128=_iterator128.next()).done);_iteratorNormalCompletion128=true){var _config=_step128.value;if(_config.reachesIntoOuterContext||_config.state instanceof RuleStopState_1.RuleStopState){alts.set(_config.alt);maxAlt=Math.max(maxAlt,_config.alt);}}}catch(err){_didIteratorError128=true;_iteratorError128=err;}finally{try{if(!_iteratorNormalCompletion128&&_iterator128.return){_iterator128.return();}}finally{if(_didIteratorError128){throw _iteratorError128;}}}switch(alts.cardinality()){case 0:break;case 1:return alts.nextSetBit(0);default:if(!previous.s0.configs.hasSemanticContext){// configs doesn't contain any predicates, so the predicate
	// filtering code below would be pointless
	return alts.nextSetBit(0);}/*
	                     * Try to find a configuration set that not only dipped into the outer
	                     * context, but also isn't eliminated by a predicate.
	                     */var filteredConfigs=new ATNConfigSet_1.ATNConfigSet();var _iteratorNormalCompletion129=true;var _didIteratorError129=false;var _iteratorError129=undefined;try{for(var _iterator129=previous.s0.configs[Symbol.iterator](),_step129;!(_iteratorNormalCompletion129=(_step129=_iterator129.next()).done);_iteratorNormalCompletion129=true){var config=_step129.value;if(config.reachesIntoOuterContext||config.state instanceof RuleStopState_1.RuleStopState){filteredConfigs.add(config);}}/* The following code blocks are adapted from predicateDFAState with
	                     * the following key changes.
	                     *
	                     *  1. The code operates on an ATNConfigSet rather than a DFAState.
	                     *  2. Predicates are collected for all alternatives represented in
	                     *     filteredConfigs, rather than restricting the evaluation to
	                     *     conflicting and/or unique configurations.
	                     */}catch(err){_didIteratorError129=true;_iteratorError129=err;}finally{try{if(!_iteratorNormalCompletion129&&_iterator129.return){_iterator129.return();}}finally{if(_didIteratorError129){throw _iteratorError129;}}}var altToPred=this.getPredsForAmbigAlts(alts,filteredConfigs,maxAlt);if(altToPred!=null){var predicates=this.getPredicatePredictions(alts,altToPred);if(predicates!=null){var stopIndex=input.index;try{input.seek(startIndex);var filteredAlts=this.evalSemanticContext(predicates,previous.outerContext,false);if(!filteredAlts.isEmpty){return filteredAlts.nextSetBit(0);}}finally{input.seek(stopIndex);}}}return alts.nextSetBit(0);}}throw this.noViableAlt(input,previous.outerContext,previous.s0.configs,startIndex);}},{key:'computeReachSet',value:function computeReachSet(dfa,previous,t,contextCache){var useContext=previous.useContext;var remainingGlobalContext=previous.remainingOuterContext;var s=previous.s0;if(useContext){while(s.isContextSymbol(t)){var _next3=void 0;if(remainingGlobalContext!=null){remainingGlobalContext=this.skipTailCalls(remainingGlobalContext);_next3=s.getContextTarget(this.getReturnState(remainingGlobalContext));}if(_next3==null){break;}assert(remainingGlobalContext!=null);remainingGlobalContext=remainingGlobalContext.parent;s=_next3;}}assert(!this.isAcceptState(s,useContext));if(this.isAcceptState(s,useContext)){return new SimulatorState_1.SimulatorState(previous.outerContext,s,useContext,remainingGlobalContext);}var s0=s;var target=this.getExistingTargetState(s0,t);if(target==null){var result=this.computeTargetState(dfa,s0,remainingGlobalContext,t,useContext,contextCache);target=result[0];remainingGlobalContext=result[1];}if(target===ATNSimulator_1.ATNSimulator.ERROR){return undefined;}assert(!useContext||!target.configs.dipsIntoOuterContext);return new SimulatorState_1.SimulatorState(previous.outerContext,target,useContext,remainingGlobalContext);}/**
	     * Get an existing target state for an edge in the DFA. If the target state
	     * for the edge has not yet been computed or is otherwise not available,
	     * this method returns `undefined`.
	     *
	     * @param s The current DFA state
	     * @param t The next input symbol
	     * @returns The existing target DFA state for the given input symbol
	     * `t`, or `undefined` if the target state for this edge is not
	     * already cached
	     */},{key:'getExistingTargetState',value:function getExistingTargetState(s,t){return s.getTarget(t);}/**
	     * Compute a target state for an edge in the DFA, and attempt to add the
	     * computed state and corresponding edge to the DFA.
	     *
	     * @param dfa
	     * @param s The current DFA state
	     * @param remainingGlobalContext
	     * @param t The next input symbol
	     * @param useContext
	     * @param contextCache
	     *
	     * @returns The computed target DFA state for the given input symbol
	     * `t`. If `t` does not lead to a valid DFA state, this method
	     * returns {@link #ERROR}.
	     */},{key:'computeTargetState',value:function computeTargetState(dfa,s,remainingGlobalContext,t,useContext,contextCache){var closureConfigs=s.configs.toArray();var contextElements=void 0;var reach=new ATNConfigSet_1.ATNConfigSet();var stepIntoGlobal=void 0;do{var hasMoreContext=!useContext||remainingGlobalContext!=null;if(!hasMoreContext){reach.isOutermostConfigSet=true;}var reachIntermediate=new ATNConfigSet_1.ATNConfigSet();/* Configurations already in a rule stop state indicate reaching the end
	             * of the decision rule (local context) or end of the start rule (full
	             * context). Once reached, these configurations are never updated by a
	             * closure operation, so they are handled separately for the performance
	             * advantage of having a smaller intermediate set when calling closure.
	             *
	             * For full-context reach operations, separate handling is required to
	             * ensure that the alternative matching the longest overall sequence is
	             * chosen when multiple such configurations can match the input.
	             */var skippedStopStates=void 0;var _iteratorNormalCompletion130=true;var _didIteratorError130=false;var _iteratorError130=undefined;try{for(var _iterator130=closureConfigs[Symbol.iterator](),_step130;!(_iteratorNormalCompletion130=(_step130=_iterator130.next()).done);_iteratorNormalCompletion130=true){var _c3=_step130.value;if(ParserATNSimulator.debug){console.log("testing "+this.getTokenName(t)+" at "+_c3.toString());}if(_c3.state instanceof RuleStopState_1.RuleStopState){assert(_c3.context.isEmpty);if(useContext&&!_c3.reachesIntoOuterContext||t===IntStream_1.IntStream.EOF){if(skippedStopStates==null){skippedStopStates=[];}skippedStopStates.push(_c3);}continue;}var n=_c3.state.numberOfOptimizedTransitions;for(var ti=0;ti<n;ti++){// for each optimized transition
	var trans=_c3.state.getOptimizedTransition(ti);var target=this.getReachableTarget(_c3,trans,t);if(target!=null){reachIntermediate.add(_c3.transform(target,false),contextCache);}}}/* This block optimizes the reach operation for intermediate sets which
	             * trivially indicate a termination state for the overall
	             * adaptivePredict operation.
	             *
	             * The conditions assume that intermediate
	             * contains all configurations relevant to the reach set, but this
	             * condition is not true when one or more configurations have been
	             * withheld in skippedStopStates, or when the current symbol is EOF.
	             */}catch(err){_didIteratorError130=true;_iteratorError130=err;}finally{try{if(!_iteratorNormalCompletion130&&_iterator130.return){_iterator130.return();}}finally{if(_didIteratorError130){throw _iteratorError130;}}}if(this.optimize_unique_closure&&skippedStopStates==null&&t!==Token_1.Token.EOF&&reachIntermediate.uniqueAlt!==ATN_1.ATN.INVALID_ALT_NUMBER){reachIntermediate.isOutermostConfigSet=reach.isOutermostConfigSet;reach=reachIntermediate;break;}/* If the reach set could not be trivially determined, perform a closure
	             * operation on the intermediate set to compute its initial value.
	             */var collectPredicates=false;var treatEofAsEpsilon=t===Token_1.Token.EOF;this.closure(reachIntermediate,reach,collectPredicates,hasMoreContext,contextCache,treatEofAsEpsilon);stepIntoGlobal=reach.dipsIntoOuterContext;if(t===IntStream_1.IntStream.EOF){/* After consuming EOF no additional input is possible, so we are
	                 * only interested in configurations which reached the end of the
	                 * decision rule (local context) or end of the start rule (full
	                 * context). Update reach to contain only these configurations. This
	                 * handles both explicit EOF transitions in the grammar and implicit
	                 * EOF transitions following the end of the decision or start rule.
	                 *
	                 * This is handled before the configurations in skippedStopStates,
	                 * because any configurations potentially added from that list are
	                 * already guaranteed to meet this condition whether or not it's
	                 * required.
	                 */reach=this.removeAllConfigsNotInRuleStopState(reach,contextCache);}/* If skippedStopStates is not undefined, then it contains at least one
	             * configuration. For full-context reach operations, these
	             * configurations reached the end of the start rule, in which case we
	             * only add them back to reach if no configuration during the current
	             * closure operation reached such a state. This ensures adaptivePredict
	             * chooses an alternative matching the longest overall sequence when
	             * multiple alternatives are viable.
	             */if(skippedStopStates!=null&&(!useContext||!PredictionMode_1.PredictionMode.hasConfigInRuleStopState(reach))){assert(skippedStopStates.length>0);var _iteratorNormalCompletion131=true;var _didIteratorError131=false;var _iteratorError131=undefined;try{for(var _iterator131=skippedStopStates[Symbol.iterator](),_step131;!(_iteratorNormalCompletion131=(_step131=_iterator131.next()).done);_iteratorNormalCompletion131=true){var c=_step131.value;reach.add(c,contextCache);}}catch(err){_didIteratorError131=true;_iteratorError131=err;}finally{try{if(!_iteratorNormalCompletion131&&_iterator131.return){_iterator131.return();}}finally{if(_didIteratorError131){throw _iteratorError131;}}}}if(useContext&&stepIntoGlobal){reach.clear();// We know remainingGlobalContext is not undefined at this point (why?)
	remainingGlobalContext=remainingGlobalContext;remainingGlobalContext=this.skipTailCalls(remainingGlobalContext);var nextContextElement=this.getReturnState(remainingGlobalContext);if(contextElements==null){contextElements=new IntegerList_1.IntegerList();}if(remainingGlobalContext.isEmpty){remainingGlobalContext=undefined;}else {remainingGlobalContext=remainingGlobalContext.parent;}contextElements.add(nextContextElement);if(nextContextElement!==PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){for(var i=0;i<closureConfigs.length;i++){closureConfigs[i]=closureConfigs[i].appendContext(nextContextElement,contextCache);}}}}while(useContext&&stepIntoGlobal);if(reach.isEmpty){this.setDFAEdge(s,t,ATNSimulator_1.ATNSimulator.ERROR);return [ATNSimulator_1.ATNSimulator.ERROR,remainingGlobalContext];}var result=this.addDFAEdge(dfa,s,t,contextElements,reach,contextCache);return [result,remainingGlobalContext];}/**
	     * Return a configuration set containing only the configurations from
	     * `configs` which are in a {@link RuleStopState}. If all
	     * configurations in `configs` are already in a rule stop state, this
	     * method simply returns `configs`.
	     *
	     * @param configs the configuration set to update
	     * @param contextCache the {@link PredictionContext} cache
	     *
	     * @returns `configs` if all configurations in `configs` are in a
	     * rule stop state, otherwise return a new configuration set containing only
	     * the configurations from `configs` which are in a rule stop state
	     */},{key:'removeAllConfigsNotInRuleStopState',value:function removeAllConfigsNotInRuleStopState(configs,contextCache){if(PredictionMode_1.PredictionMode.allConfigsInRuleStopStates(configs)){return configs;}var result=new ATNConfigSet_1.ATNConfigSet();var _iteratorNormalCompletion132=true;var _didIteratorError132=false;var _iteratorError132=undefined;try{for(var _iterator132=configs[Symbol.iterator](),_step132;!(_iteratorNormalCompletion132=(_step132=_iterator132.next()).done);_iteratorNormalCompletion132=true){var config=_step132.value;if(!(config.state instanceof RuleStopState_1.RuleStopState)){continue;}result.add(config,contextCache);}}catch(err){_didIteratorError132=true;_iteratorError132=err;}finally{try{if(!_iteratorNormalCompletion132&&_iterator132.return){_iterator132.return();}}finally{if(_didIteratorError132){throw _iteratorError132;}}}return result;}},{key:'computeStartState',value:function computeStartState(dfa,globalContext,useContext){var s0=dfa.isPrecedenceDfa?dfa.getPrecedenceStartState(this._parser.precedence,useContext):useContext?dfa.s0full:dfa.s0;if(s0!=null){if(!useContext){return new SimulatorState_1.SimulatorState(globalContext,s0,useContext,globalContext);}s0.setContextSensitive(this.atn);}var decision=dfa.decision;// @NotNull
	var p=dfa.atnStartState;var previousContext=0;var remainingGlobalContext=globalContext;var initialContext=useContext?PredictionContext_1.PredictionContext.EMPTY_FULL:PredictionContext_1.PredictionContext.EMPTY_LOCAL;// always at least the implicit call to start rule
	var contextCache=new PredictionContextCache_1.PredictionContextCache();if(useContext){if(!this.enable_global_context_dfa){while(remainingGlobalContext!=null){if(remainingGlobalContext.isEmpty){previousContext=PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY;remainingGlobalContext=undefined;}else {previousContext=this.getReturnState(remainingGlobalContext);initialContext=initialContext.appendSingleContext(previousContext,contextCache);remainingGlobalContext=remainingGlobalContext.parent;}}}while(s0!=null&&s0.isContextSensitive&&remainingGlobalContext!=null){var _next4=void 0;remainingGlobalContext=this.skipTailCalls(remainingGlobalContext);if(remainingGlobalContext.isEmpty){_next4=s0.getContextTarget(PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY);previousContext=PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY;remainingGlobalContext=undefined;}else {previousContext=this.getReturnState(remainingGlobalContext);_next4=s0.getContextTarget(previousContext);initialContext=initialContext.appendSingleContext(previousContext,contextCache);remainingGlobalContext=remainingGlobalContext.parent;}if(_next4==null){break;}s0=_next4;}}if(s0!=null&&!s0.isContextSensitive){return new SimulatorState_1.SimulatorState(globalContext,s0,useContext,remainingGlobalContext);}var configs=new ATNConfigSet_1.ATNConfigSet();while(true){var reachIntermediate=new ATNConfigSet_1.ATNConfigSet();var n=p.numberOfTransitions;for(var ti=0;ti<n;ti++){// for each transition
	var target=p.transition(ti).target;reachIntermediate.add(ATNConfig_1.ATNConfig.create(target,ti+1,initialContext));}var hasMoreContext=remainingGlobalContext!=null;if(!hasMoreContext){configs.isOutermostConfigSet=true;}var collectPredicates=true;this.closure(reachIntermediate,configs,collectPredicates,hasMoreContext,contextCache,false);var stepIntoGlobal=configs.dipsIntoOuterContext;var _next5=void 0;if(useContext&&!this.enable_global_context_dfa){s0=this.addDFAState(dfa,configs,contextCache);break;}else if(s0==null){if(!dfa.isPrecedenceDfa){_next5=this.addDFAState(dfa,configs,contextCache);if(useContext){if(!dfa.s0full){dfa.s0full=_next5;}else {_next5=dfa.s0full;}}else {if(!dfa.s0){dfa.s0=_next5;}else {_next5=dfa.s0;}}}else {/* If this is a precedence DFA, we use applyPrecedenceFilter
	                     * to convert the computed start state to a precedence start
	                     * state. We then use DFA.setPrecedenceStartState to set the
	                     * appropriate start state for the precedence level rather
	                     * than simply setting DFA.s0.
	                     */configs=this.applyPrecedenceFilter(configs,globalContext,contextCache);_next5=this.addDFAState(dfa,configs,contextCache);dfa.setPrecedenceStartState(this._parser.precedence,useContext,_next5);}}else {if(dfa.isPrecedenceDfa){configs=this.applyPrecedenceFilter(configs,globalContext,contextCache);}_next5=this.addDFAState(dfa,configs,contextCache);s0.setContextTarget(previousContext,_next5);}s0=_next5;if(!useContext||!stepIntoGlobal){break;}// TODO: make sure it distinguishes empty stack states
	_next5.setContextSensitive(this.atn);// We know remainingGlobalContext is not undefined at this point (why?)
	remainingGlobalContext=remainingGlobalContext;configs.clear();remainingGlobalContext=this.skipTailCalls(remainingGlobalContext);var nextContextElement=this.getReturnState(remainingGlobalContext);if(remainingGlobalContext.isEmpty){remainingGlobalContext=undefined;}else {remainingGlobalContext=remainingGlobalContext.parent;}if(nextContextElement!==PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){initialContext=initialContext.appendSingleContext(nextContextElement,contextCache);}previousContext=nextContextElement;}return new SimulatorState_1.SimulatorState(globalContext,s0,useContext,remainingGlobalContext);}/**
	     * This method transforms the start state computed by
	     * {@link #computeStartState} to the special start state used by a
	     * precedence DFA for a particular precedence value. The transformation
	     * process applies the following changes to the start state's configuration
	     * set.
	     *
	     * 1. Evaluate the precedence predicates for each configuration using
	     *    {@link SemanticContext#evalPrecedence}.
	     * 1. When {@link ATNConfig#isPrecedenceFilterSuppressed} is `false`,
	     *    remove all configurations which predict an alternative greater than 1,
	     *    for which another configuration that predicts alternative 1 is in the
	     *    same ATN state with the same prediction context. This transformation is
	     *    valid for the following reasons:
	     *
	     *     * The closure block cannot contain any epsilon transitions which bypass
	     *       the body of the closure, so all states reachable via alternative 1 are
	     *       part of the precedence alternatives of the transformed left-recursive
	     *       rule.
	     *     * The "primary" portion of a left recursive rule cannot contain an
	     *       epsilon transition, so the only way an alternative other than 1 can exist
	     *       in a state that is also reachable via alternative 1 is by nesting calls
	     *       to the left-recursive rule, with the outer calls not being at the
	     *       preferred precedence level. The
	     *       {@link ATNConfig#isPrecedenceFilterSuppressed} property marks ATN
	     *       configurations which do not meet this condition, and therefore are not
	     *       eligible for elimination during the filtering process.
	     *
	     * The prediction context must be considered by this filter to address
	     * situations like the following.
	     *
	     * ```antlr
	     * grammar TA;
	     * prog: statement* EOF;
	     * statement: letterA | statement letterA 'b' ;
	     * letterA: 'a';
	     * ```
	     *
	     * If the above grammar, the ATN state immediately before the token
	     * reference `'a'` in `letterA` is reachable from the left edge
	     * of both the primary and closure blocks of the left-recursive rule
	     * `statement`. The prediction context associated with each of these
	     * configurations distinguishes between them, and prevents the alternative
	     * which stepped out to `prog` (and then back in to `statement`
	     * from being eliminated by the filter.
	     *
	     * @param configs The configuration set computed by
	     * {@link #computeStartState} as the start state for the DFA.
	     * @returns The transformed configuration set representing the start state
	     * for a precedence DFA at a particular precedence level (determined by
	     * calling {@link Parser#getPrecedence}).
	     */},{key:'applyPrecedenceFilter',value:function applyPrecedenceFilter(configs,globalContext,contextCache){var statesFromAlt1=new Map();var configSet=new ATNConfigSet_1.ATNConfigSet();var _iteratorNormalCompletion133=true;var _didIteratorError133=false;var _iteratorError133=undefined;try{for(var _iterator133=configs[Symbol.iterator](),_step133;!(_iteratorNormalCompletion133=(_step133=_iterator133.next()).done);_iteratorNormalCompletion133=true){var config=_step133.value;// handle alt 1 first
	if(config.alt!==1){continue;}var updatedContext=config.semanticContext.evalPrecedence(this._parser,globalContext);if(updatedContext==null){// the configuration was eliminated
	continue;}statesFromAlt1.set(config.state.stateNumber,config.context);if(updatedContext!==config.semanticContext){configSet.add(config.transform(config.state,false,updatedContext),contextCache);}else {configSet.add(config,contextCache);}}}catch(err){_didIteratorError133=true;_iteratorError133=err;}finally{try{if(!_iteratorNormalCompletion133&&_iterator133.return){_iterator133.return();}}finally{if(_didIteratorError133){throw _iteratorError133;}}}var _iteratorNormalCompletion134=true;var _didIteratorError134=false;var _iteratorError134=undefined;try{for(var _iterator134=configs[Symbol.iterator](),_step134;!(_iteratorNormalCompletion134=(_step134=_iterator134.next()).done);_iteratorNormalCompletion134=true){var _config2=_step134.value;if(_config2.alt===1){// already handled
	continue;}if(!_config2.isPrecedenceFilterSuppressed){/* In the future, this elimination step could be updated to also
	                 * filter the prediction context for alternatives predicting alt>1
	                 * (basically a graph subtraction algorithm).
	                 */var context=statesFromAlt1.get(_config2.state.stateNumber);if(context!=null&&context.equals(_config2.context)){// eliminated
	continue;}}configSet.add(_config2,contextCache);}}catch(err){_didIteratorError134=true;_iteratorError134=err;}finally{try{if(!_iteratorNormalCompletion134&&_iterator134.return){_iterator134.return();}}finally{if(_didIteratorError134){throw _iteratorError134;}}}return configSet;}},{key:'getReachableTarget',value:function getReachableTarget(source,trans,ttype){if(trans.matches(ttype,0,this.atn.maxTokenType)){return trans.target;}return undefined;}/** collect and set D's semantic context */},{key:'predicateDFAState',value:function predicateDFAState(D,configs,nalts){var conflictingAlts=this.getConflictingAltsFromConfigSet(configs);if(!conflictingAlts){throw new Error("This unhandled scenario is intended to be unreachable, but I'm currently not sure of why we know that's the case.");}if(ParserATNSimulator.debug){console.log("predicateDFAState "+D);}var altToPred=this.getPredsForAmbigAlts(conflictingAlts,configs,nalts);// altToPred[uniqueAlt] is now our validating predicate (if any)
	var predPredictions=void 0;if(altToPred!=null){// we have a validating predicate; test it
	// Update DFA so reach becomes accept state with predicate
	predPredictions=this.getPredicatePredictions(conflictingAlts,altToPred);D.predicates=predPredictions;}return predPredictions;}},{key:'getPredsForAmbigAlts',value:function getPredsForAmbigAlts(ambigAlts,configs,nalts){// REACH=[1|1|[]|0:0, 1|2|[]|0:1]
	/* altToPred starts as an array of all undefined contexts. The entry at index i
	         * corresponds to alternative i. altToPred[i] may have one of three values:
	         *   1. undefined: no ATNConfig c is found such that c.alt===i
	         *   2. SemanticContext.NONE: At least one ATNConfig c exists such that
	         *      c.alt===i and c.semanticContext===SemanticContext.NONE. In other words,
	         *      alt i has at least one unpredicated config.
	         *   3. Non-NONE Semantic Context: There exists at least one, and for all
	         *      ATNConfig c such that c.alt===i, c.semanticContext!==SemanticContext.NONE.
	         *
	         * From this, it is clear that NONE||anything==NONE.
	         */var altToPred=new Array(nalts+1);var n=altToPred.length;var _iteratorNormalCompletion135=true;var _didIteratorError135=false;var _iteratorError135=undefined;try{for(var _iterator135=configs[Symbol.iterator](),_step135;!(_iteratorNormalCompletion135=(_step135=_iterator135.next()).done);_iteratorNormalCompletion135=true){var c=_step135.value;if(ambigAlts.get(c.alt)){altToPred[c.alt]=SemanticContext_1.SemanticContext.or(altToPred[c.alt],c.semanticContext);}}}catch(err){_didIteratorError135=true;_iteratorError135=err;}finally{try{if(!_iteratorNormalCompletion135&&_iterator135.return){_iterator135.return();}}finally{if(_didIteratorError135){throw _iteratorError135;}}}var nPredAlts=0;for(var i=0;i<n;i++){if(altToPred[i]==null){altToPred[i]=SemanticContext_1.SemanticContext.NONE;}else if(altToPred[i]!==SemanticContext_1.SemanticContext.NONE){nPredAlts++;}}// At this point we know `altToPred` doesn't contain any undefined entries
	var result=altToPred;// nonambig alts are undefined in result
	if(nPredAlts===0){result=undefined;}if(ParserATNSimulator.debug){console.log("getPredsForAmbigAlts result "+(result?Arrays_1.Arrays.toString(result):"undefined"));}return result;}},{key:'getPredicatePredictions',value:function getPredicatePredictions(ambigAlts,altToPred){var pairs=[];var containsPredicate=false;for(var i=1;i<altToPred.length;i++){var pred=altToPred[i];// unpredicated is indicated by SemanticContext.NONE
	assert(pred!=null);// find first unpredicated but ambig alternative, if any.
	// Only ambiguous alternatives will have SemanticContext.NONE.
	// Any unambig alts or ambig naked alts after first ambig naked are ignored
	// (undefined, i) means alt i is the default prediction
	// if no (undefined, i), then no default prediction.
	if(ambigAlts!=null&&ambigAlts.get(i)&&pred===SemanticContext_1.SemanticContext.NONE){pairs.push(new DFAState_1.DFAState.PredPrediction(pred,i));}else if(pred!==SemanticContext_1.SemanticContext.NONE){containsPredicate=true;pairs.push(new DFAState_1.DFAState.PredPrediction(pred,i));}}if(!containsPredicate){return undefined;}//		System.out.println(Arrays.toString(altToPred)+"->"+pairs);
	return pairs;}/** Look through a list of predicate/alt pairs, returning alts for the
	     *  pairs that win. An `undefined` predicate indicates an alt containing an
	     *  unpredicated config which behaves as "always true."
	     */},{key:'evalSemanticContext',value:function evalSemanticContext(predPredictions,outerContext,complete){var predictions=new BitSet_1.BitSet();var _iteratorNormalCompletion136=true;var _didIteratorError136=false;var _iteratorError136=undefined;try{for(var _iterator136=predPredictions[Symbol.iterator](),_step136;!(_iteratorNormalCompletion136=(_step136=_iterator136.next()).done);_iteratorNormalCompletion136=true){var pair=_step136.value;if(pair.pred===SemanticContext_1.SemanticContext.NONE){predictions.set(pair.alt);if(!complete){break;}continue;}var evaluatedResult=this.evalSemanticContextImpl(pair.pred,outerContext,pair.alt);if(ParserATNSimulator.debug||ParserATNSimulator.dfa_debug){console.log("eval pred "+pair+"="+evaluatedResult);}if(evaluatedResult){if(ParserATNSimulator.debug||ParserATNSimulator.dfa_debug){console.log("PREDICT "+pair.alt);}predictions.set(pair.alt);if(!complete){break;}}}}catch(err){_didIteratorError136=true;_iteratorError136=err;}finally{try{if(!_iteratorNormalCompletion136&&_iterator136.return){_iterator136.return();}}finally{if(_didIteratorError136){throw _iteratorError136;}}}return predictions;}/**
	     * Evaluate a semantic context within a specific parser context.
	     *
	     * This method might not be called for every semantic context evaluated
	     * during the prediction process. In particular, we currently do not
	     * evaluate the following but it may change in the future:
	     *
	     * * Precedence predicates (represented by
	     *   {@link SemanticContext.PrecedencePredicate}) are not currently evaluated
	     *   through this method.
	     * * Operator predicates (represented by {@link SemanticContext.AND} and
	     *   {@link SemanticContext.OR}) are evaluated as a single semantic
	     *   context, rather than evaluating the operands individually.
	     *   Implementations which require evaluation results from individual
	     *   predicates should override this method to explicitly handle evaluation of
	     *   the operands within operator predicates.
	     *
	     * @param pred The semantic context to evaluate
	     * @param parserCallStack The parser context in which to evaluate the
	     * semantic context
	     * @param alt The alternative which is guarded by `pred`
	     *
	     * @since 4.3
	     */},{key:'evalSemanticContextImpl',value:function evalSemanticContextImpl(pred,parserCallStack,alt){return pred.eval(this._parser,parserCallStack);}/* TODO: If we are doing predicates, there is no point in pursuing
	         closure operations if we reach a DFA state that uniquely predicts
	         alternative. We will not be caching that DFA state and it is a
	         waste to pursue the closure. Might have to advance when we do
	         ambig detection thought :(
	          */},{key:'closure',value:function closure(sourceConfigs,configs,collectPredicates,hasMoreContext,contextCache,treatEofAsEpsilon){if(contextCache==null){contextCache=PredictionContextCache_1.PredictionContextCache.UNCACHED;}var currentConfigs=sourceConfigs;var closureBusy=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);while(currentConfigs.size>0){var intermediate=new ATNConfigSet_1.ATNConfigSet();var _iteratorNormalCompletion137=true;var _didIteratorError137=false;var _iteratorError137=undefined;try{for(var _iterator137=currentConfigs[Symbol.iterator](),_step137;!(_iteratorNormalCompletion137=(_step137=_iterator137.next()).done);_iteratorNormalCompletion137=true){var config=_step137.value;this.closureImpl(config,configs,intermediate,closureBusy,collectPredicates,hasMoreContext,contextCache,0,treatEofAsEpsilon);}}catch(err){_didIteratorError137=true;_iteratorError137=err;}finally{try{if(!_iteratorNormalCompletion137&&_iterator137.return){_iterator137.return();}}finally{if(_didIteratorError137){throw _iteratorError137;}}}currentConfigs=intermediate;}}},{key:'closureImpl',value:function closureImpl(config,configs,intermediate,closureBusy,collectPredicates,hasMoreContexts,contextCache,depth,treatEofAsEpsilon){if(ParserATNSimulator.debug){console.log("closure("+config.toString(this._parser,true)+")");}if(config.state instanceof RuleStopState_1.RuleStopState){// We hit rule end. If we have context info, use it
	if(!config.context.isEmpty){var hasEmpty=config.context.hasEmpty;var nonEmptySize=config.context.size-(hasEmpty?1:0);for(var i=0;i<nonEmptySize;i++){var newContext=config.context.getParent(i);// "pop" return state
	var returnState=this.atn.states[config.context.getReturnState(i)];var c=ATNConfig_1.ATNConfig.create(returnState,config.alt,newContext,config.semanticContext);// While we have context to pop back from, we may have
	// gotten that context AFTER having fallen off a rule.
	// Make sure we track that we are now out of context.
	c.outerContextDepth=config.outerContextDepth;c.isPrecedenceFilterSuppressed=config.isPrecedenceFilterSuppressed;assert(depth>MIN_INTEGER_VALUE);this.closureImpl(c,configs,intermediate,closureBusy,collectPredicates,hasMoreContexts,contextCache,depth-1,treatEofAsEpsilon);}if(!hasEmpty||!hasMoreContexts){return;}config=config.transform(config.state,false,PredictionContext_1.PredictionContext.EMPTY_LOCAL);}else if(!hasMoreContexts){configs.add(config,contextCache);return;}else {// else if we have no context info, just chase follow links (if greedy)
	if(ParserATNSimulator.debug){console.log("FALLING off rule "+this.getRuleName(config.state.ruleIndex));}if(config.context===PredictionContext_1.PredictionContext.EMPTY_FULL){// no need to keep full context overhead when we step out
	config=config.transform(config.state,false,PredictionContext_1.PredictionContext.EMPTY_LOCAL);}else if(!config.reachesIntoOuterContext&&PredictionContext_1.PredictionContext.isEmptyLocal(config.context)){// add stop state when leaving decision rule for the first time
	configs.add(config,contextCache);}}}var p=config.state;// optimization
	if(!p.onlyHasEpsilonTransitions){configs.add(config,contextCache);// make sure to not return here, because EOF transitions can act as
	// both epsilon transitions and non-epsilon transitions.
	if(ParserATNSimulator.debug){console.log("added config "+configs);}}for(var _i34=0;_i34<p.numberOfOptimizedTransitions;_i34++){// This block implements first-edge elimination of ambiguous LR
	// alternatives as part of dynamic disambiguation during prediction.
	// See antlr/antlr4#1398.
	if(_i34===0&&p.stateType===ATNStateType_1.ATNStateType.STAR_LOOP_ENTRY&&p.precedenceRuleDecision&&!config.context.hasEmpty){var precedenceDecision=p;// When suppress is true, it means the outgoing edge i==0 is
	// ambiguous with the outgoing edge i==1, and thus the closure
	// operation can dynamically disambiguate by suppressing this
	// edge during the closure operation.
	var suppress=true;for(var j=0;j<config.context.size;j++){if(!precedenceDecision.precedenceLoopbackStates.get(config.context.getReturnState(j))){suppress=false;break;}}if(suppress){continue;}}var t=p.getOptimizedTransition(_i34);var continueCollecting=!(t instanceof ActionTransition_1.ActionTransition)&&collectPredicates;var _c4=this.getEpsilonTarget(config,t,continueCollecting,depth===0,contextCache,treatEofAsEpsilon);if(_c4!=null){if(t instanceof RuleTransition_1.RuleTransition){if(intermediate!=null&&!collectPredicates){intermediate.add(_c4,contextCache);continue;}}var newDepth=depth;if(config.state instanceof RuleStopState_1.RuleStopState){// target fell off end of rule; mark resulting c as having dipped into outer context
	// We can't get here if incoming config was rule stop and we had context
	// track how far we dip into outer context.  Might
	// come in handy and we avoid evaluating context dependent
	// preds if this is > 0.
	if(this.dfa!=null&&this.dfa.isPrecedenceDfa){var outermostPrecedenceReturn=t.outermostPrecedenceReturn;if(outermostPrecedenceReturn===this.dfa.atnStartState.ruleIndex){_c4.isPrecedenceFilterSuppressed=true;}}_c4.outerContextDepth=_c4.outerContextDepth+1;if(!closureBusy.add(_c4)){// avoid infinite recursion for right-recursive rules
	continue;}assert(newDepth>MIN_INTEGER_VALUE);newDepth--;if(ParserATNSimulator.debug){console.log("dips into outer ctx: "+_c4);}}else if(t instanceof RuleTransition_1.RuleTransition){if(this.optimize_tail_calls&&t.optimizedTailCall&&(!this.tail_call_preserves_sll||!PredictionContext_1.PredictionContext.isEmptyLocal(config.context))){assert(_c4.context===config.context);if(newDepth===0){// the pop/push of a tail call would keep the depth
	// constant, except we latch if it goes negative
	newDepth--;if(!this.tail_call_preserves_sll&&PredictionContext_1.PredictionContext.isEmptyLocal(config.context)){// make sure the SLL config "dips into the outer context" or prediction may not fall back to LL on conflict
	_c4.outerContextDepth=_c4.outerContextDepth+1;}}}else {// latch when newDepth goes negative - once we step out of the entry context we can't return
	if(newDepth>=0){newDepth++;}}}else {if(!t.isEpsilon&&!closureBusy.add(_c4)){// avoid infinite recursion for EOF* and EOF+
	continue;}}this.closureImpl(_c4,configs,intermediate,closureBusy,continueCollecting,hasMoreContexts,contextCache,newDepth,treatEofAsEpsilon);}}}},{key:'getRuleName',value:function getRuleName(index){if(this._parser!=null&&index>=0){return this._parser.ruleNames[index];}return "<rule "+index+">";}},{key:'getEpsilonTarget',value:function getEpsilonTarget(config,t,collectPredicates,inContext,contextCache,treatEofAsEpsilon){switch(t.serializationType){case 3/* RULE */:return this.ruleTransition(config,t,contextCache);case 10/* PRECEDENCE */:return this.precedenceTransition(config,t,collectPredicates,inContext);case 4/* PREDICATE */:return this.predTransition(config,t,collectPredicates,inContext);case 6/* ACTION */:return this.actionTransition(config,t);case 1/* EPSILON */:return config.transform(t.target,false);case 5/* ATOM */:case 2/* RANGE */:case 7/* SET */:// EOF transitions act like epsilon transitions after the first EOF
	// transition is traversed
	if(treatEofAsEpsilon){if(t.matches(Token_1.Token.EOF,0,1)){return config.transform(t.target,false);}}return undefined;default:return undefined;}}},{key:'actionTransition',value:function actionTransition(config,t){if(ParserATNSimulator.debug){console.log("ACTION edge "+t.ruleIndex+":"+t.actionIndex);}return config.transform(t.target,false);}},{key:'precedenceTransition',value:function precedenceTransition(config,pt,collectPredicates,inContext){if(ParserATNSimulator.debug){console.log("PRED (collectPredicates="+collectPredicates+") "+pt.precedence+">=_p"+", ctx dependent=true");if(this._parser!=null){console.log("context surrounding pred is "+this._parser.getRuleInvocationStack());}}var c=void 0;if(collectPredicates&&inContext){var newSemCtx=SemanticContext_1.SemanticContext.and(config.semanticContext,pt.predicate);c=config.transform(pt.target,false,newSemCtx);}else {c=config.transform(pt.target,false);}if(ParserATNSimulator.debug){console.log("config from pred transition="+c);}return c;}},{key:'predTransition',value:function predTransition(config,pt,collectPredicates,inContext){if(ParserATNSimulator.debug){console.log("PRED (collectPredicates="+collectPredicates+") "+pt.ruleIndex+":"+pt.predIndex+", ctx dependent="+pt.isCtxDependent);if(this._parser!=null){console.log("context surrounding pred is "+this._parser.getRuleInvocationStack());}}var c=void 0;if(collectPredicates&&(!pt.isCtxDependent||pt.isCtxDependent&&inContext)){var newSemCtx=SemanticContext_1.SemanticContext.and(config.semanticContext,pt.predicate);c=config.transform(pt.target,false,newSemCtx);}else {c=config.transform(pt.target,false);}if(ParserATNSimulator.debug){console.log("config from pred transition="+c);}return c;}},{key:'ruleTransition',value:function ruleTransition(config,t,contextCache){if(ParserATNSimulator.debug){console.log("CALL rule "+this.getRuleName(t.target.ruleIndex)+", ctx="+config.context);}var returnState=t.followState;var newContext=void 0;if(this.optimize_tail_calls&&t.optimizedTailCall&&(!this.tail_call_preserves_sll||!PredictionContext_1.PredictionContext.isEmptyLocal(config.context))){newContext=config.context;}else if(contextCache!=null){newContext=contextCache.getChild(config.context,returnState.stateNumber);}else {newContext=config.context.getChild(returnState.stateNumber);}return config.transform(t.target,false,newContext);}},{key:'isConflicted',value:function isConflicted(configset,contextCache){if(configset.uniqueAlt!==ATN_1.ATN.INVALID_ALT_NUMBER||configset.size<=1){return undefined;}var configs=configset.toArray();configs.sort(ParserATNSimulator.STATE_ALT_SORT_COMPARATOR);var exact=!configset.dipsIntoOuterContext;var alts=new BitSet_1.BitSet();var minAlt=configs[0].alt;alts.set(minAlt);/* Quick checks come first (single pass, no context joining):
	         *  1. Make sure first config in the sorted list predicts the minimum
	         *     represented alternative.
	         *  2. Make sure every represented state has at least one configuration
	         *     which predicts the minimum represented alternative.
	         *  3. (exact only) make sure every represented state has at least one
	         *     configuration which predicts each represented alternative.
	         */// quick check 1 & 2 => if we assume #1 holds and check #2 against the
	// minAlt from the first state, #2 will fail if the assumption was
	// incorrect
	var currentState=configs[0].state.nonStopStateNumber;var _iteratorNormalCompletion138=true;var _didIteratorError138=false;var _iteratorError138=undefined;try{for(var _iterator138=configs[Symbol.iterator](),_step138;!(_iteratorNormalCompletion138=(_step138=_iterator138.next()).done);_iteratorNormalCompletion138=true){var _config7=_step138.value;var _stateNumber3=_config7.state.nonStopStateNumber;if(_stateNumber3!==currentState){if(_config7.alt!==minAlt){return undefined;}currentState=_stateNumber3;}}}catch(err){_didIteratorError138=true;_iteratorError138=err;}finally{try{if(!_iteratorNormalCompletion138&&_iterator138.return){_iterator138.return();}}finally{if(_didIteratorError138){throw _iteratorError138;}}}var representedAlts=void 0;if(exact){currentState=configs[0].state.nonStopStateNumber;// get the represented alternatives of the first state
	representedAlts=new BitSet_1.BitSet();var maxAlt=minAlt;var _iteratorNormalCompletion139=true;var _didIteratorError139=false;var _iteratorError139=undefined;try{for(var _iterator139=configs[Symbol.iterator](),_step139;!(_iteratorNormalCompletion139=(_step139=_iterator139.next()).done);_iteratorNormalCompletion139=true){var config=_step139.value;if(config.state.nonStopStateNumber!==currentState){break;}var alt=config.alt;representedAlts.set(alt);maxAlt=alt;}// quick check #3:
	}catch(err){_didIteratorError139=true;_iteratorError139=err;}finally{try{if(!_iteratorNormalCompletion139&&_iterator139.return){_iterator139.return();}}finally{if(_didIteratorError139){throw _iteratorError139;}}}currentState=configs[0].state.nonStopStateNumber;var currentAlt=minAlt;var _iteratorNormalCompletion140=true;var _didIteratorError140=false;var _iteratorError140=undefined;try{for(var _iterator140=configs[Symbol.iterator](),_step140;!(_iteratorNormalCompletion140=(_step140=_iterator140.next()).done);_iteratorNormalCompletion140=true){var _config3=_step140.value;var stateNumber=_config3.state.nonStopStateNumber;var _alt3=_config3.alt;if(stateNumber!==currentState){if(currentAlt!==maxAlt){exact=false;break;}currentState=stateNumber;currentAlt=minAlt;}else if(_alt3!==currentAlt){if(_alt3!==representedAlts.nextSetBit(currentAlt+1)){exact=false;break;}currentAlt=_alt3;}}}catch(err){_didIteratorError140=true;_iteratorError140=err;}finally{try{if(!_iteratorNormalCompletion140&&_iterator140.return){_iterator140.return();}}finally{if(_didIteratorError140){throw _iteratorError140;}}}}currentState=configs[0].state.nonStopStateNumber;var firstIndexCurrentState=0;var lastIndexCurrentStateMinAlt=0;var joinedCheckContext=configs[0].context;for(var i=1;i<configs.length;i++){var _config4=configs[i];if(_config4.alt!==minAlt){break;}if(_config4.state.nonStopStateNumber!==currentState){break;}lastIndexCurrentStateMinAlt=i;joinedCheckContext=contextCache.join(joinedCheckContext,configs[i].context);}for(var _i35=lastIndexCurrentStateMinAlt+1;_i35<configs.length;_i35++){var _config5=configs[_i35];var state=_config5.state;alts.set(_config5.alt);if(state.nonStopStateNumber!==currentState){currentState=state.nonStopStateNumber;firstIndexCurrentState=_i35;lastIndexCurrentStateMinAlt=_i35;joinedCheckContext=_config5.context;for(var j=firstIndexCurrentState+1;j<configs.length;j++){var config2=configs[j];if(config2.alt!==minAlt){break;}if(config2.state.nonStopStateNumber!==currentState){break;}lastIndexCurrentStateMinAlt=j;joinedCheckContext=contextCache.join(joinedCheckContext,config2.context);}_i35=lastIndexCurrentStateMinAlt;continue;}var joinedCheckContext2=_config5.context;var _currentAlt=_config5.alt;var lastIndexCurrentStateCurrentAlt=_i35;for(var _j4=lastIndexCurrentStateCurrentAlt+1;_j4<configs.length;_j4++){var _config6=configs[_j4];if(_config6.alt!==_currentAlt){break;}if(_config6.state.nonStopStateNumber!==currentState){break;}lastIndexCurrentStateCurrentAlt=_j4;joinedCheckContext2=contextCache.join(joinedCheckContext2,_config6.context);}_i35=lastIndexCurrentStateCurrentAlt;var check=contextCache.join(joinedCheckContext,joinedCheckContext2);if(!joinedCheckContext.equals(check)){return undefined;}// update exact if necessary
	exact=exact&&joinedCheckContext.equals(joinedCheckContext2);}return new ConflictInfo_1.ConflictInfo(alts,exact);}},{key:'getConflictingAltsFromConfigSet',value:function getConflictingAltsFromConfigSet(configs){var conflictingAlts=configs.conflictingAlts;if(conflictingAlts==null&&configs.uniqueAlt!==ATN_1.ATN.INVALID_ALT_NUMBER){conflictingAlts=new BitSet_1.BitSet();conflictingAlts.set(configs.uniqueAlt);}return conflictingAlts;}},{key:'getTokenName',value:function getTokenName(t){if(t===Token_1.Token.EOF){return "EOF";}var vocabulary=this._parser!=null?this._parser.vocabulary:VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY;var displayName=vocabulary.getDisplayName(t);if(displayName===String(t)){return displayName;}return displayName+"<"+t+">";}},{key:'getLookaheadName',value:function getLookaheadName(input){return this.getTokenName(input.LA(1));}},{key:'dumpDeadEndConfigs',value:function dumpDeadEndConfigs(nvae){console.log("dead end configs: ");var deadEndConfigs=nvae.deadEndConfigs;if(!deadEndConfigs){return;}var _iteratorNormalCompletion141=true;var _didIteratorError141=false;var _iteratorError141=undefined;try{for(var _iterator141=deadEndConfigs[Symbol.iterator](),_step141;!(_iteratorNormalCompletion141=(_step141=_iterator141.next()).done);_iteratorNormalCompletion141=true){var c=_step141.value;var trans="no edges";if(c.state.numberOfOptimizedTransitions>0){var t=c.state.getOptimizedTransition(0);if(t instanceof AtomTransition_1.AtomTransition){trans="Atom "+this.getTokenName(t._label);}else if(t instanceof SetTransition_1.SetTransition){var not=t instanceof NotSetTransition_1.NotSetTransition;trans=(not?"~":"")+"Set "+t.set.toString();}}console.log(c.toString(this._parser,true)+":"+trans);}}catch(err){_didIteratorError141=true;_iteratorError141=err;}finally{try{if(!_iteratorNormalCompletion141&&_iterator141.return){_iterator141.return();}}finally{if(_didIteratorError141){throw _iteratorError141;}}}}},{key:'noViableAlt',value:function noViableAlt(input,outerContext,configs,startIndex){return new NoViableAltException_1.NoViableAltException(this._parser,input,input.get(startIndex),input.LT(1),configs,outerContext);}},{key:'getUniqueAlt',value:function getUniqueAlt(configs){var alt=ATN_1.ATN.INVALID_ALT_NUMBER;var _iteratorNormalCompletion142=true;var _didIteratorError142=false;var _iteratorError142=undefined;try{for(var _iterator142=configs[Symbol.iterator](),_step142;!(_iteratorNormalCompletion142=(_step142=_iterator142.next()).done);_iteratorNormalCompletion142=true){var c=_step142.value;if(alt===ATN_1.ATN.INVALID_ALT_NUMBER){alt=c.alt;// found first alt
	}else if(c.alt!==alt){return ATN_1.ATN.INVALID_ALT_NUMBER;}}}catch(err){_didIteratorError142=true;_iteratorError142=err;}finally{try{if(!_iteratorNormalCompletion142&&_iterator142.return){_iterator142.return();}}finally{if(_didIteratorError142){throw _iteratorError142;}}}return alt;}},{key:'configWithAltAtStopState',value:function configWithAltAtStopState(configs,alt){var _iteratorNormalCompletion143=true;var _didIteratorError143=false;var _iteratorError143=undefined;try{for(var _iterator143=configs[Symbol.iterator](),_step143;!(_iteratorNormalCompletion143=(_step143=_iterator143.next()).done);_iteratorNormalCompletion143=true){var c=_step143.value;if(c.alt===alt){if(c.state instanceof RuleStopState_1.RuleStopState){return true;}}}}catch(err){_didIteratorError143=true;_iteratorError143=err;}finally{try{if(!_iteratorNormalCompletion143&&_iterator143.return){_iterator143.return();}}finally{if(_didIteratorError143){throw _iteratorError143;}}}return false;}},{key:'addDFAEdge',value:function addDFAEdge(dfa,fromState,t,contextTransitions,toConfigs,contextCache){assert(contextTransitions==null||contextTransitions.isEmpty||dfa.isContextSensitive);var from=fromState;var to=this.addDFAState(dfa,toConfigs,contextCache);if(contextTransitions!=null){var _iteratorNormalCompletion144=true;var _didIteratorError144=false;var _iteratorError144=undefined;try{for(var _iterator144=contextTransitions.toArray()[Symbol.iterator](),_step144;!(_iteratorNormalCompletion144=(_step144=_iterator144.next()).done);_iteratorNormalCompletion144=true){var context=_step144.value;if(context===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){if(from.configs.isOutermostConfigSet){continue;}}from.setContextSensitive(this.atn);from.setContextSymbol(t);var _next6=from.getContextTarget(context);if(_next6!=null){from=_next6;continue;}_next6=this.addDFAContextState(dfa,from.configs,context,contextCache);assert(context!==PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY||_next6.configs.isOutermostConfigSet);from.setContextTarget(context,_next6);from=_next6;}}catch(err){_didIteratorError144=true;_iteratorError144=err;}finally{try{if(!_iteratorNormalCompletion144&&_iterator144.return){_iterator144.return();}}finally{if(_didIteratorError144){throw _iteratorError144;}}}}if(ParserATNSimulator.debug){console.log("EDGE "+from+" -> "+to+" upon "+this.getTokenName(t));}this.setDFAEdge(from,t,to);if(ParserATNSimulator.debug){console.log("DFA=\n"+dfa.toString(this._parser!=null?this._parser.vocabulary:VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY,this._parser!=null?this._parser.ruleNames:undefined));}return to;}},{key:'setDFAEdge',value:function setDFAEdge(p,t,q){if(p!=null){p.setTarget(t,q);}}/** See comment on LexerInterpreter.addDFAState. */},{key:'addDFAContextState',value:function addDFAContextState(dfa,configs,returnContext,contextCache){if(returnContext!==PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){var contextConfigs=new ATNConfigSet_1.ATNConfigSet();var _iteratorNormalCompletion145=true;var _didIteratorError145=false;var _iteratorError145=undefined;try{for(var _iterator145=configs[Symbol.iterator](),_step145;!(_iteratorNormalCompletion145=(_step145=_iterator145.next()).done);_iteratorNormalCompletion145=true){var config=_step145.value;contextConfigs.add(config.appendContext(returnContext,contextCache));}}catch(err){_didIteratorError145=true;_iteratorError145=err;}finally{try{if(!_iteratorNormalCompletion145&&_iterator145.return){_iterator145.return();}}finally{if(_didIteratorError145){throw _iteratorError145;}}}return this.addDFAState(dfa,contextConfigs,contextCache);}else {assert(!configs.isOutermostConfigSet,"Shouldn't be adding a duplicate edge.");configs=configs.clone(true);configs.isOutermostConfigSet=true;return this.addDFAState(dfa,configs,contextCache);}}/** See comment on LexerInterpreter.addDFAState. */},{key:'addDFAState',value:function addDFAState(dfa,configs,contextCache){var enableDfa=this.enable_global_context_dfa||!configs.isOutermostConfigSet;if(enableDfa){if(!configs.isReadOnly){configs.optimizeConfigs(this);}var proposed=this.createDFAState(dfa,configs);var existing=dfa.states.get(proposed);if(existing!=null){return existing;}}if(!configs.isReadOnly){if(configs.conflictInfo==null){configs.conflictInfo=this.isConflicted(configs,contextCache);}}var newState=this.createDFAState(dfa,configs.clone(true));// getDecisionState won't return undefined when we request a known valid decision
	var decisionState=this.atn.getDecisionState(dfa.decision);var predictedAlt=this.getUniqueAlt(configs);if(predictedAlt!==ATN_1.ATN.INVALID_ALT_NUMBER){newState.acceptStateInfo=new AcceptStateInfo_1.AcceptStateInfo(predictedAlt);}else if(configs.conflictingAlts!=null){var conflictingAlts=configs.conflictingAlts;if(conflictingAlts){newState.acceptStateInfo=new AcceptStateInfo_1.AcceptStateInfo(conflictingAlts.nextSetBit(0));}}if(newState.isAcceptState&&configs.hasSemanticContext){this.predicateDFAState(newState,configs,decisionState.numberOfTransitions);}if(!enableDfa){return newState;}var added=dfa.addState(newState);if(ParserATNSimulator.debug&&added===newState){console.log("adding new DFA state: "+newState);}return added;}},{key:'createDFAState',value:function createDFAState(dfa,configs){return new DFAState_1.DFAState(configs);}},{key:'reportAttemptingFullContext',value:function reportAttemptingFullContext(dfa,conflictingAlts,conflictState,startIndex,stopIndex){if(ParserATNSimulator.debug||ParserATNSimulator.retry_debug){var interval=Interval_1.Interval.of(startIndex,stopIndex);console.log("reportAttemptingFullContext decision="+dfa.decision+":"+conflictState.s0.configs+", input="+this._parser.inputStream.getText(interval));}if(this._parser!=null){var listener=this._parser.getErrorListenerDispatch();if(listener.reportAttemptingFullContext){listener.reportAttemptingFullContext(this._parser,dfa,startIndex,stopIndex,conflictingAlts,conflictState);}}}},{key:'reportContextSensitivity',value:function reportContextSensitivity(dfa,prediction,acceptState,startIndex,stopIndex){if(ParserATNSimulator.debug||ParserATNSimulator.retry_debug){var interval=Interval_1.Interval.of(startIndex,stopIndex);console.log("reportContextSensitivity decision="+dfa.decision+":"+acceptState.s0.configs+", input="+this._parser.inputStream.getText(interval));}if(this._parser!=null){var listener=this._parser.getErrorListenerDispatch();if(listener.reportContextSensitivity){listener.reportContextSensitivity(this._parser,dfa,startIndex,stopIndex,prediction,acceptState);}}}/** If context sensitive parsing, we know it's ambiguity not conflict */},{key:'reportAmbiguity',value:function reportAmbiguity(dfa,D,// the DFA state from execATN(): void that had SLL conflicts
	startIndex,stopIndex,exact,ambigAlts,configs){if(ParserATNSimulator.debug||ParserATNSimulator.retry_debug){var interval=Interval_1.Interval.of(startIndex,stopIndex);console.log("reportAmbiguity "+ambigAlts+":"+configs+", input="+this._parser.inputStream.getText(interval));}if(this._parser!=null){var listener=this._parser.getErrorListenerDispatch();if(listener.reportAmbiguity){listener.reportAmbiguity(this._parser,dfa,startIndex,stopIndex,exact,ambigAlts,configs);}}}},{key:'getReturnState',value:function getReturnState(context){if(context.isEmpty){return PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY;}var state=this.atn.states[context.invokingState];var transition=state.transition(0);return transition.followState.stateNumber;}},{key:'skipTailCalls',value:function skipTailCalls(context){if(!this.optimize_tail_calls){return context;}while(!context.isEmpty){var state=this.atn.states[context.invokingState];assert(state.numberOfTransitions===1&&state.transition(0).serializationType===3/* RULE */);var transition=state.transition(0);if(!transition.tailCall){break;}// This method requires that the root ancestor of the ParserRuleContext be empty. If we make it to this
	// line, we know the current node is not empty, which means it does have a parent.
	context=context.parent;}return context;}/**
	     * @since 4.3
	     */},{key:'parser',get:function get(){return this._parser;}}]);return ParserATNSimulator;}(ATNSimulator_1.ATNSimulator);ParserATNSimulator.debug=false;ParserATNSimulator.dfa_debug=false;ParserATNSimulator.retry_debug=false;ParserATNSimulator.STATE_ALT_SORT_COMPARATOR=function(o1,o2){var diff=o1.state.nonStopStateNumber-o2.state.nonStopStateNumber;if(diff!==0){return diff;}diff=o1.alt-o2.alt;if(diff!==0){return diff;}return 0;};__decorate([Decorators_1.NotNull],ParserATNSimulator.prototype,"predictionMode",void 0);__decorate([Decorators_1.NotNull],ParserATNSimulator.prototype,"getPredictionMode",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"setPredictionMode",null);__decorate([Decorators_1.Override],ParserATNSimulator.prototype,"reset",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"adaptivePredict",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getStartState",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],ParserATNSimulator.prototype,"execDFA",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],ParserATNSimulator.prototype,"execATN",null);__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParserATNSimulator.prototype,"handleNoViableAlt",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getExistingTargetState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"computeTargetState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"removeAllConfigsNotInRuleStopState",null);__decorate([Decorators_1.NotNull],ParserATNSimulator.prototype,"computeStartState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"applyPrecedenceFilter",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getReachableTarget",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getPredsForAmbigAlts",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"evalSemanticContext",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"evalSemanticContextImpl",null);__decorate([__param(1,Decorators_1.NotNull),__param(4,Decorators_1.Nullable)],ParserATNSimulator.prototype,"closure",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.Nullable),__param(3,Decorators_1.NotNull),__param(6,Decorators_1.NotNull)],ParserATNSimulator.prototype,"closureImpl",null);__decorate([Decorators_1.NotNull],ParserATNSimulator.prototype,"getRuleName",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getEpsilonTarget",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"actionTransition",null);__decorate([Decorators_1.Nullable,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"precedenceTransition",null);__decorate([Decorators_1.Nullable,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"predTransition",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.Nullable)],ParserATNSimulator.prototype,"ruleTransition",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"isConflicted",null);__decorate([Decorators_1.NotNull],ParserATNSimulator.prototype,"getTokenName",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"dumpDeadEndConfigs",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParserATNSimulator.prototype,"noViableAlt",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"getUniqueAlt",null);__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator.prototype,"configWithAltAtStopState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(4,Decorators_1.NotNull)],ParserATNSimulator.prototype,"addDFAEdge",null);__decorate([__param(0,Decorators_1.Nullable),__param(2,Decorators_1.Nullable)],ParserATNSimulator.prototype,"setDFAEdge",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"addDFAContextState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"addDFAState",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParserATNSimulator.prototype,"createDFAState",null);__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParserATNSimulator.prototype,"reportAttemptingFullContext",null);__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParserATNSimulator.prototype,"reportContextSensitivity",null);__decorate([__param(0,Decorators_1.NotNull),__param(5,Decorators_1.NotNull),__param(6,Decorators_1.NotNull)],ParserATNSimulator.prototype,"reportAmbiguity",null);ParserATNSimulator=__decorate([__param(0,Decorators_1.NotNull)],ParserATNSimulator);exports.ParserATNSimulator=ParserATNSimulator;},{"../Decorators":224,"../IntStream":230,"../NoViableAltException":236,"../ParserRuleContext":239,"../Token":248,"../VocabularyImpl":250,"../dfa/AcceptStateInfo":315,"../dfa/DFAState":318,"../misc/Array2DHashSet":322,"../misc/Arrays":324,"../misc/BitSet":325,"../misc/IntegerList":328,"../misc/Interval":330,"../misc/ObjectEqualityComparator":334,"./ATN":251,"./ATNConfig":252,"./ATNConfigSet":253,"./ATNSimulator":256,"./ATNStateType":258,"./ActionTransition":260,"./AtomTransition":262,"./ConflictInfo":267,"./DecisionState":271,"./NotSetTransition":289,"./PredictionContext":298,"./PredictionContextCache":299,"./PredictionMode":300,"./RuleStopState":304,"./RuleTransition":305,"./SemanticContext":306,"./SetTransition":307,"./SimulatorState":308,"assert":364}],293:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:34.9572142-07:00
	var ATNStateType_1=require("./ATNStateType");var BlockStartState_1=require("./BlockStartState");var Decorators_1=require("../Decorators");/** Start of `(A|B|...)+` loop. Technically a decision state, but
	 *  we don't use for code generation; somebody might need it, so I'm defining
	 *  it for completeness. In reality, the {@link PlusLoopbackState} node is the
	 *  real decision-making note for `A+`.
	 */var PlusBlockStartState=function(_BlockStartState_1$Bl2){inherits(PlusBlockStartState,_BlockStartState_1$Bl2);function PlusBlockStartState(){classCallCheck(this,PlusBlockStartState);return possibleConstructorReturn(this,(PlusBlockStartState.__proto__||Object.getPrototypeOf(PlusBlockStartState)).apply(this,arguments));}createClass(PlusBlockStartState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.PLUS_BLOCK_START;}}]);return PlusBlockStartState;}(BlockStartState_1.BlockStartState);__decorate([Decorators_1.Override],PlusBlockStartState.prototype,"stateType",null);exports.PlusBlockStartState=PlusBlockStartState;},{"../Decorators":224,"./ATNStateType":258,"./BlockStartState":266}],294:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.0257730-07:00
	var ATNStateType_1=require("./ATNStateType");var DecisionState_1=require("./DecisionState");var Decorators_1=require("../Decorators");/** Decision state for `A+` and `(A|B)+`.  It has two transitions:
	 *  one to the loop back to start of the block and one to exit.
	 */var PlusLoopbackState=function(_DecisionState_1$Deci2){inherits(PlusLoopbackState,_DecisionState_1$Deci2);function PlusLoopbackState(){classCallCheck(this,PlusLoopbackState);return possibleConstructorReturn(this,(PlusLoopbackState.__proto__||Object.getPrototypeOf(PlusLoopbackState)).apply(this,arguments));}createClass(PlusLoopbackState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.PLUS_LOOP_BACK;}}]);return PlusLoopbackState;}(DecisionState_1.DecisionState);__decorate([Decorators_1.Override],PlusLoopbackState.prototype,"stateType",null);exports.PlusLoopbackState=PlusLoopbackState;},{"../Decorators":224,"./ATNStateType":258,"./DecisionState":271}],295:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.0994191-07:00
	var AbstractPredicateTransition_1=require("./AbstractPredicateTransition");var Decorators_1=require("../Decorators");var SemanticContext_1=require("./SemanticContext");/**
	 *
	 * @author Sam Harwell
	 */var PrecedencePredicateTransition=function(_AbstractPredicateTra){inherits(PrecedencePredicateTransition,_AbstractPredicateTra);function PrecedencePredicateTransition(target,precedence){classCallCheck(this,PrecedencePredicateTransition);var _this273=possibleConstructorReturn(this,(PrecedencePredicateTransition.__proto__||Object.getPrototypeOf(PrecedencePredicateTransition)).call(this,target));_this273.precedence=precedence;return _this273;}createClass(PrecedencePredicateTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return false;}},{key:'toString',value:function toString(){return this.precedence+" >= _p";}},{key:'serializationType',get:function get(){return 10/* PRECEDENCE */;}},{key:'isEpsilon',get:function get(){return true;}},{key:'predicate',get:function get(){return new SemanticContext_1.SemanticContext.PrecedencePredicate(this.precedence);}}]);return PrecedencePredicateTransition;}(AbstractPredicateTransition_1.AbstractPredicateTransition);__decorate([Decorators_1.Override],PrecedencePredicateTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],PrecedencePredicateTransition.prototype,"isEpsilon",null);__decorate([Decorators_1.Override],PrecedencePredicateTransition.prototype,"matches",null);__decorate([Decorators_1.Override],PrecedencePredicateTransition.prototype,"toString",null);PrecedencePredicateTransition=__decorate([__param(0,Decorators_1.NotNull)],PrecedencePredicateTransition);exports.PrecedencePredicateTransition=PrecedencePredicateTransition;},{"../Decorators":224,"./AbstractPredicateTransition":259,"./SemanticContext":306}],296:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.1914305-07:00
	var DecisionEventInfo_1=require("./DecisionEventInfo");var Decorators_1=require("../Decorators");/**
	 * This class represents profiling event information for semantic predicate
	 * evaluations which occur during prediction.
	 *
	 * @see ParserATNSimulator#evalSemanticContext
	 *
	 * @since 4.3
	 */var PredicateEvalInfo=function(_DecisionEventInfo_1$5){inherits(PredicateEvalInfo,_DecisionEventInfo_1$5);/**
	     * Constructs a new instance of the {@link PredicateEvalInfo} class with the
	     * specified detailed predicate evaluation information.
	     *
	     * @param state The simulator state
	     * @param decision The decision number
	     * @param input The input token stream
	     * @param startIndex The start index for the current prediction
	     * @param stopIndex The index at which the predicate evaluation was
	     * triggered. Note that the input stream may be reset to other positions for
	     * the actual evaluation of individual predicates.
	     * @param semctx The semantic context which was evaluated
	     * @param evalResult The results of evaluating the semantic context
	     * @param predictedAlt The alternative number for the decision which is
	     * guarded by the semantic context `semctx`. See {@link #predictedAlt}
	     * for more information.
	     *
	     * @see ParserATNSimulator#evalSemanticContext(SemanticContext, ParserRuleContext, int)
	     * @see SemanticContext#eval(Recognizer, RuleContext)
	     */function PredicateEvalInfo(state,decision,input,startIndex,stopIndex,semctx,evalResult,predictedAlt){classCallCheck(this,PredicateEvalInfo);var _this274=possibleConstructorReturn(this,(PredicateEvalInfo.__proto__||Object.getPrototypeOf(PredicateEvalInfo)).call(this,decision,state,input,startIndex,stopIndex,state.useContext));_this274.semctx=semctx;_this274.evalResult=evalResult;_this274.predictedAlt=predictedAlt;return _this274;}return PredicateEvalInfo;}(DecisionEventInfo_1.DecisionEventInfo);PredicateEvalInfo=__decorate([__param(0,Decorators_1.NotNull),__param(2,Decorators_1.NotNull),__param(5,Decorators_1.NotNull)],PredicateEvalInfo);exports.PredicateEvalInfo=PredicateEvalInfo;},{"../Decorators":224,"./DecisionEventInfo":269}],297:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.2826960-07:00
	var AbstractPredicateTransition_1=require("./AbstractPredicateTransition");var Decorators_1=require("../Decorators");var SemanticContext_1=require("./SemanticContext");/** TODO: this is old comment:
	 *  A tree of semantic predicates from the grammar AST if label==SEMPRED.
	 *  In the ATN, labels will always be exactly one predicate, but the DFA
	 *  may have to combine a bunch of them as it collects predicates from
	 *  multiple ATN configurations into a single DFA state.
	 */var PredicateTransition=function(_AbstractPredicateTra2){inherits(PredicateTransition,_AbstractPredicateTra2);function PredicateTransition(target,ruleIndex,predIndex,isCtxDependent){classCallCheck(this,PredicateTransition);var _this275=possibleConstructorReturn(this,(PredicateTransition.__proto__||Object.getPrototypeOf(PredicateTransition)).call(this,target));_this275.ruleIndex=ruleIndex;_this275.predIndex=predIndex;_this275.isCtxDependent=isCtxDependent;return _this275;}createClass(PredicateTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return false;}},{key:'toString',value:function toString(){return "pred_"+this.ruleIndex+":"+this.predIndex;}},{key:'serializationType',get:function get(){return 4/* PREDICATE */;}},{key:'isEpsilon',get:function get(){return true;}},{key:'predicate',get:function get(){return new SemanticContext_1.SemanticContext.Predicate(this.ruleIndex,this.predIndex,this.isCtxDependent);}}]);return PredicateTransition;}(AbstractPredicateTransition_1.AbstractPredicateTransition);__decorate([Decorators_1.Override],PredicateTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],PredicateTransition.prototype,"isEpsilon",null);__decorate([Decorators_1.Override],PredicateTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],PredicateTransition.prototype,"toString",null);PredicateTransition=__decorate([__param(0,Decorators_1.NotNull)],PredicateTransition);exports.PredicateTransition=PredicateTransition;},{"../Decorators":224,"./AbstractPredicateTransition":259,"./SemanticContext":306}],298:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.3812636-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var Array2DHashSet_1=require("../misc/Array2DHashSet");var Arrays_1=require("../misc/Arrays");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");var PredictionContextCache_1=require("./PredictionContextCache");var assert=require("assert");var INITIAL_HASH=1;var PredictionContext=function(){function PredictionContext(cachedHashCode){classCallCheck(this,PredictionContext);this.cachedHashCode=cachedHashCode;}createClass(PredictionContext,[{key:'appendSingleContext',value:function appendSingleContext(returnContext,contextCache){return this.appendContext(PredictionContext.EMPTY_FULL.getChild(returnContext),contextCache);}},{key:'getChild',value:function getChild(returnState){return new SingletonPredictionContext(this,returnState);}},{key:'hashCode',value:function hashCode(){return this.cachedHashCode;}},{key:'toStrings',value:function toStrings(recognizer,currentState){var stop=arguments.length>2&&arguments[2]!==undefined?arguments[2]:PredictionContext.EMPTY_FULL;var result=[];outer:for(var perm=0;;perm++){var offset=0;var last=true;var p=this;var stateNumber=currentState;var localBuffer="";localBuffer+="[";while(!p.isEmpty&&p!==stop){var index=0;if(p.size>0){var bits=1;while(1<<bits>>>0<p.size){bits++;}var mask=(1<<bits>>>0)-1;index=perm>>offset&mask;last=last&&index>=p.size-1;if(index>=p.size){continue outer;}offset+=bits;}if(recognizer){if(localBuffer.length>1){// first char is '[', if more than that this isn't the first rule
	localBuffer+=" ";}var atn=recognizer.atn;var s=atn.states[stateNumber];var ruleName=recognizer.ruleNames[s.ruleIndex];localBuffer+=ruleName;}else if(p.getReturnState(index)!==PredictionContext.EMPTY_FULL_STATE_KEY){if(!p.isEmpty){if(localBuffer.length>1){// first char is '[', if more than that this isn't the first rule
	localBuffer+=" ";}localBuffer+=p.getReturnState(index);}}stateNumber=p.getReturnState(index);p=p.getParent(index);}localBuffer+="]";result.push(localBuffer);if(last){break;}}return result;}}],[{key:'calculateEmptyHashCode',value:function calculateEmptyHashCode(){var hash=MurmurHash_1.MurmurHash.initialize(INITIAL_HASH);hash=MurmurHash_1.MurmurHash.finish(hash,0);return hash;}},{key:'calculateSingleHashCode',value:function calculateSingleHashCode(parent,returnState){var hash=MurmurHash_1.MurmurHash.initialize(INITIAL_HASH);hash=MurmurHash_1.MurmurHash.update(hash,parent);hash=MurmurHash_1.MurmurHash.update(hash,returnState);hash=MurmurHash_1.MurmurHash.finish(hash,2);return hash;}},{key:'calculateHashCode',value:function calculateHashCode(parents,returnStates){var hash=MurmurHash_1.MurmurHash.initialize(INITIAL_HASH);var _iteratorNormalCompletion146=true;var _didIteratorError146=false;var _iteratorError146=undefined;try{for(var _iterator146=parents[Symbol.iterator](),_step146;!(_iteratorNormalCompletion146=(_step146=_iterator146.next()).done);_iteratorNormalCompletion146=true){var parent=_step146.value;hash=MurmurHash_1.MurmurHash.update(hash,parent);}}catch(err){_didIteratorError146=true;_iteratorError146=err;}finally{try{if(!_iteratorNormalCompletion146&&_iterator146.return){_iterator146.return();}}finally{if(_didIteratorError146){throw _iteratorError146;}}}var _iteratorNormalCompletion147=true;var _didIteratorError147=false;var _iteratorError147=undefined;try{for(var _iterator147=returnStates[Symbol.iterator](),_step147;!(_iteratorNormalCompletion147=(_step147=_iterator147.next()).done);_iteratorNormalCompletion147=true){var returnState=_step147.value;hash=MurmurHash_1.MurmurHash.update(hash,returnState);}}catch(err){_didIteratorError147=true;_iteratorError147=err;}finally{try{if(!_iteratorNormalCompletion147&&_iterator147.return){_iterator147.return();}}finally{if(_didIteratorError147){throw _iteratorError147;}}}hash=MurmurHash_1.MurmurHash.finish(hash,2*parents.length);return hash;}},{key:'fromRuleContext',value:function fromRuleContext(atn,outerContext){var fullContext=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(outerContext.isEmpty){return fullContext?PredictionContext.EMPTY_FULL:PredictionContext.EMPTY_LOCAL;}var parent=void 0;if(outerContext._parent){parent=PredictionContext.fromRuleContext(atn,outerContext._parent,fullContext);}else {parent=fullContext?PredictionContext.EMPTY_FULL:PredictionContext.EMPTY_LOCAL;}var state=atn.states[outerContext.invokingState];var transition=state.transition(0);return parent.getChild(transition.followState.stateNumber);}},{key:'addEmptyContext',value:function addEmptyContext(context){return context.addEmptyContext();}},{key:'removeEmptyContext',value:function removeEmptyContext(context){return context.removeEmptyContext();}},{key:'join',value:function join(context0,context1){var contextCache=arguments.length>2&&arguments[2]!==undefined?arguments[2]:PredictionContextCache_1.PredictionContextCache.UNCACHED;if(context0===context1){return context0;}if(context0.isEmpty){return PredictionContext.isEmptyLocal(context0)?context0:PredictionContext.addEmptyContext(context1);}else if(context1.isEmpty){return PredictionContext.isEmptyLocal(context1)?context1:PredictionContext.addEmptyContext(context0);}var context0size=context0.size;var context1size=context1.size;if(context0size===1&&context1size===1&&context0.getReturnState(0)===context1.getReturnState(0)){var merged=contextCache.join(context0.getParent(0),context1.getParent(0));if(merged===context0.getParent(0)){return context0;}else if(merged===context1.getParent(0)){return context1;}else {return merged.getChild(context0.getReturnState(0));}}var count=0;var parentsList=new Array(context0size+context1size);var returnStatesList=new Array(parentsList.length);var leftIndex=0;var rightIndex=0;var canReturnLeft=true;var canReturnRight=true;while(leftIndex<context0size&&rightIndex<context1size){if(context0.getReturnState(leftIndex)===context1.getReturnState(rightIndex)){parentsList[count]=contextCache.join(context0.getParent(leftIndex),context1.getParent(rightIndex));returnStatesList[count]=context0.getReturnState(leftIndex);canReturnLeft=canReturnLeft&&parentsList[count]===context0.getParent(leftIndex);canReturnRight=canReturnRight&&parentsList[count]===context1.getParent(rightIndex);leftIndex++;rightIndex++;}else if(context0.getReturnState(leftIndex)<context1.getReturnState(rightIndex)){parentsList[count]=context0.getParent(leftIndex);returnStatesList[count]=context0.getReturnState(leftIndex);canReturnRight=false;leftIndex++;}else {assert(context1.getReturnState(rightIndex)<context0.getReturnState(leftIndex));parentsList[count]=context1.getParent(rightIndex);returnStatesList[count]=context1.getReturnState(rightIndex);canReturnLeft=false;rightIndex++;}count++;}while(leftIndex<context0size){parentsList[count]=context0.getParent(leftIndex);returnStatesList[count]=context0.getReturnState(leftIndex);leftIndex++;canReturnRight=false;count++;}while(rightIndex<context1size){parentsList[count]=context1.getParent(rightIndex);returnStatesList[count]=context1.getReturnState(rightIndex);rightIndex++;canReturnLeft=false;count++;}if(canReturnLeft){return context0;}else if(canReturnRight){return context1;}if(count<parentsList.length){parentsList=parentsList.slice(0,count);returnStatesList=returnStatesList.slice(0,count);}if(parentsList.length===0){// if one of them was EMPTY_LOCAL, it would be empty and handled at the beginning of the method
	return PredictionContext.EMPTY_FULL;}else if(parentsList.length===1){return new SingletonPredictionContext(parentsList[0],returnStatesList[0]);}else {return new ArrayPredictionContext(parentsList,returnStatesList);}}},{key:'isEmptyLocal',value:function isEmptyLocal(context){return context===PredictionContext.EMPTY_LOCAL;}},{key:'getCachedContext',value:function getCachedContext(context,contextCache,visited){if(context.isEmpty){return context;}var existing=visited.get(context);if(existing){return existing;}existing=contextCache.get(context);if(existing){visited.put(context,existing);return existing;}var changed=false;var parents=new Array(context.size);for(var i=0;i<parents.length;i++){var parent=PredictionContext.getCachedContext(context.getParent(i),contextCache,visited);if(changed||parent!==context.getParent(i)){if(!changed){parents=new Array(context.size);for(var j=0;j<context.size;j++){parents[j]=context.getParent(j);}changed=true;}parents[i]=parent;}}if(!changed){existing=contextCache.putIfAbsent(context,context);visited.put(context,existing!=null?existing:context);return context;}// We know parents.length>0 because context.isEmpty is checked at the beginning of the method.
	var updated=void 0;if(parents.length===1){updated=new SingletonPredictionContext(parents[0],context.getReturnState(0));}else {var returnStates=new Array(context.size);for(var _i36=0;_i36<context.size;_i36++){returnStates[_i36]=context.getReturnState(_i36);}updated=new ArrayPredictionContext(parents,returnStates,context.hashCode());}existing=contextCache.putIfAbsent(updated,updated);visited.put(updated,existing||updated);visited.put(context,existing||updated);return updated;}}]);return PredictionContext;}();__decorate([Decorators_1.Override],PredictionContext.prototype,"hashCode",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],PredictionContext,"join",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],PredictionContext,"getCachedContext",null);exports.PredictionContext=PredictionContext;var EmptyPredictionContext=function(_PredictionContext){inherits(EmptyPredictionContext,_PredictionContext);function EmptyPredictionContext(fullContext){classCallCheck(this,EmptyPredictionContext);var _this276=possibleConstructorReturn(this,(EmptyPredictionContext.__proto__||Object.getPrototypeOf(EmptyPredictionContext)).call(this,PredictionContext.calculateEmptyHashCode()));_this276.fullContext=fullContext;return _this276;}createClass(EmptyPredictionContext,[{key:'addEmptyContext',value:function addEmptyContext(){return this;}},{key:'removeEmptyContext',value:function removeEmptyContext(){throw new Error("Cannot remove the empty context from itself.");}},{key:'getParent',value:function getParent(index){throw new Error("index out of bounds");}},{key:'getReturnState',value:function getReturnState(index){throw new Error("index out of bounds");}},{key:'findReturnState',value:function findReturnState(returnState){return -1;}},{key:'appendSingleContext',value:function appendSingleContext(returnContext,contextCache){return contextCache.getChild(this,returnContext);}},{key:'appendContext',value:function appendContext(suffix,contextCache){return suffix;}},{key:'equals',value:function equals(o){return this===o;}},{key:'toStrings',value:function toStrings(recognizer,currentState,stop){return ["[]"];}},{key:'isFullContext',get:function get(){return this.fullContext;}},{key:'size',get:function get(){return 0;}},{key:'isEmpty',get:function get(){return true;}},{key:'hasEmpty',get:function get(){return true;}}]);return EmptyPredictionContext;}(PredictionContext);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"addEmptyContext",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"removeEmptyContext",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"getParent",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"getReturnState",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"findReturnState",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"size",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"appendSingleContext",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"appendContext",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"isEmpty",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"hasEmpty",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"equals",null);__decorate([Decorators_1.Override],EmptyPredictionContext.prototype,"toStrings",null);var ArrayPredictionContext=function(_PredictionContext2){inherits(ArrayPredictionContext,_PredictionContext2);function ArrayPredictionContext(parents,returnStates,hashCode){classCallCheck(this,ArrayPredictionContext);var _this277=possibleConstructorReturn(this,(ArrayPredictionContext.__proto__||Object.getPrototypeOf(ArrayPredictionContext)).call(this,hashCode||PredictionContext.calculateHashCode(parents,returnStates)));assert(parents.length===returnStates.length);assert(returnStates.length>1||returnStates[0]!==PredictionContext.EMPTY_FULL_STATE_KEY,"Should be using PredictionContext.EMPTY instead.");_this277.parents=parents;_this277.returnStates=returnStates;return _this277;}createClass(ArrayPredictionContext,[{key:'getParent',value:function getParent(index){return this.parents[index];}},{key:'getReturnState',value:function getReturnState(index){return this.returnStates[index];}},{key:'findReturnState',value:function findReturnState(returnState){return Arrays_1.Arrays.binarySearch(this.returnStates,returnState);}},{key:'addEmptyContext',value:function addEmptyContext(){if(this.hasEmpty){return this;}var parents2=this.parents.slice(0);var returnStates2=this.returnStates.slice(0);parents2.push(PredictionContext.EMPTY_FULL);returnStates2.push(PredictionContext.EMPTY_FULL_STATE_KEY);return new ArrayPredictionContext(parents2,returnStates2);}},{key:'removeEmptyContext',value:function removeEmptyContext(){if(!this.hasEmpty){return this;}if(this.returnStates.length===2){return new SingletonPredictionContext(this.parents[0],this.returnStates[0]);}else {var parents2=this.parents.slice(0,this.parents.length-1);var returnStates2=this.returnStates.slice(0,this.returnStates.length-1);return new ArrayPredictionContext(parents2,returnStates2);}}},{key:'appendContext',value:function appendContext(suffix,contextCache){return ArrayPredictionContext.appendContextImpl(this,suffix,new PredictionContext.IdentityHashMap());}},{key:'equals',value:function equals(o){if(this===o){return true;}else if(!(o instanceof ArrayPredictionContext)){return false;}if(this.hashCode()!==o.hashCode()){// can't be same if hash is different
	return false;}var other=o;return this.equalsImpl(other,new Array2DHashSet_1.Array2DHashSet());}},{key:'equalsImpl',value:function equalsImpl(other,visited){var selfWorkList=[];var otherWorkList=[];selfWorkList.push(this);otherWorkList.push(other);while(true){var currentSelf=selfWorkList.pop();var currentOther=otherWorkList.pop();if(!currentSelf||!currentOther){break;}var operands=new PredictionContextCache_1.PredictionContextCache.IdentityCommutativePredictionContextOperands(currentSelf,currentOther);if(!visited.add(operands)){continue;}var selfSize=operands.x.size;if(selfSize===0){if(!operands.x.equals(operands.y)){return false;}continue;}var otherSize=operands.y.size;if(selfSize!==otherSize){return false;}for(var i=0;i<selfSize;i++){if(operands.x.getReturnState(i)!==operands.y.getReturnState(i)){return false;}var selfParent=operands.x.getParent(i);var otherParent=operands.y.getParent(i);if(selfParent.hashCode()!==otherParent.hashCode()){return false;}if(selfParent!==otherParent){selfWorkList.push(selfParent);otherWorkList.push(otherParent);}}}return true;}},{key:'size',get:function get(){return this.returnStates.length;}},{key:'isEmpty',get:function get(){return false;}},{key:'hasEmpty',get:function get(){return this.returnStates[this.returnStates.length-1]===PredictionContext.EMPTY_FULL_STATE_KEY;}}],[{key:'appendContextImpl',value:function appendContextImpl(context,suffix,visited){if(suffix.isEmpty){if(PredictionContext.isEmptyLocal(suffix)){if(context.hasEmpty){return PredictionContext.EMPTY_LOCAL;}throw new Error("what to do here?");}return context;}if(suffix.size!==1){throw new Error("Appending a tree suffix is not yet supported.");}var result=visited.get(context);if(!result){if(context.isEmpty){result=suffix;}else {var parentCount=context.size;if(context.hasEmpty){parentCount--;}var updatedParents=new Array(parentCount);var updatedReturnStates=new Array(parentCount);for(var i=0;i<parentCount;i++){updatedReturnStates[i]=context.getReturnState(i);}for(var _i37=0;_i37<parentCount;_i37++){updatedParents[_i37]=ArrayPredictionContext.appendContextImpl(context.getParent(_i37),suffix,visited);}if(updatedParents.length===1){result=new SingletonPredictionContext(updatedParents[0],updatedReturnStates[0]);}else {assert(updatedParents.length>1);result=new ArrayPredictionContext(updatedParents,updatedReturnStates);}if(context.hasEmpty){result=PredictionContext.join(result,suffix);}}visited.put(context,result);}return result;}}]);return ArrayPredictionContext;}(PredictionContext);__decorate([Decorators_1.NotNull],ArrayPredictionContext.prototype,"parents",void 0);__decorate([Decorators_1.NotNull],ArrayPredictionContext.prototype,"returnStates",void 0);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"getParent",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"getReturnState",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"findReturnState",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"size",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"isEmpty",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"hasEmpty",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"addEmptyContext",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"removeEmptyContext",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"appendContext",null);__decorate([Decorators_1.Override],ArrayPredictionContext.prototype,"equals",null);ArrayPredictionContext=__decorate([__param(0,Decorators_1.NotNull)],ArrayPredictionContext);var SingletonPredictionContext=function(_PredictionContext3){inherits(SingletonPredictionContext,_PredictionContext3);function SingletonPredictionContext(parent,returnState){classCallCheck(this,SingletonPredictionContext);// assert(returnState != PredictionContext.EMPTY_FULL_STATE_KEY && returnState != PredictionContext.EMPTY_LOCAL_STATE_KEY);
	var _this278=possibleConstructorReturn(this,(SingletonPredictionContext.__proto__||Object.getPrototypeOf(SingletonPredictionContext)).call(this,PredictionContext.calculateSingleHashCode(parent,returnState)));_this278.parent=parent;_this278.returnState=returnState;return _this278;}createClass(SingletonPredictionContext,[{key:'getParent',value:function getParent(index){// assert(index == 0);
	return this.parent;}},{key:'getReturnState',value:function getReturnState(index){// assert(index == 0);
	return this.returnState;}},{key:'findReturnState',value:function findReturnState(returnState){return this.returnState===returnState?0:-1;}},{key:'appendContext',value:function appendContext(suffix,contextCache){return contextCache.getChild(this.parent.appendContext(suffix,contextCache),this.returnState);}},{key:'addEmptyContext',value:function addEmptyContext(){var parents=[this.parent,PredictionContext.EMPTY_FULL];var returnStates=[this.returnState,PredictionContext.EMPTY_FULL_STATE_KEY];return new ArrayPredictionContext(parents,returnStates);}},{key:'removeEmptyContext',value:function removeEmptyContext(){return this;}},{key:'equals',value:function equals(o){if(o===this){return true;}else if(!(o instanceof SingletonPredictionContext)){return false;}var other=o;if(this.hashCode()!==other.hashCode()){return false;}return this.returnState===other.returnState&&this.parent.equals(other.parent);}},{key:'size',get:function get(){return 1;}},{key:'isEmpty',get:function get(){return false;}},{key:'hasEmpty',get:function get(){return false;}}]);return SingletonPredictionContext;}(PredictionContext);__decorate([Decorators_1.NotNull],SingletonPredictionContext.prototype,"parent",void 0);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"getParent",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"getReturnState",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"findReturnState",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"size",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"isEmpty",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"hasEmpty",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"appendContext",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"addEmptyContext",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"removeEmptyContext",null);__decorate([Decorators_1.Override],SingletonPredictionContext.prototype,"equals",null);SingletonPredictionContext=__decorate([__param(0,Decorators_1.NotNull)],SingletonPredictionContext);exports.SingletonPredictionContext=SingletonPredictionContext;(function(PredictionContext){PredictionContext.EMPTY_LOCAL=new EmptyPredictionContext(false);PredictionContext.EMPTY_FULL=new EmptyPredictionContext(true);PredictionContext.EMPTY_LOCAL_STATE_KEY=-(1<<31>>>0);PredictionContext.EMPTY_FULL_STATE_KEY=(1<<31>>>0)-1;var IdentityHashMap=function(_Array2DHashMap_1$Arr){inherits(IdentityHashMap,_Array2DHashMap_1$Arr);function IdentityHashMap(){classCallCheck(this,IdentityHashMap);return possibleConstructorReturn(this,(IdentityHashMap.__proto__||Object.getPrototypeOf(IdentityHashMap)).call(this,IdentityEqualityComparator.INSTANCE));}return IdentityHashMap;}(Array2DHashMap_1.Array2DHashMap);PredictionContext.IdentityHashMap=IdentityHashMap;var IdentityEqualityComparator=function(){function IdentityEqualityComparator(){classCallCheck(this,IdentityEqualityComparator);}createClass(IdentityEqualityComparator,[{key:'IdentityEqualityComparator',value:function IdentityEqualityComparator(){// intentionally empty
	}},{key:'hashCode',value:function hashCode(obj){return obj.hashCode();}},{key:'equals',value:function equals(a,b){return a===b;}}]);return IdentityEqualityComparator;}();IdentityEqualityComparator.INSTANCE=new IdentityEqualityComparator();__decorate([Decorators_1.Override],IdentityEqualityComparator.prototype,"hashCode",null);__decorate([Decorators_1.Override],IdentityEqualityComparator.prototype,"equals",null);PredictionContext.IdentityEqualityComparator=IdentityEqualityComparator;})(PredictionContext=exports.PredictionContext||(exports.PredictionContext={}));},{"../Decorators":224,"../misc/Array2DHashMap":321,"../misc/Array2DHashSet":322,"../misc/Arrays":324,"../misc/MurmurHash":333,"./PredictionContextCache":299,"assert":364}],299:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:35.6390614-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var PredictionContext_1=require("./PredictionContext");var assert=require("assert");/** Used to cache {@link PredictionContext} objects. Its used for the shared
	 *  context cash associated with contexts in DFA states. This cache
	 *  can be used for both lexers and parsers.
	 *
	 * @author Sam Harwell
	 */var PredictionContextCache=function(){function PredictionContextCache(){var enableCache=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;classCallCheck(this,PredictionContextCache);this.contexts=new Array2DHashMap_1.Array2DHashMap(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);this.childContexts=new Array2DHashMap_1.Array2DHashMap(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);this.joinContexts=new Array2DHashMap_1.Array2DHashMap(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);this.enableCache=enableCache;}createClass(PredictionContextCache,[{key:'getAsCached',value:function getAsCached(context){if(!this.enableCache){return context;}var result=this.contexts.get(context);if(!result){result=context;this.contexts.put(context,context);}return result;}},{key:'getChild',value:function getChild(context,invokingState){if(!this.enableCache){return context.getChild(invokingState);}var operands=new PredictionContextCache.PredictionContextAndInt(context,invokingState);var result=this.childContexts.get(operands);if(!result){result=context.getChild(invokingState);result=this.getAsCached(result);this.childContexts.put(operands,result);}return result;}},{key:'join',value:function join(x,y){if(!this.enableCache){return PredictionContext_1.PredictionContext.join(x,y,this);}var operands=new PredictionContextCache.IdentityCommutativePredictionContextOperands(x,y);var result=this.joinContexts.get(operands);if(result){return result;}result=PredictionContext_1.PredictionContext.join(x,y,this);result=this.getAsCached(result);this.joinContexts.put(operands,result);return result;}}]);return PredictionContextCache;}();PredictionContextCache.UNCACHED=new PredictionContextCache(false);exports.PredictionContextCache=PredictionContextCache;(function(PredictionContextCache){var PredictionContextAndInt=function(){function PredictionContextAndInt(obj,value){classCallCheck(this,PredictionContextAndInt);this.obj=obj;this.value=value;}createClass(PredictionContextAndInt,[{key:'equals',value:function equals(obj){if(!(obj instanceof PredictionContextAndInt)){return false;}else if(obj===this){return true;}var other=obj;return this.value===other.value&&(this.obj===other.obj||this.obj!=null&&this.obj.equals(other.obj));}},{key:'hashCode',value:function hashCode(){var hashCode=5;hashCode=7*hashCode+(this.obj!=null?this.obj.hashCode():0);hashCode=7*hashCode+this.value;return hashCode;}}]);return PredictionContextAndInt;}();__decorate([Decorators_1.Override],PredictionContextAndInt.prototype,"equals",null);__decorate([Decorators_1.Override],PredictionContextAndInt.prototype,"hashCode",null);PredictionContextCache.PredictionContextAndInt=PredictionContextAndInt;var IdentityCommutativePredictionContextOperands=function(){function IdentityCommutativePredictionContextOperands(x,y){classCallCheck(this,IdentityCommutativePredictionContextOperands);assert(x!=null);assert(y!=null);this._x=x;this._y=y;}createClass(IdentityCommutativePredictionContextOperands,[{key:'equals',value:function equals(o){if(!(o instanceof IdentityCommutativePredictionContextOperands)){return false;}else if(this===o){return true;}var other=o;return this._x===other._x&&this._y===other._y||this._x===other._y&&this._y===other._x;}},{key:'hashCode',value:function hashCode(){return this._x.hashCode()^this._y.hashCode();}},{key:'x',get:function get(){return this._x;}},{key:'y',get:function get(){return this._y;}}]);return IdentityCommutativePredictionContextOperands;}();__decorate([Decorators_1.Override],IdentityCommutativePredictionContextOperands.prototype,"equals",null);__decorate([Decorators_1.Override],IdentityCommutativePredictionContextOperands.prototype,"hashCode",null);PredictionContextCache.IdentityCommutativePredictionContextOperands=IdentityCommutativePredictionContextOperands;})(PredictionContextCache=exports.PredictionContextCache||(exports.PredictionContextCache={}));},{"../Decorators":224,"../misc/Array2DHashMap":321,"../misc/ObjectEqualityComparator":334,"./PredictionContext":298,"assert":364}],300:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:36.2673893-07:00
	var Array2DHashMap_1=require("../misc/Array2DHashMap");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");var RuleStopState_1=require("./RuleStopState");(function(PredictionMode){/**
	     * The SLL(*) prediction mode. This prediction mode ignores the current
	     * parser context when making predictions. This is the fastest prediction
	     * mode, and provides correct results for many grammars. This prediction
	     * mode is more powerful than the prediction mode provided by ANTLR 3, but
	     * may result in syntax errors for grammar and input combinations which are
	     * not SLL.
	     *
	     * When using this prediction mode, the parser will either return a correct
	     * parse tree (i.e. the same parse tree that would be returned with the
	     * {@link #LL} prediction mode), or it will report a syntax error. If a
	     * syntax error is encountered when using the {@link #SLL} prediction mode,
	     * it may be due to either an actual syntax error in the input or indicate
	     * that the particular combination of grammar and input requires the more
	     * powerful {@link #LL} prediction abilities to complete successfully.
	     *
	     * This prediction mode does not provide any guarantees for prediction
	     * behavior for syntactically-incorrect inputs.
	     */PredictionMode[PredictionMode["SLL"]=0]="SLL";/**
	     * The LL(*) prediction mode. This prediction mode allows the current parser
	     * context to be used for resolving SLL conflicts that occur during
	     * prediction. This is the fastest prediction mode that guarantees correct
	     * parse results for all combinations of grammars with syntactically correct
	     * inputs.
	     *
	     * When using this prediction mode, the parser will make correct decisions
	     * for all syntactically-correct grammar and input combinations. However, in
	     * cases where the grammar is truly ambiguous this prediction mode might not
	     * report a precise answer for *exactly which* alternatives are
	     * ambiguous.
	     *
	     * This prediction mode does not provide any guarantees for prediction
	     * behavior for syntactically-incorrect inputs.
	     */PredictionMode[PredictionMode["LL"]=1]="LL";/**
	     * The LL(*) prediction mode with exact ambiguity detection. In addition to
	     * the correctness guarantees provided by the {@link #LL} prediction mode,
	     * this prediction mode instructs the prediction algorithm to determine the
	     * complete and exact set of ambiguous alternatives for every ambiguous
	     * decision encountered while parsing.
	     *
	     * This prediction mode may be used for diagnosing ambiguities during
	     * grammar development. Due to the performance overhead of calculating sets
	     * of ambiguous alternatives, this prediction mode should be avoided when
	     * the exact results are not necessary.
	     *
	     * This prediction mode does not provide any guarantees for prediction
	     * behavior for syntactically-incorrect inputs.
	     */PredictionMode[PredictionMode["LL_EXACT_AMBIG_DETECTION"]=2]="LL_EXACT_AMBIG_DETECTION";})(exports.PredictionMode||(exports.PredictionMode={}));(function(PredictionMode){/** A Map that uses just the state and the stack context as the key. */// NOTE: Base type used to be FlexibleHashMap<ATNConfig, BitSet>
	var AltAndContextMap=function(_Array2DHashMap_1$Arr2){inherits(AltAndContextMap,_Array2DHashMap_1$Arr2);function AltAndContextMap(){classCallCheck(this,AltAndContextMap);return possibleConstructorReturn(this,(AltAndContextMap.__proto__||Object.getPrototypeOf(AltAndContextMap)).call(this,AltAndContextConfigEqualityComparator.INSTANCE));}return AltAndContextMap;}(Array2DHashMap_1.Array2DHashMap);var AltAndContextConfigEqualityComparator=function(){function AltAndContextConfigEqualityComparator(){classCallCheck(this,AltAndContextConfigEqualityComparator);}createClass(AltAndContextConfigEqualityComparator,[{key:'AltAndContextConfigEqualityComparator',value:function AltAndContextConfigEqualityComparator(){}// intentionally empty
	/**
	         * The hash code is only a function of the {@link ATNState#stateNumber}
	         * and {@link ATNConfig#context}.
	         */},{key:'hashCode',value:function hashCode(o){var hashCode=MurmurHash_1.MurmurHash.initialize(7);hashCode=MurmurHash_1.MurmurHash.update(hashCode,o.state.stateNumber);hashCode=MurmurHash_1.MurmurHash.update(hashCode,o.context);hashCode=MurmurHash_1.MurmurHash.finish(hashCode,2);return hashCode;}},{key:'equals',value:function equals(a,b){if(a===b){return true;}if(a==null||b==null){return false;}return a.state.stateNumber===b.state.stateNumber&&a.context.equals(b.context);}}]);return AltAndContextConfigEqualityComparator;}();AltAndContextConfigEqualityComparator.INSTANCE=new AltAndContextConfigEqualityComparator();__decorate([Decorators_1.Override],AltAndContextConfigEqualityComparator.prototype,"hashCode",null);__decorate([Decorators_1.Override],AltAndContextConfigEqualityComparator.prototype,"equals",null);/**
	     * Checks if any configuration in `configs` is in a
	     * {@link RuleStopState}. Configurations meeting this condition have reached
	     * the end of the decision rule (local context) or end of start rule (full
	     * context).
	     *
	     * @param configs the configuration set to test
	     * @returns `true` if any configuration in `configs` is in a
	     * {@link RuleStopState}, otherwise `false`
	     */function hasConfigInRuleStopState(configs){var _iteratorNormalCompletion148=true;var _didIteratorError148=false;var _iteratorError148=undefined;try{for(var _iterator148=configs[Symbol.iterator](),_step148;!(_iteratorNormalCompletion148=(_step148=_iterator148.next()).done);_iteratorNormalCompletion148=true){var c=_step148.value;if(c.state instanceof RuleStopState_1.RuleStopState){return true;}}}catch(err){_didIteratorError148=true;_iteratorError148=err;}finally{try{if(!_iteratorNormalCompletion148&&_iterator148.return){_iterator148.return();}}finally{if(_didIteratorError148){throw _iteratorError148;}}}return false;}PredictionMode.hasConfigInRuleStopState=hasConfigInRuleStopState;/**
	     * Checks if all configurations in `configs` are in a
	     * {@link RuleStopState}. Configurations meeting this condition have reached
	     * the end of the decision rule (local context) or end of start rule (full
	     * context).
	     *
	     * @param configs the configuration set to test
	     * @returns `true` if all configurations in `configs` are in a
	     * {@link RuleStopState}, otherwise `false`
	     */function allConfigsInRuleStopStates(/*@NotNull*/configs){var _iteratorNormalCompletion149=true;var _didIteratorError149=false;var _iteratorError149=undefined;try{for(var _iterator149=configs[Symbol.iterator](),_step149;!(_iteratorNormalCompletion149=(_step149=_iterator149.next()).done);_iteratorNormalCompletion149=true){var config=_step149.value;if(!(config.state instanceof RuleStopState_1.RuleStopState)){return false;}}}catch(err){_didIteratorError149=true;_iteratorError149=err;}finally{try{if(!_iteratorNormalCompletion149&&_iterator149.return){_iterator149.return();}}finally{if(_didIteratorError149){throw _iteratorError149;}}}return true;}PredictionMode.allConfigsInRuleStopStates=allConfigsInRuleStopStates;})(exports.PredictionMode||(exports.PredictionMode={}));},{"../Decorators":224,"../misc/Array2DHashMap":321,"../misc/MurmurHash":333,"./RuleStopState":304}],301:[function(require,module,exports){(function(process){(function(){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:36.4188352-07:00
	var AmbiguityInfo_1=require("./AmbiguityInfo");var ATN_1=require("./ATN");var ATNSimulator_1=require("./ATNSimulator");var ContextSensitivityInfo_1=require("./ContextSensitivityInfo");var DecisionInfo_1=require("./DecisionInfo");var ErrorInfo_1=require("./ErrorInfo");var Decorators_1=require("../Decorators");var LookaheadEventInfo_1=require("./LookaheadEventInfo");var ParserATNSimulator_1=require("./ParserATNSimulator");var PredicateEvalInfo_1=require("./PredicateEvalInfo");var SemanticContext_1=require("./SemanticContext");var SimulatorState_1=require("./SimulatorState");/**
	 * @since 4.3
	 */var ProfilingATNSimulator=function(_ParserATNSimulator_){inherits(ProfilingATNSimulator,_ParserATNSimulator_);function ProfilingATNSimulator(parser){classCallCheck(this,ProfilingATNSimulator);var _this281=possibleConstructorReturn(this,(ProfilingATNSimulator.__proto__||Object.getPrototypeOf(ProfilingATNSimulator)).call(this,parser.interpreter.atn,parser));_this281._startIndex=0;_this281._sllStopIndex=0;_this281._llStopIndex=0;_this281.currentDecision=0;/** At the point of LL failover, we record how SLL would resolve the conflict so that
	         *  we can determine whether or not a decision / input pair is context-sensitive.
	         *  If LL gives a different result than SLL's predicted alternative, we have a
	         *  context sensitivity for sure. The converse is not necessarily true, however.
	         *  It's possible that after conflict resolution chooses minimum alternatives,
	         *  SLL could get the same answer as LL. Regardless of whether or not the result indicates
	         *  an ambiguity, it is not treated as a context sensitivity because LL prediction
	         *  was not required in order to produce a correct prediction for this decision and input sequence.
	         *  It may in fact still be a context sensitivity but we don't know by looking at the
	         *  minimum alternatives for the current input.
	         */_this281.conflictingAltResolvedBySLL=0;_this281.optimize_ll1=false;_this281.reportAmbiguities=true;_this281.numDecisions=_this281.atn.decisionToState.length;_this281.decisions=[];for(var i=0;i<_this281.numDecisions;i++){_this281.decisions.push(new DecisionInfo_1.DecisionInfo(i));}return _this281;}createClass(ProfilingATNSimulator,[{key:'adaptivePredict',value:function adaptivePredict(input,decision,outerContext,useContext){if(useContext!==undefined){return get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'adaptivePredict',this).call(this,input,decision,outerContext,useContext);}try{this._input=input;this._startIndex=input.index;// it's possible for SLL to reach a conflict state without consuming any input
	this._sllStopIndex=this._startIndex-1;this._llStopIndex=-1;this.currentDecision=decision;this.currentState=undefined;this.conflictingAltResolvedBySLL=ATN_1.ATN.INVALID_ALT_NUMBER;var start=process.hrtime();var alt=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'adaptivePredict',this).call(this,input,decision,outerContext);var stop=process.hrtime();var nanoseconds=(stop[0]-start[0])*1000000000;if(nanoseconds===0){nanoseconds=stop[1]-start[1];}else {// Add nanoseconds from start to end of that second, plus start of the end second to end
	nanoseconds+=1000000000-start[1]+stop[1];}this.decisions[decision].timeInPrediction+=nanoseconds;this.decisions[decision].invocations++;var SLL_k=this._sllStopIndex-this._startIndex+1;this.decisions[decision].SLL_TotalLook+=SLL_k;this.decisions[decision].SLL_MinLook=this.decisions[decision].SLL_MinLook===0?SLL_k:Math.min(this.decisions[decision].SLL_MinLook,SLL_k);if(SLL_k>this.decisions[decision].SLL_MaxLook){this.decisions[decision].SLL_MaxLook=SLL_k;this.decisions[decision].SLL_MaxLookEvent=new LookaheadEventInfo_1.LookaheadEventInfo(decision,undefined,alt,input,this._startIndex,this._sllStopIndex,false);}if(this._llStopIndex>=0){var LL_k=this._llStopIndex-this._startIndex+1;this.decisions[decision].LL_TotalLook+=LL_k;this.decisions[decision].LL_MinLook=this.decisions[decision].LL_MinLook===0?LL_k:Math.min(this.decisions[decision].LL_MinLook,LL_k);if(LL_k>this.decisions[decision].LL_MaxLook){this.decisions[decision].LL_MaxLook=LL_k;this.decisions[decision].LL_MaxLookEvent=new LookaheadEventInfo_1.LookaheadEventInfo(decision,undefined,alt,input,this._startIndex,this._llStopIndex,true);}}return alt;}finally{this._input=undefined;this.currentDecision=-1;}}},{key:'getStartState',value:function getStartState(dfa,input,outerContext,useContext){var state=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'getStartState',this).call(this,dfa,input,outerContext,useContext);this.currentState=state;return state;}},{key:'computeStartState',value:function computeStartState(dfa,globalContext,useContext){var state=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'computeStartState',this).call(this,dfa,globalContext,useContext);this.currentState=state;return state;}},{key:'computeReachSet',value:function computeReachSet(dfa,previous,t,contextCache){if(this._input===undefined){throw new Error("Invalid state");}var reachState=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'computeReachSet',this).call(this,dfa,previous,t,contextCache);if(reachState==null){// no reach on current lookahead symbol. ERROR.
	this.decisions[this.currentDecision].errors.push(new ErrorInfo_1.ErrorInfo(this.currentDecision,previous,this._input,this._startIndex,this._input.index));}this.currentState=reachState;return reachState;}},{key:'getExistingTargetState',value:function getExistingTargetState(previousD,t){if(this.currentState===undefined||this._input===undefined){throw new Error("Invalid state");}// this method is called after each time the input position advances
	if(this.currentState.useContext){this._llStopIndex=this._input.index;}else {this._sllStopIndex=this._input.index;}var existingTargetState=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'getExistingTargetState',this).call(this,previousD,t);if(existingTargetState!=null){// this method is directly called by execDFA; must construct a SimulatorState
	// to represent the current state for this case
	this.currentState=new SimulatorState_1.SimulatorState(this.currentState.outerContext,existingTargetState,this.currentState.useContext,this.currentState.remainingOuterContext);if(this.currentState.useContext){this.decisions[this.currentDecision].LL_DFATransitions++;}else {this.decisions[this.currentDecision].SLL_DFATransitions++;// count only if we transition over a DFA state
	}if(existingTargetState===ATNSimulator_1.ATNSimulator.ERROR){var state=new SimulatorState_1.SimulatorState(this.currentState.outerContext,previousD,this.currentState.useContext,this.currentState.remainingOuterContext);this.decisions[this.currentDecision].errors.push(new ErrorInfo_1.ErrorInfo(this.currentDecision,state,this._input,this._startIndex,this._input.index));}}return existingTargetState;}},{key:'computeTargetState',value:function computeTargetState(dfa,s,remainingGlobalContext,t,useContext,contextCache){var targetState=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'computeTargetState',this).call(this,dfa,s,remainingGlobalContext,t,useContext,contextCache);if(useContext){this.decisions[this.currentDecision].LL_ATNTransitions++;}else {this.decisions[this.currentDecision].SLL_ATNTransitions++;}return targetState;}},{key:'evalSemanticContextImpl',value:function evalSemanticContextImpl(pred,parserCallStack,alt){if(this.currentState===undefined||this._input===undefined){throw new Error("Invalid state");}var result=get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'evalSemanticContextImpl',this).call(this,pred,parserCallStack,alt);if(!(pred instanceof SemanticContext_1.SemanticContext.PrecedencePredicate)){var fullContext=this._llStopIndex>=0;var stopIndex=fullContext?this._llStopIndex:this._sllStopIndex;this.decisions[this.currentDecision].predicateEvals.push(new PredicateEvalInfo_1.PredicateEvalInfo(this.currentState,this.currentDecision,this._input,this._startIndex,stopIndex,pred,result,alt));}return result;}},{key:'reportContextSensitivity',value:function reportContextSensitivity(dfa,prediction,acceptState,startIndex,stopIndex){if(this._input===undefined){throw new Error("Invalid state");}if(prediction!==this.conflictingAltResolvedBySLL){this.decisions[this.currentDecision].contextSensitivities.push(new ContextSensitivityInfo_1.ContextSensitivityInfo(this.currentDecision,acceptState,this._input,startIndex,stopIndex));}get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'reportContextSensitivity',this).call(this,dfa,prediction,acceptState,startIndex,stopIndex);}},{key:'reportAttemptingFullContext',value:function reportAttemptingFullContext(dfa,conflictingAlts,conflictState,startIndex,stopIndex){if(conflictingAlts!=null){this.conflictingAltResolvedBySLL=conflictingAlts.nextSetBit(0);}else {this.conflictingAltResolvedBySLL=conflictState.s0.configs.getRepresentedAlternatives().nextSetBit(0);}this.decisions[this.currentDecision].LL_Fallback++;get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'reportAttemptingFullContext',this).call(this,dfa,conflictingAlts,conflictState,startIndex,stopIndex);}},{key:'reportAmbiguity',value:function reportAmbiguity(dfa,D,startIndex,stopIndex,exact,ambigAlts,configs){if(this.currentState===undefined||this._input===undefined){throw new Error("Invalid state");}var prediction=void 0;if(ambigAlts!=null){prediction=ambigAlts.nextSetBit(0);}else {prediction=configs.getRepresentedAlternatives().nextSetBit(0);}if(this.conflictingAltResolvedBySLL!==ATN_1.ATN.INVALID_ALT_NUMBER&&prediction!==this.conflictingAltResolvedBySLL){// Even though this is an ambiguity we are reporting, we can
	// still detect some context sensitivities.  Both SLL and LL
	// are showing a conflict, hence an ambiguity, but if they resolve
	// to different minimum alternatives we have also identified a
	// context sensitivity.
	this.decisions[this.currentDecision].contextSensitivities.push(new ContextSensitivityInfo_1.ContextSensitivityInfo(this.currentDecision,this.currentState,this._input,startIndex,stopIndex));}this.decisions[this.currentDecision].ambiguities.push(new AmbiguityInfo_1.AmbiguityInfo(this.currentDecision,this.currentState,ambigAlts,this._input,startIndex,stopIndex));get(ProfilingATNSimulator.prototype.__proto__||Object.getPrototypeOf(ProfilingATNSimulator.prototype),'reportAmbiguity',this).call(this,dfa,D,startIndex,stopIndex,exact,ambigAlts,configs);}// ---------------------------------------------------------------------
	},{key:'getDecisionInfo',value:function getDecisionInfo(){return this.decisions;}},{key:'getCurrentState',value:function getCurrentState(){return this.currentState;}}]);return ProfilingATNSimulator;}(ParserATNSimulator_1.ParserATNSimulator);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],ProfilingATNSimulator.prototype,"adaptivePredict",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"getStartState",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"computeStartState",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"computeReachSet",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"getExistingTargetState",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"computeTargetState",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"evalSemanticContextImpl",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"reportContextSensitivity",null);__decorate([Decorators_1.Override],ProfilingATNSimulator.prototype,"reportAttemptingFullContext",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull),__param(5,Decorators_1.NotNull),__param(6,Decorators_1.NotNull)],ProfilingATNSimulator.prototype,"reportAmbiguity",null);exports.ProfilingATNSimulator=ProfilingATNSimulator;}).call(this);}).call(this,require('_process'));},{"../Decorators":224,"./ATN":251,"./ATNSimulator":256,"./AmbiguityInfo":261,"./ContextSensitivityInfo":268,"./DecisionInfo":270,"./ErrorInfo":273,"./LookaheadEventInfo":287,"./ParserATNSimulator":292,"./PredicateEvalInfo":296,"./SemanticContext":306,"./SimulatorState":308,"_process":516}],302:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var IntervalSet_1=require("../misc/IntervalSet");var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");var RangeTransition=function(_Transition_1$Transit5){inherits(RangeTransition,_Transition_1$Transit5);function RangeTransition(target,from,to){classCallCheck(this,RangeTransition);var _this282=possibleConstructorReturn(this,(RangeTransition.__proto__||Object.getPrototypeOf(RangeTransition)).call(this,target));_this282.from=from;_this282.to=to;return _this282;}createClass(RangeTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=this.from&&symbol<=this.to;}},{key:'toString',value:function toString(){return "'"+String.fromCodePoint(this.from)+"'..'"+String.fromCodePoint(this.to)+"'";}},{key:'serializationType',get:function get(){return 2/* RANGE */;}},{key:'label',get:function get(){return IntervalSet_1.IntervalSet.of(this.from,this.to);}}]);return RangeTransition;}(Transition_1.Transition);__decorate([Decorators_1.Override],RangeTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],RangeTransition.prototype,"label",null);__decorate([Decorators_1.Override],RangeTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],RangeTransition.prototype,"toString",null);RangeTransition=__decorate([__param(0,Decorators_1.NotNull)],RangeTransition);exports.RangeTransition=RangeTransition;},{"../Decorators":224,"../misc/IntervalSet":331,"./Transition":313}],303:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:36.6806851-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");var RuleStartState=function(_ATNState_1$ATNState5){inherits(RuleStartState,_ATNState_1$ATNState5);function RuleStartState(){classCallCheck(this,RuleStartState);var _this283=possibleConstructorReturn(this,(RuleStartState.__proto__||Object.getPrototypeOf(RuleStartState)).apply(this,arguments));_this283.isPrecedenceRule=false;_this283.leftFactored=false;return _this283;}createClass(RuleStartState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.RULE_START;}}]);return RuleStartState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],RuleStartState.prototype,"stateType",null);exports.RuleStartState=RuleStartState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],304:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:36.7513856-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");/** The last node in the ATN for a rule, unless that rule is the start symbol.
	 *  In that case, there is one transition to EOF. Later, we might encode
	 *  references to all calls to this rule to compute FOLLOW sets for
	 *  error handling.
	 */var RuleStopState=function(_ATNState_1$ATNState6){inherits(RuleStopState,_ATNState_1$ATNState6);function RuleStopState(){classCallCheck(this,RuleStopState);return possibleConstructorReturn(this,(RuleStopState.__proto__||Object.getPrototypeOf(RuleStopState)).apply(this,arguments));}createClass(RuleStopState,[{key:'nonStopStateNumber',get:function get(){return -1;}},{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.RULE_STOP;}}]);return RuleStopState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],RuleStopState.prototype,"nonStopStateNumber",null);__decorate([Decorators_1.Override],RuleStopState.prototype,"stateType",null);exports.RuleStopState=RuleStopState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],305:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");/** */var RuleTransition=function(_Transition_1$Transit6){inherits(RuleTransition,_Transition_1$Transit6);function RuleTransition(ruleStart,ruleIndex,precedence,followState){classCallCheck(this,RuleTransition);var _this285=possibleConstructorReturn(this,(RuleTransition.__proto__||Object.getPrototypeOf(RuleTransition)).call(this,ruleStart));_this285.tailCall=false;_this285.optimizedTailCall=false;_this285.ruleIndex=ruleIndex;_this285.precedence=precedence;_this285.followState=followState;return _this285;}createClass(RuleTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return false;}},{key:'serializationType',get:function get(){return 3/* RULE */;}},{key:'isEpsilon',get:function get(){return true;}}]);return RuleTransition;}(Transition_1.Transition);__decorate([Decorators_1.NotNull],RuleTransition.prototype,"followState",void 0);__decorate([Decorators_1.Override],RuleTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],RuleTransition.prototype,"isEpsilon",null);__decorate([Decorators_1.Override],RuleTransition.prototype,"matches",null);RuleTransition=__decorate([__param(0,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],RuleTransition);exports.RuleTransition=RuleTransition;},{"../Decorators":224,"./Transition":313}],306:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:36.9521478-07:00
	var Array2DHashSet_1=require("../misc/Array2DHashSet");var ArrayEqualityComparator_1=require("../misc/ArrayEqualityComparator");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var Utils=require("../misc/Utils");function max(items){var result=void 0;var _iteratorNormalCompletion150=true;var _didIteratorError150=false;var _iteratorError150=undefined;try{for(var _iterator150=items[Symbol.iterator](),_step150;!(_iteratorNormalCompletion150=(_step150=_iterator150.next()).done);_iteratorNormalCompletion150=true){var current=_step150.value;if(result===undefined){result=current;continue;}var comparison=result.compareTo(current);if(comparison<0){result=current;}}}catch(err){_didIteratorError150=true;_iteratorError150=err;}finally{try{if(!_iteratorNormalCompletion150&&_iterator150.return){_iterator150.return();}}finally{if(_didIteratorError150){throw _iteratorError150;}}}return result;}function min(items){var result=void 0;var _iteratorNormalCompletion151=true;var _didIteratorError151=false;var _iteratorError151=undefined;try{for(var _iterator151=items[Symbol.iterator](),_step151;!(_iteratorNormalCompletion151=(_step151=_iterator151.next()).done);_iteratorNormalCompletion151=true){var current=_step151.value;if(result===undefined){result=current;continue;}var comparison=result.compareTo(current);if(comparison>0){result=current;}}}catch(err){_didIteratorError151=true;_iteratorError151=err;}finally{try{if(!_iteratorNormalCompletion151&&_iterator151.return){_iterator151.return();}}finally{if(_didIteratorError151){throw _iteratorError151;}}}return result;}/** A tree structure used to record the semantic context in which
	 *  an ATN configuration is valid.  It's either a single predicate,
	 *  a conjunction `p1&&p2`, or a sum of products `p1||p2`.
	 *
	 *  I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of
	 *  {@link SemanticContext} within the scope of this outer class.
	 */var SemanticContext=function(){function SemanticContext(){classCallCheck(this,SemanticContext);}createClass(SemanticContext,[{key:'evalPrecedence',/**
	     * Evaluate the precedence predicates for the context and reduce the result.
	     *
	     * @param parser The parser instance.
	     * @param parserCallStack
	     * @returns The simplified semantic context after precedence predicates are
	     * evaluated, which will be one of the following values.
	     *
	     * * {@link #NONE}: if the predicate simplifies to `true` after
	     *   precedence predicates are evaluated.
	     * * `undefined`: if the predicate simplifies to `false` after
	     *   precedence predicates are evaluated.
	     * * `this`: if the semantic context is not changed as a result of
	     *   precedence predicate evaluation.
	     * * A non-`undefined` {@link SemanticContext}: the new simplified
	     *   semantic context after precedence predicates are evaluated.
	     */value:function evalPrecedence(parser,parserCallStack){return this;}}],[{key:'and',value:function and(a,b){if(!a||a===SemanticContext.NONE){return b;}if(b===SemanticContext.NONE){return a;}var result=new SemanticContext.AND(a,b);if(result.opnds.length===1){return result.opnds[0];}return result;}/**
	     *
	     *  @see ParserATNSimulator#getPredsForAmbigAlts
	     */},{key:'or',value:function or(a,b){if(!a){return b;}if(a===SemanticContext.NONE||b===SemanticContext.NONE){return SemanticContext.NONE;}var result=new SemanticContext.OR(a,b);if(result.opnds.length===1){return result.opnds[0];}return result;}},{key:'NONE',/**
	     * The default {@link SemanticContext}, which is semantically equivalent to
	     * a predicate of the form `{true}?`.
	     */get:function get(){if(SemanticContext._NONE===undefined){SemanticContext._NONE=new SemanticContext.Predicate();}return SemanticContext._NONE;}}]);return SemanticContext;}();exports.SemanticContext=SemanticContext;(function(SemanticContext){/**
	     * This random 30-bit prime represents the value of `AND.class.hashCode()`.
	     */var AND_HASHCODE=40363613;/**
	     * This random 30-bit prime represents the value of `OR.class.hashCode()`.
	     */var OR_HASHCODE=486279973;function filterPrecedencePredicates(collection){var result=[];for(var i=0;i<collection.length;i++){var context=collection[i];if(context instanceof SemanticContext.PrecedencePredicate){result.push(context);// Remove the item from 'collection' and move i back so we look at the same index again
	collection.splice(i,1);i--;}}return result;}var Predicate=function(_SemanticContext){inherits(Predicate,_SemanticContext);function Predicate(){var ruleIndex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var predIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var isCtxDependent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;classCallCheck(this,Predicate);var _this286=possibleConstructorReturn(this,(Predicate.__proto__||Object.getPrototypeOf(Predicate)).call(this));_this286.ruleIndex=ruleIndex;_this286.predIndex=predIndex;_this286.isCtxDependent=isCtxDependent;return _this286;}createClass(Predicate,[{key:'eval',value:function _eval(parser,parserCallStack){var localctx=this.isCtxDependent?parserCallStack:undefined;return parser.sempred(localctx,this.ruleIndex,this.predIndex);}},{key:'hashCode',value:function hashCode(){var hashCode=MurmurHash_1.MurmurHash.initialize();hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.ruleIndex);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.predIndex);hashCode=MurmurHash_1.MurmurHash.update(hashCode,this.isCtxDependent?1:0);hashCode=MurmurHash_1.MurmurHash.finish(hashCode,3);return hashCode;}},{key:'equals',value:function equals(obj){if(!(obj instanceof Predicate)){return false;}if(this===obj){return true;}return this.ruleIndex===obj.ruleIndex&&this.predIndex===obj.predIndex&&this.isCtxDependent===obj.isCtxDependent;}},{key:'toString',value:function toString(){return "{"+this.ruleIndex+":"+this.predIndex+"}?";}}]);return Predicate;}(SemanticContext);__decorate([Decorators_1.Override],Predicate.prototype,"eval",null);__decorate([Decorators_1.Override],Predicate.prototype,"hashCode",null);__decorate([Decorators_1.Override],Predicate.prototype,"equals",null);__decorate([Decorators_1.Override],Predicate.prototype,"toString",null);SemanticContext.Predicate=Predicate;var PrecedencePredicate=function(_SemanticContext2){inherits(PrecedencePredicate,_SemanticContext2);function PrecedencePredicate(precedence){classCallCheck(this,PrecedencePredicate);var _this287=possibleConstructorReturn(this,(PrecedencePredicate.__proto__||Object.getPrototypeOf(PrecedencePredicate)).call(this));_this287.precedence=precedence;return _this287;}createClass(PrecedencePredicate,[{key:'eval',value:function _eval(parser,parserCallStack){return parser.precpred(parserCallStack,this.precedence);}},{key:'evalPrecedence',value:function evalPrecedence(parser,parserCallStack){if(parser.precpred(parserCallStack,this.precedence)){return SemanticContext.NONE;}else {return undefined;}}},{key:'compareTo',value:function compareTo(o){return this.precedence-o.precedence;}},{key:'hashCode',value:function hashCode(){var hashCode=1;hashCode=31*hashCode+this.precedence;return hashCode;}},{key:'equals',value:function equals(obj){if(!(obj instanceof PrecedencePredicate)){return false;}if(this===obj){return true;}return this.precedence===obj.precedence;}},{key:'toString',value:function toString(){return "{"+this.precedence+">=prec}?";}}]);return PrecedencePredicate;}(SemanticContext);__decorate([Decorators_1.Override],PrecedencePredicate.prototype,"eval",null);__decorate([Decorators_1.Override],PrecedencePredicate.prototype,"evalPrecedence",null);__decorate([Decorators_1.Override],PrecedencePredicate.prototype,"compareTo",null);__decorate([Decorators_1.Override],PrecedencePredicate.prototype,"hashCode",null);__decorate([Decorators_1.Override],PrecedencePredicate.prototype,"equals",null);__decorate([Decorators_1.Override// precedence >= _precedenceStack.peek()
	],PrecedencePredicate.prototype,"toString",null);SemanticContext.PrecedencePredicate=PrecedencePredicate;/**
	     * This is the base class for semantic context "operators", which operate on
	     * a collection of semantic context "operands".
	     *
	     * @since 4.3
	     */var Operator=function(_SemanticContext3){inherits(Operator,_SemanticContext3);function Operator(){classCallCheck(this,Operator);return possibleConstructorReturn(this,(Operator.__proto__||Object.getPrototypeOf(Operator)).apply(this,arguments));}return Operator;}(SemanticContext);SemanticContext.Operator=Operator;/**
	     * A semantic context which is true whenever none of the contained contexts
	     * is false.
	     */var AND=function(_Operator){inherits(AND,_Operator);function AND(a,b){classCallCheck(this,AND);var _this289=possibleConstructorReturn(this,(AND.__proto__||Object.getPrototypeOf(AND)).call(this));var operands=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);if(a instanceof AND){operands.addAll(a.opnds);}else {operands.add(a);}if(b instanceof AND){operands.addAll(b.opnds);}else {operands.add(b);}_this289.opnds=operands.toArray();var precedencePredicates=filterPrecedencePredicates(_this289.opnds);// interested in the transition with the lowest precedence
	var reduced=min(precedencePredicates);if(reduced){_this289.opnds.push(reduced);}return _this289;}createClass(AND,[{key:'equals',value:function equals(obj){if(this===obj){return true;}if(!(obj instanceof AND)){return false;}return ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.equals(this.opnds,obj.opnds);}},{key:'hashCode',value:function hashCode(){return MurmurHash_1.MurmurHash.hashCode(this.opnds,AND_HASHCODE);}/**
	         * {@inheritDoc}
	         *
	         * The evaluation of predicates by this context is short-circuiting, but
	         * unordered.
	         */},{key:'eval',value:function _eval(parser,parserCallStack){var _iteratorNormalCompletion152=true;var _didIteratorError152=false;var _iteratorError152=undefined;try{for(var _iterator152=this.opnds[Symbol.iterator](),_step152;!(_iteratorNormalCompletion152=(_step152=_iterator152.next()).done);_iteratorNormalCompletion152=true){var opnd=_step152.value;if(!opnd.eval(parser,parserCallStack)){return false;}}}catch(err){_didIteratorError152=true;_iteratorError152=err;}finally{try{if(!_iteratorNormalCompletion152&&_iterator152.return){_iterator152.return();}}finally{if(_didIteratorError152){throw _iteratorError152;}}}return true;}},{key:'evalPrecedence',value:function evalPrecedence(parser,parserCallStack){var differs=false;var operands=[];var _iteratorNormalCompletion153=true;var _didIteratorError153=false;var _iteratorError153=undefined;try{for(var _iterator153=this.opnds[Symbol.iterator](),_step153;!(_iteratorNormalCompletion153=(_step153=_iterator153.next()).done);_iteratorNormalCompletion153=true){var context=_step153.value;var evaluated=context.evalPrecedence(parser,parserCallStack);differs=differs||evaluated!==context;if(evaluated==null){// The AND context is false if any element is false
	return undefined;}else if(evaluated!==SemanticContext.NONE){// Reduce the result by skipping true elements
	operands.push(evaluated);}}}catch(err){_didIteratorError153=true;_iteratorError153=err;}finally{try{if(!_iteratorNormalCompletion153&&_iterator153.return){_iterator153.return();}}finally{if(_didIteratorError153){throw _iteratorError153;}}}if(!differs){return this;}if(operands.length===0){// all elements were true, so the AND context is true
	return SemanticContext.NONE;}var result=operands[0];for(var i=1;i<operands.length;i++){result=SemanticContext.and(result,operands[i]);}return result;}},{key:'toString',value:function toString(){return Utils.join(this.opnds,"&&");}},{key:'operands',get:function get(){return this.opnds;}}]);return AND;}(Operator);__decorate([Decorators_1.Override],AND.prototype,"operands",null);__decorate([Decorators_1.Override],AND.prototype,"equals",null);__decorate([Decorators_1.Override],AND.prototype,"hashCode",null);__decorate([Decorators_1.Override],AND.prototype,"eval",null);__decorate([Decorators_1.Override],AND.prototype,"evalPrecedence",null);__decorate([Decorators_1.Override],AND.prototype,"toString",null);AND=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],AND);SemanticContext.AND=AND;/**
	     * A semantic context which is true whenever at least one of the contained
	     * contexts is true.
	     */var OR=function(_Operator2){inherits(OR,_Operator2);function OR(a,b){classCallCheck(this,OR);var _this290=possibleConstructorReturn(this,(OR.__proto__||Object.getPrototypeOf(OR)).call(this));var operands=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);if(a instanceof OR){operands.addAll(a.opnds);}else {operands.add(a);}if(b instanceof OR){operands.addAll(b.opnds);}else {operands.add(b);}_this290.opnds=operands.toArray();var precedencePredicates=filterPrecedencePredicates(_this290.opnds);// interested in the transition with the highest precedence
	var reduced=max(precedencePredicates);if(reduced){_this290.opnds.push(reduced);}return _this290;}createClass(OR,[{key:'equals',value:function equals(obj){if(this===obj){return true;}if(!(obj instanceof OR)){return false;}return ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.equals(this.opnds,obj.opnds);}},{key:'hashCode',value:function hashCode(){return MurmurHash_1.MurmurHash.hashCode(this.opnds,OR_HASHCODE);}/**
	         * {@inheritDoc}
	         *
	         * The evaluation of predicates by this context is short-circuiting, but
	         * unordered.
	         */},{key:'eval',value:function _eval(parser,parserCallStack){var _iteratorNormalCompletion154=true;var _didIteratorError154=false;var _iteratorError154=undefined;try{for(var _iterator154=this.opnds[Symbol.iterator](),_step154;!(_iteratorNormalCompletion154=(_step154=_iterator154.next()).done);_iteratorNormalCompletion154=true){var opnd=_step154.value;if(opnd.eval(parser,parserCallStack)){return true;}}}catch(err){_didIteratorError154=true;_iteratorError154=err;}finally{try{if(!_iteratorNormalCompletion154&&_iterator154.return){_iterator154.return();}}finally{if(_didIteratorError154){throw _iteratorError154;}}}return false;}},{key:'evalPrecedence',value:function evalPrecedence(parser,parserCallStack){var differs=false;var operands=[];var _iteratorNormalCompletion155=true;var _didIteratorError155=false;var _iteratorError155=undefined;try{for(var _iterator155=this.opnds[Symbol.iterator](),_step155;!(_iteratorNormalCompletion155=(_step155=_iterator155.next()).done);_iteratorNormalCompletion155=true){var context=_step155.value;var evaluated=context.evalPrecedence(parser,parserCallStack);differs=differs||evaluated!==context;if(evaluated===SemanticContext.NONE){// The OR context is true if any element is true
	return SemanticContext.NONE;}else if(evaluated){// Reduce the result by skipping false elements
	operands.push(evaluated);}}}catch(err){_didIteratorError155=true;_iteratorError155=err;}finally{try{if(!_iteratorNormalCompletion155&&_iterator155.return){_iterator155.return();}}finally{if(_didIteratorError155){throw _iteratorError155;}}}if(!differs){return this;}if(operands.length===0){// all elements were false, so the OR context is false
	return undefined;}var result=operands[0];for(var i=1;i<operands.length;i++){result=SemanticContext.or(result,operands[i]);}return result;}},{key:'toString',value:function toString(){return Utils.join(this.opnds,"||");}},{key:'operands',get:function get(){return this.opnds;}}]);return OR;}(Operator);__decorate([Decorators_1.Override],OR.prototype,"operands",null);__decorate([Decorators_1.Override],OR.prototype,"equals",null);__decorate([Decorators_1.Override],OR.prototype,"hashCode",null);__decorate([Decorators_1.Override],OR.prototype,"eval",null);__decorate([Decorators_1.Override],OR.prototype,"evalPrecedence",null);__decorate([Decorators_1.Override],OR.prototype,"toString",null);OR=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],OR);SemanticContext.OR=OR;})(SemanticContext=exports.SemanticContext||(exports.SemanticContext={}));},{"../Decorators":224,"../misc/Array2DHashSet":322,"../misc/ArrayEqualityComparator":323,"../misc/MurmurHash":333,"../misc/ObjectEqualityComparator":334,"../misc/Utils":337}],307:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var IntervalSet_1=require("../misc/IntervalSet");var Decorators_1=require("../Decorators");var Token_1=require("../Token");var Transition_1=require("./Transition");/** A transition containing a set of values. */var SetTransition=function(_Transition_1$Transit7){inherits(SetTransition,_Transition_1$Transit7);// TODO (sam): should we really allow undefined here?
	function SetTransition(target,set){classCallCheck(this,SetTransition);var _this291=possibleConstructorReturn(this,(SetTransition.__proto__||Object.getPrototypeOf(SetTransition)).call(this,target));if(set==null){set=IntervalSet_1.IntervalSet.of(Token_1.Token.INVALID_TYPE);}_this291.set=set;return _this291;}createClass(SetTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return this.set.contains(symbol);}},{key:'toString',value:function toString(){return this.set.toString();}},{key:'serializationType',get:function get(){return 7/* SET */;}},{key:'label',get:function get(){return this.set;}}]);return SetTransition;}(Transition_1.Transition);__decorate([Decorators_1.NotNull],SetTransition.prototype,"set",void 0);__decorate([Decorators_1.Override],SetTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],SetTransition.prototype,"label",null);__decorate([Decorators_1.Override],SetTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],SetTransition.prototype,"toString",null);SetTransition=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.Nullable)],SetTransition);exports.SetTransition=SetTransition;},{"../Decorators":224,"../Token":248,"../misc/IntervalSet":331,"./Transition":313}],308:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var ParserRuleContext_1=require("../ParserRuleContext");/**
	 *
	 * @author Sam Harwell
	 */var SimulatorState=function SimulatorState(outerContext,s0,useContext,remainingOuterContext){classCallCheck(this,SimulatorState);this.outerContext=outerContext!=null?outerContext:ParserRuleContext_1.ParserRuleContext.emptyContext();this.s0=s0;this.useContext=useContext;this.remainingOuterContext=remainingOuterContext;};SimulatorState=__decorate([__param(1,Decorators_1.NotNull)],SimulatorState);exports.SimulatorState=SimulatorState;},{"../Decorators":224,"../ParserRuleContext":239}],309:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var ATNStateType_1=require("./ATNStateType");var BlockStartState_1=require("./BlockStartState");var Decorators_1=require("../Decorators");/** The block that begins a closure loop. */var StarBlockStartState=function(_BlockStartState_1$Bl3){inherits(StarBlockStartState,_BlockStartState_1$Bl3);function StarBlockStartState(){classCallCheck(this,StarBlockStartState);return possibleConstructorReturn(this,(StarBlockStartState.__proto__||Object.getPrototypeOf(StarBlockStartState)).apply(this,arguments));}createClass(StarBlockStartState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.STAR_BLOCK_START;}}]);return StarBlockStartState;}(BlockStartState_1.BlockStartState);__decorate([Decorators_1.Override],StarBlockStartState.prototype,"stateType",null);exports.StarBlockStartState=StarBlockStartState;},{"../Decorators":224,"./ATNStateType":258,"./BlockStartState":266}],310:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:37.7099201-07:00
	var ATNStateType_1=require("./ATNStateType");var BitSet_1=require("../misc/BitSet");var DecisionState_1=require("./DecisionState");var Decorators_1=require("../Decorators");var StarLoopEntryState=function(_DecisionState_1$Deci3){inherits(StarLoopEntryState,_DecisionState_1$Deci3);function StarLoopEntryState(){classCallCheck(this,StarLoopEntryState);/**
	         * Indicates whether this state can benefit from a precedence DFA during SLL
	         * decision making.
	         *
	         * This is a computed property that is calculated during ATN deserialization
	         * and stored for use in {@link ParserATNSimulator} and
	         * {@link ParserInterpreter}.
	         *
	         * @see `DFA.isPrecedenceDfa`
	         */var _this293=possibleConstructorReturn(this,(StarLoopEntryState.__proto__||Object.getPrototypeOf(StarLoopEntryState)).apply(this,arguments));_this293.precedenceRuleDecision=false;/**
	         * For precedence decisions, this set marks states *S* which have all
	         * of the following characteristics:
	         *
	         * * One or more invocation sites of the current rule returns to
	         *   *S*.
	         * * The closure from *S* includes the current decision without
	         *   passing through any rule invocations or stepping out of the current
	         *   rule.
	         *
	         * This field is not used when {@link #precedenceRuleDecision} is
	         * `false`.
	         */_this293.precedenceLoopbackStates=new BitSet_1.BitSet();return _this293;}createClass(StarLoopEntryState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.STAR_LOOP_ENTRY;}}]);return StarLoopEntryState;}(DecisionState_1.DecisionState);__decorate([Decorators_1.Override],StarLoopEntryState.prototype,"stateType",null);exports.StarLoopEntryState=StarLoopEntryState;},{"../Decorators":224,"../misc/BitSet":325,"./ATNStateType":258,"./DecisionState":271}],311:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:37.6368726-07:00
	var ATNState_1=require("./ATNState");var ATNStateType_1=require("./ATNStateType");var Decorators_1=require("../Decorators");var StarLoopbackState=function(_ATNState_1$ATNState7){inherits(StarLoopbackState,_ATNState_1$ATNState7);function StarLoopbackState(){classCallCheck(this,StarLoopbackState);return possibleConstructorReturn(this,(StarLoopbackState.__proto__||Object.getPrototypeOf(StarLoopbackState)).apply(this,arguments));}createClass(StarLoopbackState,[{key:'loopEntryState',get:function get(){return this.transition(0).target;}},{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.STAR_LOOP_BACK;}}]);return StarLoopbackState;}(ATNState_1.ATNState);__decorate([Decorators_1.Override],StarLoopbackState.prototype,"stateType",null);exports.StarLoopbackState=StarLoopbackState;},{"../Decorators":224,"./ATNState":257,"./ATNStateType":258}],312:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:37.7814046-07:00
	var ATNStateType_1=require("./ATNStateType");var DecisionState_1=require("./DecisionState");var Decorators_1=require("../Decorators");/** The Tokens rule start state linking to each lexer rule start state */var TokensStartState=function(_DecisionState_1$Deci4){inherits(TokensStartState,_DecisionState_1$Deci4);function TokensStartState(){classCallCheck(this,TokensStartState);return possibleConstructorReturn(this,(TokensStartState.__proto__||Object.getPrototypeOf(TokensStartState)).apply(this,arguments));}createClass(TokensStartState,[{key:'stateType',get:function get(){return ATNStateType_1.ATNStateType.TOKEN_START;}}]);return TokensStartState;}(DecisionState_1.DecisionState);__decorate([Decorators_1.Override],TokensStartState.prototype,"stateType",null);exports.TokensStartState=TokensStartState;},{"../Decorators":224,"./ATNStateType":258,"./DecisionState":271}],313:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");/** An ATN transition between any two ATN states.  Subclasses define
	 *  atom, set, epsilon, action, predicate, rule transitions.
	 *
	 *  This is a one way link.  It emanates from a state (usually via a list of
	 *  transitions) and has a target state.
	 *
	 *  Since we never have to change the ATN transitions once we construct it,
	 *  we can fix these transitions as specific classes. The DFA transitions
	 *  on the other hand need to update the labels as it adds transitions to
	 *  the states. We'll use the term Edge for the DFA to distinguish them from
	 *  ATN transitions.
	 */var Transition=function(){function Transition(target){classCallCheck(this,Transition);if(target==null){throw new Error("target cannot be null.");}this.target=target;}/**
	     * Determines if the transition is an "epsilon" transition.
	     *
	     * The default implementation returns `false`.
	     *
	     * @returns `true` if traversing this transition in the ATN does not
	     * consume an input symbol; otherwise, `false` if traversing this
	     * transition consumes (matches) an input symbol.
	     */createClass(Transition,[{key:'isEpsilon',get:function get(){return false;}},{key:'label',get:function get(){return undefined;}}]);return Transition;}();Transition.serializationNames=["INVALID","EPSILON","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE"];__decorate([Decorators_1.NotNull],Transition.prototype,"target",void 0);Transition=__decorate([__param(0,Decorators_1.NotNull)],Transition);exports.Transition=Transition;},{"../Decorators":224}],314:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var Transition_1=require("./Transition");var WildcardTransition=function(_Transition_1$Transit8){inherits(WildcardTransition,_Transition_1$Transit8);function WildcardTransition(target){classCallCheck(this,WildcardTransition);return possibleConstructorReturn(this,(WildcardTransition.__proto__||Object.getPrototypeOf(WildcardTransition)).call(this,target));}createClass(WildcardTransition,[{key:'matches',value:function matches(symbol,minVocabSymbol,maxVocabSymbol){return symbol>=minVocabSymbol&&symbol<=maxVocabSymbol;}},{key:'toString',value:function toString(){return ".";}},{key:'serializationType',get:function get(){return 9/* WILDCARD */;}}]);return WildcardTransition;}(Transition_1.Transition);__decorate([Decorators_1.Override],WildcardTransition.prototype,"serializationType",null);__decorate([Decorators_1.Override],WildcardTransition.prototype,"matches",null);__decorate([Decorators_1.Override,Decorators_1.NotNull],WildcardTransition.prototype,"toString",null);WildcardTransition=__decorate([__param(0,Decorators_1.NotNull)],WildcardTransition);exports.WildcardTransition=WildcardTransition;},{"../Decorators":224,"./Transition":313}],315:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Stores information about a {@link DFAState} which is an accept state under
	 * some condition. Certain settings, such as
	 * {@link ParserATNSimulator#getPredictionMode()}, may be used in addition to
	 * this information to determine whether or not a particular state is an accept
	 * state.
	 *
	 * @author Sam Harwell
	 */var AcceptStateInfo=function(){function AcceptStateInfo(prediction,lexerActionExecutor){classCallCheck(this,AcceptStateInfo);this._prediction=prediction;this._lexerActionExecutor=lexerActionExecutor;}/**
	     * Gets the prediction made by this accept state. Note that this value
	     * assumes the predicates, if any, in the {@link DFAState} evaluate to
	     * `true`. If predicate evaluation is enabled, the final prediction of
	     * the accept state will be determined by the result of predicate
	     * evaluation.
	     */createClass(AcceptStateInfo,[{key:'prediction',get:function get(){return this._prediction;}/**
	     * Gets the {@link LexerActionExecutor} which can be used to execute actions
	     * and/or commands after the lexer matches a token.
	     */},{key:'lexerActionExecutor',get:function get(){return this._lexerActionExecutor;}}]);return AcceptStateInfo;}();exports.AcceptStateInfo=AcceptStateInfo;},{}],316:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:38.3567094-07:00
	var Array2DHashSet_1=require("../misc/Array2DHashSet");var ATNConfigSet_1=require("../atn/ATNConfigSet");var DFASerializer_1=require("./DFASerializer");var DFAState_1=require("./DFAState");var LexerDFASerializer_1=require("./LexerDFASerializer");var Decorators_1=require("../Decorators");var ObjectEqualityComparator_1=require("../misc/ObjectEqualityComparator");var StarLoopEntryState_1=require("../atn/StarLoopEntryState");var VocabularyImpl_1=require("../VocabularyImpl");var DFA=function(){function DFA(atnStartState){var decision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;classCallCheck(this,DFA);/**
	         * A set of all states in the `DFA`.
	         *
	         * Note that this collection of states holds the DFA states for both SLL and LL prediction. Only the start state
	         * needs to be differentiated for these cases, which is tracked by the `s0` and `s0full` fields.
	         */this.states=new Array2DHashSet_1.Array2DHashSet(ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE);this.nextStateNumber=0;if(!atnStartState.atn){throw new Error("The ATNState must be associated with an ATN");}this.atnStartState=atnStartState;this.atn=atnStartState.atn;this.decision=decision;// Precedence DFAs are associated with the special precedence decision created for left-recursive rules which
	// evaluate their alternatives using a precedence hierarchy. When such a decision is encountered, we mark this
	// DFA instance as a precedence DFA and initialize the initial states s0 and s0full to special DFAState
	// instances which use outgoing edges to link to the actual start state used for each precedence level.
	var isPrecedenceDfa=false;if(atnStartState instanceof StarLoopEntryState_1.StarLoopEntryState){if(atnStartState.precedenceRuleDecision){isPrecedenceDfa=true;this.s0=new DFAState_1.DFAState(new ATNConfigSet_1.ATNConfigSet());this.s0full=new DFAState_1.DFAState(new ATNConfigSet_1.ATNConfigSet());}}this.precedenceDfa=isPrecedenceDfa;}/**
	     * Gets whether this DFA is a precedence DFA. Precedence DFAs use a special
	     * start state {@link #s0} which is not stored in {@link #states}. The
	     * {@link DFAState#edges} array for this start state contains outgoing edges
	     * supplying individual start states corresponding to specific precedence
	     * values.
	     *
	     * @returns `true` if this is a precedence DFA; otherwise,
	     * `false`.
	     * @see Parser.precedence
	     */createClass(DFA,[{key:'getPrecedenceStartState',/**
	     * Get the start state for a specific precedence value.
	     *
	     * @param precedence The current precedence.
	     * @returns The start state corresponding to the specified precedence, or
	     * `undefined` if no start state exists for the specified precedence.
	     *
	     * @ if this is not a precedence DFA.
	     * @see `isPrecedenceDfa`
	     */value:function getPrecedenceStartState(precedence,fullContext){if(!this.isPrecedenceDfa){throw new Error("Only precedence DFAs may contain a precedence start state.");}// s0 and s0full are never null for a precedence DFA
	if(fullContext){return this.s0full.getTarget(precedence);}else {return this.s0.getTarget(precedence);}}/**
	     * Set the start state for a specific precedence value.
	     *
	     * @param precedence The current precedence.
	     * @param startState The start state corresponding to the specified
	     * precedence.
	     *
	     * @ if this is not a precedence DFA.
	     * @see `isPrecedenceDfa`
	     */},{key:'setPrecedenceStartState',value:function setPrecedenceStartState(precedence,fullContext,startState){if(!this.isPrecedenceDfa){throw new Error("Only precedence DFAs may contain a precedence start state.");}if(precedence<0){return;}if(fullContext){// s0full is never null for a precedence DFA
	this.s0full.setTarget(precedence,startState);}else {// s0 is never null for a precedence DFA
	this.s0.setTarget(precedence,startState);}}},{key:'addState',value:function addState(state){state.stateNumber=this.nextStateNumber++;return this.states.getOrAdd(state);}},{key:'toString',value:function toString(vocabulary,ruleNames){if(!vocabulary){vocabulary=VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY;}if(!this.s0){return "";}var serializer=void 0;if(ruleNames){serializer=new DFASerializer_1.DFASerializer(this,vocabulary,ruleNames,this.atnStartState.atn);}else {serializer=new DFASerializer_1.DFASerializer(this,vocabulary);}return serializer.toString();}},{key:'toLexerString',value:function toLexerString(){if(!this.s0){return "";}var serializer=new LexerDFASerializer_1.LexerDFASerializer(this);return serializer.toString();}},{key:'isPrecedenceDfa',get:function get(){return this.precedenceDfa;}},{key:'isEmpty',get:function get(){if(this.isPrecedenceDfa){// s0 and s0full are never null for a precedence DFA
	return this.s0.getEdgeMap().size===0&&this.s0full.getEdgeMap().size===0;}return this.s0==null&&this.s0full==null;}},{key:'isContextSensitive',get:function get(){if(this.isPrecedenceDfa){// s0full is never null for a precedence DFA
	return this.s0full.getEdgeMap().size>0;}return this.s0full!=null;}}]);return DFA;}();__decorate([Decorators_1.NotNull],DFA.prototype,"states",void 0);__decorate([Decorators_1.NotNull],DFA.prototype,"atnStartState",void 0);__decorate([Decorators_1.NotNull],DFA.prototype,"atn",void 0);DFA=__decorate([__param(0,Decorators_1.NotNull)],DFA);exports.DFA=DFA;},{"../Decorators":224,"../VocabularyImpl":250,"../atn/ATNConfigSet":253,"../atn/StarLoopEntryState":310,"../misc/Array2DHashSet":322,"../misc/ObjectEqualityComparator":334,"./DFASerializer":317,"./DFAState":318,"./LexerDFASerializer":319}],317:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var ATNSimulator_1=require("../atn/ATNSimulator");var Decorators_1=require("../Decorators");var PredictionContext_1=require("../atn/PredictionContext");var Recognizer_1=require("../Recognizer");var VocabularyImpl_1=require("../VocabularyImpl");/** A DFA walker that knows how to dump them to serialized strings. */var DFASerializer=function(){function DFASerializer(dfa,vocabulary,ruleNames,atn){classCallCheck(this,DFASerializer);if(vocabulary instanceof Recognizer_1.Recognizer){ruleNames=vocabulary.ruleNames;atn=vocabulary.atn;vocabulary=vocabulary.vocabulary;}else if(!vocabulary){vocabulary=VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY;}this.dfa=dfa;this.vocabulary=vocabulary;this.ruleNames=ruleNames;this.atn=atn;}createClass(DFASerializer,[{key:'toString',value:function toString(){if(!this.dfa.s0){return "";}var buf="";if(this.dfa.states){var states=new(Function.prototype.bind.apply(Array,[null].concat(toConsumableArray(this.dfa.states.toArray()))))();states.sort(function(o1,o2){return o1.stateNumber-o2.stateNumber;});var _iteratorNormalCompletion156=true;var _didIteratorError156=false;var _iteratorError156=undefined;try{for(var _iterator156=states[Symbol.iterator](),_step156;!(_iteratorNormalCompletion156=(_step156=_iterator156.next()).done);_iteratorNormalCompletion156=true){var s=_step156.value;var edges=s.getEdgeMap();var edgeKeys=[].concat(toConsumableArray(edges.keys())).sort(function(a,b){return a-b;});var contextEdges=s.getContextEdgeMap();var contextEdgeKeys=[].concat(toConsumableArray(contextEdges.keys())).sort(function(a,b){return a-b;});var _iteratorNormalCompletion157=true;var _didIteratorError157=false;var _iteratorError157=undefined;try{for(var _iterator157=edgeKeys[Symbol.iterator](),_step157;!(_iteratorNormalCompletion157=(_step157=_iterator157.next()).done);_iteratorNormalCompletion157=true){var _entry=_step157.value;var _value4=edges.get(_entry);if((_value4==null||_value4===ATNSimulator_1.ATNSimulator.ERROR)&&!s.isContextSymbol(_entry)){continue;}var contextSymbol=false;buf+=this.getStateString(s)+"-"+this.getEdgeLabel(_entry)+"->";if(s.isContextSymbol(_entry)){buf+="!";contextSymbol=true;}var t=_value4;if(t&&t.stateNumber!==ATNSimulator_1.ATNSimulator.ERROR.stateNumber){buf+=this.getStateString(t)+"\n";}else if(contextSymbol){buf+="ctx\n";}}}catch(err){_didIteratorError157=true;_iteratorError157=err;}finally{try{if(!_iteratorNormalCompletion157&&_iterator157.return){_iterator157.return();}}finally{if(_didIteratorError157){throw _iteratorError157;}}}if(s.isContextSensitive){var _iteratorNormalCompletion158=true;var _didIteratorError158=false;var _iteratorError158=undefined;try{for(var _iterator158=contextEdgeKeys[Symbol.iterator](),_step158;!(_iteratorNormalCompletion158=(_step158=_iterator158.next()).done);_iteratorNormalCompletion158=true){var entry=_step158.value;buf+=this.getStateString(s)+"-"+this.getContextLabel(entry)+"->"+this.getStateString(contextEdges.get(entry))+"\n";}}catch(err){_didIteratorError158=true;_iteratorError158=err;}finally{try{if(!_iteratorNormalCompletion158&&_iterator158.return){_iterator158.return();}}finally{if(_didIteratorError158){throw _iteratorError158;}}}}}}catch(err){_didIteratorError156=true;_iteratorError156=err;}finally{try{if(!_iteratorNormalCompletion156&&_iterator156.return){_iterator156.return();}}finally{if(_didIteratorError156){throw _iteratorError156;}}}}var output=buf;if(output.length===0){return "";}//return Utils.sortLinesInString(output);
	return output;}},{key:'getContextLabel',value:function getContextLabel(i){if(i===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){return "ctx:EMPTY_FULL";}else if(i===PredictionContext_1.PredictionContext.EMPTY_LOCAL_STATE_KEY){return "ctx:EMPTY_LOCAL";}if(this.atn&&i>0&&i<=this.atn.states.length){var state=this.atn.states[i];var ruleIndex=state.ruleIndex;if(this.ruleNames&&ruleIndex>=0&&ruleIndex<this.ruleNames.length){return "ctx:"+String(i)+"("+this.ruleNames[ruleIndex]+")";}}return "ctx:"+String(i);}},{key:'getEdgeLabel',value:function getEdgeLabel(i){return this.vocabulary.getDisplayName(i);}},{key:'getStateString',value:function getStateString(s){if(s===ATNSimulator_1.ATNSimulator.ERROR){return "ERROR";}var n=s.stateNumber;var stateStr="s"+n;if(s.isAcceptState){if(s.predicates){stateStr=":s"+n+"=>"+s.predicates;}else {stateStr=":s"+n+"=>"+s.prediction;}}if(s.isContextSensitive){stateStr+="*";var _iteratorNormalCompletion159=true;var _didIteratorError159=false;var _iteratorError159=undefined;try{for(var _iterator159=s.configs[Symbol.iterator](),_step159;!(_iteratorNormalCompletion159=(_step159=_iterator159.next()).done);_iteratorNormalCompletion159=true){var config=_step159.value;if(config.reachesIntoOuterContext){stateStr+="*";break;}}}catch(err){_didIteratorError159=true;_iteratorError159=err;}finally{try{if(!_iteratorNormalCompletion159&&_iterator159.return){_iterator159.return();}}finally{if(_didIteratorError159){throw _iteratorError159;}}}}return stateStr;}}]);return DFASerializer;}();__decorate([Decorators_1.NotNull],DFASerializer.prototype,"dfa",void 0);__decorate([Decorators_1.NotNull],DFASerializer.prototype,"vocabulary",void 0);__decorate([Decorators_1.Override],DFASerializer.prototype,"toString",null);exports.DFASerializer=DFASerializer;},{"../Decorators":224,"../Recognizer":243,"../VocabularyImpl":250,"../atn/ATNSimulator":256,"../atn/PredictionContext":298}],318:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ATN_1=require("../atn/ATN");var BitSet_1=require("../misc/BitSet");var MurmurHash_1=require("../misc/MurmurHash");var Decorators_1=require("../Decorators");var PredictionContext_1=require("../atn/PredictionContext");var assert=require("assert");/** A DFA state represents a set of possible ATN configurations.
	 *  As Aho, Sethi, Ullman p. 117 says "The DFA uses its state
	 *  to keep track of all possible states the ATN can be in after
	 *  reading each input symbol.  That is to say, after reading
	 *  input a1a2..an, the DFA is in a state that represents the
	 *  subset T of the states of the ATN that are reachable from the
	 *  ATN's start state along some path labeled a1a2..an."
	 *  In conventional NFA&rarr;DFA conversion, therefore, the subset T
	 *  would be a bitset representing the set of states the
	 *  ATN could be in.  We need to track the alt predicted by each
	 *  state as well, however.  More importantly, we need to maintain
	 *  a stack of states, tracking the closure operations as they
	 *  jump from rule to rule, emulating rule invocations (method calls).
	 *  I have to add a stack to simulate the proper lookahead sequences for
	 *  the underlying LL grammar from which the ATN was derived.
	 *
	 *  I use a set of ATNConfig objects not simple states.  An ATNConfig
	 *  is both a state (ala normal conversion) and a RuleContext describing
	 *  the chain of rules (if any) followed to arrive at that state.
	 *
	 *  A DFA state may have multiple references to a particular state,
	 *  but with different ATN contexts (with same or different alts)
	 *  meaning that state was reached via a different set of rule invocations.
	 */var DFAState=function(){/**
	     * Constructs a new `DFAState`.
	     *
	     * @param configs The set of ATN configurations defining this state.
	     */function DFAState(configs){classCallCheck(this,DFAState);this.stateNumber=-1;this.configs=configs;this.edges=new Map();this.contextEdges=new Map();}createClass(DFAState,[{key:'isContextSymbol',value:function isContextSymbol(symbol){if(!this.isContextSensitive){return false;}return this.contextSymbols.get(symbol);}},{key:'setContextSymbol',value:function setContextSymbol(symbol){assert(this.isContextSensitive);this.contextSymbols.set(symbol);}},{key:'setContextSensitive',value:function setContextSensitive(atn){assert(!this.configs.isOutermostConfigSet);if(this.isContextSensitive){return;}if(!this.contextSymbols){this.contextSymbols=new BitSet_1.BitSet();}}},{key:'getTarget',value:function getTarget(symbol){return this.edges.get(symbol);}},{key:'setTarget',value:function setTarget(symbol,target){this.edges.set(symbol,target);}},{key:'getEdgeMap',value:function getEdgeMap(){return this.edges;}},{key:'getContextTarget',value:function getContextTarget(invokingState){if(invokingState===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){invokingState=-1;}return this.contextEdges.get(invokingState);}},{key:'setContextTarget',value:function setContextTarget(invokingState,target){if(!this.isContextSensitive){throw new Error("The state is not context sensitive.");}if(invokingState===PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY){invokingState=-1;}this.contextEdges.set(invokingState,target);}},{key:'getContextEdgeMap',value:function getContextEdgeMap(){var map=new Map(this.contextEdges);var existing=map.get(-1);if(existing!==undefined){if(map.size===1){var result=new Map();result.set(PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY,existing);return result;}else {map.delete(-1);map.set(PredictionContext_1.PredictionContext.EMPTY_FULL_STATE_KEY,existing);}}return map;}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize(7);hash=MurmurHash_1.MurmurHash.update(hash,this.configs.hashCode());hash=MurmurHash_1.MurmurHash.finish(hash,1);return hash;}/**
	     * Two {@link DFAState} instances are equal if their ATN configuration sets
	     * are the same. This method is used to see if a state already exists.
	     *
	     * Because the number of alternatives and number of ATN configurations are
	     * finite, there is a finite number of DFA states that can be processed.
	     * This is necessary to show that the algorithm terminates.
	     *
	     * Cannot test the DFA state numbers here because in
	     * {@link ParserATNSimulator#addDFAState} we need to know if any other state
	     * exists that has this exact set of ATN configurations. The
	     * {@link #stateNumber} is irrelevant.
	     */},{key:'equals',value:function equals(o){// compare set of ATN configurations in this set with other
	if(this===o){return true;}if(!(o instanceof DFAState)){return false;}var other=o;var sameSet=this.configs.equals(other.configs);//		System.out.println("DFAState.equals: "+configs+(sameSet?"==":"!=")+other.configs);
	return sameSet;}},{key:'toString',value:function toString(){var buf="";buf+=this.stateNumber+":"+this.configs;if(this.isAcceptState){buf+="=>";if(this.predicates){buf+=this.predicates;}else {buf+=this.prediction;}}return buf.toString();}},{key:'isContextSensitive',get:function get(){return !!this.contextSymbols;}},{key:'acceptStateInfo',get:function get(){return this._acceptStateInfo;},set:function set(acceptStateInfo){this._acceptStateInfo=acceptStateInfo;}},{key:'isAcceptState',get:function get(){return !!this._acceptStateInfo;}},{key:'prediction',get:function get(){if(!this._acceptStateInfo){return ATN_1.ATN.INVALID_ALT_NUMBER;}return this._acceptStateInfo.prediction;}},{key:'lexerActionExecutor',get:function get(){if(!this._acceptStateInfo){return undefined;}return this._acceptStateInfo.lexerActionExecutor;}}]);return DFAState;}();__decorate([Decorators_1.NotNull],DFAState.prototype,"configs",void 0);__decorate([Decorators_1.NotNull],DFAState.prototype,"edges",void 0);__decorate([Decorators_1.NotNull],DFAState.prototype,"contextEdges",void 0);__decorate([Decorators_1.Override],DFAState.prototype,"hashCode",null);__decorate([Decorators_1.Override],DFAState.prototype,"equals",null);__decorate([Decorators_1.Override],DFAState.prototype,"toString",null);exports.DFAState=DFAState;(function(DFAState){/** Map a predicate to a predicted alternative. */var PredPrediction=function(){function PredPrediction(pred,alt){classCallCheck(this,PredPrediction);this.alt=alt;this.pred=pred;}createClass(PredPrediction,[{key:'toString',value:function toString(){return "("+this.pred+", "+this.alt+")";}}]);return PredPrediction;}();__decorate([Decorators_1.NotNull],PredPrediction.prototype,"pred",void 0);__decorate([Decorators_1.Override],PredPrediction.prototype,"toString",null);PredPrediction=__decorate([__param(0,Decorators_1.NotNull)],PredPrediction);DFAState.PredPrediction=PredPrediction;})(DFAState=exports.DFAState||(exports.DFAState={}));},{"../Decorators":224,"../atn/ATN":251,"../atn/PredictionContext":298,"../misc/BitSet":325,"../misc/MurmurHash":333,"assert":364}],319:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var DFASerializer_1=require("./DFASerializer");var Decorators_1=require("../Decorators");var VocabularyImpl_1=require("../VocabularyImpl");var LexerDFASerializer=function(_DFASerializer_1$DFAS){inherits(LexerDFASerializer,_DFASerializer_1$DFAS);function LexerDFASerializer(dfa){classCallCheck(this,LexerDFASerializer);return possibleConstructorReturn(this,(LexerDFASerializer.__proto__||Object.getPrototypeOf(LexerDFASerializer)).call(this,dfa,VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY));}createClass(LexerDFASerializer,[{key:'getEdgeLabel',value:function getEdgeLabel(i){return "'"+String.fromCodePoint(i)+"'";}}]);return LexerDFASerializer;}(DFASerializer_1.DFASerializer);__decorate([Decorators_1.Override,Decorators_1.NotNull],LexerDFASerializer.prototype,"getEdgeLabel",null);LexerDFASerializer=__decorate([__param(0,Decorators_1.NotNull)],LexerDFASerializer);exports.LexerDFASerializer=LexerDFASerializer;},{"../Decorators":224,"../VocabularyImpl":250,"./DFASerializer":317}],320:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});// export * from "./ANTLRFileStream";
	__export(require("./ANTLRInputStream"));__export(require("./BailErrorStrategy"));__export(require("./BufferedTokenStream"));__export(require("./CharStreams"));__export(require("./CodePointBuffer"));__export(require("./CodePointCharStream"));__export(require("./CommonToken"));__export(require("./CommonTokenFactory"));__export(require("./CommonTokenStream"));__export(require("./ConsoleErrorListener"));__export(require("./DefaultErrorStrategy"));__export(require("./Dependents"));__export(require("./DiagnosticErrorListener"));__export(require("./FailedPredicateException"));__export(require("./InputMismatchException"));__export(require("./InterpreterRuleContext"));__export(require("./IntStream"));__export(require("./Lexer"));__export(require("./LexerInterpreter"));__export(require("./LexerNoViableAltException"));__export(require("./ListTokenSource"));__export(require("./NoViableAltException"));__export(require("./Parser"));__export(require("./ParserInterpreter"));__export(require("./ParserRuleContext"));__export(require("./ProxyErrorListener"));__export(require("./ProxyParserErrorListener"));__export(require("./RecognitionException"));__export(require("./Recognizer"));__export(require("./RuleContext"));__export(require("./RuleContextWithAltNum"));__export(require("./RuleDependency"));__export(require("./RuleVersion"));__export(require("./Token"));__export(require("./TokenStreamRewriter"));__export(require("./VocabularyImpl"));},{"./ANTLRInputStream":214,"./BailErrorStrategy":215,"./BufferedTokenStream":216,"./CharStreams":217,"./CodePointBuffer":218,"./CodePointCharStream":219,"./CommonToken":220,"./CommonTokenFactory":221,"./CommonTokenStream":222,"./ConsoleErrorListener":223,"./DefaultErrorStrategy":225,"./Dependents":226,"./DiagnosticErrorListener":227,"./FailedPredicateException":228,"./InputMismatchException":229,"./IntStream":230,"./InterpreterRuleContext":231,"./Lexer":232,"./LexerInterpreter":233,"./LexerNoViableAltException":234,"./ListTokenSource":235,"./NoViableAltException":236,"./Parser":237,"./ParserInterpreter":238,"./ParserRuleContext":239,"./ProxyErrorListener":240,"./ProxyParserErrorListener":241,"./RecognitionException":242,"./Recognizer":243,"./RuleContext":244,"./RuleContextWithAltNum":245,"./RuleDependency":246,"./RuleVersion":247,"./Token":248,"./TokenStreamRewriter":249,"./VocabularyImpl":250}],321:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var Array2DHashSet_1=require("./Array2DHashSet");var MapKeyEqualityComparator=function(){function MapKeyEqualityComparator(keyComparator){classCallCheck(this,MapKeyEqualityComparator);this.keyComparator=keyComparator;}createClass(MapKeyEqualityComparator,[{key:'hashCode',value:function hashCode(obj){return this.keyComparator.hashCode(obj.key);}},{key:'equals',value:function equals(a,b){return this.keyComparator.equals(a.key,b.key);}}]);return MapKeyEqualityComparator;}();var Array2DHashMap=function(){function Array2DHashMap(keyComparer){classCallCheck(this,Array2DHashMap);if(keyComparer instanceof Array2DHashMap){this.backingStore=new Array2DHashSet_1.Array2DHashSet(keyComparer.backingStore);}else {this.backingStore=new Array2DHashSet_1.Array2DHashSet(new MapKeyEqualityComparator(keyComparer));}}createClass(Array2DHashMap,[{key:'clear',value:function clear(){this.backingStore.clear();}},{key:'containsKey',value:function containsKey(key){return this.backingStore.contains({key:key});}},{key:'get',value:function get(key){var bucket=this.backingStore.get({key:key});if(!bucket){return undefined;}return bucket.value;}},{key:'put',value:function put(key,value){var element=this.backingStore.get({key:key,value:value});var result=void 0;if(!element){this.backingStore.add({key:key,value:value});}else {result=element.value;element.value=value;}return result;}},{key:'putIfAbsent',value:function putIfAbsent(key,value){var element=this.backingStore.get({key:key,value:value});var result=void 0;if(!element){this.backingStore.add({key:key,value:value});}else {result=element.value;}return result;}},{key:'hashCode',value:function hashCode(){return this.backingStore.hashCode();}},{key:'equals',value:function equals(o){if(!(o instanceof Array2DHashMap)){return false;}return this.backingStore.equals(o.backingStore);}},{key:'isEmpty',get:function get(){return this.backingStore.isEmpty;}},{key:'size',get:function get(){return this.backingStore.size;}}]);return Array2DHashMap;}();exports.Array2DHashMap=Array2DHashMap;},{"./Array2DHashSet":322}],322:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-03T02:09:41.7434086-07:00
	var assert=require("assert");var DefaultEqualityComparator_1=require("./DefaultEqualityComparator");var Decorators_1=require("../Decorators");var MurmurHash_1=require("./MurmurHash");/** {@link Set} implementation with closed hashing (open addressing). */// NOTE:  JavaScript's Set interface has on significant different diffrence from Java's:
	// 		  e.g. the return type of add() differs!
	//        For this reason I've commented tweaked the implements clause
	var INITAL_CAPACITY=16;// must be power of 2
	var LOAD_FACTOR=0.75;var Array2DHashSet=function(){function Array2DHashSet(comparatorOrSet){var initialCapacity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INITAL_CAPACITY;classCallCheck(this,Array2DHashSet);/** How many elements in set */this.n=0;this.threshold=Math.floor(INITAL_CAPACITY*LOAD_FACTOR);// when to expand
	if(comparatorOrSet instanceof Array2DHashSet){this.comparator=comparatorOrSet.comparator;this.buckets=comparatorOrSet.buckets.slice(0);for(var i=0;i<this.buckets.length;i++){var bucket=this.buckets[i];if(bucket){this.buckets[i]=bucket.slice(0);}}this.n=comparatorOrSet.n;this.threshold=comparatorOrSet.threshold;}else {this.comparator=comparatorOrSet||DefaultEqualityComparator_1.DefaultEqualityComparator.INSTANCE;this.buckets=this.createBuckets(initialCapacity);}}/**
	     * Add `o` to set if not there; return existing value if already
	     * there. This method performs the same operation as {@link #add} aside from
	     * the return value.
	     */createClass(Array2DHashSet,[{key:'getOrAdd',value:function getOrAdd(o){if(this.n>this.threshold){this.expand();}return this.getOrAddImpl(o);}},{key:'getOrAddImpl',value:function getOrAddImpl(o){var b=this.getBucket(o);var bucket=this.buckets[b];// NEW BUCKET
	if(!bucket){bucket=[o];this.buckets[b]=bucket;this.n++;return o;}// LOOK FOR IT IN BUCKET
	var _iteratorNormalCompletion160=true;var _didIteratorError160=false;var _iteratorError160=undefined;try{for(var _iterator160=bucket[Symbol.iterator](),_step160;!(_iteratorNormalCompletion160=(_step160=_iterator160.next()).done);_iteratorNormalCompletion160=true){var existing=_step160.value;if(this.comparator.equals(existing,o)){return existing;// found existing, quit
	}}// FULL BUCKET, expand and add to end
	}catch(err){_didIteratorError160=true;_iteratorError160=err;}finally{try{if(!_iteratorNormalCompletion160&&_iterator160.return){_iterator160.return();}}finally{if(_didIteratorError160){throw _iteratorError160;}}}bucket.push(o);this.n++;return o;}},{key:'get',value:function get(o){if(o==null){return o;}var b=this.getBucket(o);var bucket=this.buckets[b];if(!bucket){// no bucket
	return undefined;}var _iteratorNormalCompletion161=true;var _didIteratorError161=false;var _iteratorError161=undefined;try{for(var _iterator161=bucket[Symbol.iterator](),_step161;!(_iteratorNormalCompletion161=(_step161=_iterator161.next()).done);_iteratorNormalCompletion161=true){var e=_step161.value;if(this.comparator.equals(e,o)){return e;}}}catch(err){_didIteratorError161=true;_iteratorError161=err;}finally{try{if(!_iteratorNormalCompletion161&&_iterator161.return){_iterator161.return();}}finally{if(_didIteratorError161){throw _iteratorError161;}}}return undefined;}},{key:'getBucket',value:function getBucket(o){var hash=this.comparator.hashCode(o);var b=hash&this.buckets.length-1;// assumes len is power of 2
	return b;}},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();var _iteratorNormalCompletion162=true;var _didIteratorError162=false;var _iteratorError162=undefined;try{for(var _iterator162=this.buckets[Symbol.iterator](),_step162;!(_iteratorNormalCompletion162=(_step162=_iterator162.next()).done);_iteratorNormalCompletion162=true){var bucket=_step162.value;if(bucket==null){continue;}var _iteratorNormalCompletion163=true;var _didIteratorError163=false;var _iteratorError163=undefined;try{for(var _iterator163=bucket[Symbol.iterator](),_step163;!(_iteratorNormalCompletion163=(_step163=_iterator163.next()).done);_iteratorNormalCompletion163=true){var o=_step163.value;if(o==null){break;}hash=MurmurHash_1.MurmurHash.update(hash,this.comparator.hashCode(o));}}catch(err){_didIteratorError163=true;_iteratorError163=err;}finally{try{if(!_iteratorNormalCompletion163&&_iterator163.return){_iterator163.return();}}finally{if(_didIteratorError163){throw _iteratorError163;}}}}}catch(err){_didIteratorError162=true;_iteratorError162=err;}finally{try{if(!_iteratorNormalCompletion162&&_iterator162.return){_iterator162.return();}}finally{if(_didIteratorError162){throw _iteratorError162;}}}hash=MurmurHash_1.MurmurHash.finish(hash,this.size);return hash;}},{key:'equals',value:function equals(o){if(o===this){return true;}if(!(o instanceof Array2DHashSet)){return false;}if(o.size!==this.size){return false;}var same=this.containsAll(o);return same;}},{key:'expand',value:function expand(){var old=this.buckets;var newCapacity=this.buckets.length*2;var newTable=this.createBuckets(newCapacity);this.buckets=newTable;this.threshold=Math.floor(newCapacity*LOAD_FACTOR);//		System.out.println("new size="+newCapacity+", thres="+threshold);
	// rehash all existing entries
	var oldSize=this.size;var _iteratorNormalCompletion164=true;var _didIteratorError164=false;var _iteratorError164=undefined;try{for(var _iterator164=old[Symbol.iterator](),_step164;!(_iteratorNormalCompletion164=(_step164=_iterator164.next()).done);_iteratorNormalCompletion164=true){var bucket=_step164.value;if(!bucket){continue;}var _iteratorNormalCompletion165=true;var _didIteratorError165=false;var _iteratorError165=undefined;try{for(var _iterator165=bucket[Symbol.iterator](),_step165;!(_iteratorNormalCompletion165=(_step165=_iterator165.next()).done);_iteratorNormalCompletion165=true){var o=_step165.value;var b=this.getBucket(o);var newBucket=this.buckets[b];if(!newBucket){newBucket=[];this.buckets[b]=newBucket;}newBucket.push(o);}}catch(err){_didIteratorError165=true;_iteratorError165=err;}finally{try{if(!_iteratorNormalCompletion165&&_iterator165.return){_iterator165.return();}}finally{if(_didIteratorError165){throw _iteratorError165;}}}}}catch(err){_didIteratorError164=true;_iteratorError164=err;}finally{try{if(!_iteratorNormalCompletion164&&_iterator164.return){_iterator164.return();}}finally{if(_didIteratorError164){throw _iteratorError164;}}}assert(this.n===oldSize);}},{key:'add',value:function add(t){var existing=this.getOrAdd(t);return existing===t;}},{key:'contains',value:function contains(o){return this.containsFast(this.asElementType(o));}},{key:'containsFast',value:function containsFast(obj){if(obj==null){return false;}return this.get(obj)!=null;}},{key:Symbol.iterator,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.delegateYield(this.toArray(),'t0',1);case 1:case'end':return _context4.stop();}}},value,this);})},{key:'toArray',value:function toArray(){var a=new Array(this.size);// Copy elements from the nested arrays into the destination array
	var i=0;// Position within destination array
	var _iteratorNormalCompletion166=true;var _didIteratorError166=false;var _iteratorError166=undefined;try{for(var _iterator166=this.buckets[Symbol.iterator](),_step166;!(_iteratorNormalCompletion166=(_step166=_iterator166.next()).done);_iteratorNormalCompletion166=true){var bucket=_step166.value;if(bucket==null){continue;}var _iteratorNormalCompletion167=true;var _didIteratorError167=false;var _iteratorError167=undefined;try{for(var _iterator167=bucket[Symbol.iterator](),_step167;!(_iteratorNormalCompletion167=(_step167=_iterator167.next()).done);_iteratorNormalCompletion167=true){var o=_step167.value;if(o==null){break;}a[i++]=o;}}catch(err){_didIteratorError167=true;_iteratorError167=err;}finally{try{if(!_iteratorNormalCompletion167&&_iterator167.return){_iterator167.return();}}finally{if(_didIteratorError167){throw _iteratorError167;}}}}}catch(err){_didIteratorError166=true;_iteratorError166=err;}finally{try{if(!_iteratorNormalCompletion166&&_iterator166.return){_iterator166.return();}}finally{if(_didIteratorError166){throw _iteratorError166;}}}return a;}},{key:'containsAll',value:function containsAll(collection){if(collection instanceof Array2DHashSet){var s=collection;var _iteratorNormalCompletion168=true;var _didIteratorError168=false;var _iteratorError168=undefined;try{for(var _iterator168=s.buckets[Symbol.iterator](),_step168;!(_iteratorNormalCompletion168=(_step168=_iterator168.next()).done);_iteratorNormalCompletion168=true){var bucket=_step168.value;if(bucket==null){continue;}var _iteratorNormalCompletion169=true;var _didIteratorError169=false;var _iteratorError169=undefined;try{for(var _iterator169=bucket[Symbol.iterator](),_step169;!(_iteratorNormalCompletion169=(_step169=_iterator169.next()).done);_iteratorNormalCompletion169=true){var o=_step169.value;if(o==null){break;}if(!this.containsFast(this.asElementType(o))){return false;}}}catch(err){_didIteratorError169=true;_iteratorError169=err;}finally{try{if(!_iteratorNormalCompletion169&&_iterator169.return){_iterator169.return();}}finally{if(_didIteratorError169){throw _iteratorError169;}}}}}catch(err){_didIteratorError168=true;_iteratorError168=err;}finally{try{if(!_iteratorNormalCompletion168&&_iterator168.return){_iterator168.return();}}finally{if(_didIteratorError168){throw _iteratorError168;}}}}else {var _iteratorNormalCompletion170=true;var _didIteratorError170=false;var _iteratorError170=undefined;try{for(var _iterator170=collection[Symbol.iterator](),_step170;!(_iteratorNormalCompletion170=(_step170=_iterator170.next()).done);_iteratorNormalCompletion170=true){var _o=_step170.value;if(!this.containsFast(this.asElementType(_o))){return false;}}}catch(err){_didIteratorError170=true;_iteratorError170=err;}finally{try{if(!_iteratorNormalCompletion170&&_iterator170.return){_iterator170.return();}}finally{if(_didIteratorError170){throw _iteratorError170;}}}}return true;}},{key:'addAll',value:function addAll(c){var changed=false;var _iteratorNormalCompletion171=true;var _didIteratorError171=false;var _iteratorError171=undefined;try{for(var _iterator171=c[Symbol.iterator](),_step171;!(_iteratorNormalCompletion171=(_step171=_iterator171.next()).done);_iteratorNormalCompletion171=true){var o=_step171.value;var existing=this.getOrAdd(o);if(existing!==o){changed=true;}}}catch(err){_didIteratorError171=true;_iteratorError171=err;}finally{try{if(!_iteratorNormalCompletion171&&_iterator171.return){_iterator171.return();}}finally{if(_didIteratorError171){throw _iteratorError171;}}}return changed;}},{key:'clear',value:function clear(){this.buckets=this.createBuckets(INITAL_CAPACITY);this.n=0;this.threshold=Math.floor(INITAL_CAPACITY*LOAD_FACTOR);}},{key:'toString',value:function toString(){if(this.size===0){return "{}";}var buf="{";var first=true;var _iteratorNormalCompletion172=true;var _didIteratorError172=false;var _iteratorError172=undefined;try{for(var _iterator172=this.buckets[Symbol.iterator](),_step172;!(_iteratorNormalCompletion172=(_step172=_iterator172.next()).done);_iteratorNormalCompletion172=true){var bucket=_step172.value;if(bucket==null){continue;}var _iteratorNormalCompletion173=true;var _didIteratorError173=false;var _iteratorError173=undefined;try{for(var _iterator173=bucket[Symbol.iterator](),_step173;!(_iteratorNormalCompletion173=(_step173=_iterator173.next()).done);_iteratorNormalCompletion173=true){var o=_step173.value;if(o==null){break;}if(first){first=false;}else {buf+=", ";}buf+=o.toString();}}catch(err){_didIteratorError173=true;_iteratorError173=err;}finally{try{if(!_iteratorNormalCompletion173&&_iterator173.return){_iterator173.return();}}finally{if(_didIteratorError173){throw _iteratorError173;}}}}}catch(err){_didIteratorError172=true;_iteratorError172=err;}finally{try{if(!_iteratorNormalCompletion172&&_iterator172.return){_iterator172.return();}}finally{if(_didIteratorError172){throw _iteratorError172;}}}buf+="}";return buf;}},{key:'toTableString',value:function toTableString(){var buf="";var _iteratorNormalCompletion174=true;var _didIteratorError174=false;var _iteratorError174=undefined;try{for(var _iterator174=this.buckets[Symbol.iterator](),_step174;!(_iteratorNormalCompletion174=(_step174=_iterator174.next()).done);_iteratorNormalCompletion174=true){var bucket=_step174.value;if(bucket==null){buf+="null\n";continue;}buf+="[";var first=true;var _iteratorNormalCompletion175=true;var _didIteratorError175=false;var _iteratorError175=undefined;try{for(var _iterator175=bucket[Symbol.iterator](),_step175;!(_iteratorNormalCompletion175=(_step175=_iterator175.next()).done);_iteratorNormalCompletion175=true){var o=_step175.value;if(first){first=false;}else {buf+=" ";}if(o==null){buf+="_";}else {buf+=o.toString();}}}catch(err){_didIteratorError175=true;_iteratorError175=err;}finally{try{if(!_iteratorNormalCompletion175&&_iterator175.return){_iterator175.return();}}finally{if(_didIteratorError175){throw _iteratorError175;}}}buf+="]\n";}}catch(err){_didIteratorError174=true;_iteratorError174=err;}finally{try{if(!_iteratorNormalCompletion174&&_iterator174.return){_iterator174.return();}}finally{if(_didIteratorError174){throw _iteratorError174;}}}return buf;}/**
	     * Return `o` as an instance of the element type `T`. If
	     * `o` is non-undefined but known to not be an instance of `T`, this
	     * method returns `undefined`. The base implementation does not perform any
	     * type checks; override this method to provide strong type checks for the
	     * {@link #contains} and {@link #remove} methods to ensure the arguments to
	     * the {@link EqualityComparator} for the set always have the expected
	     * types.
	     *
	     * @param o the object to try and cast to the element type of the set
	     * @returns `o` if it could be an instance of `T`, otherwise
	     * `undefined`.
	     */},{key:'asElementType',value:function asElementType(o){return o;}/**
	     * Return an array of `T[]` with length `capacity`.
	     *
	     * @param capacity the length of the array to return
	     * @returns the newly constructed array
	     */},{key:'createBuckets',value:function createBuckets(capacity){return new Array(capacity);}},{key:'size',get:function get(){return this.n;}},{key:'isEmpty',get:function get(){return this.n===0;}}]);return Array2DHashSet;}();__decorate([Decorators_1.NotNull],Array2DHashSet.prototype,"comparator",void 0);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"hashCode",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"equals",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"add",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"size",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"isEmpty",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"contains",null);__decorate([__param(0,Decorators_1.Nullable)],Array2DHashSet.prototype,"containsFast",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,Symbol.iterator,null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"toArray",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"containsAll",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"addAll",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"clear",null);__decorate([Decorators_1.Override],Array2DHashSet.prototype,"toString",null);__decorate([Decorators_1.SuppressWarnings("unchecked")],Array2DHashSet.prototype,"asElementType",null);__decorate([Decorators_1.SuppressWarnings("unchecked")],Array2DHashSet.prototype,"createBuckets",null);exports.Array2DHashSet=Array2DHashSet;},{"../Decorators":224,"./DefaultEqualityComparator":327,"./MurmurHash":333,"assert":364}],323:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var MurmurHash_1=require("./MurmurHash");var ObjectEqualityComparator_1=require("./ObjectEqualityComparator");/**
	 * This default implementation of {@link EqualityComparator} uses object equality
	 * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.
	 *
	 * @author Sam Harwell
	 */var ArrayEqualityComparator=function(){function ArrayEqualityComparator(){classCallCheck(this,ArrayEqualityComparator);}createClass(ArrayEqualityComparator,[{key:'hashCode',/**
	     * {@inheritDoc}
	     *
	     * This implementation returns
	     * `obj.`{@link Object#hashCode hashCode()}.
	     */value:function hashCode(obj){if(obj==null){return 0;}return MurmurHash_1.MurmurHash.hashCode(obj,0);}/**
	     * {@inheritDoc}
	     *
	     * This implementation relies on object equality. If both objects are
	     * `undefined`, this method returns `true`. Otherwise if only
	     * `a` is `undefined`, this method returns `false`. Otherwise,
	     * this method returns the result of
	     * `a.`{@link Object#equals equals}`(b)`.
	     */},{key:'equals',value:function equals(a,b){if(a==null){return b==null;}else if(b==null){return false;}if(a.length!==b.length){return false;}for(var i=0;i<a.length;i++){if(!ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE.equals(a[i],b[i])){return false;}}return true;}}]);return ArrayEqualityComparator;}();ArrayEqualityComparator.INSTANCE=new ArrayEqualityComparator();__decorate([Decorators_1.Override],ArrayEqualityComparator.prototype,"hashCode",null);__decorate([Decorators_1.Override],ArrayEqualityComparator.prototype,"equals",null);exports.ArrayEqualityComparator=ArrayEqualityComparator;},{"../Decorators":224,"./MurmurHash":333,"./ObjectEqualityComparator":334}],324:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});(function(Arrays){/**
	     * Searches the specified array of numbers for the specified value using the binary search algorithm. The array must
	     * be sorted prior to making this call. If it is not sorted, the results are unspecified. If the array contains
	     * multiple elements with the specified value, there is no guarantee which one will be found.
	     *
	     * @returns index of the search key, if it is contained in the array; otherwise, (-(insertion point) - 1). The
	     * insertion point is defined as the point at which the key would be inserted into the array: the index of the first
	     * element greater than the key, or array.length if all elements in the array are less than the specified key. Note
	     * that this guarantees that the return value will be >= 0 if and only if the key is found.
	     */function binarySearch(array,key,fromIndex,toIndex){return binarySearch0(array,fromIndex!==undefined?fromIndex:0,toIndex!==undefined?toIndex:array.length,key);}Arrays.binarySearch=binarySearch;function binarySearch0(array,fromIndex,toIndex,key){var low=fromIndex;var high=toIndex-1;while(low<=high){var mid=low+high>>>1;var midVal=array[mid];if(midVal<key){low=mid+1;}else if(midVal>key){high=mid-1;}else {// key found
	return mid;}}// key not found.
	return -(low+1);}function toString(array){var result="[";var first=true;var _iteratorNormalCompletion176=true;var _didIteratorError176=false;var _iteratorError176=undefined;try{for(var _iterator176=array[Symbol.iterator](),_step176;!(_iteratorNormalCompletion176=(_step176=_iterator176.next()).done);_iteratorNormalCompletion176=true){var element=_step176.value;if(first){first=false;}else {result+=", ";}if(element===null){result+="null";}else if(element===undefined){result+="undefined";}else {result+=element;}}}catch(err){_didIteratorError176=true;_iteratorError176=err;}finally{try{if(!_iteratorNormalCompletion176&&_iterator176.return){_iterator176.return();}}finally{if(_didIteratorError176){throw _iteratorError176;}}}result+="]";return result;}Arrays.toString=toString;})(exports.Arrays||(exports.Arrays={}));},{}],325:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var util=require("util");var MurmurHash_1=require("./MurmurHash");/**
	 * Private empty array used to construct empty BitSets
	 */var EMPTY_DATA=new Uint16Array(0);/**
	 * Gets the word index of the `UInt16` element in `BitSet.data` containing the bit with the specified index.
	 */function getIndex(bitNumber){return bitNumber>>>4;}/**
	 * Convert a word index into the bit index of the LSB of that word
	 */function unIndex(n){return n*16;}/**
	 * Get's the bit number of the least signficant bit set LSB which is set in a word non-zero word;
	 * Bit numbers run from LSB to MSB starting with 0.
	 */function findLSBSet(word){var bit=1;for(var i=0;i<16;i++){if((word&bit)!==0){return i;}bit=bit<<1>>>0;}throw new RangeError("No specified bit found");}function findMSBSet(word){var bit=1<<15>>>0;for(var i=15;i>=0;i--){if((word&bit)!==0){return i;}bit=bit>>>1;}throw new RangeError("No specified bit found");}/**
	 * Gets a 16-bit mask with bit numbers fromBit to toBit (inclusive) set.
	 * Bit numbers run from LSB to MSB starting with 0.
	 */function bitsFor(fromBit,toBit){fromBit&=0xF;toBit&=0xF;if(fromBit===toBit){return 1<<fromBit>>>0;}return 0xFFFF>>>15-toBit^0xFFFF>>>16-fromBit;}/**
	 * A lookup table for number of set bits in a 16-bit integer.   This is used to quickly count the cardinality (number of unique elements) of a BitSet.
	 */var POP_CNT=new Uint8Array(65536);for(var i=0;i<16;i++){var stride=1<<i>>>0;var index=0;while(index<POP_CNT.length){// skip the numbers where the bit isn't set
	index+=stride;// increment the ones where the bit is set
	for(var j=0;j<stride;j++){POP_CNT[index]++;index++;}}}var BitSet=function(){/*
	    ** constructor implementation
	    */function BitSet(arg){classCallCheck(this,BitSet);if(!arg){// covering the case of unspecified and nbits===0
	this.data=EMPTY_DATA;}else if(typeof arg==="number"){if(arg<0){throw new RangeError("nbits cannot be negative");}else {this.data=new Uint16Array(getIndex(arg-1)+1);}}else {if(arg instanceof BitSet){this.data=arg.data.slice(0);// Clone the data
	}else {var max=-1;var _iteratorNormalCompletion177=true;var _didIteratorError177=false;var _iteratorError177=undefined;try{for(var _iterator177=arg[Symbol.iterator](),_step177;!(_iteratorNormalCompletion177=(_step177=_iterator177.next()).done);_iteratorNormalCompletion177=true){var v=_step177.value;if(max<v){max=v;}}}catch(err){_didIteratorError177=true;_iteratorError177=err;}finally{try{if(!_iteratorNormalCompletion177&&_iterator177.return){_iterator177.return();}}finally{if(_didIteratorError177){throw _iteratorError177;}}}this.data=new Uint16Array(getIndex(max-1)+1);var _iteratorNormalCompletion178=true;var _didIteratorError178=false;var _iteratorError178=undefined;try{for(var _iterator178=arg[Symbol.iterator](),_step178;!(_iteratorNormalCompletion178=(_step178=_iterator178.next()).done);_iteratorNormalCompletion178=true){var _v=_step178.value;this.set(_v);}}catch(err){_didIteratorError178=true;_iteratorError178=err;}finally{try{if(!_iteratorNormalCompletion178&&_iterator178.return){_iterator178.return();}}finally{if(_didIteratorError178){throw _iteratorError178;}}}}}}/**
	     * Performs a logical **AND** of this target bit set with the argument bit set. This bit set is modified so that
	     * each bit in it has the value `true` if and only if it both initially had the value `true` and the corresponding
	     * bit in the bit set argument also had the value `true`.
	     */createClass(BitSet,[{key:'and',value:function and(set){var data=this.data;var other=set.data;var words=Math.min(data.length,other.length);var lastWord=-1;// Keep track of index of last non-zero word
	for(var _i38=0;_i38<words;_i38++){var _value5=data[_i38]&=other[_i38];if(_value5!==0){lastWord=_i38;}}if(lastWord===-1){this.data=EMPTY_DATA;}if(lastWord<data.length-1){this.data=data.slice(0,lastWord+1);}}/**
	     * Clears all of the bits in this `BitSet` whose corresponding bit is set in the specified `BitSet`.
	     */},{key:'andNot',value:function andNot(set){var data=this.data;var other=set.data;var words=Math.min(data.length,other.length);var lastWord=-1;// Keep track of index of last non-zero word
	for(var _i39=0;_i39<words;_i39++){var _value6=data[_i39]&=other[_i39]^0xFFFF;if(_value6!==0){lastWord=_i39;}}if(lastWord===-1){this.data=EMPTY_DATA;}if(lastWord<data.length-1){this.data=data.slice(0,lastWord+1);}}/**
	     * Returns the number of bits set to `true` in this `BitSet`.
	     */},{key:'cardinality',value:function cardinality(){if(this.isEmpty){return 0;}var data=this.data;var length=data.length;var result=0;for(var _i40=0;_i40<length;_i40++){result+=POP_CNT[data[_i40]];}return result;}},{key:'clear',value:function clear(fromIndex,toIndex){if(fromIndex==null){this.data.fill(0);}else if(toIndex==null){this.set(fromIndex,false);}else {this.set(fromIndex,toIndex,false);}}},{key:'flip',value:function flip(fromIndex,toIndex){if(toIndex==null){toIndex=fromIndex;}if(fromIndex<0||toIndex<fromIndex){throw new RangeError();}var word=getIndex(fromIndex);var lastWord=getIndex(toIndex);if(word===lastWord){this.data[word]^=bitsFor(fromIndex,toIndex);}else {this.data[word++]^=bitsFor(fromIndex,15);while(word<lastWord){this.data[word++]^=0xFFFF;}this.data[word++]^=bitsFor(0,toIndex);}}},{key:'get',value:function get(fromIndex,toIndex){if(toIndex===undefined){return !!(this.data[getIndex(fromIndex)]&bitsFor(fromIndex,fromIndex));}else {// return a BitSet
	var result=new BitSet(toIndex+1);for(var _i41=fromIndex;_i41<=toIndex;_i41++){result.set(_i41,this.get(_i41));}return result;}}/**
	     * Returns true if the specified `BitSet` has any bits set to `true` that are also set to `true` in this `BitSet`.
	     *
	     * @param set `BitSet` to intersect with
	     */},{key:'intersects',value:function intersects(set){var smallerLength=Math.min(this.length(),set.length());if(smallerLength===0){return false;}var bound=getIndex(smallerLength-1);for(var _i42=0;_i42<=bound;_i42++){if((this.data[_i42]&set.data[_i42])!==0){return true;}}return false;}/**
	     * Returns true if this `BitSet` contains no bits that are set to `true`.
	     */},{key:'length',/**
	     * Returns the "logical size" of this `BitSet`: the index of the highest set bit in the `BitSet` plus one. Returns
	     * zero if the `BitSet` contains no set bits.
	     */value:function length(){if(!this.data.length){return 0;}return this.previousSetBit(unIndex(this.data.length)-1)+1;}/**
	     * Returns the index of the first bit that is set to `false` that occurs on or after the specified starting index,
	     * If no such bit exists then `-1` is returned.
	     *
	     * @param fromIndex the index to start checking from (inclusive)
	     *
	     * @throws RangeError if the specified index is negative
	     */},{key:'nextClearBit',value:function nextClearBit(fromIndex){if(fromIndex<0){throw new RangeError("fromIndex cannot be negative");}var data=this.data;var length=data.length;var word=getIndex(fromIndex);if(word>length){return -1;}var ignore=0xFFFF^bitsFor(fromIndex,15);if((data[word]|ignore)===0xFFFF){word++;ignore=0;for(;word<length;word++){if(data[word]!==0xFFFF){break;}}if(word===length){// Hit the end
	return -1;}}return unIndex(word)+findLSBSet((data[word]|ignore)^0xFFFF);}/**
	     * Returns the index of the first bit that is set to `true` that occurs on or after the specified starting index.
	     * If no such bit exists then `-1` is returned.
	     *
	     * To iterate over the `true` bits in a `BitSet`, use the following loop:
	     *
	     * ```
	     * for (let i = bs.nextSetBit(0); i >= 0; i = bs.nextSetBit(i + 1)) {
	     *   // operate on index i here
	     * }
	     * ```
	     *
	     * @param fromIndex the index to start checking from (inclusive)
	     *
	     * @throws RangeError if the specified index is negative
	     */},{key:'nextSetBit',value:function nextSetBit(fromIndex){if(fromIndex<0){throw new RangeError("fromIndex cannot be negative");}var data=this.data;var length=data.length;var word=getIndex(fromIndex);if(word>length){return -1;}var mask=bitsFor(fromIndex,15);if((data[word]&mask)===0){word++;mask=0xFFFF;for(;word<length;word++){if(data[word]!==0){break;}}if(word>=length){return -1;}}return unIndex(word)+findLSBSet(data[word]&mask);}/**
	     * Performs a logical **OR** of this bit set with the bit set argument. This bit set is modified so that a bit in it
	     * has the value `true` if and only if it either already had the value `true` or the corresponding bit in the bit
	     * set argument has the value `true`.
	     */},{key:'or',value:function or(set){var data=this.data;var other=set.data;var minWords=Math.min(data.length,other.length);var words=Math.max(data.length,other.length);var dest=data.length===words?data:new Uint16Array(words);var lastWord=-1;// Or those words both sets have in common
	for(var _i43=0;_i43<minWords;_i43++){var _value7=dest[_i43]=data[_i43]|other[_i43];if(_value7!==0){lastWord=_i43;}}// Copy words from larger set (if there is one)
	var longer=data.length>other.length?data:other;for(var _i44=minWords;_i44<words;_i44++){var _value8=dest[_i44]=longer[_i44];if(_value8!==0){lastWord=_i44;}}if(lastWord===-1){this.data=EMPTY_DATA;}else if(dest.length===lastWord+1){this.data=dest;}else {this.data=dest.slice(0,lastWord);}}/**
	     * Returns the index of the nearest bit that is set to `false` that occurs on or before the specified starting
	     * index. If no such bit exists, or if `-1` is given as the starting index, then `-1` is returned.
	     *
	     * @param fromIndex the index to start checking from (inclusive)
	     *
	     * @throws RangeError if the specified index is less than `-1`
	     */},{key:'previousClearBit',value:function previousClearBit(fromIndex){if(fromIndex<0){throw new RangeError("fromIndex cannot be negative");}var data=this.data;var length=data.length;var word=getIndex(fromIndex);if(word>=length){word=length-1;}var ignore=0xFFFF^bitsFor(0,fromIndex);if((data[word]|ignore)===0xFFFF){ignore=0;word--;for(;word>=0;word--){if(data[word]!==0xFFFF){break;}}if(word<0){// Hit the end
	return -1;}}return unIndex(word)+findMSBSet((data[word]|ignore)^0xFFFF);}/**
	     * Returns the index of the nearest bit that is set to `true` that occurs on or before the specified starting index.
	     * If no such bit exists, or if `-1` is given as the starting index, then `-1` is returned.
	     *
	     * To iterate over the `true` bits in a `BitSet`, use the following loop:
	     *
	     * ```
	     * for (let i = bs.length(); (i = bs.previousSetBit(i-1)) >= 0; ) {
	     *   // operate on index i here
	     * }
	     * ```
	     *
	     * @param fromIndex the index to start checking from (inclusive)
	     *
	     * @throws RangeError if the specified index is less than `-1`
	     */},{key:'previousSetBit',value:function previousSetBit(fromIndex){if(fromIndex<0){throw new RangeError("fromIndex cannot be negative");}var data=this.data;var length=data.length;var word=getIndex(fromIndex);if(word>=length){word=length-1;}var mask=bitsFor(0,fromIndex);if((data[word]&mask)===0){word--;mask=0xFFFF;for(;word>=0;word--){if(data[word]!==0){break;}}if(word<0){return -1;}}return unIndex(word)+findMSBSet(data[word]&mask);}},{key:'set',value:function set(fromIndex,toIndex,value){if(toIndex===undefined){toIndex=fromIndex;value=true;}else if(typeof toIndex==="boolean"){value=toIndex;toIndex=fromIndex;}if(value===undefined){value=true;}if(fromIndex<0||fromIndex>toIndex){throw new RangeError();}var word=getIndex(fromIndex);var lastWord=getIndex(toIndex);if(value&&lastWord>=this.data.length){// Grow array "just enough" for bits we need to set
	var temp=new Uint16Array(lastWord+1);this.data.forEach(function(value,index){return temp[index]=value;});this.data=temp;}else if(!value){// But there is no need to grow array to clear bits.
	if(word>=this.data.length){// Early exit
	return;}if(lastWord>=this.data.length){// Adjust work to fit array
	lastWord=this.data.length-1;toIndex=this.data.length*16-1;}}if(word===lastWord){this._setBits(word,value,bitsFor(fromIndex,toIndex));}else {this._setBits(word++,value,bitsFor(fromIndex,15));while(word<lastWord){this.data[word++]=value?0xFFFF:0;}this._setBits(word,value,bitsFor(0,toIndex));}}},{key:'_setBits',value:function _setBits(word,value,mask){if(value){this.data[word]|=mask;}else {this.data[word]&=0xFFFF^mask;}}/**
	     * Returns the number of bits of space actually in use by this `BitSet` to represent bit values. The maximum element
	     * in the set is the size - 1st element.
	     */},{key:'hashCode',/**
	     * Returns a new byte array containing all the bits in this bit set.
	     *
	     * More precisely, if
	     * `let bytes = s.toByteArray();`
	     * then `bytes.length === (s.length()+7)/8` and `s.get(n) === ((bytes[n/8] & (1<<(n%8))) != 0)` for all
	     * `n < 8 * bytes.length`.
	     */// toByteArray(): Int8Array {
	// 	throw new Error("NOT IMPLEMENTED");
	// }
	/**
	     * Returns a new integer array containing all the bits in this bit set.
	     *
	     * More precisely, if
	     * `let integers = s.toIntegerArray();`
	     * then `integers.length === (s.length()+31)/32` and `s.get(n) === ((integers[n/32] & (1<<(n%32))) != 0)` for all
	     * `n < 32 * integers.length`.
	     */// toIntegerArray(): Int32Array {
	// 	throw new Error("NOT IMPLEMENTED");
	// }
	value:function hashCode(){return MurmurHash_1.MurmurHash.hashCode(this.data,22);}/**
	     * Compares this object against the specified object. The result is `true` if and only if the argument is not
	     * `undefined` and is a `Bitset` object that has exactly the same set of bits set to `true` as this bit set. That
	     * is, for every nonnegative index `k`,
	     *
	     * ```
	     * ((BitSet)obj).get(k) == this.get(k)
	     * ```
	     *
	     * must be true. The current sizes of the two bit sets are not compared.
	     */},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof BitSet)){return false;}var len=this.length();if(len!==obj.length()){return false;}if(len===0){return true;}var bound=getIndex(len-1);for(var _i45=0;_i45<=bound;_i45++){if(this.data[_i45]!==obj.data[_i45]){return false;}}return true;}/**
	     * Returns a string representation of this bit set. For every index for which this `BitSet` contains a bit in the
	     * set state, the decimal representation of that index is included in the result. Such indices are listed in order
	     * from lowest to highest, separated by ", " (a comma and a space) and surrounded by braces, resulting in the usual
	     * mathematical notation for a set of integers.
	     *
	     * Example:
	     *
	     *     BitSet drPepper = new BitSet();
	     *
	     * Now `drPepper.toString()` returns `"{}"`.
	     *
	     *     drPepper.set(2);
	     *
	     * Now `drPepper.toString()` returns `"{2}"`.
	     *
	     *     drPepper.set(4);
	     *     drPepper.set(10);
	     *
	     * Now `drPepper.toString()` returns `"{2, 4, 10}"`.
	     */},{key:'toString',value:function toString(){var result="{";var first=true;for(var _i46=this.nextSetBit(0);_i46>=0;_i46=this.nextSetBit(_i46+1)){if(first){first=false;}else {result+=", ";}result+=_i46;}result+="}";return result;}// static valueOf(bytes: Int8Array): BitSet;
	// static valueOf(buffer: ArrayBuffer): BitSet;
	// static valueOf(integers: Int32Array): BitSet;
	// static valueOf(data: Int8Array | Int32Array | ArrayBuffer): BitSet {
	// 	throw new Error("NOT IMPLEMENTED");
	// }
	/**
	     * Performs a logical **XOR** of this bit set with the bit set argument. This bit set is modified so that a bit in
	     * it has the value `true` if and only if one of the following statements holds:
	     *
	     * * The bit initially has the value `true`, and the corresponding bit in the argument has the value `false`.
	     * * The bit initially has the value `false`, and the corresponding bit in the argument has the value `true`.
	     */},{key:'xor',value:function xor(set){var data=this.data;var other=set.data;var minWords=Math.min(data.length,other.length);var words=Math.max(data.length,other.length);var dest=data.length===words?data:new Uint16Array(words);var lastWord=-1;// Xor those words both sets have in common
	for(var _i47=0;_i47<minWords;_i47++){var _value9=dest[_i47]=data[_i47]^other[_i47];if(_value9!==0){lastWord=_i47;}}// Copy words from larger set (if there is one)
	var longer=data.length>other.length?data:other;for(var _i48=minWords;_i48<words;_i48++){var _value10=dest[_i48]=longer[_i48];if(_value10!==0){lastWord=_i48;}}if(lastWord===-1){this.data=EMPTY_DATA;}else if(dest.length===lastWord+1){this.data=dest;}else {this.data=dest.slice(0,lastWord+1);}}},{key:'clone',value:function clone(){return new BitSet(this);}},{key:Symbol.iterator,value:function value(){return new BitSetIterator(this.data);}// Overrides formatting for nodejs assert etc.
	},{key:util.inspect.custom,value:function value(){return "BitSet "+this.toString();}},{key:'isEmpty',get:function get(){return this.length()===0;}},{key:'size',get:function get(){return this.data.byteLength*8;}}]);return BitSet;}();exports.BitSet=BitSet;var BitSetIterator=function(){function BitSetIterator(data){classCallCheck(this,BitSetIterator);this.data=data;this.index=0;this.mask=0xFFFF;}createClass(BitSetIterator,[{key:'next',value:function next(){while(this.index<this.data.length){var bits=this.data[this.index]&this.mask;if(bits!==0){var bitNumber=unIndex(this.index)+findLSBSet(bits);this.mask=bitsFor(bitNumber+1,15);return {done:false,value:bitNumber};}this.index++;this.mask=0xFFFF;}return {done:true,value:-1};}},{key:Symbol.iterator,value:function value(){return this;}}]);return BitSetIterator;}();},{"./MurmurHash":333,"util":518}],326:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});function isHighSurrogate(ch){return ch>=0xD800&&ch<=0xDBFF;}exports.isHighSurrogate=isHighSurrogate;function isLowSurrogate(ch){return ch>=0xDC00&&ch<=0xDFFF;}exports.isLowSurrogate=isLowSurrogate;function isSupplementaryCodePoint(ch){return ch>=0x10000;}exports.isSupplementaryCodePoint=isSupplementaryCodePoint;},{}],327:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var MurmurHash_1=require("./MurmurHash");var ObjectEqualityComparator_1=require("./ObjectEqualityComparator");/**
	 * This default implementation of {@link EqualityComparator} uses object equality
	 * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.
	 *
	 * @author Sam Harwell
	 */var DefaultEqualityComparator=function(){function DefaultEqualityComparator(){classCallCheck(this,DefaultEqualityComparator);}createClass(DefaultEqualityComparator,[{key:'hashCode',/**
	     * {@inheritDoc}
	     *
	     * This implementation returns
	     * `obj.`{@link Object#hashCode hashCode()}.
	     */value:function hashCode(obj){if(obj==null){return 0;}else if(typeof obj==="string"||typeof obj==="number"){return MurmurHash_1.MurmurHash.hashCode([obj]);}else {return ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE.hashCode(obj);}}/**
	     * {@inheritDoc}
	     *
	     * This implementation relies on object equality. If both objects are
	     * `undefined` or `null`, this method returns `true`. Otherwise if only
	     * `a` is `undefined` or `null`, this method returns `false`. Otherwise,
	     * this method returns the result of
	     * `a.`{@link Object#equals equals}`(b)`.
	     */},{key:'equals',value:function equals(a,b){if(a==null){return b==null;}else if(typeof a==="string"||typeof a==="number"){return a===b;}else {return ObjectEqualityComparator_1.ObjectEqualityComparator.INSTANCE.equals(a,b);}}}]);return DefaultEqualityComparator;}();DefaultEqualityComparator.INSTANCE=new DefaultEqualityComparator();__decorate([Decorators_1.Override],DefaultEqualityComparator.prototype,"hashCode",null);__decorate([Decorators_1.Override],DefaultEqualityComparator.prototype,"equals",null);exports.DefaultEqualityComparator=DefaultEqualityComparator;},{"../Decorators":224,"./MurmurHash":333,"./ObjectEqualityComparator":334}],328:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:40.5099429-07:00
	var Arrays_1=require("./Arrays");var Decorators_1=require("../Decorators");var EMPTY_DATA=new Int32Array(0);var INITIAL_SIZE=4;var MAX_ARRAY_SIZE=(1<<31>>>0)-1-8;/**
	 *
	 * @author Sam Harwell
	 */var IntegerList=function(){function IntegerList(arg){classCallCheck(this,IntegerList);if(!arg){this._data=EMPTY_DATA;this._size=0;}else if(arg instanceof IntegerList){this._data=arg._data.slice(0);this._size=arg._size;}else if(typeof arg==="number"){if(arg===0){this._data=EMPTY_DATA;this._size=0;}else {this._data=new Int32Array(arg);this._size=0;}}else {// arg is Iterable<number>
	this._data=EMPTY_DATA;this._size=0;var _iteratorNormalCompletion179=true;var _didIteratorError179=false;var _iteratorError179=undefined;try{for(var _iterator179=arg[Symbol.iterator](),_step179;!(_iteratorNormalCompletion179=(_step179=_iterator179.next()).done);_iteratorNormalCompletion179=true){var _value11=_step179.value;this.add(_value11);}}catch(err){_didIteratorError179=true;_iteratorError179=err;}finally{try{if(!_iteratorNormalCompletion179&&_iterator179.return){_iterator179.return();}}finally{if(_didIteratorError179){throw _iteratorError179;}}}}}createClass(IntegerList,[{key:'add',value:function add(value){if(this._data.length===this._size){this.ensureCapacity(this._size+1);}this._data[this._size]=value;this._size++;}},{key:'addAll',value:function addAll(list){if(Array.isArray(list)){this.ensureCapacity(this._size+list.length);this._data.subarray(this._size,this._size+list.length).set(list);this._size+=list.length;}else if(list instanceof IntegerList){this.ensureCapacity(this._size+list._size);this._data.subarray(this._size,this._size+list.size).set(list._data);this._size+=list._size;}else {// list is JavaCollection<number>
	this.ensureCapacity(this._size+list.size);var current=0;var _iteratorNormalCompletion180=true;var _didIteratorError180=false;var _iteratorError180=undefined;try{for(var _iterator180=list[Symbol.iterator](),_step180;!(_iteratorNormalCompletion180=(_step180=_iterator180.next()).done);_iteratorNormalCompletion180=true){var xi=_step180.value;this._data[this._size+current]=xi;current++;}}catch(err){_didIteratorError180=true;_iteratorError180=err;}finally{try{if(!_iteratorNormalCompletion180&&_iterator180.return){_iterator180.return();}}finally{if(_didIteratorError180){throw _iteratorError180;}}}this._size+=list.size;}}},{key:'get',value:function get(index){if(index<0||index>=this._size){throw RangeError();}return this._data[index];}},{key:'contains',value:function contains(value){for(var i=0;i<this._size;i++){if(this._data[i]===value){return true;}}return false;}},{key:'set',value:function set(index,value){if(index<0||index>=this._size){throw RangeError();}var previous=this._data[index];this._data[index]=value;return previous;}},{key:'removeAt',value:function removeAt(index){var value=this.get(index);this._data.copyWithin(index,index+1,this._size);this._data[this._size-1]=0;this._size--;return value;}},{key:'removeRange',value:function removeRange(fromIndex,toIndex){if(fromIndex<0||toIndex<0||fromIndex>this._size||toIndex>this._size){throw RangeError();}if(fromIndex>toIndex){throw RangeError();}this._data.copyWithin(toIndex,fromIndex,this._size);this._data.fill(0,this._size-(toIndex-fromIndex),this._size);this._size-=toIndex-fromIndex;}},{key:'trimToSize',value:function trimToSize(){if(this._data.length===this._size){return;}this._data=this._data.slice(0,this._size);}},{key:'clear',value:function clear(){this._data.fill(0,0,this._size);this._size=0;}},{key:'toArray',value:function toArray(){if(this._size===0){return [];}return Array.from(this._data.subarray(0,this._size));}},{key:'sort',value:function sort(){this._data.subarray(0,this._size).sort();}/**
	     * Compares the specified object with this list for equality.  Returns
	     * `true` if and only if the specified object is also an {@link IntegerList},
	     * both lists have the same size, and all corresponding pairs of elements in
	     * the two lists are equal.  In other words, two lists are defined to be
	     * equal if they contain the same elements in the same order.
	     *
	     * This implementation first checks if the specified object is this
	     * list. If so, it returns `true`; if not, it checks if the
	     * specified object is an {@link IntegerList}. If not, it returns `false`;
	     * if so, it checks the size of both lists. If the lists are not the same size,
	     * it returns `false`; otherwise it iterates over both lists, comparing
	     * corresponding pairs of elements.  If any comparison returns `false`,
	     * this method returns `false`.
	     *
	     * @param o the object to be compared for equality with this list
	     * @returns `true` if the specified object is equal to this list
	     */},{key:'equals',value:function equals(o){if(o===this){return true;}if(!(o instanceof IntegerList)){return false;}if(this._size!==o._size){return false;}for(var i=0;i<this._size;i++){if(this._data[i]!==o._data[i]){return false;}}return true;}/**
	     * Returns the hash code value for this list.
	     *
	     * This implementation uses exactly the code that is used to define the
	     * list hash function in the documentation for the {@link List#hashCode}
	     * method.
	     *
	     * @returns the hash code value for this list
	     */},{key:'hashCode',value:function hashCode(){var hashCode=1;for(var i=0;i<this._size;i++){hashCode=31*hashCode+this._data[i];}return hashCode;}/**
	     * Returns a string representation of this list.
	     */},{key:'toString',value:function toString(){return this._data.toString();}},{key:'binarySearch',value:function binarySearch(key,fromIndex,toIndex){if(fromIndex===undefined){fromIndex=0;}if(toIndex===undefined){toIndex=this._size;}if(fromIndex<0||toIndex<0||fromIndex>this._size||toIndex>this._size){throw new RangeError();}if(fromIndex>toIndex){throw new RangeError();}return Arrays_1.Arrays.binarySearch(this._data,key,fromIndex,toIndex);}},{key:'ensureCapacity',value:function ensureCapacity(capacity){if(capacity<0||capacity>MAX_ARRAY_SIZE){throw new RangeError();}var newLength=void 0;if(this._data.length===0){newLength=INITIAL_SIZE;}else {newLength=this._data.length;}while(newLength<capacity){newLength=newLength*2;if(newLength<0||newLength>MAX_ARRAY_SIZE){newLength=MAX_ARRAY_SIZE;}}var tmp=new Int32Array(newLength);tmp.set(this._data);this._data=tmp;}/** Convert the list to a UTF-16 encoded char array. If all values are less
	     *  than the 0xFFFF 16-bit code point limit then this is just a char array
	     *  of 16-bit char as usual. For values in the supplementary range, encode
	     * them as two UTF-16 code units.
	     */},{key:'toCharArray',value:function toCharArray(){// Optimize for the common case (all data values are < 0xFFFF) to avoid an extra scan
	var resultArray=new Uint16Array(this._size);var resultIdx=0;var calculatedPreciseResultSize=false;for(var i=0;i<this._size;i++){var codePoint=this._data[i];if(codePoint>=0&&codePoint<0x10000){resultArray[resultIdx]=codePoint;resultIdx++;continue;}// Calculate the precise result size if we encounter a code point > 0xFFFF
	if(!calculatedPreciseResultSize){var newResultArray=new Uint16Array(this.charArraySize());newResultArray.set(resultArray,0);resultArray=newResultArray;calculatedPreciseResultSize=true;}// This will throw RangeError if the code point is not a valid Unicode code point
	var pair=String.fromCodePoint(codePoint);resultArray[resultIdx]=pair.charCodeAt(0);resultArray[resultIdx+1]=pair.charCodeAt(1);resultIdx+=2;}return resultArray;}},{key:'charArraySize',value:function charArraySize(){var result=0;for(var i=0;i<this._size;i++){result+=this._data[i]>=0x10000?2:1;}return result;}},{key:'isEmpty',get:function get(){return this._size===0;}},{key:'size',get:function get(){return this._size;}}]);return IntegerList;}();__decorate([Decorators_1.NotNull],IntegerList.prototype,"_data",void 0);__decorate([Decorators_1.Override],IntegerList.prototype,"equals",null);__decorate([Decorators_1.Override],IntegerList.prototype,"hashCode",null);__decorate([Decorators_1.Override],IntegerList.prototype,"toString",null);exports.IntegerList=IntegerList;},{"../Decorators":224,"./Arrays":324}],329:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:40.6647101-07:00
	var IntegerList_1=require("./IntegerList");/**
	 *
	 * @author Sam Harwell
	 */var IntegerStack=function(_IntegerList_1$Intege){inherits(IntegerStack,_IntegerList_1$Intege);function IntegerStack(arg){classCallCheck(this,IntegerStack);return possibleConstructorReturn(this,(IntegerStack.__proto__||Object.getPrototypeOf(IntegerStack)).call(this,arg));}createClass(IntegerStack,[{key:'push',value:function push(value){this.add(value);}},{key:'pop',value:function pop(){return this.removeAt(this.size-1);}},{key:'peek',value:function peek(){return this.get(this.size-1);}}]);return IntegerStack;}(IntegerList_1.IntegerList);exports.IntegerStack=IntegerStack;},{"./IntegerList":328}],330:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:40.7402214-07:00
	var Decorators_1=require("../Decorators");var INTERVAL_POOL_MAX_VALUE=1000;/** An immutable inclusive interval a..b */var Interval=function(){/**
	     * @param a The start of the interval
	     * @param b The end of the interval (inclusive)
	     */function Interval(a,b){classCallCheck(this,Interval);this.a=a;this.b=b;}createClass(Interval,[{key:'equals',value:function equals(o){if(o===this){return true;}else if(!(o instanceof Interval)){return false;}return this.a===o.a&&this.b===o.b;}},{key:'hashCode',value:function hashCode(){var hash=23;hash=hash*31+this.a;hash=hash*31+this.b;return hash;}/** Does this start completely before other? Disjoint */},{key:'startsBeforeDisjoint',value:function startsBeforeDisjoint(other){return this.a<other.a&&this.b<other.a;}/** Does this start at or before other? Nondisjoint */},{key:'startsBeforeNonDisjoint',value:function startsBeforeNonDisjoint(other){return this.a<=other.a&&this.b>=other.a;}/** Does this.a start after other.b? May or may not be disjoint */},{key:'startsAfter',value:function startsAfter(other){return this.a>other.a;}/** Does this start completely after other? Disjoint */},{key:'startsAfterDisjoint',value:function startsAfterDisjoint(other){return this.a>other.b;}/** Does this start after other? NonDisjoint */},{key:'startsAfterNonDisjoint',value:function startsAfterNonDisjoint(other){return this.a>other.a&&this.a<=other.b;// this.b>=other.b implied
	}/** Are both ranges disjoint? I.e., no overlap? */},{key:'disjoint',value:function disjoint(other){return this.startsBeforeDisjoint(other)||this.startsAfterDisjoint(other);}/** Are two intervals adjacent such as 0..41 and 42..42? */},{key:'adjacent',value:function adjacent(other){return this.a===other.b+1||this.b===other.a-1;}},{key:'properlyContains',value:function properlyContains(other){return other.a>=this.a&&other.b<=this.b;}/** Return the interval computed from combining this and other */},{key:'union',value:function union(other){return Interval.of(Math.min(this.a,other.a),Math.max(this.b,other.b));}/** Return the interval in common between this and o */},{key:'intersection',value:function intersection(other){return Interval.of(Math.max(this.a,other.a),Math.min(this.b,other.b));}/** Return the interval with elements from `this` not in `other`;
	     *  `other` must not be totally enclosed (properly contained)
	     *  within `this`, which would result in two disjoint intervals
	     *  instead of the single one returned by this method.
	     */},{key:'differenceNotProperlyContained',value:function differenceNotProperlyContained(other){var diff=void 0;if(other.startsBeforeNonDisjoint(this)){// other.a to left of this.a (or same)
	diff=Interval.of(Math.max(this.a,other.b+1),this.b);}else if(other.startsAfterNonDisjoint(this)){// other.a to right of this.a
	diff=Interval.of(this.a,other.a-1);}return diff;}},{key:'toString',value:function toString(){return this.a+".."+this.b;}},{key:'length',/** return number of elements between a and b inclusively. x..x is length 1.
	     *  if b &lt; a, then length is 0.  9..10 has length 2.
	     */get:function get(){if(this.b<this.a){return 0;}return this.b-this.a+1;}}],[{key:'of',/** Interval objects are used readonly so share all with the
	     *  same single value a==b up to some max size.  Use an array as a perfect hash.
	     *  Return shared object for 0..INTERVAL_POOL_MAX_VALUE or a new
	     *  Interval object with a..a in it.  On Java.g4, 218623 IntervalSets
	     *  have a..a (set with 1 element).
	     */value:function of(a,b){// cache just a..a
	if(a!==b||a<0||a>INTERVAL_POOL_MAX_VALUE){return new Interval(a,b);}if(Interval.cache[a]==null){Interval.cache[a]=new Interval(a,a);}return Interval.cache[a];}},{key:'INVALID',get:function get(){return Interval._INVALID;}}]);return Interval;}();Interval._INVALID=new Interval(-1,-2);Interval.cache=new Array(INTERVAL_POOL_MAX_VALUE+1);__decorate([Decorators_1.Override],Interval.prototype,"equals",null);__decorate([Decorators_1.Override],Interval.prototype,"hashCode",null);__decorate([Decorators_1.Override],Interval.prototype,"toString",null);exports.Interval=Interval;},{"../Decorators":224}],331:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:40.8683480-07:00
	var ArrayEqualityComparator_1=require("./ArrayEqualityComparator");var IntegerList_1=require("./IntegerList");var Interval_1=require("./Interval");var Lexer_1=require("../Lexer");var MurmurHash_1=require("./MurmurHash");var Decorators_1=require("../Decorators");var Token_1=require("../Token");/**
	 * This class implements the {@link IntSet} backed by a sorted array of
	 * non-overlapping intervals. It is particularly efficient for representing
	 * large collections of numbers, where the majority of elements appear as part
	 * of a sequential range of numbers that are all part of the set. For example,
	 * the set { 1, 2, 3, 4, 7, 8 } may be represented as { [1, 4], [7, 8] }.
	 *
	 * This class is able to represent sets containing any combination of values in
	 * the range {@link Integer#MIN_VALUE} to {@link Integer#MAX_VALUE}
	 * (inclusive).
	 */var IntervalSet=function(){function IntervalSet(intervals){classCallCheck(this,IntervalSet);this.readonly=false;if(intervals!=null){this._intervals=intervals.slice(0);}else {this._intervals=[];}}createClass(IntervalSet,[{key:'clear',value:function clear(){if(this.readonly){throw new Error("can't alter readonly IntervalSet");}this._intervals.length=0;}/** Add interval; i.e., add all integers from a to b to set.
	     *  If b&lt;a, do nothing.
	     *  Keep list in sorted order (by left range value).
	     *  If overlap, combine ranges.  For example,
	     *  If this is {1..5, 10..20}, adding 6..7 yields
	     *  {1..5, 6..7, 10..20}.  Adding 4..8 yields {1..8, 10..20}.
	     */},{key:'add',value:function add(a){var b=arguments.length>1&&arguments[1]!==undefined?arguments[1]:a;this.addRange(Interval_1.Interval.of(a,b));}// copy on write so we can cache a..a intervals and sets of that
	},{key:'addRange',value:function addRange(addition){if(this.readonly){throw new Error("can't alter readonly IntervalSet");}//System.out.println("add "+addition+" to "+intervals.toString());
	if(addition.b<addition.a){return;}// find position in list
	// Use iterators as we modify list in place
	for(var i=0;i<this._intervals.length;i++){var r=this._intervals[i];if(addition.equals(r)){return;}if(addition.adjacent(r)||!addition.disjoint(r)){// next to each other, make a single larger interval
	var bigger=addition.union(r);this._intervals[i]=bigger;// make sure we didn't just create an interval that
	// should be merged with next interval in list
	while(i<this._intervals.length-1){i++;var _next7=this._intervals[i];if(!bigger.adjacent(_next7)&&bigger.disjoint(_next7)){break;}// if we bump up against or overlap next, merge
	// remove this one
	this._intervals.splice(i,1);i--;// move backwards to what we just set
	this._intervals[i]=bigger.union(_next7);// set to 3 merged ones
	}// first call to next after previous duplicates the result
	return;}if(addition.startsBeforeDisjoint(r)){// insert before r
	this._intervals.splice(i,0,addition);return;}// if disjoint and after r, a future iteration will handle it
	}// ok, must be after last interval (and disjoint from last interval)
	// just add it
	this._intervals.push(addition);}/** combine all sets in the array returned the or'd value */},{key:'addAll',value:function addAll(set){if(set==null){return this;}if(set instanceof IntervalSet){var other=set;// walk set and add each interval
	var n=other._intervals.length;for(var i=0;i<n;i++){var I=other._intervals[i];this.add(I.a,I.b);}}else {var _iteratorNormalCompletion181=true;var _didIteratorError181=false;var _iteratorError181=undefined;try{for(var _iterator181=set.toArray()[Symbol.iterator](),_step181;!(_iteratorNormalCompletion181=(_step181=_iterator181.next()).done);_iteratorNormalCompletion181=true){var _value12=_step181.value;this.add(_value12);}}catch(err){_didIteratorError181=true;_iteratorError181=err;}finally{try{if(!_iteratorNormalCompletion181&&_iterator181.return){_iterator181.return();}}finally{if(_didIteratorError181){throw _iteratorError181;}}}}return this;}},{key:'complementRange',value:function complementRange(minElement,maxElement){return this.complement(IntervalSet.of(minElement,maxElement));}/** {@inheritDoc} */},{key:'complement',value:function complement(vocabulary){if(vocabulary.isNil){// nothing in common with null set
	return IntervalSet.EMPTY_SET;}var vocabularyIS=void 0;if(vocabulary instanceof IntervalSet){vocabularyIS=vocabulary;}else {vocabularyIS=new IntervalSet();vocabularyIS.addAll(vocabulary);}return vocabularyIS.subtract(this);}},{key:'subtract',value:function subtract(a){if(a==null||a.isNil){return new IntervalSet(this._intervals);}if(a instanceof IntervalSet){return IntervalSet.subtract(this,a);}var other=new IntervalSet();other.addAll(a);return IntervalSet.subtract(this,other);}/**
	     * Compute the set difference between two interval sets. The specific
	     * operation is `left - right`.
	     */},{key:'or',value:function or(a){var o=new IntervalSet();o.addAll(this);o.addAll(a);return o;}/** {@inheritDoc} */},{key:'and',value:function and(other){if(other.isNil){//|| !(other instanceof IntervalSet) ) {
	// nothing in common with null set
	return new IntervalSet();}var myIntervals=this._intervals;var theirIntervals=other._intervals;var intersection=void 0;var mySize=myIntervals.length;var theirSize=theirIntervals.length;var i=0;var j=0;// iterate down both interval lists looking for nondisjoint intervals
	while(i<mySize&&j<theirSize){var mine=myIntervals[i];var theirs=theirIntervals[j];//System.out.println("mine="+mine+" and theirs="+theirs);
	if(mine.startsBeforeDisjoint(theirs)){// move this iterator looking for interval that might overlap
	i++;}else if(theirs.startsBeforeDisjoint(mine)){// move other iterator looking for interval that might overlap
	j++;}else if(mine.properlyContains(theirs)){// overlap, add intersection, get next theirs
	if(!intersection){intersection=new IntervalSet();}intersection.addRange(mine.intersection(theirs));j++;}else if(theirs.properlyContains(mine)){// overlap, add intersection, get next mine
	if(!intersection){intersection=new IntervalSet();}intersection.addRange(mine.intersection(theirs));i++;}else if(!mine.disjoint(theirs)){// overlap, add intersection
	if(!intersection){intersection=new IntervalSet();}intersection.addRange(mine.intersection(theirs));// Move the iterator of lower range [a..b], but not
	// the upper range as it may contain elements that will collide
	// with the next iterator. So, if mine=[0..115] and
	// theirs=[115..200], then intersection is 115 and move mine
	// but not theirs as theirs may collide with the next range
	// in thisIter.
	// move both iterators to next ranges
	if(mine.startsAfterNonDisjoint(theirs)){j++;}else if(theirs.startsAfterNonDisjoint(mine)){i++;}}}if(!intersection){return new IntervalSet();}return intersection;}/** {@inheritDoc} */},{key:'contains',value:function contains(el){var n=this._intervals.length;var l=0;var r=n-1;// Binary search for the element in the (sorted, disjoint) array of intervals.
	while(l<=r){var m=l+r>>1;var I=this._intervals[m];var a=I.a;var b=I.b;if(b<el){l=m+1;}else if(a>el){r=m-1;}else {// el >= a && el <= b
	return true;}}return false;}/** {@inheritDoc} */},{key:'hashCode',value:function hashCode(){var hash=MurmurHash_1.MurmurHash.initialize();var _iteratorNormalCompletion182=true;var _didIteratorError182=false;var _iteratorError182=undefined;try{for(var _iterator182=this._intervals[Symbol.iterator](),_step182;!(_iteratorNormalCompletion182=(_step182=_iterator182.next()).done);_iteratorNormalCompletion182=true){var I=_step182.value;hash=MurmurHash_1.MurmurHash.update(hash,I.a);hash=MurmurHash_1.MurmurHash.update(hash,I.b);}}catch(err){_didIteratorError182=true;_iteratorError182=err;}finally{try{if(!_iteratorNormalCompletion182&&_iterator182.return){_iterator182.return();}}finally{if(_didIteratorError182){throw _iteratorError182;}}}hash=MurmurHash_1.MurmurHash.finish(hash,this._intervals.length*2);return hash;}/** Are two IntervalSets equal?  Because all intervals are sorted
	     *  and disjoint, equals is a simple linear walk over both lists
	     *  to make sure they are the same.  Interval.equals() is used
	     *  by the List.equals() method to check the ranges.
	     */},{key:'equals',value:function equals(o){if(o==null||!(o instanceof IntervalSet)){return false;}return ArrayEqualityComparator_1.ArrayEqualityComparator.INSTANCE.equals(this._intervals,o._intervals);}},{key:'toString',value:function toString(){var elemAreChar=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var buf="";if(this._intervals==null||this._intervals.length===0){return "{}";}if(this.size>1){buf+="{";}var first=true;var _iteratorNormalCompletion183=true;var _didIteratorError183=false;var _iteratorError183=undefined;try{for(var _iterator183=this._intervals[Symbol.iterator](),_step183;!(_iteratorNormalCompletion183=(_step183=_iterator183.next()).done);_iteratorNormalCompletion183=true){var I=_step183.value;if(first){first=false;}else {buf+=", ";}var a=I.a;var b=I.b;if(a===b){if(a===Token_1.Token.EOF){buf+="<EOF>";}else if(elemAreChar){buf+="'"+String.fromCodePoint(a)+"'";}else {buf+=a;}}else {if(elemAreChar){buf+="'"+String.fromCodePoint(a)+"'..'"+String.fromCodePoint(b)+"'";}else {buf+=a+".."+b;}}}}catch(err){_didIteratorError183=true;_iteratorError183=err;}finally{try{if(!_iteratorNormalCompletion183&&_iterator183.return){_iterator183.return();}}finally{if(_didIteratorError183){throw _iteratorError183;}}}if(this.size>1){buf+="}";}return buf;}},{key:'toStringVocabulary',value:function toStringVocabulary(vocabulary){if(this._intervals==null||this._intervals.length===0){return "{}";}var buf="";if(this.size>1){buf+="{";}var first=true;var _iteratorNormalCompletion184=true;var _didIteratorError184=false;var _iteratorError184=undefined;try{for(var _iterator184=this._intervals[Symbol.iterator](),_step184;!(_iteratorNormalCompletion184=(_step184=_iterator184.next()).done);_iteratorNormalCompletion184=true){var I=_step184.value;if(first){first=false;}else {buf+=", ";}var a=I.a;var b=I.b;if(a===b){buf+=this.elementName(vocabulary,a);}else {for(var i=a;i<=b;i++){if(i>a){buf+=", ";}buf+=this.elementName(vocabulary,i);}}}}catch(err){_didIteratorError184=true;_iteratorError184=err;}finally{try{if(!_iteratorNormalCompletion184&&_iterator184.return){_iterator184.return();}}finally{if(_didIteratorError184){throw _iteratorError184;}}}if(this.size>1){buf+="}";}return buf;}},{key:'elementName',value:function elementName(vocabulary,a){if(a===Token_1.Token.EOF){return "<EOF>";}else if(a===Token_1.Token.EPSILON){return "<EPSILON>";}else {return vocabulary.getDisplayName(a);}}},{key:'toIntegerList',value:function toIntegerList(){var values=new IntegerList_1.IntegerList(this.size);var n=this._intervals.length;for(var i=0;i<n;i++){var I=this._intervals[i];var a=I.a;var b=I.b;for(var v=a;v<=b;v++){values.add(v);}}return values;}},{key:'toSet',value:function toSet(){var s=new Set();var _iteratorNormalCompletion185=true;var _didIteratorError185=false;var _iteratorError185=undefined;try{for(var _iterator185=this._intervals[Symbol.iterator](),_step185;!(_iteratorNormalCompletion185=(_step185=_iterator185.next()).done);_iteratorNormalCompletion185=true){var I=_step185.value;var a=I.a;var b=I.b;for(var v=a;v<=b;v++){s.add(v);}}}catch(err){_didIteratorError185=true;_iteratorError185=err;}finally{try{if(!_iteratorNormalCompletion185&&_iterator185.return){_iterator185.return();}}finally{if(_didIteratorError185){throw _iteratorError185;}}}return s;}},{key:'toArray',value:function toArray(){var values=new Array();var n=this._intervals.length;for(var i=0;i<n;i++){var I=this._intervals[i];var a=I.a;var b=I.b;for(var v=a;v<=b;v++){values.push(v);}}return values;}},{key:'remove',value:function remove(el){if(this.readonly){throw new Error("can't alter readonly IntervalSet");}var n=this._intervals.length;for(var i=0;i<n;i++){var I=this._intervals[i];var a=I.a;var b=I.b;if(el<a){break;// list is sorted and el is before this interval; not here
	}// if whole interval x..x, rm
	if(el===a&&el===b){this._intervals.splice(i,1);break;}// if on left edge x..b, adjust left
	if(el===a){this._intervals[i]=Interval_1.Interval.of(I.a+1,I.b);break;}// if on right edge a..x, adjust right
	if(el===b){this._intervals[i]=Interval_1.Interval.of(I.a,I.b-1);break;}// if in middle a..x..b, split interval
	if(el>a&&el<b){// found in this interval
	var oldb=I.b;this._intervals[i]=Interval_1.Interval.of(I.a,el-1);// [a..x-1]
	this.add(el+1,oldb);// add [x+1..b]
	}}}},{key:'setReadonly',value:function setReadonly(readonly){if(this.readonly&&!readonly){throw new Error("can't alter readonly IntervalSet");}this.readonly=readonly;}},{key:'isNil',get:function get(){return this._intervals==null||this._intervals.length===0;}/**
	     * Returns the maximum value contained in the set if not isNil.
	     *
	     * @return the maximum value contained in the set.
	     * @throws RangeError if set is empty
	     */},{key:'maxElement',get:function get(){if(this.isNil){throw new RangeError("set is empty");}var last=this._intervals[this._intervals.length-1];return last.b;}/**
	     * Returns the minimum value contained in the set if not isNil.
	     *
	     * @return the minimum value contained in the set.
	     * @throws RangeError if set is empty
	     */},{key:'minElement',get:function get(){if(this.isNil){throw new RangeError("set is empty");}return this._intervals[0].a;}/** Return a list of Interval objects. */},{key:'intervals',get:function get(){return this._intervals;}},{key:'size',get:function get(){var n=0;var numIntervals=this._intervals.length;if(numIntervals===1){var firstInterval=this._intervals[0];return firstInterval.b-firstInterval.a+1;}for(var i=0;i<numIntervals;i++){var I=this._intervals[i];n+=I.b-I.a+1;}return n;}},{key:'isReadonly',get:function get(){return this.readonly;}}],[{key:'of',/**
	     * Create a set with all ints within range [a..b] (inclusive). If b is omitted, the set contains the single element
	     * a.
	     */value:function of(a){var b=arguments.length>1&&arguments[1]!==undefined?arguments[1]:a;var s=new IntervalSet();s.add(a,b);return s;}},{key:'or',value:function or(sets){var r=new IntervalSet();var _iteratorNormalCompletion186=true;var _didIteratorError186=false;var _iteratorError186=undefined;try{for(var _iterator186=sets[Symbol.iterator](),_step186;!(_iteratorNormalCompletion186=(_step186=_iterator186.next()).done);_iteratorNormalCompletion186=true){var s=_step186.value;r.addAll(s);}}catch(err){_didIteratorError186=true;_iteratorError186=err;}finally{try{if(!_iteratorNormalCompletion186&&_iterator186.return){_iterator186.return();}}finally{if(_didIteratorError186){throw _iteratorError186;}}}return r;}},{key:'subtract',value:function subtract(left,right){if(left.isNil){return new IntervalSet();}var result=new IntervalSet(left._intervals);if(right.isNil){// right set has no elements; just return the copy of the current set
	return result;}var resultI=0;var rightI=0;while(resultI<result._intervals.length&&rightI<right._intervals.length){var resultInterval=result._intervals[resultI];var rightInterval=right._intervals[rightI];// operation: (resultInterval - rightInterval) and update indexes
	if(rightInterval.b<resultInterval.a){rightI++;continue;}if(rightInterval.a>resultInterval.b){resultI++;continue;}var beforeCurrent=void 0;var afterCurrent=void 0;if(rightInterval.a>resultInterval.a){beforeCurrent=new Interval_1.Interval(resultInterval.a,rightInterval.a-1);}if(rightInterval.b<resultInterval.b){afterCurrent=new Interval_1.Interval(rightInterval.b+1,resultInterval.b);}if(beforeCurrent){if(afterCurrent){// split the current interval into two
	result._intervals[resultI]=beforeCurrent;result._intervals.splice(resultI+1,0,afterCurrent);resultI++;rightI++;continue;}else {// replace the current interval
	result._intervals[resultI]=beforeCurrent;resultI++;continue;}}else {if(afterCurrent){// replace the current interval
	result._intervals[resultI]=afterCurrent;rightI++;continue;}else {// remove the current interval (thus no need to increment resultI)
	result._intervals.splice(resultI,1);continue;}}}// If rightI reached right.intervals.size, no more intervals to subtract from result.
	// If resultI reached result.intervals.size, we would be subtracting from an empty set.
	// Either way, we are done.
	return result;}},{key:'COMPLETE_CHAR_SET',get:function get(){if(IntervalSet._COMPLETE_CHAR_SET===undefined){IntervalSet._COMPLETE_CHAR_SET=IntervalSet.of(Lexer_1.Lexer.MIN_CHAR_VALUE,Lexer_1.Lexer.MAX_CHAR_VALUE);IntervalSet._COMPLETE_CHAR_SET.setReadonly(true);}return IntervalSet._COMPLETE_CHAR_SET;}},{key:'EMPTY_SET',get:function get(){if(IntervalSet._EMPTY_SET==null){IntervalSet._EMPTY_SET=new IntervalSet();IntervalSet._EMPTY_SET.setReadonly(true);}return IntervalSet._EMPTY_SET;}}]);return IntervalSet;}();__decorate([Decorators_1.Override],IntervalSet.prototype,"addAll",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"complement",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"subtract",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"or",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"and",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"contains",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"isNil",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"hashCode",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"equals",null);__decorate([__param(0,Decorators_1.NotNull)],IntervalSet.prototype,"toStringVocabulary",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],IntervalSet.prototype,"elementName",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"size",null);__decorate([Decorators_1.Override],IntervalSet.prototype,"remove",null);__decorate([Decorators_1.NotNull],IntervalSet,"of",null);__decorate([Decorators_1.NotNull],IntervalSet,"subtract",null);exports.IntervalSet=IntervalSet;},{"../Decorators":224,"../Lexer":232,"../Token":248,"./ArrayEqualityComparator":323,"./IntegerList":328,"./Interval":330,"./MurmurHash":333}],332:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:42.1346951-07:00
	var MultiMap=function(_Map){inherits(MultiMap,_Map);function MultiMap(){classCallCheck(this,MultiMap);return possibleConstructorReturn(this,(MultiMap.__proto__||Object.getPrototypeOf(MultiMap)).call(this));}createClass(MultiMap,[{key:'map',value:function map(key,value){var elementsForKey=get(MultiMap.prototype.__proto__||Object.getPrototypeOf(MultiMap.prototype),'get',this).call(this,key);if(!elementsForKey){elementsForKey=[];get(MultiMap.prototype.__proto__||Object.getPrototypeOf(MultiMap.prototype),'set',this).call(this,key,elementsForKey);}elementsForKey.push(value);}},{key:'getPairs',value:function getPairs(){var pairs=[];this.forEach(function(values,key){values.forEach(function(v){pairs.push([key,v]);});});return pairs;}}]);return MultiMap;}(Map);exports.MultiMap=MultiMap;},{}],333:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});(function(MurmurHash){var DEFAULT_SEED=0;/**
	     * Initialize the hash using the specified `seed`.
	     *
	     * @param seed the seed (optional)
	     * @returns the intermediate hash value
	     */function initialize(){var seed=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_SEED;return seed;}MurmurHash.initialize=initialize;/**
	     * Update the intermediate hash value for the next input `value`.
	     *
	     * @param hash the intermediate hash value
	     * @param value the value to add to the current hash
	     * @returns the updated intermediate hash value
	     */function update(hash,value){var c1=0xCC9E2D51;var c2=0x1B873593;var r1=15;var r2=13;var m=5;var n=0xE6546B64;if(value==null){value=0;}else if(typeof value==="string"){value=hashString(value);}else if((typeof value==='undefined'?'undefined':_typeof(value))==="object"){value=value.hashCode();}var k=value;k=Math.imul(k,c1);k=k<<r1|k>>>32-r1;k=Math.imul(k,c2);hash=hash^k;hash=hash<<r2|hash>>>32-r2;hash=Math.imul(hash,m)+n;return hash&0xFFFFFFFF;}MurmurHash.update=update;/**
	     * Apply the final computation steps to the intermediate value `hash`
	     * to form the final result of the MurmurHash 3 hash function.
	     *
	     * @param hash the intermediate hash value
	     * @param numberOfWords the number of integer values added to the hash
	     * @returns the final hash result
	     */function finish(hash,numberOfWords){hash=hash^numberOfWords*4;hash=hash^hash>>>16;hash=Math.imul(hash,0x85EBCA6B);hash=hash^hash>>>13;hash=Math.imul(hash,0xC2B2AE35);hash=hash^hash>>>16;return hash;}MurmurHash.finish=finish;/**
	     * Utility function to compute the hash code of an array using the
	     * MurmurHash algorithm.
	     *
	     * @param <T> the array element type
	     * @param data the array data
	     * @param seed the seed for the MurmurHash algorithm
	     * @returns the hash code of the data
	     */function hashCode(data){var seed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_SEED;var hash=initialize(seed);var length=0;var _iteratorNormalCompletion187=true;var _didIteratorError187=false;var _iteratorError187=undefined;try{for(var _iterator187=data[Symbol.iterator](),_step187;!(_iteratorNormalCompletion187=(_step187=_iterator187.next()).done);_iteratorNormalCompletion187=true){var _value13=_step187.value;hash=update(hash,_value13);length++;}}catch(err){_didIteratorError187=true;_iteratorError187=err;}finally{try{if(!_iteratorNormalCompletion187&&_iterator187.return){_iterator187.return();}}finally{if(_didIteratorError187){throw _iteratorError187;}}}hash=finish(hash,length);return hash;}MurmurHash.hashCode=hashCode;/**
	     * Function to hash a string. Based on the implementation found here:
	     * http://stackoverflow.com/a/7616484
	     */function hashString(str){var len=str.length;if(len===0){return 0;}var hash=0;for(var i=0;i<len;i++){var c=str.charCodeAt(i);hash=(hash<<5>>>0)-hash+c;hash|=0;}return hash;}})(exports.MurmurHash||(exports.MurmurHash={}));},{}],334:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");/**
	 * This default implementation of {@link EqualityComparator} uses object equality
	 * for comparisons by calling {@link Object#hashCode} and {@link Object#equals}.
	 *
	 * @author Sam Harwell
	 */var ObjectEqualityComparator=function(){function ObjectEqualityComparator(){classCallCheck(this,ObjectEqualityComparator);}createClass(ObjectEqualityComparator,[{key:'hashCode',/**
	     * {@inheritDoc}
	     *
	     * This implementation returns
	     * `obj.`{@link Object#hashCode hashCode()}.
	     */value:function hashCode(obj){if(obj==null){return 0;}return obj.hashCode();}/**
	     * {@inheritDoc}
	     *
	     * This implementation relies on object equality. If both objects are
	     * `undefined` or `null`, this method returns `true`. Otherwise if only
	     * `a` is `undefined` or `null`, this method returns `false`. Otherwise,
	     * this method returns the result of
	     * `a.`{@link Object#equals equals}`(b)`.
	     */},{key:'equals',value:function equals(a,b){if(a==null){return b==null;}return a.equals(b);}}]);return ObjectEqualityComparator;}();ObjectEqualityComparator.INSTANCE=new ObjectEqualityComparator();__decorate([Decorators_1.Override],ObjectEqualityComparator.prototype,"hashCode",null);__decorate([Decorators_1.Override],ObjectEqualityComparator.prototype,"equals",null);exports.ObjectEqualityComparator=ObjectEqualityComparator;},{"../Decorators":224}],335:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:42.5447085-07:00
	/**
	 * This exception is thrown to cancel a parsing operation. This exception does
	 * not extend {@link RecognitionException}, allowing it to bypass the standard
	 * error recovery mechanisms. {@link BailErrorStrategy} throws this exception in
	 * response to a parse error.
	 *
	 * @author Sam Harwell
	 */var ParseCancellationException=function(_Error2){inherits(ParseCancellationException,_Error2);function ParseCancellationException(cause){classCallCheck(this,ParseCancellationException);var _this300=possibleConstructorReturn(this,(ParseCancellationException.__proto__||Object.getPrototypeOf(ParseCancellationException)).call(this,cause.message));_this300.cause=cause;_this300.stack=cause.stack;return _this300;}createClass(ParseCancellationException,[{key:'getCause',value:function getCause(){return this.cause;}}]);return ParseCancellationException;}(Error);exports.ParseCancellationException=ParseCancellationException;},{}],336:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var MurmurHash_1=require("./MurmurHash");var UUID=function(){function UUID(mostSigBits,moreSigBits,lessSigBits,leastSigBits){classCallCheck(this,UUID);this.data=new Uint32Array(4);this.data[0]=mostSigBits;this.data[1]=moreSigBits;this.data[2]=lessSigBits;this.data[3]=leastSigBits;}createClass(UUID,[{key:'hashCode',value:function hashCode(){return MurmurHash_1.MurmurHash.hashCode([this.data[0],this.data[1],this.data[2],this.data[3]]);}},{key:'equals',value:function equals(obj){if(obj===this){return true;}else if(!(obj instanceof UUID)){return false;}return this.data[0]===obj.data[0]&&this.data[1]===obj.data[1]&&this.data[2]===obj.data[2]&&this.data[3]===obj.data[3];}},{key:'toString',value:function toString(){return ("00000000"+this.data[0].toString(16)).substr(-8)+"-"+("0000"+(this.data[1]>>>16).toString(16)).substr(-4)+"-"+("0000"+this.data[1].toString(16)).substr(-4)+"-"+("0000"+(this.data[2]>>>16).toString(16)).substr(-4)+"-"+("0000"+this.data[2].toString(16)).substr(-4)+("00000000"+this.data[3].toString(16)).substr(-8);}}],[{key:'fromString',value:function fromString(data){if(!/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/.test(data)){throw new Error("Incorrectly formatted UUID");}var segments=data.split("-");var mostSigBits=parseInt(segments[0],16);var moreSigBits=(parseInt(segments[1],16)<<16>>>0)+parseInt(segments[2],16);var lessSigBits=(parseInt(segments[3],16)<<16>>>0)+parseInt(segments[4].substr(0,4),16);var leastSigBits=parseInt(segments[4].substr(-8),16);return new UUID(mostSigBits,moreSigBits,lessSigBits,leastSigBits);}}]);return UUID;}();exports.UUID=UUID;},{"./MurmurHash":333}],337:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});function escapeWhitespace(s,escapeSpaces){return escapeSpaces?s.replace(/ /,'\xB7'):s.replace(/\t/,"\\t").replace(/\n/,"\\n").replace(/\r/,"\\r");}exports.escapeWhitespace=escapeWhitespace;// Seriously: why isn't this built in to java? ugh!
	function join(collection,separator){var buf="";var first=true;var _iteratorNormalCompletion188=true;var _didIteratorError188=false;var _iteratorError188=undefined;try{for(var _iterator188=collection[Symbol.iterator](),_step188;!(_iteratorNormalCompletion188=(_step188=_iterator188.next()).done);_iteratorNormalCompletion188=true){var current=_step188.value;if(first){first=false;}else {buf+=separator;}buf+=current;}}catch(err){_didIteratorError188=true;_iteratorError188=err;}finally{try{if(!_iteratorNormalCompletion188&&_iterator188.return){_iterator188.return();}}finally{if(_didIteratorError188){throw _iteratorError188;}}}return buf;}exports.join=join;function equals(x,y){if(x===y){return true;}if(x===undefined||y===undefined){return false;}return x.equals(y);}exports.equals=equals;// export function numNonnull(data: any[]): number {
	// 	let n: number =  0;
	// 	if ( data == null ) return n;
	// 	for (let o of data) {
	// 		if ( o!=null ) n++;
	// 	}
	// 	return n;
	// }
	// export function removeAllElements<T>(data: Collection<T>, value: T): void {
	// 	if ( data==null ) return;
	// 	while ( data.contains(value) ) data.remove(value);
	// }
	// export function writeFile(@NotNull file: File, @NotNull content: Uint8Array): void {
	// 	let fos: FileOutputStream = new FileOutputStream(file);
	// 	try {
	// 		fos.write(content);
	// 	} finally {
	// 		fos.close();
	// 	}
	// }
	// export function writeFile(@NotNull fileName: string, @NotNull content: string): void {
	// 	writeFile(fileName, content, null);
	// }
	// export function writeFile(@NotNull fileName: string, @NotNull content: string, @Nullable encoding: string): void {
	// 	let f: File =  new File(fileName);
	// 	let fos: FileOutputStream =  new FileOutputStream(f);
	// 	let osw: OutputStreamWriter;
	// 	if (encoding != null) {
	// 		osw = new OutputStreamWriter(fos, encoding);
	// 	}
	// 	else {
	// 		osw = new OutputStreamWriter(fos);
	// 	}
	// 	try {
	// 		osw.write(content);
	// 	}
	// 	finally {
	// 		osw.close();
	// 	}
	// }
	// @NotNull
	// export function readFile(@NotNull fileName: string): char[] {
	// 	return readFile(fileName, null);
	// }
	// @NotNull
	// export function readFile(@NotNull fileName: string, @Nullable encoding: string): char[] {
	// 	let f: File =  new File(fileName);
	// 	let size: number =  (int)f.length();
	// 	let isr: InputStreamReader;
	// 	let fis: FileInputStream =  new FileInputStream(fileName);
	// 	if ( encoding!=null ) {
	// 		isr = new InputStreamReader(fis, encoding);
	// 	}
	// 	else {
	// 		isr = new InputStreamReader(fis);
	// 	}
	// 	let data: char[] =  null;
	// 	try {
	// 		data = new char[size];
	// 		let n: number =  isr.read(data);
	// 		if (n < data.length) {
	// 			data = Arrays.copyOf(data, n);
	// 		}
	// 	}
	// 	finally {
	// 		isr.close();
	// 	}
	// 	return data;
	// }
	// export function removeAll<T>(@NotNull predicate: List<T> list,@NotNull Predicate<? super T>): void {
	// 	let j: number =  0;
	// 	for (let i = 0; i < list.size; i++) {
	// 		let item: T =  list.get(i);
	// 		if (!predicate.eval(item)) {
	// 			if (j != i) {
	// 				list.set(j, item);
	// 			}
	// 			j++;
	// 		}
	// 	}
	// 	if (j < list.size) {
	// 		list.subList(j, list.size).clear();
	// 	}
	// }
	// export function removeAll<T>(@NotNull predicate: Iterable<T> iterable,@NotNull Predicate<? super T>): void {
	// 	if (iterable instanceof List<?>) {
	// 		removeAll((List<T>)iterable, predicate);
	// 		return;
	// 	}
	// 	for (Iterator<T> iterator = iterable.iterator(); iterator.hasNext(); ) {
	// 		let item: T =  iterator.next();
	// 		if (predicate.eval(item)) {
	// 			iterator.remove();
	// 		}
	// 	}
	// }
	/** Convert array of strings to string&rarr;index map. Useful for
	 *  converting rulenames to name&rarr;ruleindex map.
	 */function toMap(keys){var m=new Map();for(var i=0;i<keys.length;i++){m.set(keys[i],i);}return m;}exports.toMap=toMap;function toCharArray(str){if(typeof str==="string"){var result=new Uint16Array(str.length);for(var i=0;i<str.length;i++){result[i]=str.charCodeAt(i);}return result;}else {return str.toCharArray();}}exports.toCharArray=toCharArray;// /**
	// 	* @since 4.5
	// 	*/
	// @NotNull
	// export function toSet(@NotNull bits: BitSet): IntervalSet {
	// 	let s: IntervalSet =  new IntervalSet();
	// 	let i: number =  bits.nextSetBit(0);
	// 	while ( i >= 0 ) {
	// 		s.add(i);
	// 		i = bits.nextSetBit(i+1);
	// 	}
	// 	return s;
	// }
	},{}],338:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../Decorators");var AbstractParseTreeVisitor=function(){function AbstractParseTreeVisitor(){classCallCheck(this,AbstractParseTreeVisitor);}createClass(AbstractParseTreeVisitor,[{key:'visit',/**
	     * {@inheritDoc}
	     *
	     * The default implementation calls {@link ParseTree#accept} on the
	     * specified tree.
	     */value:function visit(tree){return tree.accept(this);}/**
	     * {@inheritDoc}
	     *
	     * The default implementation initializes the aggregate result to
	     * {@link #defaultResult defaultResult()}. Before visiting each child, it
	     * calls {@link #shouldVisitNextChild shouldVisitNextChild}; if the result
	     * is `false` no more children are visited and the current aggregate
	     * result is returned. After visiting a child, the aggregate result is
	     * updated by calling {@link #aggregateResult aggregateResult} with the
	     * previous aggregate result and the result of visiting the child.
	     *
	     * The default implementation is not safe for use in visitors that modify
	     * the tree structure. Visitors that modify the tree should override this
	     * method to behave properly in respect to the specific algorithm in use.
	     */},{key:'visitChildren',value:function visitChildren(node){var result=this.defaultResult();var n=node.childCount;for(var i=0;i<n;i++){if(!this.shouldVisitNextChild(node,result)){break;}var c=node.getChild(i);var childResult=c.accept(this);result=this.aggregateResult(result,childResult);}return result;}/**
	     * {@inheritDoc}
	     *
	     * The default implementation returns the result of
	     * {@link #defaultResult defaultResult}.
	     */},{key:'visitTerminal',value:function visitTerminal(node){return this.defaultResult();}/**
	     * {@inheritDoc}
	     *
	     * The default implementation returns the result of
	     * {@link #defaultResult defaultResult}.
	     */},{key:'visitErrorNode',value:function visitErrorNode(node){return this.defaultResult();}/**
	     * Aggregates the results of visiting multiple children of a node. After
	     * either all children are visited or {@link #shouldVisitNextChild} returns
	     * `false`, the aggregate value is returned as the result of
	     * {@link #visitChildren}.
	     *
	     * The default implementation returns `nextResult`, meaning
	     * {@link #visitChildren} will return the result of the last child visited
	     * (or return the initial value if the node has no children).
	     *
	     * @param aggregate The previous aggregate value. In the default
	     * implementation, the aggregate value is initialized to
	     * {@link #defaultResult}, which is passed as the `aggregate` argument
	     * to this method after the first child node is visited.
	     * @param nextResult The result of the immediately preceeding call to visit
	     * a child node.
	     *
	     * @returns The updated aggregate result.
	     */},{key:'aggregateResult',value:function aggregateResult(aggregate,nextResult){return nextResult;}/**
	     * This method is called after visiting each child in
	     * {@link #visitChildren}. This method is first called before the first
	     * child is visited; at that point `currentResult` will be the initial
	     * value (in the default implementation, the initial value is returned by a
	     * call to {@link #defaultResult}. This method is not called after the last
	     * child is visited.
	     *
	     * The default implementation always returns `true`, indicating that
	     * `visitChildren` should only return after all children are visited.
	     * One reason to override this method is to provide a "short circuit"
	     * evaluation option for situations where the result of visiting a single
	     * child has the potential to determine the result of the visit operation as
	     * a whole.
	     *
	     * @param node The {@link RuleNode} whose children are currently being
	     * visited.
	     * @param currentResult The current aggregate result of the children visited
	     * to the current point.
	     *
	     * @returns `true` to continue visiting children. Otherwise return
	     * `false` to stop visiting children and immediately return the
	     * current aggregate result from {@link #visitChildren}.
	     */},{key:'shouldVisitNextChild',value:function shouldVisitNextChild(node,currentResult){return true;}}]);return AbstractParseTreeVisitor;}();__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],AbstractParseTreeVisitor.prototype,"visit",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],AbstractParseTreeVisitor.prototype,"visitChildren",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],AbstractParseTreeVisitor.prototype,"visitTerminal",null);__decorate([Decorators_1.Override,__param(0,Decorators_1.NotNull)],AbstractParseTreeVisitor.prototype,"visitErrorNode",null);__decorate([__param(0,Decorators_1.NotNull)],AbstractParseTreeVisitor.prototype,"shouldVisitNextChild",null);exports.AbstractParseTreeVisitor=AbstractParseTreeVisitor;},{"../Decorators":224}],339:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:47.4646355-07:00
	var Decorators_1=require("../Decorators");var TerminalNode_1=require("./TerminalNode");/** Represents a token that was consumed during resynchronization
	 *  rather than during a valid match operation. For example,
	 *  we will create this kind of a node during single token insertion
	 *  and deletion as well as during "consume until error recovery set"
	 *  upon no viable alternative exceptions.
	 */var ErrorNode=function(_TerminalNode_1$Termi){inherits(ErrorNode,_TerminalNode_1$Termi);function ErrorNode(token){classCallCheck(this,ErrorNode);return possibleConstructorReturn(this,(ErrorNode.__proto__||Object.getPrototypeOf(ErrorNode)).call(this,token));}createClass(ErrorNode,[{key:'accept',value:function accept(visitor){return visitor.visitErrorNode(this);}}]);return ErrorNode;}(TerminalNode_1.TerminalNode);__decorate([Decorators_1.Override],ErrorNode.prototype,"accept",null);exports.ErrorNode=ErrorNode;},{"../Decorators":224,"./TerminalNode":343}],340:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});/**
	 * Associate a property with a parse tree node. Useful with parse tree listeners
	 * that need to associate values with particular tree nodes, kind of like
	 * specifying a return value for the listener event method that visited a
	 * particular node. Example:
	 *
	 * ```
	 * ParseTreeProperty<Integer> values = new ParseTreeProperty<Integer>();
	 * values.put(tree, 36);
	 * int x = values.get(tree);
	 * values.removeFrom(tree);
	 * ```
	 *
	 * You would make one decl (values here) in the listener and use lots of times
	 * in your event methods.
	 */var ParseTreeProperty=function(){function ParseTreeProperty(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"ParseTreeProperty";classCallCheck(this,ParseTreeProperty);this._symbol=Symbol(name);}createClass(ParseTreeProperty,[{key:'get',value:function get(node){return node[this._symbol];}},{key:'set',value:function set(node,value){node[this._symbol]=value;}},{key:'removeFrom',value:function removeFrom(node){var result=node[this._symbol];delete node[this._symbol];return result;}}]);return ParseTreeProperty;}();exports.ParseTreeProperty=ParseTreeProperty;},{}],341:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var ErrorNode_1=require("./ErrorNode");var TerminalNode_1=require("./TerminalNode");var RuleNode_1=require("./RuleNode");var ParseTreeWalker=function(){function ParseTreeWalker(){classCallCheck(this,ParseTreeWalker);}createClass(ParseTreeWalker,[{key:'walk',value:function walk(listener,t){var nodeStack=[];var indexStack=[];var currentNode=t;var currentIndex=0;while(currentNode){// pre-order visit
	if(currentNode instanceof ErrorNode_1.ErrorNode){if(listener.visitErrorNode){listener.visitErrorNode(currentNode);}}else if(currentNode instanceof TerminalNode_1.TerminalNode){if(listener.visitTerminal){listener.visitTerminal(currentNode);}}else {this.enterRule(listener,currentNode);}// Move down to first child, if exists
	if(currentNode.childCount>0){nodeStack.push(currentNode);indexStack.push(currentIndex);currentIndex=0;currentNode=currentNode.getChild(0);continue;}// No child nodes, so walk tree
	do{// post-order visit
	if(currentNode instanceof RuleNode_1.RuleNode){this.exitRule(listener,currentNode);}// No parent, so no siblings
	if(nodeStack.length===0){currentNode=undefined;currentIndex=0;break;}// Move to next sibling if possible
	var last=nodeStack[nodeStack.length-1];currentIndex++;currentNode=currentIndex<last.childCount?last.getChild(currentIndex):undefined;if(currentNode){break;}// No next sibling, so move up
	currentNode=nodeStack.pop();currentIndex=indexStack.pop();}while(currentNode);}}/**
	     * The discovery of a rule node, involves sending two events: the generic
	     * {@link ParseTreeListener#enterEveryRule} and a
	     * {@link RuleContext}-specific event. First we trigger the generic and then
	     * the rule specific. We to them in reverse order upon finishing the node.
	     */},{key:'enterRule',value:function enterRule(listener,r){var ctx=r.ruleContext;if(listener.enterEveryRule){listener.enterEveryRule(ctx);}ctx.enterRule(listener);}},{key:'exitRule',value:function exitRule(listener,r){var ctx=r.ruleContext;ctx.exitRule(listener);if(listener.exitEveryRule){listener.exitEveryRule(ctx);}}}]);return ParseTreeWalker;}();exports.ParseTreeWalker=ParseTreeWalker;(function(ParseTreeWalker){ParseTreeWalker.DEFAULT=new ParseTreeWalker();})(ParseTreeWalker=exports.ParseTreeWalker||(exports.ParseTreeWalker={}));},{"./ErrorNode":339,"./RuleNode":342,"./TerminalNode":343}],342:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});var RuleNode=function RuleNode(){classCallCheck(this,RuleNode);};exports.RuleNode=RuleNode;},{}],343:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:48.1433686-07:00
	var Interval_1=require("../misc/Interval");var Decorators_1=require("../Decorators");var Token_1=require("../Token");var TerminalNode=function(){function TerminalNode(symbol){classCallCheck(this,TerminalNode);this._symbol=symbol;}createClass(TerminalNode,[{key:'getChild',value:function getChild(i){throw new RangeError("Terminal Node has no children.");}},{key:'setParent',value:function setParent(parent){this._parent=parent;}},{key:'accept',value:function accept(visitor){return visitor.visitTerminal(this);}},{key:'toStringTree',value:function toStringTree(parser){return this.toString();}},{key:'toString',value:function toString(){if(this._symbol.type===Token_1.Token.EOF){return "<EOF>";}return this._symbol.text||"";}},{key:'symbol',get:function get(){return this._symbol;}},{key:'parent',get:function get(){return this._parent;}},{key:'payload',get:function get(){return this._symbol;}},{key:'sourceInterval',get:function get(){var tokenIndex=this._symbol.tokenIndex;return new Interval_1.Interval(tokenIndex,tokenIndex);}},{key:'childCount',get:function get(){return 0;}},{key:'text',get:function get(){return this._symbol.text||"";}}]);return TerminalNode;}();__decorate([Decorators_1.Override],TerminalNode.prototype,"getChild",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"parent",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"setParent",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"payload",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"sourceInterval",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"childCount",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"accept",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"text",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"toStringTree",null);__decorate([Decorators_1.Override],TerminalNode.prototype,"toString",null);exports.TerminalNode=TerminalNode;},{"../Decorators":224,"../Token":248,"../misc/Interval":330}],344:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var ATN_1=require("../atn/ATN");var CommonToken_1=require("../CommonToken");var ErrorNode_1=require("./ErrorNode");var Decorators_1=require("../Decorators");var Parser_1=require("../Parser");var ParserRuleContext_1=require("../ParserRuleContext");var RuleNode_1=require("./RuleNode");var TerminalNode_1=require("./TerminalNode");var Token_1=require("../Token");var Utils=require("../misc/Utils");/** A set of utility routines useful for all kinds of ANTLR trees. */var Trees=function(){function Trees(){classCallCheck(this,Trees);}createClass(Trees,null,[{key:'toStringTree',value:function toStringTree(t,arg2){var ruleNames=void 0;if(arg2 instanceof Parser_1.Parser){ruleNames=arg2.ruleNames;}else {ruleNames=arg2;}var s=Utils.escapeWhitespace(this.getNodeText(t,ruleNames),false);if(t.childCount===0){return s;}var buf="";buf+="(";s=Utils.escapeWhitespace(this.getNodeText(t,ruleNames),false);buf+=s;buf+=" ";for(var i=0;i<t.childCount;i++){if(i>0){buf+=" ";}buf+=this.toStringTree(t.getChild(i),ruleNames);}buf+=")";return buf;}},{key:'getNodeText',value:function getNodeText(t,arg2){var ruleNames=void 0;if(arg2 instanceof Parser_1.Parser){ruleNames=arg2.ruleNames;}else if(arg2){ruleNames=arg2;}else {// no recog or rule names
	var payload=t.payload;if(typeof payload.text==="string"){return payload.text;}return t.payload.toString();}if(t instanceof RuleNode_1.RuleNode){var ruleContext=t.ruleContext;var ruleIndex=ruleContext.ruleIndex;var ruleName=ruleNames[ruleIndex];var altNumber=ruleContext.altNumber;if(altNumber!==ATN_1.ATN.INVALID_ALT_NUMBER){return ruleName+":"+altNumber;}return ruleName;}else if(t instanceof ErrorNode_1.ErrorNode){return t.toString();}else if(t instanceof TerminalNode_1.TerminalNode){var symbol=t.symbol;return symbol.text||"";}throw new TypeError("Unexpected node type");}},{key:'getChildren',value:function getChildren(t){var kids=[];for(var i=0;i<t.childCount;i++){kids.push(t.getChild(i));}return kids;}},{key:'getAncestors',value:function getAncestors(t){var ancestors=[];var p=t.parent;while(p){ancestors.unshift(p);// insert at start
	p=p.parent;}return ancestors;}/** Return true if t is u's parent or a node on path to root from u.
	     *  Use === not equals().
	     *
	     *  @since 4.5.1
	     */},{key:'isAncestorOf',value:function isAncestorOf(t,u){if(!t||!u||!t.parent){return false;}var p=u.parent;while(p){if(t===p){return true;}p=p.parent;}return false;}},{key:'findAllTokenNodes',value:function findAllTokenNodes(t,ttype){return Trees.findAllNodes(t,ttype,true);}},{key:'findAllRuleNodes',value:function findAllRuleNodes(t,ruleIndex){return Trees.findAllNodes(t,ruleIndex,false);}},{key:'findAllNodes',value:function findAllNodes(t,index,findTokens){var nodes=[];Trees._findAllNodes(t,index,findTokens,nodes);return nodes;}},{key:'_findAllNodes',value:function _findAllNodes(t,index,findTokens,nodes){// check this node (the root) first
	if(findTokens&&t instanceof TerminalNode_1.TerminalNode){if(t.symbol.type===index){nodes.push(t);}}else if(!findTokens&&t instanceof ParserRuleContext_1.ParserRuleContext){if(t.ruleIndex===index){nodes.push(t);}}// check children
	for(var i=0;i<t.childCount;i++){Trees._findAllNodes(t.getChild(i),index,findTokens,nodes);}}/** Get all descendents; includes t itself.
	     *
	     * @since 4.5.1
	     */},{key:'getDescendants',value:function getDescendants(t){var nodes=[];function recurse(e){nodes.push(e);var n=e.childCount;for(var i=0;i<n;i++){recurse(e.getChild(i));}}recurse(t);return nodes;}/** Find smallest subtree of t enclosing range startTokenIndex..stopTokenIndex
	     *  inclusively using postorder traversal.  Recursive depth-first-search.
	     *
	     *  @since 4.5
	     */},{key:'getRootOfSubtreeEnclosingRegion',value:function getRootOfSubtreeEnclosingRegion(t,startTokenIndex,// inclusive
	stopTokenIndex){var n=t.childCount;for(var i=0;i<n;i++){var child=t.getChild(i);var r=Trees.getRootOfSubtreeEnclosingRegion(child,startTokenIndex,stopTokenIndex);if(r){return r;}}if(t instanceof ParserRuleContext_1.ParserRuleContext){var stopToken=t.stop;if(startTokenIndex>=t.start.tokenIndex&&(// is range fully contained in t?
	stopToken==null||stopTokenIndex<=stopToken.tokenIndex)){// note: r.stop==null likely implies that we bailed out of parser and there's nothing to the right
	return t;}}return undefined;}/** Replace any subtree siblings of root that are completely to left
	     *  or right of lookahead range with a CommonToken(Token.INVALID_TYPE,"...")
	     *  node. The source interval for t is not altered to suit smaller range!
	     *
	     *  WARNING: destructive to t.
	     *
	     *  @since 4.5.1
	     */},{key:'stripChildrenOutOfRange',value:function stripChildrenOutOfRange(t,root,startIndex,stopIndex){if(!t){return;}var count=t.childCount;for(var i=0;i<count;i++){var child=t.getChild(i);var range=child.sourceInterval;if(child instanceof ParserRuleContext_1.ParserRuleContext&&(range.b<startIndex||range.a>stopIndex)){if(Trees.isAncestorOf(child,root)){// replace only if subtree doesn't have displayed root
	var abbrev=new CommonToken_1.CommonToken(Token_1.Token.INVALID_TYPE,"...");t.children[i]=new TerminalNode_1.TerminalNode(abbrev);// HACK access to private
	}}}}},{key:'findNodeSuchThat',value:function findNodeSuchThat(t,pred){// No type check needed as long as users only use one of the available overloads
	if(pred(t)){return t;}var n=t.childCount;for(var i=0;i<n;i++){var u=Trees.findNodeSuchThat(t.getChild(i),pred);if(u!==undefined){return u;}}return undefined;}}]);return Trees;}();__decorate([__param(0,Decorators_1.NotNull)],Trees,"toStringTree",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],Trees,"getAncestors",null);__decorate([__param(0,Decorators_1.NotNull)],Trees,"getRootOfSubtreeEnclosingRegion",null);exports.Trees=Trees;},{"../CommonToken":220,"../Decorators":224,"../Parser":237,"../ParserRuleContext":239,"../Token":248,"../atn/ATN":251,"../misc/Utils":337,"./ErrorNode":339,"./RuleNode":342,"./TerminalNode":343}],345:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */function __export(m){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}Object.defineProperty(exports,"__esModule",{value:true});__export(require("./AbstractParseTreeVisitor"));__export(require("./ErrorNode"));__export(require("./ParseTreeProperty"));__export(require("./ParseTreeWalker"));__export(require("./RuleNode"));__export(require("./TerminalNode"));__export(require("./Trees"));},{"./AbstractParseTreeVisitor":338,"./ErrorNode":339,"./ParseTreeProperty":340,"./ParseTreeWalker":341,"./RuleNode":342,"./TerminalNode":343,"./Trees":344}],346:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:45.2799060-07:00
	/**
	 * A chunk is either a token tag, a rule tag, or a span of literal text within a
	 * tree pattern.
	 *
	 * The method {@link ParseTreePatternMatcher#split(String)} returns a list of
	 * chunks in preparation for creating a token stream by
	 * {@link ParseTreePatternMatcher#tokenize(String)}. From there, we get a parse
	 * tree from with {@link ParseTreePatternMatcher#compile(String, int)}. These
	 * chunks are converted to {@link RuleTagToken}, {@link TokenTagToken}, or the
	 * regular tokens of the text surrounding the tags.
	 */var Chunk=function Chunk(){classCallCheck(this,Chunk);};exports.Chunk=Chunk;},{}],347:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../../Decorators");/**
	 * Represents the result of matching a {@link ParseTree} against a tree pattern.
	 */var ParseTreeMatch=function(){/**
	     * Constructs a new instance of {@link ParseTreeMatch} from the specified
	     * parse tree and pattern.
	     *
	     * @param tree The parse tree to match against the pattern.
	     * @param pattern The parse tree pattern.
	     * @param labels A mapping from label names to collections of
	     * {@link ParseTree} objects located by the tree pattern matching process.
	     * @param mismatchedNode The first node which failed to match the tree
	     * pattern during the matching process.
	     *
	     * @throws {@link Error} if `tree` is not defined
	     * @throws {@link Error} if `pattern` is not defined
	     * @throws {@link Error} if `labels` is not defined
	     */function ParseTreeMatch(tree,pattern,labels,mismatchedNode){classCallCheck(this,ParseTreeMatch);if(!tree){throw new Error("tree cannot be null");}if(!pattern){throw new Error("pattern cannot be null");}if(!labels){throw new Error("labels cannot be null");}this._tree=tree;this._pattern=pattern;this._labels=labels;this._mismatchedNode=mismatchedNode;}/**
	     * Get the last node associated with a specific `label`.
	     *
	     * For example, for pattern `<id:ID>`, `get("id")` returns the
	     * node matched for that `ID`. If more than one node
	     * matched the specified label, only the last is returned. If there is
	     * no node associated with the label, this returns `undefined`.
	     *
	     * Pattern tags like `<ID>` and `<expr>` without labels are
	     * considered to be labeled with `ID` and `expr`, respectively.
	     *
	     * @param label The label to check.
	     *
	     * @returns The last {@link ParseTree} to match a tag with the specified
	     * label, or `undefined` if no parse tree matched a tag with the label.
	     */createClass(ParseTreeMatch,[{key:'get',value:function get(label){var parseTrees=this._labels.get(label);if(!parseTrees||parseTrees.length===0){return undefined;}return parseTrees[parseTrees.length-1];// return last if multiple
	}/**
	     * Return all nodes matching a rule or token tag with the specified label.
	     *
	     * If the `label` is the name of a parser rule or token in the
	     * grammar, the resulting list will contain both the parse trees matching
	     * rule or tags explicitly labeled with the label and the complete set of
	     * parse trees matching the labeled and unlabeled tags in the pattern for
	     * the parser rule or token. For example, if `label` is `"foo"`,
	     * the result will contain *all* of the following.
	     *
	     * * Parse tree nodes matching tags of the form `<foo:anyRuleName>` and
	     *   `<foo:AnyTokenName>`.
	     * * Parse tree nodes matching tags of the form `<anyLabel:foo>`.
	     * * Parse tree nodes matching tags of the form `<foo>`.
	     *
	     * @param label The label.
	     *
	     * @returns A collection of all {@link ParseTree} nodes matching tags with
	     * the specified `label`. If no nodes matched the label, an empty list
	     * is returned.
	     */},{key:'getAll',value:function getAll(label){var nodes=this._labels.get(label);if(!nodes){return [];}return nodes;}/**
	     * Return a mapping from label &rarr; [list of nodes].
	     *
	     * The map includes special entries corresponding to the names of rules and
	     * tokens referenced in tags in the original pattern. For additional
	     * information, see the description of {@link #getAll(String)}.
	     *
	     * @returns A mapping from labels to parse tree nodes. If the parse tree
	     * pattern did not contain any rule or token tags, this map will be empty.
	     */},{key:'toString',/**
	     * {@inheritDoc}
	     */value:function toString(){return 'Match '+(this.succeeded?"succeeded":"failed")+'; found '+this.labels.size+' labels';}},{key:'labels',get:function get(){return this._labels;}/**
	     * Get the node at which we first detected a mismatch.
	     *
	     * @returns the node at which we first detected a mismatch, or `undefined`
	     * if the match was successful.
	     */},{key:'mismatchedNode',get:function get(){return this._mismatchedNode;}/**
	     * Gets a value indicating whether the match operation succeeded.
	     *
	     * @returns `true` if the match operation succeeded; otherwise,
	     * `false`.
	     */},{key:'succeeded',get:function get(){return !this._mismatchedNode;}/**
	     * Get the tree pattern we are matching against.
	     *
	     * @returns The tree pattern we are matching against.
	     */},{key:'pattern',get:function get(){return this._pattern;}/**
	     * Get the parse tree we are trying to match to a pattern.
	     *
	     * @returns The {@link ParseTree} we are trying to match to a pattern.
	     */},{key:'tree',get:function get(){return this._tree;}}]);return ParseTreeMatch;}();__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ParseTreeMatch.prototype,"getAll",null);__decorate([Decorators_1.NotNull],ParseTreeMatch.prototype,"labels",null);__decorate([Decorators_1.NotNull],ParseTreeMatch.prototype,"pattern",null);__decorate([Decorators_1.NotNull],ParseTreeMatch.prototype,"tree",null);__decorate([Decorators_1.Override],ParseTreeMatch.prototype,"toString",null);ParseTreeMatch=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParseTreeMatch);exports.ParseTreeMatch=ParseTreeMatch;},{"../../Decorators":224}],348:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var XPath_1=require("../xpath/XPath");/**
	 * A pattern like `<ID> = <expr>;` converted to a {@link ParseTree} by
	 * {@link ParseTreePatternMatcher#compile(String, int)}.
	 */var ParseTreePattern=function(){/**
	     * Construct a new instance of the {@link ParseTreePattern} class.
	     *
	     * @param matcher The {@link ParseTreePatternMatcher} which created this
	     * tree pattern.
	     * @param pattern The tree pattern in concrete syntax form.
	     * @param patternRuleIndex The parser rule which serves as the root of the
	     * tree pattern.
	     * @param patternTree The tree pattern in {@link ParseTree} form.
	     */function ParseTreePattern(matcher,pattern,patternRuleIndex,patternTree){classCallCheck(this,ParseTreePattern);this._matcher=matcher;this._patternRuleIndex=patternRuleIndex;this._pattern=pattern;this._patternTree=patternTree;}/**
	     * Match a specific parse tree against this tree pattern.
	     *
	     * @param tree The parse tree to match against this tree pattern.
	     * @returns A {@link ParseTreeMatch} object describing the result of the
	     * match operation. The `ParseTreeMatch.succeeded` method can be
	     * used to determine whether or not the match was successful.
	     */createClass(ParseTreePattern,[{key:'match',value:function match(tree){return this._matcher.match(tree,this);}/**
	     * Determine whether or not a parse tree matches this tree pattern.
	     *
	     * @param tree The parse tree to match against this tree pattern.
	     * @returns `true` if `tree` is a match for the current tree
	     * pattern; otherwise, `false`.
	     */},{key:'matches',value:function matches(tree){return this._matcher.match(tree,this).succeeded;}/**
	     * Find all nodes using XPath and then try to match those subtrees against
	     * this tree pattern.
	     *
	     * @param tree The {@link ParseTree} to match against this pattern.
	     * @param xpath An expression matching the nodes
	     *
	     * @returns A collection of {@link ParseTreeMatch} objects describing the
	     * successful matches. Unsuccessful matches are omitted from the result,
	     * regardless of the reason for the failure.
	     */},{key:'findAll',value:function findAll(tree,xpath){var subtrees=XPath_1.XPath.findAll(tree,xpath,this._matcher.parser);var matches=[];var _iteratorNormalCompletion189=true;var _didIteratorError189=false;var _iteratorError189=undefined;try{for(var _iterator189=subtrees[Symbol.iterator](),_step189;!(_iteratorNormalCompletion189=(_step189=_iterator189.next()).done);_iteratorNormalCompletion189=true){var t=_step189.value;var match=this.match(t);if(match.succeeded){matches.push(match);}}}catch(err){_didIteratorError189=true;_iteratorError189=err;}finally{try{if(!_iteratorNormalCompletion189&&_iterator189.return){_iterator189.return();}}finally{if(_didIteratorError189){throw _iteratorError189;}}}return matches;}/**
	     * Get the {@link ParseTreePatternMatcher} which created this tree pattern.
	     *
	     * @returns The {@link ParseTreePatternMatcher} which created this tree
	     * pattern.
	     */},{key:'matcher',get:function get(){return this._matcher;}/**
	     * Get the tree pattern in concrete syntax form.
	     *
	     * @returns The tree pattern in concrete syntax form.
	     */},{key:'pattern',get:function get(){return this._pattern;}/**
	     * Get the parser rule which serves as the outermost rule for the tree
	     * pattern.
	     *
	     * @returns The parser rule which serves as the outermost rule for the tree
	     * pattern.
	     */},{key:'patternRuleIndex',get:function get(){return this._patternRuleIndex;}/**
	     * Get the tree pattern as a {@link ParseTree}. The rule and token tags from
	     * the pattern are present in the parse tree as terminal nodes with a symbol
	     * of type {@link RuleTagToken} or {@link TokenTagToken}.
	     *
	     * @returns The tree pattern as a {@link ParseTree}.
	     */},{key:'patternTree',get:function get(){return this._patternTree;}}]);return ParseTreePattern;}();__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"_pattern",void 0);__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"_patternTree",void 0);__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"_matcher",void 0);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull)],ParseTreePattern.prototype,"match",null);__decorate([__param(0,Decorators_1.NotNull)],ParseTreePattern.prototype,"matches",null);__decorate([Decorators_1.NotNull,__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull)],ParseTreePattern.prototype,"findAll",null);__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"matcher",null);__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"pattern",null);__decorate([Decorators_1.NotNull],ParseTreePattern.prototype,"patternTree",null);ParseTreePattern=__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(3,Decorators_1.NotNull)],ParseTreePattern);exports.ParseTreePattern=ParseTreePattern;},{"../../Decorators":224,"../xpath/XPath":354}],349:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var BailErrorStrategy_1=require("../../BailErrorStrategy");var CharStreams_1=require("../../CharStreams");var CommonTokenStream_1=require("../../CommonTokenStream");var ListTokenSource_1=require("../../ListTokenSource");var MultiMap_1=require("../../misc/MultiMap");var Decorators_1=require("../../Decorators");var ParseCancellationException_1=require("../../misc/ParseCancellationException");var ParserInterpreter_1=require("../../ParserInterpreter");var ParserRuleContext_1=require("../../ParserRuleContext");var ParseTreeMatch_1=require("./ParseTreeMatch");var ParseTreePattern_1=require("./ParseTreePattern");var RecognitionException_1=require("../../RecognitionException");var RuleNode_1=require("../RuleNode");var RuleTagToken_1=require("./RuleTagToken");var TagChunk_1=require("./TagChunk");var TerminalNode_1=require("../TerminalNode");var TextChunk_1=require("./TextChunk");var Token_1=require("../../Token");var TokenTagToken_1=require("./TokenTagToken");/**
	 * A tree pattern matching mechanism for ANTLR {@link ParseTree}s.
	 *
	 * Patterns are strings of source input text with special tags representing
	 * token or rule references such as:
	 *
	 * ```
	 * <ID> = <expr>;
	 * ```
	 *
	 * Given a pattern start rule such as `statement`, this object constructs
	 * a {@link ParseTree} with placeholders for the `ID` and `expr`
	 * subtree. Then the {@link #match} routines can compare an actual
	 * {@link ParseTree} from a parse with this pattern. Tag `<ID>` matches
	 * any `ID` token and tag `<expr>` references the result of the
	 * `expr` rule (generally an instance of `ExprContext`.
	 *
	 * Pattern `x = 0;` is a similar pattern that matches the same pattern
	 * except that it requires the identifier to be `x` and the expression to
	 * be `0`.
	 *
	 * The {@link #matches} routines return `true` or `false` based
	 * upon a match for the tree rooted at the parameter sent in. The
	 * {@link #match} routines return a {@link ParseTreeMatch} object that
	 * contains the parse tree, the parse tree pattern, and a map from tag name to
	 * matched nodes (more below). A subtree that fails to match, returns with
	 * {@link ParseTreeMatch#mismatchedNode} set to the first tree node that did not
	 * match.
	 *
	 * For efficiency, you can compile a tree pattern in string form to a
	 * {@link ParseTreePattern} object.
	 *
	 * See `TestParseTreeMatcher` for lots of examples.
	 * {@link ParseTreePattern} has two static helper methods:
	 * {@link ParseTreePattern#findAll} and {@link ParseTreePattern#match} that
	 * are easy to use but not super efficient because they create new
	 * {@link ParseTreePatternMatcher} objects each time and have to compile the
	 * pattern in string form before using it.
	 *
	 * The lexer and parser that you pass into the {@link ParseTreePatternMatcher}
	 * constructor are used to parse the pattern in string form. The lexer converts
	 * the `<ID> = <expr>;` into a sequence of four tokens (assuming lexer
	 * throws out whitespace or puts it on a hidden channel). Be aware that the
	 * input stream is reset for the lexer (but not the parser; a
	 * {@link ParserInterpreter} is created to parse the input.). Any user-defined
	 * fields you have put into the lexer might get changed when this mechanism asks
	 * it to scan the pattern string.
	 *
	 * Normally a parser does not accept token `<expr>` as a valid
	 * `expr` but, from the parser passed in, we create a special version of
	 * the underlying grammar representation (an {@link ATN}) that allows imaginary
	 * tokens representing rules (`<expr>`) to match entire rules. We call
	 * these *bypass alternatives*.
	 *
	 * Delimiters are `<`} and `>`}, with `\` as the escape string
	 * by default, but you can set them to whatever you want using
	 * {@link #setDelimiters}. You must escape both start and stop strings
	 * `\<` and `\>`.
	 */var ParseTreePatternMatcher=function(){/**
	     * Constructs a {@link ParseTreePatternMatcher} or from a {@link Lexer} and
	     * {@link Parser} object. The lexer input stream is altered for tokenizing
	     * the tree patterns. The parser is used as a convenient mechanism to get
	     * the grammar name, plus token, rule names.
	     */function ParseTreePatternMatcher(lexer,parser){classCallCheck(this,ParseTreePatternMatcher);this.start="<";this.stop=">";this.escape="\\";// e.g., \< and \> must escape BOTH!
	/**
	         * Regular expression corresponding to escape, for global replace
	         */this.escapeRE=/\\/g;this._lexer=lexer;this._parser=parser;}/**
	     * Set the delimiters used for marking rule and token tags within concrete
	     * syntax used by the tree pattern parser.
	     *
	     * @param start The start delimiter.
	     * @param stop The stop delimiter.
	     * @param escapeLeft The escape sequence to use for escaping a start or stop delimiter.
	     *
	     * @throws {@link Error} if `start` is not defined or empty.
	     * @throws {@link Error} if `stop` is not defined or empty.
	     */createClass(ParseTreePatternMatcher,[{key:'setDelimiters',value:function setDelimiters(start,stop,escapeLeft){if(!start){throw new Error("start cannot be null or empty");}if(!stop){throw new Error("stop cannot be null or empty");}this.start=start;this.stop=stop;this.escape=escapeLeft;this.escapeRE=new RegExp(escapeLeft.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g");}},{key:'matches',value:function matches(tree,pattern){var patternRuleIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(typeof pattern==="string"){var p=this.compile(pattern,patternRuleIndex);return this.matches(tree,p);}else {var labels=new MultiMap_1.MultiMap();var mismatchedNode=this.matchImpl(tree,pattern.patternTree,labels);return !mismatchedNode;}}// Implementation of match
	},{key:'match',value:function match(tree,pattern){var patternRuleIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(typeof pattern==="string"){var p=this.compile(pattern,patternRuleIndex);return this.match(tree,p);}else {var labels=new MultiMap_1.MultiMap();var mismatchedNode=this.matchImpl(tree,pattern.patternTree,labels);return new ParseTreeMatch_1.ParseTreeMatch(tree,pattern,labels,mismatchedNode);}}/**
	     * For repeated use of a tree pattern, compile it to a
	     * {@link ParseTreePattern} using this method.
	     */},{key:'compile',value:function compile(pattern,patternRuleIndex){var tokenList=this.tokenize(pattern);var tokenSrc=new ListTokenSource_1.ListTokenSource(tokenList);var tokens=new CommonTokenStream_1.CommonTokenStream(tokenSrc);var parser=this._parser;var parserInterp=new ParserInterpreter_1.ParserInterpreter(parser.grammarFileName,parser.vocabulary,parser.ruleNames,parser.getATNWithBypassAlts(),tokens);var tree=void 0;try{parserInterp.errorHandler=new BailErrorStrategy_1.BailErrorStrategy();tree=parserInterp.parse(patternRuleIndex);//			System.out.println("pattern tree = "+tree.toStringTree(parserInterp));
	}catch(e){if(e instanceof ParseCancellationException_1.ParseCancellationException){throw e.getCause();}else if(e instanceof RecognitionException_1.RecognitionException){throw e;}else if(e instanceof Error){throw new ParseTreePatternMatcher.CannotInvokeStartRule(e);}else {throw e;}}// Make sure tree pattern compilation checks for a complete parse
	if(tokens.LA(1)!==Token_1.Token.EOF){throw new ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern();}return new ParseTreePattern_1.ParseTreePattern(this,pattern,patternRuleIndex,tree);}/**
	     * Used to convert the tree pattern string into a series of tokens. The
	     * input stream is reset.
	     */},{key:'matchImpl',// ---- SUPPORT CODE ----
	/**
	     * Recursively walk `tree` against `patternTree`, filling
	     * `match.`{@link ParseTreeMatch#labels labels}.
	     *
	     * @returns the first node encountered in `tree` which does not match
	     * a corresponding node in `patternTree`, or `undefined` if the match
	     * was successful. The specific node returned depends on the matching
	     * algorithm used by the implementation, and may be overridden.
	     */value:function matchImpl(tree,patternTree,labels){if(!tree){throw new TypeError("tree cannot be null");}if(!patternTree){throw new TypeError("patternTree cannot be null");}// x and <ID>, x and y, or x and x; or could be mismatched types
	if(tree instanceof TerminalNode_1.TerminalNode&&patternTree instanceof TerminalNode_1.TerminalNode){var mismatchedNode=void 0;// both are tokens and they have same type
	if(tree.symbol.type===patternTree.symbol.type){if(patternTree.symbol instanceof TokenTagToken_1.TokenTagToken){// x and <ID>
	var tokenTagToken=patternTree.symbol;// track label->list-of-nodes for both token name and label (if any)
	labels.map(tokenTagToken.tokenName,tree);var l=tokenTagToken.label;if(l){labels.map(l,tree);}}else if(tree.text===patternTree.text);else {// x and y
	if(!mismatchedNode){mismatchedNode=tree;}}}else {if(!mismatchedNode){mismatchedNode=tree;}}return mismatchedNode;}if(tree instanceof ParserRuleContext_1.ParserRuleContext&&patternTree instanceof ParserRuleContext_1.ParserRuleContext){var _mismatchedNode=void 0;// (expr ...) and <expr>
	var ruleTagToken=this.getRuleTagToken(patternTree);if(ruleTagToken){if(tree.ruleContext.ruleIndex===patternTree.ruleContext.ruleIndex){// track label->list-of-nodes for both rule name and label (if any)
	labels.map(ruleTagToken.ruleName,tree);var _l=ruleTagToken.label;if(_l){labels.map(_l,tree);}}else {if(!_mismatchedNode){_mismatchedNode=tree;}}return _mismatchedNode;}// (expr ...) and (expr ...)
	if(tree.childCount!==patternTree.childCount){if(!_mismatchedNode){_mismatchedNode=tree;}return _mismatchedNode;}var n=tree.childCount;for(var i=0;i<n;i++){var childMatch=this.matchImpl(tree.getChild(i),patternTree.getChild(i),labels);if(childMatch){return childMatch;}}return _mismatchedNode;}// if nodes aren't both tokens or both rule nodes, can't match
	return tree;}/** Is `t` `(expr <expr>)` subtree? */},{key:'getRuleTagToken',value:function getRuleTagToken(t){if(t instanceof RuleNode_1.RuleNode){if(t.childCount===1&&t.getChild(0)instanceof TerminalNode_1.TerminalNode){var c=t.getChild(0);if(c.symbol instanceof RuleTagToken_1.RuleTagToken){//					System.out.println("rule tag subtree "+t.toStringTree(parser));
	return c.symbol;}}}return undefined;}},{key:'tokenize',value:function tokenize(pattern){// split pattern into chunks: sea (raw input) and islands (<ID>, <expr>)
	var chunks=this.split(pattern);// create token stream from text and tags
	var tokens=[];var _iteratorNormalCompletion190=true;var _didIteratorError190=false;var _iteratorError190=undefined;try{for(var _iterator190=chunks[Symbol.iterator](),_step190;!(_iteratorNormalCompletion190=(_step190=_iterator190.next()).done);_iteratorNormalCompletion190=true){var chunk=_step190.value;if(chunk instanceof TagChunk_1.TagChunk){var tagChunk=chunk;var firstChar=tagChunk.tag.substr(0,1);// add special rule token or conjure up new token from name
	if(firstChar===firstChar.toUpperCase()){var ttype=this._parser.getTokenType(tagChunk.tag);if(ttype===Token_1.Token.INVALID_TYPE){throw new Error("Unknown token "+tagChunk.tag+" in pattern: "+pattern);}var t=new TokenTagToken_1.TokenTagToken(tagChunk.tag,ttype,tagChunk.label);tokens.push(t);}else if(firstChar===firstChar.toLowerCase()){var ruleIndex=this._parser.getRuleIndex(tagChunk.tag);if(ruleIndex===-1){throw new Error("Unknown rule "+tagChunk.tag+" in pattern: "+pattern);}var ruleImaginaryTokenType=this._parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];tokens.push(new RuleTagToken_1.RuleTagToken(tagChunk.tag,ruleImaginaryTokenType,tagChunk.label));}else {throw new Error("invalid tag: "+tagChunk.tag+" in pattern: "+pattern);}}else {var textChunk=chunk;this._lexer.inputStream=CharStreams_1.CharStreams.fromString(textChunk.text);var _t=this._lexer.nextToken();while(_t.type!==Token_1.Token.EOF){tokens.push(_t);_t=this._lexer.nextToken();}}}//		System.out.println("tokens="+tokens);
	}catch(err){_didIteratorError190=true;_iteratorError190=err;}finally{try{if(!_iteratorNormalCompletion190&&_iterator190.return){_iterator190.return();}}finally{if(_didIteratorError190){throw _iteratorError190;}}}return tokens;}/** Split `<ID> = <e:expr> ;` into 4 chunks for tokenizing by {@link #tokenize}. */},{key:'split',value:function split(pattern){var p=0;var n=pattern.length;var chunks=[];var starts=[];var stops=[];while(p<n){if(p===pattern.indexOf(this.escape+this.start,p)){p+=this.escape.length+this.start.length;}else if(p===pattern.indexOf(this.escape+this.stop,p)){p+=this.escape.length+this.stop.length;}else if(p===pattern.indexOf(this.start,p)){starts.push(p);p+=this.start.length;}else if(p===pattern.indexOf(this.stop,p)){stops.push(p);p+=this.stop.length;}else {p++;}}//		System.out.println("");
	//		System.out.println(starts);
	//		System.out.println(stops);
	if(starts.length>stops.length){throw new Error("unterminated tag in pattern: "+pattern);}if(starts.length<stops.length){throw new Error("missing start tag in pattern: "+pattern);}var ntags=starts.length;for(var i=0;i<ntags;i++){if(starts[i]>=stops[i]){throw new Error("tag delimiters out of order in pattern: "+pattern);}}// collect into chunks now
	if(ntags===0){var text=pattern.substring(0,n);chunks.push(new TextChunk_1.TextChunk(text));}if(ntags>0&&starts[0]>0){// copy text up to first tag into chunks
	var _text=pattern.substring(0,starts[0]);chunks.push(new TextChunk_1.TextChunk(_text));}for(var _i49=0;_i49<ntags;_i49++){// copy inside of <tag>
	var tag=pattern.substring(starts[_i49]+this.start.length,stops[_i49]);var ruleOrToken=tag;var label=void 0;var colon=tag.indexOf(":");if(colon>=0){label=tag.substring(0,colon);ruleOrToken=tag.substring(colon+1,tag.length);}chunks.push(new TagChunk_1.TagChunk(ruleOrToken,label));if(_i49+1<ntags){// copy from end of <tag> to start of next
	var _text2=pattern.substring(stops[_i49]+this.stop.length,starts[_i49+1]);chunks.push(new TextChunk_1.TextChunk(_text2));}}if(ntags>0){var afterLastTag=stops[ntags-1]+this.stop.length;if(afterLastTag<n){// copy text from end of last tag to end
	var _text3=pattern.substring(afterLastTag,n);chunks.push(new TextChunk_1.TextChunk(_text3));}}// strip out the escape sequences from text chunks but not tags
	for(var _i50=0;_i50<chunks.length;_i50++){var c=chunks[_i50];if(c instanceof TextChunk_1.TextChunk){var unescaped=c.text.replace(this.escapeRE,"");if(unescaped.length<c.text.length){chunks[_i50]=new TextChunk_1.TextChunk(unescaped);}}}return chunks;}},{key:'lexer',get:function get(){return this._lexer;}/**
	     * Used to collect to the grammar file name, token names, rule names for
	     * used to parse the pattern into a parse tree.
	     */},{key:'parser',get:function get(){return this._parser;}}]);return ParseTreePatternMatcher;}();__decorate([Decorators_1.NotNull,__param(1,Decorators_1.NotNull)],ParseTreePatternMatcher.prototype,"match",null);__decorate([Decorators_1.NotNull],ParseTreePatternMatcher.prototype,"lexer",null);__decorate([Decorators_1.NotNull],ParseTreePatternMatcher.prototype,"parser",null);__decorate([__param(0,Decorators_1.NotNull),__param(1,Decorators_1.NotNull),__param(2,Decorators_1.NotNull)],ParseTreePatternMatcher.prototype,"matchImpl",null);exports.ParseTreePatternMatcher=ParseTreePatternMatcher;(function(ParseTreePatternMatcher){var CannotInvokeStartRule=function(_Error3){inherits(CannotInvokeStartRule,_Error3);function CannotInvokeStartRule(error){classCallCheck(this,CannotInvokeStartRule);var _this302=possibleConstructorReturn(this,(CannotInvokeStartRule.__proto__||Object.getPrototypeOf(CannotInvokeStartRule)).call(this,'CannotInvokeStartRule: '+error));_this302.error=error;return _this302;}return CannotInvokeStartRule;}(Error);ParseTreePatternMatcher.CannotInvokeStartRule=CannotInvokeStartRule;// Fixes https://github.com/antlr/antlr4/issues/413
	// "Tree pattern compilation doesn't check for a complete parse"
	var StartRuleDoesNotConsumeFullPattern=function(_Error4){inherits(StartRuleDoesNotConsumeFullPattern,_Error4);function StartRuleDoesNotConsumeFullPattern(){classCallCheck(this,StartRuleDoesNotConsumeFullPattern);return possibleConstructorReturn(this,(StartRuleDoesNotConsumeFullPattern.__proto__||Object.getPrototypeOf(StartRuleDoesNotConsumeFullPattern)).call(this,"StartRuleDoesNotConsumeFullPattern"));}return StartRuleDoesNotConsumeFullPattern;}(Error);ParseTreePatternMatcher.StartRuleDoesNotConsumeFullPattern=StartRuleDoesNotConsumeFullPattern;})(ParseTreePatternMatcher=exports.ParseTreePatternMatcher||(exports.ParseTreePatternMatcher={}));},{"../../BailErrorStrategy":215,"../../CharStreams":217,"../../CommonTokenStream":222,"../../Decorators":224,"../../ListTokenSource":235,"../../ParserInterpreter":238,"../../ParserRuleContext":239,"../../RecognitionException":242,"../../Token":248,"../../misc/MultiMap":332,"../../misc/ParseCancellationException":335,"../RuleNode":342,"../TerminalNode":343,"./ParseTreeMatch":347,"./ParseTreePattern":348,"./RuleTagToken":350,"./TagChunk":351,"./TextChunk":352,"./TokenTagToken":353}],350:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../../Decorators");var Token_1=require("../../Token");/**
	 * A {@link Token} object representing an entire subtree matched by a parser
	 * rule; e.g., `<expr>`. These tokens are created for {@link TagChunk}
	 * chunks where the tag corresponds to a parser rule.
	 */var RuleTagToken=function(){/**
	     * Constructs a new instance of {@link RuleTagToken} with the specified rule
	     * name, bypass token type, and label.
	     *
	     * @param ruleName The name of the parser rule this rule tag matches.
	     * @param bypassTokenType The bypass token type assigned to the parser rule.
	     * @param label The label associated with the rule tag, or `undefined` if
	     * the rule tag is unlabeled.
	     *
	     * @exception IllegalArgumentException if `ruleName` is not defined
	     * or empty.
	     */function RuleTagToken(ruleName,bypassTokenType,label){classCallCheck(this,RuleTagToken);if(ruleName==null||ruleName.length===0){throw new Error("ruleName cannot be null or empty.");}this._ruleName=ruleName;this.bypassTokenType=bypassTokenType;this._label=label;}/**
	     * Gets the name of the rule associated with this rule tag.
	     *
	     * @returns The name of the parser rule associated with this rule tag.
	     */createClass(RuleTagToken,[{key:'toString',/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} returns a string of the form
	     * `ruleName:bypassTokenType`.
	     */value:function toString(){return this._ruleName+":"+this.bypassTokenType;}},{key:'ruleName',get:function get(){return this._ruleName;}/**
	     * Gets the label associated with the rule tag.
	     *
	     * @returns The name of the label associated with the rule tag, or
	     * `undefined` if this is an unlabeled rule tag.
	     */},{key:'label',get:function get(){return this._label;}/**
	     * {@inheritDoc}
	     *
	     * Rule tag tokens are always placed on the {@link #DEFAULT_CHANNEL}.
	     */},{key:'channel',get:function get(){return Token_1.Token.DEFAULT_CHANNEL;}/**
	     * {@inheritDoc}
	     *
	     * This method returns the rule tag formatted with `<` and `>`
	     * delimiters.
	     */},{key:'text',get:function get(){if(this._label!=null){return "<"+this._label+":"+this._ruleName+">";}return "<"+this._ruleName+">";}/**
	     * {@inheritDoc}
	     *
	     * Rule tag tokens have types assigned according to the rule bypass
	     * transitions created during ATN deserialization.
	     */},{key:'type',get:function get(){return this.bypassTokenType;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns 0.
	     */},{key:'line',get:function get(){return 0;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns -1.
	     */},{key:'charPositionInLine',get:function get(){return -1;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns -1.
	     */},{key:'tokenIndex',get:function get(){return -1;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns -1.
	     */},{key:'startIndex',get:function get(){return -1;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns -1.
	     */},{key:'stopIndex',get:function get(){return -1;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns `undefined`.
	     */},{key:'tokenSource',get:function get(){return undefined;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link RuleTagToken} always returns `undefined`.
	     */},{key:'inputStream',get:function get(){return undefined;}}]);return RuleTagToken;}();__decorate([Decorators_1.NotNull],RuleTagToken.prototype,"ruleName",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"channel",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"text",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"type",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"line",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"charPositionInLine",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"tokenIndex",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"startIndex",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"stopIndex",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"tokenSource",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"inputStream",null);__decorate([Decorators_1.Override],RuleTagToken.prototype,"toString",null);RuleTagToken=__decorate([__param(0,Decorators_1.NotNull)],RuleTagToken);exports.RuleTagToken=RuleTagToken;},{"../../Decorators":224,"../../Token":248}],351:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:46.1670669-07:00
	var Chunk_1=require("./Chunk");var Decorators_1=require("../../Decorators");/**
	 * Represents a placeholder tag in a tree pattern. A tag can have any of the
	 * following forms.
	 *
	 * * `expr`: An unlabeled placeholder for a parser rule `expr`.
	 * * `ID`: An unlabeled placeholder for a token of type `ID`.
	 * * `e:expr`: A labeled placeholder for a parser rule `expr`.
	 * * `id:ID`: A labeled placeholder for a token of type `ID`.
	 *
	 * This class does not perform any validation on the tag or label names aside
	 * from ensuring that the tag is a defined, non-empty string.
	 */var TagChunk=function(_Chunk_1$Chunk){inherits(TagChunk,_Chunk_1$Chunk);/**
	     * Construct a new instance of {@link TagChunk} using the specified label
	     * and tag.
	     *
	     * @param label The label for the tag. If this is `undefined`, the
	     * {@link TagChunk} represents an unlabeled tag.
	     * @param tag The tag, which should be the name of a parser rule or token
	     * type.
	     *
	     * @exception IllegalArgumentException if `tag` is not defined or
	     * empty.
	     */function TagChunk(tag,label){classCallCheck(this,TagChunk);var _this304=possibleConstructorReturn(this,(TagChunk.__proto__||Object.getPrototypeOf(TagChunk)).call(this));if(tag==null||tag.length===0){throw new Error("tag cannot be null or empty");}_this304._tag=tag;_this304._label=label;return _this304;}/**
	     * Get the tag for this chunk.
	     *
	     * @returns The tag for the chunk.
	     */createClass(TagChunk,[{key:'toString',/**
	     * This method returns a text representation of the tag chunk. Labeled tags
	     * are returned in the form `label:tag`, and unlabeled tags are
	     * returned as just the tag name.
	     */value:function toString(){if(this._label!=null){return this._label+":"+this._tag;}return this._tag;}},{key:'tag',get:function get(){return this._tag;}/**
	     * Get the label, if any, assigned to this chunk.
	     *
	     * @returns The label assigned to this chunk, or `undefined` if no label is
	     * assigned to the chunk.
	     */},{key:'label',get:function get(){return this._label;}}]);return TagChunk;}(Chunk_1.Chunk);__decorate([Decorators_1.NotNull],TagChunk.prototype,"tag",null);__decorate([Decorators_1.Override],TagChunk.prototype,"toString",null);exports.TagChunk=TagChunk;},{"../../Decorators":224,"./Chunk":346}],352:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:46.2521448-07:00
	var Chunk_1=require("./Chunk");var Decorators_1=require("../../Decorators");/**
	 * Represents a span of raw text (concrete syntax) between tags in a tree
	 * pattern string.
	 */var TextChunk=function(_Chunk_1$Chunk2){inherits(TextChunk,_Chunk_1$Chunk2);/**
	     * Constructs a new instance of {@link TextChunk} with the specified text.
	     *
	     * @param text The text of this chunk.
	     * @exception IllegalArgumentException if `text` is not defined.
	     */function TextChunk(text){classCallCheck(this,TextChunk);var _this305=possibleConstructorReturn(this,(TextChunk.__proto__||Object.getPrototypeOf(TextChunk)).call(this));if(text==null){throw new Error("text cannot be null");}_this305._text=text;return _this305;}/**
	     * Gets the raw text of this chunk.
	     *
	     * @returns The text of the chunk.
	     */createClass(TextChunk,[{key:'toString',/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link TextChunk} returns the result of
	     * `text` in single quotes.
	     */value:function toString(){return "'"+this._text+"'";}},{key:'text',get:function get(){return this._text;}}]);return TextChunk;}(Chunk_1.Chunk);__decorate([Decorators_1.NotNull],TextChunk.prototype,"_text",void 0);__decorate([Decorators_1.NotNull],TextChunk.prototype,"text",null);__decorate([Decorators_1.Override],TextChunk.prototype,"toString",null);TextChunk=__decorate([__param(0,Decorators_1.NotNull)],TextChunk);exports.TextChunk=TextChunk;},{"../../Decorators":224,"./Chunk":346}],353:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:46.3281988-07:00
	var CommonToken_1=require("../../CommonToken");var Decorators_1=require("../../Decorators");/**
	 * A {@link Token} object representing a token of a particular type; e.g.,
	 * `<ID>`. These tokens are created for {@link TagChunk} chunks where the
	 * tag corresponds to a lexer rule or token type.
	 */var TokenTagToken=function(_CommonToken_1$Common){inherits(TokenTagToken,_CommonToken_1$Common);/**
	     * Constructs a new instance of {@link TokenTagToken} with the specified
	     * token name, type, and label.
	     *
	     * @param tokenName The token name.
	     * @param type The token type.
	     * @param label The label associated with the token tag, or `undefined` if
	     * the token tag is unlabeled.
	     */function TokenTagToken(tokenName,type,label){classCallCheck(this,TokenTagToken);var _this306=possibleConstructorReturn(this,(TokenTagToken.__proto__||Object.getPrototypeOf(TokenTagToken)).call(this,type));_this306._tokenName=tokenName;_this306._label=label;return _this306;}/**
	     * Gets the token name.
	     * @returns The token name.
	     */createClass(TokenTagToken,[{key:'toString',/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link TokenTagToken} returns a string of the form
	     * `tokenName:type`.
	     */value:function toString(){return this._tokenName+":"+this.type;}},{key:'tokenName',get:function get(){return this._tokenName;}/**
	     * Gets the label associated with the rule tag.
	     *
	     * @returns The name of the label associated with the rule tag, or
	     * `undefined` if this is an unlabeled rule tag.
	     */},{key:'label',get:function get(){return this._label;}/**
	     * {@inheritDoc}
	     *
	     * The implementation for {@link TokenTagToken} returns the token tag
	     * formatted with `<` and `>` delimiters.
	     */},{key:'text',get:function get(){if(this._label!=null){return "<"+this._label+":"+this._tokenName+">";}return "<"+this._tokenName+">";}}]);return TokenTagToken;}(CommonToken_1.CommonToken);__decorate([Decorators_1.NotNull],TokenTagToken.prototype,"_tokenName",void 0);__decorate([Decorators_1.NotNull],TokenTagToken.prototype,"tokenName",null);__decorate([Decorators_1.Override],TokenTagToken.prototype,"text",null);__decorate([Decorators_1.Override],TokenTagToken.prototype,"toString",null);TokenTagToken=__decorate([__param(0,Decorators_1.NotNull)],TokenTagToken);exports.TokenTagToken=TokenTagToken;},{"../../CommonToken":220,"../../Decorators":224}],354:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */Object.defineProperty(exports,"__esModule",{value:true});// ConvertTo-TS run at 2016-10-04T11:26:46.4373888-07:00
	var CharStreams_1=require("../../CharStreams");var CommonTokenStream_1=require("../../CommonTokenStream");var LexerNoViableAltException_1=require("../../LexerNoViableAltException");var ParserRuleContext_1=require("../../ParserRuleContext");var Token_1=require("../../Token");var XPathLexer_1=require("./XPathLexer");var XPathLexerErrorListener_1=require("./XPathLexerErrorListener");var XPathRuleAnywhereElement_1=require("./XPathRuleAnywhereElement");var XPathRuleElement_1=require("./XPathRuleElement");var XPathTokenAnywhereElement_1=require("./XPathTokenAnywhereElement");var XPathTokenElement_1=require("./XPathTokenElement");var XPathWildcardAnywhereElement_1=require("./XPathWildcardAnywhereElement");var XPathWildcardElement_1=require("./XPathWildcardElement");/**
	 * Represent a subset of XPath XML path syntax for use in identifying nodes in
	 * parse trees.
	 *
	 * Split path into words and separators `/` and `//` via ANTLR
	 * itself then walk path elements from left to right. At each separator-word
	 * pair, find set of nodes. Next stage uses those as work list.
	 *
	 * The basic interface is
	 * {@link XPath#findAll ParseTree.findAll}`(tree, pathString, parser)`.
	 * But that is just shorthand for:
	 *
	 * ```
	 * let p = new XPath(parser, pathString);
	 * return p.evaluate(tree);
	 * ```
	 *
	 * See `TestXPath` for descriptions. In short, this
	 * allows operators:
	 *
	 * | | |
	 * | --- | --- |
	 * | `/` | root |
	 * | `//` | anywhere |
	 * | `!` | invert; this much appear directly after root or anywhere operator |
	 *
	 * and path elements:
	 *
	 * | | |
	 * | --- | --- |
	 * | `ID` | token name |
	 * | `'string'` | any string literal token from the grammar |
	 * | `expr` | rule name |
	 * | `*` | wildcard matching any node |
	 *
	 * Whitespace is not allowed.
	 */var XPath=function(){function XPath(parser,path){classCallCheck(this,XPath);this.parser=parser;this.path=path;this.elements=this.split(path);// console.log(this.elements.toString());
	}// TODO: check for invalid token/rule names, bad syntax
	createClass(XPath,[{key:'split',value:function split(path){var lexer=new XPathLexer_1.XPathLexer(CharStreams_1.CharStreams.fromString(path));lexer.recover=function(e){throw e;};lexer.removeErrorListeners();lexer.addErrorListener(new XPathLexerErrorListener_1.XPathLexerErrorListener());var tokenStream=new CommonTokenStream_1.CommonTokenStream(lexer);try{tokenStream.fill();}catch(e){if(e instanceof LexerNoViableAltException_1.LexerNoViableAltException){var pos=lexer.charPositionInLine;var msg="Invalid tokens or characters at index "+pos+" in path '"+path+"' -- "+e.message;throw new RangeError(msg);}throw e;}var tokens=tokenStream.getTokens();// console.log("path=" + path + "=>" + tokens);
	var elements=[];var n=tokens.length;var i=0;loop:while(i<n){var el=tokens[i];var _next8=void 0;switch(el.type){case XPathLexer_1.XPathLexer.ROOT:case XPathLexer_1.XPathLexer.ANYWHERE:var anywhere=el.type===XPathLexer_1.XPathLexer.ANYWHERE;i++;_next8=tokens[i];var invert=_next8.type===XPathLexer_1.XPathLexer.BANG;if(invert){i++;_next8=tokens[i];}var pathElement=this.getXPathElement(_next8,anywhere);pathElement.invert=invert;elements.push(pathElement);i++;break;case XPathLexer_1.XPathLexer.TOKEN_REF:case XPathLexer_1.XPathLexer.RULE_REF:case XPathLexer_1.XPathLexer.WILDCARD:elements.push(this.getXPathElement(el,false));i++;break;case Token_1.Token.EOF:break loop;default:throw new Error("Unknowth path element "+el);}}return elements;}/**
	     * Convert word like `*` or `ID` or `expr` to a path
	     * element. `anywhere` is `true` if `//` precedes the
	     * word.
	     */},{key:'getXPathElement',value:function getXPathElement(wordToken,anywhere){if(wordToken.type===Token_1.Token.EOF){throw new Error("Missing path element at end of path");}var word=wordToken.text;if(word==null){throw new Error("Expected wordToken to have text content.");}var ttype=this.parser.getTokenType(word);var ruleIndex=this.parser.getRuleIndex(word);switch(wordToken.type){case XPathLexer_1.XPathLexer.WILDCARD:return anywhere?new XPathWildcardAnywhereElement_1.XPathWildcardAnywhereElement():new XPathWildcardElement_1.XPathWildcardElement();case XPathLexer_1.XPathLexer.TOKEN_REF:case XPathLexer_1.XPathLexer.STRING:if(ttype===Token_1.Token.INVALID_TYPE){throw new Error(word+" at index "+wordToken.startIndex+" isn't a valid token name");}return anywhere?new XPathTokenAnywhereElement_1.XPathTokenAnywhereElement(word,ttype):new XPathTokenElement_1.XPathTokenElement(word,ttype);default:if(ruleIndex===-1){throw new Error(word+" at index "+wordToken.startIndex+" isn't a valid rule name");}return anywhere?new XPathRuleAnywhereElement_1.XPathRuleAnywhereElement(word,ruleIndex):new XPathRuleElement_1.XPathRuleElement(word,ruleIndex);}}},{key:'evaluate',/**
	     * Return a list of all nodes starting at `t` as root that satisfy the
	     * path. The root `/` is relative to the node passed to {@link evaluate}.
	     */value:function evaluate(t){var dummyRoot=new ParserRuleContext_1.ParserRuleContext();dummyRoot.addChild(t);var work=new Set([dummyRoot]);var i=0;while(i<this.elements.length){var _next9=new Set();var _iteratorNormalCompletion191=true;var _didIteratorError191=false;var _iteratorError191=undefined;try{for(var _iterator191=work[Symbol.iterator](),_step191;!(_iteratorNormalCompletion191=(_step191=_iterator191.next()).done);_iteratorNormalCompletion191=true){var node=_step191.value;if(node.childCount>0){// only try to match next element if it has children
	// e.g., //func/*/stat might have a token node for which
	// we can't go looking for stat nodes.
	var matching=this.elements[i].evaluate(node);matching.forEach(_next9.add,_next9);}}}catch(err){_didIteratorError191=true;_iteratorError191=err;}finally{try{if(!_iteratorNormalCompletion191&&_iterator191.return){_iterator191.return();}}finally{if(_didIteratorError191){throw _iteratorError191;}}}i++;work=_next9;}return work;}}],[{key:'findAll',value:function findAll(tree,xpath,parser){var p=new XPath(parser,xpath);return p.evaluate(tree);}}]);return XPath;}();XPath.WILDCARD="*";// word not operator/separator
	XPath.NOT="!";// word for invert operator
	exports.XPath=XPath;},{"../../CharStreams":217,"../../CommonTokenStream":222,"../../LexerNoViableAltException":234,"../../ParserRuleContext":239,"../../Token":248,"./XPathLexer":356,"./XPathLexerErrorListener":357,"./XPathRuleAnywhereElement":358,"./XPathRuleElement":359,"./XPathTokenAnywhereElement":360,"./XPathTokenElement":361,"./XPathWildcardAnywhereElement":362,"./XPathWildcardElement":363}],355:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var XPathElement=function(){/** Construct element like `/ID` or `ID` or `/*` etc...
	     *  op is null if just node
	     */function XPathElement(nodeName){classCallCheck(this,XPathElement);this.nodeName=nodeName;this.invert=false;}createClass(XPathElement,[{key:'toString',value:function toString(){var inv=this.invert?"!":"";var className=Object.constructor.name;return className+"["+inv+this.nodeName+"]";}}]);return XPathElement;}();__decorate([Decorators_1.Override],XPathElement.prototype,"toString",null);exports.XPathElement=XPathElement;},{"../../Decorators":224}],356:[function(require,module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ATNDeserializer_1=require("../../atn/ATNDeserializer");var Lexer_1=require("../../Lexer");var LexerATNSimulator_1=require("../../atn/LexerATNSimulator");var VocabularyImpl_1=require("../../VocabularyImpl");var Utils=require("../../misc/Utils");var XPathLexer=function(_Lexer_1$Lexer4){inherits(XPathLexer,_Lexer_1$Lexer4);// tslint:enable:no-trailing-whitespace
	function XPathLexer(input){classCallCheck(this,XPathLexer);var _this307=possibleConstructorReturn(this,(XPathLexer.__proto__||Object.getPrototypeOf(XPathLexer)).call(this,input));_this307._interp=new LexerATNSimulator_1.LexerATNSimulator(XPathLexer._ATN,_this307);return _this307;}// @Override
	// @NotNull
	createClass(XPathLexer,[{key:'action',// @Override
	value:function action(_localctx,ruleIndex,actionIndex){switch(ruleIndex){case 4:this.ID_action(_localctx,actionIndex);break;}}},{key:'ID_action',value:function ID_action(_localctx,actionIndex){switch(actionIndex){case 0:var text=this.text;if(text.charAt(0)===text.charAt(0).toUpperCase()){this.type=XPathLexer.TOKEN_REF;}else {this.type=XPathLexer.RULE_REF;}break;}}},{key:'vocabulary',get:function get(){return XPathLexer.VOCABULARY;}// @Override
	},{key:'grammarFileName',get:function get(){return "XPathLexer.g4";}// @Override
	},{key:'ruleNames',get:function get(){return XPathLexer.ruleNames;}// @Override
	},{key:'serializedATN',get:function get(){return XPathLexer._serializedATN;}// @Override
	},{key:'channelNames',get:function get(){return XPathLexer.channelNames;}// @Override
	},{key:'modeNames',get:function get(){return XPathLexer.modeNames;}}],[{key:'_ATN',get:function get(){if(!XPathLexer.__ATN){XPathLexer.__ATN=new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(XPathLexer._serializedATN));}return XPathLexer.__ATN;}}]);return XPathLexer;}(Lexer_1.Lexer);XPathLexer.TOKEN_REF=1;XPathLexer.RULE_REF=2;XPathLexer.ANYWHERE=3;XPathLexer.ROOT=4;XPathLexer.WILDCARD=5;XPathLexer.BANG=6;XPathLexer.ID=7;XPathLexer.STRING=8;// tslint:disable:no-trailing-whitespace
	XPathLexer.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];// tslint:disable:no-trailing-whitespace
	XPathLexer.modeNames=["DEFAULT_MODE"];XPathLexer.ruleNames=["ANYWHERE","ROOT","WILDCARD","BANG","ID","NameChar","NameStartChar","STRING"];XPathLexer._LITERAL_NAMES=[undefined,undefined,undefined,"'//'","'/'","'*'","'!'"];XPathLexer._SYMBOLIC_NAMES=[undefined,"TOKEN_REF","RULE_REF","ANYWHERE","ROOT","WILDCARD","BANG","ID","STRING"];XPathLexer.VOCABULARY=new VocabularyImpl_1.VocabularyImpl(XPathLexer._LITERAL_NAMES,XPathLexer._SYMBOLIC_NAMES,[]);XPathLexer._serializedATNSegments=2;XPathLexer._serializedATNSegment0='\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\n2\b\x01\x04'+"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04"+"\x07\t\x07\x04\b\t\b\x04\t\t\t\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03"+"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x07\x06\x1F\n\x06\f\x06"+"\x0E\x06\"\v\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03"+"\t\x07\t,\n\t\f\t\x0E\t/\v\t\x03\t\x03\t\x03-\x02\x02\n\x03\x02\x05\x05"+"\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r\x02\x02\x0F\x02\x02\x11\x02\n\x03"+'\x02\x02\x04\u02B6\x02\x02\x02\n\x02\x10\x02\x1D\x022\x02;\x02C\x02\\'+"\x02a\x02a\x02c\x02|\x02\x81\x02\xA1\x02\xAC\x02\xAC\x02\xAF\x02\xAF\x02"+"\xB7\x02\xB7\x02\xBC\x02\xBC\x02\xC2\x02\xD8\x02\xDA\x02\xF8\x02\xFA\x02"+'\u02C3\x02\u02C8\x02\u02D3\x02\u02E2\x02\u02E6\x02\u02EE\x02\u02EE\x02'+'\u02F0\x02\u02F0\x02\u0302\x02\u0376\x02\u0378\x02\u0379\x02\u037C\x02'+'\u037F\x02\u0381\x02\u0381\x02\u0388\x02\u0388\x02\u038A\x02\u038C\x02'+'\u038E\x02\u038E\x02\u0390\x02\u03A3\x02\u03A5\x02\u03F7\x02\u03F9\x02'+'\u0483\x02\u0485\x02\u0489\x02\u048C\x02\u0531\x02\u0533\x02\u0558\x02'+'\u055B\x02\u055B\x02\u0563\x02\u0589\x02\u0593\x02\u05BF\x02\u05C1\x02'+'\u05C1\x02\u05C3\x02\u05C4\x02\u05C6\x02\u05C7\x02\u05C9\x02\u05C9\x02'+'\u05D2\x02\u05EC\x02\u05F2\x02\u05F4\x02\u0602\x02\u0607\x02\u0612\x02'+'\u061C\x02\u061E\x02\u061E\x02\u0622\x02\u066B\x02\u0670\x02\u06D5\x02'+'\u06D7\x02\u06DF\x02\u06E1\x02\u06EA\x02\u06EC\x02\u06FE\x02\u0701\x02'+'\u0701\x02\u0711\x02\u074C\x02\u074F\x02\u07B3\x02\u07C2\x02\u07F7\x02'+'\u07FC\x02\u07FC\x02\u0802\x02\u082F\x02\u0842\x02\u085D\x02\u08A2\x02'+'\u08B6\x02\u08B8\x02\u08BF\x02\u08D6\x02\u0965\x02\u0968\x02\u0971\x02'+'\u0973\x02\u0985\x02\u0987\x02\u098E\x02\u0991\x02\u0992\x02\u0995\x02'+'\u09AA\x02\u09AC\x02\u09B2\x02\u09B4\x02\u09B4\x02\u09B8\x02\u09BB\x02'+'\u09BE\x02\u09C6\x02\u09C9\x02\u09CA\x02\u09CD\x02\u09D0\x02\u09D9\x02'+'\u09D9\x02\u09DE\x02\u09DF\x02\u09E1\x02\u09E5\x02\u09E8\x02\u09F3\x02'+'\u0A03\x02\u0A05\x02\u0A07\x02\u0A0C\x02\u0A11\x02\u0A12\x02\u0A15\x02'+'\u0A2A\x02\u0A2C\x02\u0A32\x02\u0A34\x02\u0A35\x02\u0A37\x02\u0A38\x02'+'\u0A3A\x02\u0A3B\x02\u0A3E\x02\u0A3E\x02\u0A40\x02\u0A44\x02\u0A49\x02'+'\u0A4A\x02\u0A4D\x02\u0A4F\x02\u0A53\x02\u0A53\x02\u0A5B\x02\u0A5E\x02'+'\u0A60\x02\u0A60\x02\u0A68\x02\u0A77\x02\u0A83\x02\u0A85\x02\u0A87\x02'+'\u0A8F\x02\u0A91\x02\u0A93\x02\u0A95\x02\u0AAA\x02\u0AAC\x02\u0AB2\x02'+'\u0AB4\x02\u0AB5\x02\u0AB7\x02\u0ABB\x02\u0ABE\x02\u0AC7\x02\u0AC9\x02'+'\u0ACB\x02\u0ACD\x02\u0ACF\x02\u0AD2\x02\u0AD2\x02\u0AE2\x02\u0AE5\x02'+'\u0AE8\x02\u0AF1\x02\u0AFB\x02\u0AFB\x02\u0B03\x02\u0B05\x02\u0B07\x02'+'\u0B0E\x02\u0B11\x02\u0B12\x02\u0B15\x02\u0B2A\x02\u0B2C\x02\u0B32\x02'+'\u0B34\x02\u0B35\x02\u0B37\x02\u0B3B\x02\u0B3E\x02\u0B46\x02\u0B49\x02'+'\u0B4A\x02\u0B4D\x02\u0B4F\x02\u0B58\x02\u0B59\x02\u0B5E\x02\u0B5F\x02'+'\u0B61\x02\u0B65\x02\u0B68\x02\u0B71\x02\u0B73\x02\u0B73\x02\u0B84\x02'+'\u0B85\x02\u0B87\x02\u0B8C\x02\u0B90\x02\u0B92\x02\u0B94\x02\u0B97\x02'+'\u0B9B\x02\u0B9C\x02\u0B9E\x02\u0B9E\x02\u0BA0\x02\u0BA1\x02\u0BA5\x02'+'\u0BA6\x02\u0BAA\x02\u0BAC\x02\u0BB0\x02\u0BBB\x02\u0BC0\x02\u0BC4\x02'+'\u0BC8\x02\u0BCA\x02\u0BCC\x02\u0BCF\x02\u0BD2\x02\u0BD2\x02\u0BD9\x02'+'\u0BD9\x02\u0BE8\x02\u0BF1\x02\u0C02\x02\u0C05\x02\u0C07\x02\u0C0E\x02'+'\u0C10\x02\u0C12\x02\u0C14\x02\u0C2A\x02\u0C2C\x02\u0C3B\x02\u0C3F\x02'+'\u0C46\x02\u0C48\x02\u0C4A\x02\u0C4C\x02\u0C4F\x02\u0C57\x02\u0C58\x02'+'\u0C5A\x02\u0C5C\x02\u0C62\x02\u0C65\x02\u0C68\x02\u0C71\x02\u0C82\x02'+'\u0C85\x02\u0C87\x02\u0C8E\x02\u0C90\x02\u0C92\x02\u0C94\x02\u0CAA\x02'+'\u0CAC\x02\u0CB5\x02\u0CB7\x02\u0CBB\x02\u0CBE\x02\u0CC6\x02\u0CC8\x02'+'\u0CCA\x02\u0CCC\x02\u0CCF\x02\u0CD7\x02\u0CD8\x02\u0CE0\x02\u0CE0\x02'+'\u0CE2\x02\u0CE5\x02\u0CE8\x02\u0CF1\x02\u0CF3\x02\u0CF4\x02\u0D03\x02'+'\u0D05\x02\u0D07\x02\u0D0E\x02\u0D10\x02\u0D12\x02\u0D14\x02\u0D3C\x02'+'\u0D3F\x02\u0D46\x02\u0D48\x02\u0D4A\x02\u0D4C\x02\u0D50\x02\u0D56\x02'+'\u0D59\x02\u0D61\x02\u0D65\x02\u0D68\x02\u0D71\x02\u0D7C\x02\u0D81\x02'+'\u0D84\x02\u0D85\x02\u0D87\x02\u0D98\x02\u0D9C\x02\u0DB3\x02\u0DB5\x02'+'\u0DBD\x02\u0DBF\x02\u0DBF\x02\u0DC2\x02\u0DC8\x02\u0DCC\x02\u0DCC\x02'+'\u0DD1\x02\u0DD6\x02\u0DD8\x02\u0DD8\x02\u0DDA\x02\u0DE1\x02\u0DE8\x02'+'\u0DF1\x02\u0DF4\x02\u0DF5\x02\u0E03\x02\u0E3C\x02\u0E42\x02\u0E50\x02'+'\u0E52\x02\u0E5B\x02\u0E83\x02\u0E84\x02\u0E86\x02\u0E86\x02\u0E89\x02'+'\u0E8A\x02\u0E8C\x02\u0E8C\x02\u0E8F\x02\u0E8F\x02\u0E96\x02\u0E99\x02'+'\u0E9B\x02\u0EA1\x02\u0EA3\x02\u0EA5\x02\u0EA7\x02\u0EA7\x02\u0EA9\x02'+'\u0EA9\x02\u0EAC\x02\u0EAD\x02\u0EAF\x02\u0EBB\x02\u0EBD\x02\u0EBF\x02'+'\u0EC2\x02\u0EC6\x02\u0EC8\x02\u0EC8\x02\u0ECA\x02\u0ECF\x02\u0ED2\x02'+'\u0EDB\x02\u0EDE\x02\u0EE1\x02\u0F02\x02\u0F02\x02\u0F1A\x02\u0F1B\x02'+'\u0F22\x02\u0F2B\x02\u0F37\x02\u0F37\x02\u0F39\x02\u0F39\x02\u0F3B\x02'+'\u0F3B\x02\u0F40\x02\u0F49\x02\u0F4B\x02\u0F6E\x02\u0F73\x02\u0F86\x02'+'\u0F88\x02\u0F99\x02\u0F9B\x02\u0FBE\x02\u0FC8\x02\u0FC8\x02\u1002\x02'+'\u104B\x02\u1052\x02\u109F\x02\u10A2\x02\u10C7\x02\u10C9\x02\u10C9\x02'+'\u10CF\x02\u10CF\x02\u10D2\x02\u10FC\x02\u10FE\x02\u124A\x02\u124C\x02'+'\u124F\x02\u1252\x02\u1258\x02\u125A\x02\u125A\x02\u125C\x02\u125F\x02'+'\u1262\x02\u128A\x02\u128C\x02\u128F\x02\u1292\x02\u12B2\x02\u12B4\x02'+'\u12B7\x02\u12BA\x02\u12C0\x02\u12C2\x02\u12C2\x02\u12C4\x02\u12C7\x02'+'\u12CA\x02\u12D8\x02\u12DA\x02\u1312\x02\u1314\x02\u1317\x02\u131A\x02'+'\u135C\x02\u135F\x02\u1361\x02\u1382\x02\u1391\x02\u13A2\x02\u13F7\x02'+'\u13FA\x02\u13FF\x02\u1403\x02\u166E\x02\u1671\x02\u1681\x02\u1683\x02'+'\u169C\x02\u16A2\x02\u16EC\x02\u16F0\x02\u16FA\x02\u1702\x02\u170E\x02'+'\u1710\x02\u1716\x02\u1722\x02\u1736\x02\u1742\x02\u1755\x02\u1762\x02'+'\u176E\x02\u1770\x02\u1772\x02\u1774\x02\u1775\x02\u1782\x02\u17D5\x02'+'\u17D9\x02\u17D9\x02\u17DE\x02\u17DF\x02\u17E2\x02\u17EB\x02\u180D\x02'+'\u1810\x02\u1812\x02\u181B\x02\u1822\x02\u1879\x02\u1882\x02\u18AC\x02'+'\u18B2\x02\u18F7\x02\u1902\x02\u1920\x02\u1922\x02\u192D\x02\u1932\x02'+'\u193D\x02\u1948\x02\u196F\x02\u1972\x02\u1976\x02\u1982\x02\u19AD\x02'+'\u19B2\x02\u19CB\x02\u19D2\x02\u19DB\x02\u1A02\x02\u1A1D\x02\u1A22\x02'+'\u1A60\x02\u1A62\x02\u1A7E\x02\u1A81\x02\u1A8B\x02\u1A92\x02\u1A9B\x02'+'\u1AA9\x02\u1AA9\x02\u1AB2\x02\u1ABF\x02\u1B02\x02\u1B4D\x02\u1B52\x02'+'\u1B5B\x02\u1B6D\x02\u1B75\x02\u1B82\x02\u1BF5\x02\u1C02\x02\u1C39\x02'+'\u1C42\x02\u1C4B\x02\u1C4F\x02\u1C7F\x02\u1C82\x02\u1C8A\x02\u1CD2\x02'+'\u1CD4\x02\u1CD6\x02\u1CF8\x02\u1CFA\x02\u1CFB\x02\u1D02\x02\u1DF7\x02'+'\u1DFD\x02\u1F17\x02\u1F1A\x02\u1F1F\x02\u1F22\x02\u1F47\x02\u1F4A\x02'+'\u1F4F\x02\u1F52\x02\u1F59\x02\u1F5B\x02\u1F5B\x02\u1F5D\x02\u1F5D\x02'+'\u1F5F\x02\u1F5F\x02\u1F61\x02\u1F7F\x02\u1F82\x02\u1FB6\x02\u1FB8\x02'+'\u1FBE\x02\u1FC0\x02\u1FC0\x02\u1FC4\x02\u1FC6\x02\u1FC8\x02\u1FCE\x02'+'\u1FD2\x02\u1FD5\x02\u1FD8\x02\u1FDD\x02\u1FE2\x02\u1FEE\x02\u1FF4\x02'+'\u1FF6\x02\u1FF8\x02\u1FFE\x02\u200D\x02\u2011\x02\u202C\x02\u2030\x02'+'\u2041\x02\u2042\x02\u2056\x02\u2056\x02\u2062\x02\u2066\x02\u2068\x02'+'\u2071\x02\u2073\x02\u2073\x02\u2081\x02\u2081\x02\u2092\x02\u209E\x02'+'\u20D2\x02\u20DE\x02\u20E3\x02\u20E3\x02\u20E7\x02\u20F2\x02\u2104\x02'+'\u2104\x02\u2109\x02\u2109\x02\u210C\x02\u2115\x02\u2117\x02\u2117\x02'+'\u211B\x02\u211F\x02\u2126\x02\u2126\x02\u2128\x02\u2128\x02\u212A\x02'+'\u212A\x02\u212C\x02\u212F\x02\u2131\x02\u213B\x02\u213E\x02\u2141\x02'+'\u2147\x02\u214B\x02\u2150\x02\u2150\x02\u2162\x02\u218A\x02\u2C02\x02'+'\u2C30\x02\u2C32\x02\u2C60\x02\u2C62\x02\u2CE6\x02\u2CED\x02\u2CF5\x02'+'\u2D02\x02\u2D27\x02\u2D29\x02\u2D29\x02\u2D2F\x02\u2D2F\x02\u2D32\x02'+'\u2D69\x02\u2D71\x02\u2D71\x02\u2D81\x02\u2D98\x02\u2DA2\x02\u2DA8\x02'+'\u2DAA\x02\u2DB0\x02\u2DB2\x02\u2DB8\x02\u2DBA\x02\u2DC0\x02\u2DC2\x02'+'\u2DC8\x02\u2DCA\x02\u2DD0\x02\u2DD2\x02\u2DD8\x02\u2DDA\x02\u2DE0\x02'+'\u2DE2\x02\u2E01\x02\u2E31\x02\u2E31\x02\u3007\x02\u3009\x02\u3023\x02'+'\u3031\x02\u3033\x02\u3037\x02\u303A\x02\u303E\x02\u3043\x02\u3098\x02'+'\u309B\x02\u309C\x02\u309F\x02\u30A1\x02\u30A3\x02\u30FC\x02\u30FE\x02'+'\u3101\x02\u3107\x02\u312F\x02\u3133\x02\u3190\x02\u31A2\x02\u31BC\x02'+'\u31F2\x02\u3201\x02\u3402\x02\u4DB7\x02\u4E02\x02\u9FD7\x02\uA002\x02'+'\uA48E\x02\uA4D2\x02\uA4FF\x02\uA502\x02\uA60E\x02\uA612\x02\uA62D\x02'+'\uA642\x02\uA671\x02\uA676\x02\uA67F\x02\uA681\x02\uA6F3\x02\uA719\x02'+'\uA721\x02\uA724\x02\uA78A\x02\uA78D\x02\uA7B0\x02\uA7B2\x02\uA7B9\x02'+'\uA7F9\x02\uA829\x02\uA842\x02\uA875\x02\uA882\x02\uA8C7\x02\uA8D2\x02'+'\uA8DB\x02\uA8E2\x02\uA8F9\x02\uA8FD\x02\uA8FD\x02\uA8FF\x02\uA8FF\x02'+'\uA902\x02\uA92F\x02\uA932\x02\uA955\x02\uA962\x02\uA97E\x02\uA982\x02'+'\uA9C2\x02\uA9D1\x02\uA9DB\x02\uA9E2\x02\uAA00\x02\uAA02\x02\uAA38\x02'+'\uAA42\x02\uAA4F\x02\uAA52\x02\uAA5B\x02\uAA62\x02\uAA78\x02\uAA7C\x02'+'\uAAC4\x02\uAADD\x02\uAADF\x02\uAAE2\x02\uAAF1\x02\uAAF4\x02\uAAF8\x02'+'\uAB03\x02\uAB08\x02\uAB0B\x02\uAB10\x02\uAB13\x02\uAB18\x02\uAB22\x02'+'\uAB28\x02\uAB2A\x02\uAB30\x02\uAB32\x02\uAB5C\x02\uAB5E\x02\uAB67\x02'+'\uAB72\x02\uABEC\x02\uABEE\x02\uABEF\x02\uABF2\x02\uABFB\x02\uAC02\x02'+'\uD7A5\x02\uD7B2\x02\uD7C8\x02\uD7CD\x02\uD7FD\x02\uF902\x02\uFA6F\x02'+'\uFA72\x02\uFADB\x02\uFB02\x02\uFB08\x02\uFB15\x02\uFB19\x02\uFB1F\x02'+'\uFB2A\x02\uFB2C\x02\uFB38\x02\uFB3A\x02\uFB3E\x02\uFB40\x02\uFB40\x02'+'\uFB42\x02\uFB43\x02\uFB45\x02\uFB46\x02\uFB48\x02\uFBB3\x02\uFBD5\x02'+'\uFD3F\x02\uFD52\x02\uFD91\x02\uFD94\x02\uFDC9\x02\uFDF2\x02\uFDFD\x02'+'\uFE02\x02\uFE11\x02\uFE22\x02\uFE31\x02\uFE35\x02\uFE36\x02\uFE4F\x02'+'\uFE51\x02\uFE72\x02\uFE76\x02\uFE78\x02\uFEFE\x02\uFF01\x02\uFF01\x02'+'\uFF12\x02\uFF1B\x02\uFF23\x02\uFF3C\x02\uFF41\x02\uFF41\x02\uFF43\x02'+'\uFF5C\x02\uFF68\x02\uFFC0\x02\uFFC4\x02\uFFC9\x02\uFFCC\x02\uFFD1\x02'+'\uFFD4\x02\uFFD9\x02\uFFDC\x02\uFFDE\x02\uFFFB\x02\uFFFD\x02\x02\x03\r'+"\x03\x0F\x03(\x03*\x03<\x03>\x03?\x03A\x03O\x03R\x03_\x03\x82\x03\xFC"+'\x03\u0142\x03\u0176\x03\u01FF\x03\u01FF\x03\u0282\x03\u029E\x03\u02A2'+'\x03\u02D2\x03\u02E2\x03\u02E2\x03\u0302\x03\u0321\x03\u0332\x03\u034C'+'\x03\u0352\x03\u037C\x03\u0382\x03\u039F\x03\u03A2\x03\u03C5\x03\u03CA'+'\x03\u03D1\x03\u03D3\x03\u03D7\x03\u0402\x03\u049F\x03\u04A2\x03\u04AB'+'\x03\u04B2\x03\u04D5\x03\u04DA\x03\u04FD\x03\u0502\x03\u0529\x03\u0532'+'\x03\u0565\x03\u0602\x03\u0738\x03\u0742\x03\u0757\x03\u0762\x03\u0769'+'\x03\u0802\x03\u0807\x03\u080A\x03\u080A\x03\u080C\x03\u0837\x03\u0839'+'\x03\u083A\x03\u083E\x03\u083E\x03\u0841\x03\u0857\x03\u0862\x03\u0878'+'\x03\u0882\x03\u08A0\x03\u08E2\x03\u08F4\x03\u08F6\x03\u08F7\x03\u0902'+'\x03\u0917\x03\u0922\x03\u093B\x03\u0982\x03\u09B9\x03\u09C0\x03\u09C1'+'\x03\u0A02\x03\u0A05\x03\u0A07\x03\u0A08\x03\u0A0E\x03\u0A15\x03\u0A17'+'\x03\u0A19\x03\u0A1B\x03\u0A35\x03\u0A3A\x03\u0A3C\x03\u0A41\x03\u0A41'+'\x03\u0A62\x03\u0A7E\x03\u0A82\x03\u0A9E\x03\u0AC2\x03\u0AC9\x03\u0ACB'+'\x03\u0AE8\x03\u0B02\x03\u0B37\x03\u0B42\x03\u0B57\x03\u0B62\x03\u0B74'+'\x03\u0B82\x03\u0B93\x03\u0C02\x03\u0C4A\x03\u0C82\x03\u0CB4\x03\u0CC2'+'\x03\u0CF4\x03\u1002\x03\u1048\x03\u1068\x03\u1071\x03\u1081\x03\u10BC'+'\x03\u10BF\x03\u10BF\x03\u10D2\x03\u10EA\x03\u10F2\x03\u10FB\x03\u1102'+'\x03\u1136\x03\u1138\x03\u1141\x03\u1152\x03\u1175\x03\u1178\x03\u1178'+'\x03\u1182\x03\u11C6\x03\u11CC\x03\u11CE\x03\u11D2\x03\u11DC\x03\u11DE'+'\x03\u11DE\x03\u1202\x03\u1213\x03\u1215\x03\u1239\x03\u1240\x03\u1240'+'\x03\u1282\x03\u1288\x03\u128A\x03\u128A\x03\u128C\x03\u128F\x03\u1291'+'\x03\u129F\x03\u12A1\x03\u12AA\x03\u12B2\x03\u12EC\x03\u12F2\x03\u12FB'+'\x03\u1302\x03\u1305\x03\u1307\x03\u130E\x03\u1311\x03\u1312\x03\u1315'+'\x03\u132A\x03\u132C\x03\u1332\x03\u1334\x03\u1335\x03\u1337\x03\u133B'+'\x03\u133E\x03\u1346\x03\u1349\x03\u134A\x03\u134D\x03\u134F\x03\u1352'+'\x03\u1352\x03\u1359\x03\u1359\x03\u135F\x03\u1365\x03\u1368\x03\u136E'+'\x03\u1372\x03\u1376\x03\u1402\x03\u144C\x03\u1452\x03\u145B\x03\u1482'+'\x03\u14C7\x03\u14C9\x03\u14C9\x03\u14D2\x03\u14DB\x03\u1582\x03\u15B7'+'\x03\u15BA\x03\u15C2\x03\u15DA\x03\u15DF\x03\u1602\x03\u1642\x03\u1646'+'\x03\u1646\x03\u1652\x03\u165B\x03\u1682\x03\u16B9\x03\u16C2\x03\u16CB'+'\x03\u1702\x03\u171B\x03\u171F\x03\u172D\x03\u1732\x03\u173B\x03\u18A2'+'\x03\u18EB\x03\u1901\x03\u1901\x03\u1AC2\x03\u1AFA\x03\u1C02\x03\u1C0A'+'\x03\u1C0C\x03\u1C38\x03\u1C3A\x03\u1C42\x03\u1C52\x03\u1C5B\x03\u1C74'+'\x03\u1C91\x03\u1C94\x03\u1CA9\x03\u1CAB\x03\u1CB8\x03\u2002\x03\u239B'+'\x03\u2402\x03\u2470\x03\u2482\x03\u2545\x03\u3002\x03\u3430\x03\u4402'+'\x03\u4648\x03\u6802\x03\u6A3A\x03\u6A42\x03\u6A60\x03\u6A62\x03\u6A6B'+'\x03\u6AD2\x03\u6AEF\x03\u6AF2\x03\u6AF6\x03\u6B02\x03\u6B38\x03\u6B42'+'\x03\u6B45\x03\u6B52\x03\u6B5B\x03\u6B65\x03\u6B79\x03\u6B7F\x03\u6B91'+'\x03\u6F02\x03\u6F46\x03\u6F52\x03\u6F80\x03\u6F91\x03\u6FA1\x03\u6FE2'+'\x03\u6FE2\x03\u7002\x03\u87EE\x03\u8802\x03\u8AF4\x03\uB002\x03\uB003'+'\x03\uBC02\x03\uBC6C\x03\uBC72\x03\uBC7E\x03\uBC82\x03\uBC8A\x03\uBC92'+'\x03\uBC9B\x03\uBC9F\x03\uBCA0\x03\uBCA2\x03\uBCA5\x03\uD167\x03\uD16B'+'\x03\uD16F\x03\uD184\x03\uD187\x03\uD18D\x03\uD1AC\x03\uD1AF\x03\uD244'+'\x03\uD246\x03\uD402\x03\uD456\x03\uD458\x03\uD49E\x03\uD4A0\x03\uD4A1'+'\x03\uD4A4\x03\uD4A4\x03\uD4A7\x03\uD4A8\x03\uD4AB\x03\uD4AE\x03\uD4B0'+'\x03\uD4BB\x03\uD4BD\x03\uD4BD\x03\uD4BF\x03\uD4C5\x03\uD4C7\x03\uD507'+'\x03\uD509\x03\uD50C\x03\uD50F\x03\uD516\x03\uD518\x03\uD51E\x03\uD520'+'\x03\uD53B\x03\uD53D\x03\uD540\x03\uD542\x03\uD546\x03\uD548\x03\uD548'+'\x03\uD54C\x03\uD552\x03\uD554\x03\uD6A7\x03\uD6AA\x03\uD6C2\x03\uD6C4'+'\x03\uD6DC\x03\uD6DE\x03\uD6FC\x03\uD6FE\x03\uD716\x03\uD718\x03\uD736'+'\x03\uD738\x03\uD750\x03\uD752\x03\uD770\x03\uD772\x03\uD78A\x03\uD78C'+'\x03\uD7AA\x03\uD7AC\x03\uD7C4\x03\uD7C6\x03\uD7CD\x03\uD7D0\x03\uD801'+'\x03\uDA02\x03\uDA38\x03\uDA3D\x03\uDA6E\x03\uDA77\x03\uDA77\x03\uDA86'+'\x03\uDA86\x03\uDA9D\x03\uDAA1\x03\uDAA3\x03\uDAB1\x03\uE002\x03\uE008'+'\x03\uE00A\x03\uE01A\x03\uE01D\x03\uE023\x03\uE025\x03\uE026\x03\uE028'+'\x03\uE02C\x03\uE802\x03\uE8C6\x03\uE8D2\x03\uE8D8\x03\uE902\x03\uE94C'+'\x03\uE952\x03\uE95B\x03\uEE02\x03\uEE05\x03\uEE07\x03\uEE21\x03\uEE23'+'\x03\uEE24\x03\uEE26\x03\uEE26\x03\uEE29\x03\uEE29\x03\uEE2B\x03\uEE34'+'\x03\uEE36\x03\uEE39\x03\uEE3B\x03\uEE3B\x03\uEE3D\x03\uEE3D\x03\uEE44'+'\x03\uEE44\x03\uEE49\x03\uEE49\x03\uEE4B\x03\uEE4B\x03\uEE4D\x03\uEE4D'+'\x03\uEE4F\x03\uEE51\x03\uEE53\x03\uEE54\x03\uEE56\x03\uEE56\x03\uEE59'+'\x03\uEE59\x03\uEE5B\x03\uEE5B\x03\uEE5D\x03\uEE5D\x03\uEE5F\x03\uEE5F'+'\x03\uEE61\x03\uEE61\x03\uEE63\x03\uEE64\x03\uEE66\x03\uEE66\x03\uEE69'+'\x03\uEE6C\x03\uEE6E\x03\uEE74\x03\uEE76\x03\uEE79\x03\uEE7B\x03\uEE7E'+'\x03\uEE80\x03\uEE80\x03\uEE82\x03\uEE8B\x03\uEE8D\x03\uEE9D\x03\uEEA3'+'\x03\uEEA5\x03\uEEA7\x03\uEEAB\x03\uEEAD\x03\uEEBD\x03\x02\x04\uA6D8\x04'+'\uA702\x04\uB736\x04\uB742\x04\uB81F\x04\uB822\x04\uCEA3\x04\uF802\x04'+'\uFA1F\x04\x03\x10\x03\x10"\x10\x81\x10\u0102\x10\u01F1\x10\u0240\x02'+"C\x02\\\x02c\x02|\x02\xAC\x02\xAC\x02\xB7\x02\xB7\x02\xBC\x02\xBC\x02"+'\xC2\x02\xD8\x02\xDA\x02\xF8\x02\xFA\x02\u02C3\x02\u02C8\x02\u02D3\x02'+'\u02E2\x02\u02E6\x02\u02EE\x02\u02EE\x02\u02F0\x02\u02F0\x02\u0372\x02'+'\u0376\x02\u0378\x02\u0379\x02\u037C\x02\u037F\x02\u0381\x02\u0381\x02'+'\u0388\x02\u0388\x02\u038A\x02\u038C\x02\u038E\x02\u038E\x02\u0390\x02'+'\u03A3\x02\u03A5\x02\u03F7\x02\u03F9\x02\u0483\x02\u048C\x02\u0531\x02'+'\u0533\x02\u0558\x02\u055B\x02\u055B\x02\u0563\x02\u0589\x02\u05D2\x02'+'\u05EC\x02\u05F2\x02\u05F4\x02\u0622\x02\u064C\x02\u0670\x02\u0671\x02'+'\u0673\x02\u06D5\x02\u06D7\x02\u06D7\x02\u06E7\x02\u06E8\x02\u06F0\x02'+'\u06F1\x02\u06FC\x02\u06FE\x02\u0701\x02\u0701\x02\u0712\x02\u0712\x02'+'\u0714\x02\u0731\x02\u074F\x02\u07A7\x02\u07B3\x02\u07B3\x02\u07CC\x02'+'\u07EC\x02\u07F6\x02\u07F7\x02\u07FC\x02\u07FC\x02\u0802\x02\u0817\x02'+'\u081C\x02\u081C\x02\u0826\x02\u0826\x02\u082A\x02\u082A\x02\u0842\x02'+'\u085A\x02\u08A2\x02\u08B6\x02\u08B8\x02\u08BF\x02\u0906\x02\u093B\x02'+'\u093F\x02\u093F\x02\u0952\x02\u0952\x02\u095A\x02\u0963\x02\u0973\x02'+'\u0982\x02\u0987\x02\u098E\x02\u0991\x02\u0992\x02\u0995\x02\u09AA\x02'+'\u09AC\x02\u09B2\x02\u09B4\x02\u09B4\x02\u09B8\x02\u09BB\x02\u09BF\x02'+'\u09BF\x02\u09D0\x02\u09D0\x02\u09DE\x02\u09DF\x02\u09E1\x02\u09E3\x02'+'\u09F2\x02\u09F3\x02\u0A07\x02\u0A0C\x02\u0A11\x02\u0A12\x02\u0A15\x02'+'\u0A2A\x02\u0A2C\x02\u0A32\x02\u0A34\x02\u0A35\x02\u0A37\x02\u0A38\x02'+'\u0A3A\x02\u0A3B\x02\u0A5B\x02\u0A5E\x02\u0A60\x02\u0A60\x02\u0A74\x02'+'\u0A76\x02\u0A87\x02\u0A8F\x02\u0A91\x02\u0A93\x02\u0A95\x02\u0AAA\x02'+'\u0AAC\x02\u0AB2\x02\u0AB4\x02\u0AB5\x02\u0AB7\x02\u0ABB\x02\u0ABF\x02'+'\u0ABF\x02\u0AD2\x02\u0AD2\x02\u0AE2\x02\u0AE3\x02\u0AFB\x02\u0AFB\x02'+'\u0B07\x02\u0B0E\x02\u0B11\x02\u0B12\x02\u0B15\x02\u0B2A\x02\u0B2C\x02'+'\u0B32\x02\u0B34\x02\u0B35\x02\u0B37\x02\u0B3B\x02\u0B3F\x02\u0B3F\x02'+'\u0B5E\x02\u0B5F\x02\u0B61\x02\u0B63\x02\u0B73\x02\u0B73\x02\u0B85\x02'+'\u0B85\x02\u0B87\x02\u0B8C\x02\u0B90\x02\u0B92\x02\u0B94\x02\u0B97\x02'+'\u0B9B\x02\u0B9C\x02\u0B9E\x02\u0B9E\x02\u0BA0\x02\u0BA1\x02\u0BA5\x02'+'\u0BA6\x02\u0BAA\x02\u0BAC\x02\u0BB0\x02\u0BBB\x02\u0BD2\x02\u0BD2\x02'+'\u0C07\x02\u0C0E\x02\u0C10\x02\u0C12\x02\u0C14\x02\u0C2A\x02\u0C2C\x02'+'\u0C3B\x02\u0C3F\x02\u0C3F\x02\u0C5A\x02\u0C5C\x02\u0C62\x02\u0C63\x02'+'\u0C82\x02\u0C82\x02\u0C87\x02\u0C8E\x02\u0C90\x02\u0C92\x02\u0C94\x02'+'\u0CAA\x02\u0CAC\x02\u0CB5\x02\u0CB7\x02\u0CBB\x02\u0CBF\x02\u0CBF\x02'+'\u0CE0\x02\u0CE0\x02\u0CE2\x02\u0CE3\x02\u0CF3\x02\u0CF4\x02\u0D07\x02'+'\u0D0E\x02\u0D10\x02\u0D12\x02\u0D14\x02\u0D3C\x02\u0D3F\x02\u0D3F\x02'+'\u0D50\x02\u0D50\x02\u0D56\x02\u0D58\x02\u0D61\x02\u0D63\x02\u0D7C\x02'+'\u0D81\x02\u0D87\x02\u0D98\x02\u0D9C\x02\u0DB3\x02\u0DB5\x02\u0DBD\x02'+'\u0DBF\x02\u0DBF\x02\u0DC2\x02\u0DC8\x02\u0E03\x02\u0E32\x02\u0E34\x02'+'\u0E35\x02\u0E42\x02\u0E48\x02\u0E83\x02\u0E84\x02\u0E86\x02\u0E86\x02'+'\u0E89\x02\u0E8A\x02\u0E8C\x02\u0E8C\x02\u0E8F\x02\u0E8F\x02\u0E96\x02'+'\u0E99\x02\u0E9B\x02\u0EA1\x02\u0EA3\x02\u0EA5\x02\u0EA7\x02\u0EA7\x02'+'\u0EA9\x02\u0EA9\x02\u0EAC\x02\u0EAD\x02\u0EAF\x02\u0EB2\x02\u0EB4\x02'+'\u0EB5\x02\u0EBF\x02\u0EBF\x02\u0EC2\x02\u0EC6\x02\u0EC8\x02\u0EC8\x02'+'\u0EDE\x02\u0EE1\x02\u0F02\x02\u0F02\x02\u0F42\x02\u0F49\x02\u0F4B\x02'+'\u0F6E\x02\u0F8A\x02\u0F8E\x02\u1002\x02\u102C\x02\u1041\x02\u1041\x02'+'\u1052\x02\u1057\x02\u105C\x02\u105F\x02\u1063\x02\u1063\x02\u1067\x02'+'\u1068\x02\u1070\x02\u1072\x02\u1077\x02\u1083\x02\u1090\x02\u1090\x02'+'\u10A2\x02\u10C7\x02\u10C9\x02\u10C9\x02\u10CF\x02\u10CF\x02\u10D2\x02'+'\u10FC\x02\u10FE\x02\u124A\x02\u124C\x02\u124F\x02\u1252\x02\u1258\x02'+'\u125A\x02\u125A\x02\u125C\x02\u125F\x02\u1262\x02\u128A\x02\u128C\x02'+'\u128F\x02\u1292\x02\u12B2\x02\u12B4\x02\u12B7\x02\u12BA\x02\u12C0\x02'+'\u12C2\x02\u12C2\x02\u12C4\x02\u12C7\x02\u12CA\x02\u12D8\x02\u12DA\x02'+'\u1312\x02\u1314\x02\u1317\x02\u131A\x02\u135C\x02\u1382\x02\u1391\x02'+'\u13A2\x02\u13F7\x02\u13FA\x02\u13FF\x02\u1403\x02\u166E\x02\u1671\x02'+'\u1681\x02\u1683\x02\u169C\x02\u16A2\x02\u16EC\x02\u16F0\x02\u16FA\x02'+'\u1702\x02\u170E\x02\u1710\x02\u1713\x02\u1722\x02\u1733\x02\u1742\x02'+'\u1753\x02\u1762\x02\u176E\x02\u1770\x02\u1772\x02\u1782\x02\u17B5\x02'+'\u17D9\x02\u17D9\x02\u17DE\x02\u17DE\x02\u1822\x02\u1879\x02\u1882\x02'+'\u1886\x02\u1889\x02\u18AA\x02\u18AC\x02\u18AC\x02\u18B2\x02\u18F7\x02'+'\u1902\x02\u1920\x02\u1952\x02\u196F\x02\u1972\x02\u1976\x02\u1982\x02'+'\u19AD\x02\u19B2\x02\u19CB\x02\u1A02\x02\u1A18\x02\u1A22\x02\u1A56\x02'+'\u1AA9\x02\u1AA9\x02\u1B07\x02\u1B35\x02\u1B47\x02\u1B4D\x02\u1B85\x02'+'\u1BA2\x02\u1BB0\x02\u1BB1\x02\u1BBC\x02\u1BE7\x02\u1C02\x02\u1C25\x02'+'\u1C4F\x02\u1C51\x02\u1C5C\x02\u1C7F\x02\u1C82\x02\u1C8A\x02\u1CEB\x02'+'\u1CEE\x02\u1CF0\x02\u1CF3\x02\u1CF7\x02\u1CF8\x02\u1D02\x02\u1DC1\x02'+'\u1E02\x02\u1F17\x02\u1F1A\x02\u1F1F\x02\u1F22\x02\u1F47\x02\u1F4A\x02'+'\u1F4F\x02\u1F52\x02\u1F59\x02\u1F5B\x02\u1F5B\x02\u1F5D\x02\u1F5D\x02'+'\u1F5F\x02\u1F5F\x02\u1F61\x02\u1F7F\x02\u1F82\x02\u1FB6\x02\u1FB8\x02'+'\u1FBE\x02\u1FC0\x02\u1FC0\x02\u1FC4\x02\u1FC6\x02\u1FC8\x02\u1FCE\x02'+'\u1FD2\x02\u1FD5\x02\u1FD8\x02\u1FDD\x02\u1FE2\x02\u1FEE\x02\u1FF4\x02'+'\u1FF6\x02\u1FF8\x02\u1FFE\x02\u2073\x02\u2073\x02\u2081\x02\u2081\x02'+'\u2092\x02\u209E\x02\u2104\x02\u2104\x02\u2109\x02\u2109\x02\u210C\x02'+'\u2115\x02\u2117\x02\u2117\x02\u211B\x02\u211F\x02\u2126\x02\u2126\x02'+'\u2128\x02\u2128\x02\u212A\x02\u212A\x02\u212C\x02\u212F\x02\u2131\x02'+'\u213B\x02\u213E\x02\u2141\x02\u2147\x02\u214B\x02\u2150\x02\u2150\x02'+'\u2162\x02\u218A\x02\u2C02\x02\u2C30\x02\u2C32\x02\u2C60\x02\u2C62\x02'+'\u2CE6\x02\u2CED\x02\u2CF0\x02\u2CF4\x02\u2CF5\x02\u2D02\x02\u2D27\x02'+'\u2D29\x02\u2D29\x02\u2D2F\x02\u2D2F\x02\u2D32\x02\u2D69\x02\u2D71\x02'+'\u2D71\x02\u2D82\x02\u2D98\x02\u2DA2\x02\u2DA8\x02\u2DAA\x02\u2DB0\x02'+'\u2DB2\x02\u2DB8\x02\u2DBA\x02\u2DC0\x02\u2DC2\x02\u2DC8\x02\u2DCA\x02'+'\u2DD0\x02\u2DD2\x02\u2DD8\x02\u2DDA\x02\u2DE0\x02\u2E31\x02\u2E31\x02'+'\u3007\x02\u3009\x02\u3023\x02\u302B\x02\u3033\x02\u3037\x02\u303A\x02'+'\u303E\x02\u3043\x02\u3098\x02\u309F\x02\u30A1\x02\u30A3\x02\u30FC\x02'+'\u30FE\x02\u3101\x02\u3107\x02\u312F\x02\u3133\x02\u3190\x02\u31A2\x02'+'\u31BC\x02\u31F2\x02\u3201\x02\u3402\x02\u4DB7\x02\u4E02\x02\u9FD7\x02'+'\uA002\x02\uA48E\x02\uA4D2\x02\uA4FF\x02\uA502\x02\uA60E\x02\uA612\x02'+'\uA621\x02\uA62C\x02\uA62D\x02\uA642\x02\uA670\x02\uA681\x02\uA69F\x02'+'\uA6A2\x02\uA6F1\x02\uA719\x02\uA721\x02\uA724\x02\uA78A\x02\uA78D\x02'+'\uA7B0\x02\uA7B2\x02\uA7B9\x02\uA7F9\x02\uA803\x02\uA805\x02\uA807\x02'+'\uA809\x02\uA80C\x02\uA80E\x02\uA824\x02\uA842\x02\uA875\x02\uA884\x02'+'\uA8B5\x02\uA8F4\x02\uA8F9\x02\uA8FD\x02\uA8FD\x02\uA8FF\x02\uA8FF\x02'+'\uA90C\x02\uA927\x02\uA932\x02\uA948\x02\uA962\x02\uA97E\x02\uA986\x02'+'\uA9B4\x02\uA9D1\x02\uA9D1\x02\uA9E2\x02\uA9E6\x02\uA9E8\x02\uA9F1\x02'+'\uA9FC\x02\uAA00\x02\uAA02\x02\uAA2A\x02\uAA42\x02\uAA44\x02\uAA46\x02'+'\uAA4D\x02\uAA62\x02\uAA78\x02\uAA7C\x02\uAA7C\x02\uAA80\x02\uAAB1\x02'+'\uAAB3\x02\uAAB3\x02\uAAB7\x02\uAAB8\x02\uAABB\x02\uAABF\x02\uAAC2\x02'+'\uAAC2\x02\uAAC4\x02\uAAC4\x02\uAADD\x02\uAADF\x02\uAAE2\x02\uAAEC\x02'+'\uAAF4\x02\uAAF6\x02\uAB03\x02\uAB08\x02\uAB0B\x02\uAB10\x02\uAB13\x02'+'\uAB18\x02\uAB22\x02\uAB28\x02\uAB2A\x02\uAB30\x02\uAB32\x02\uAB5C\x02'+'\uAB5E\x02\uAB67\x02\uAB72\x02\uABE4\x02\uAC02\x02\uD7A5\x02\uD7B2\x02'+'\uD7C8\x02\uD7CD\x02\uD7FD\x02\uF902\x02\uFA6F\x02\uFA72\x02\uFADB\x02'+'\uFB02\x02\uFB08\x02\uFB15\x02\uFB19\x02\uFB1F\x02\uFB1F\x02\uFB21\x02'+'\uFB2A\x02\uFB2C\x02\uFB38\x02\uFB3A\x02\uFB3E\x02\uFB40\x02\uFB40\x02'+'\uFB42\x02\uFB43\x02\uFB45\x02\uFB46\x02\uFB48\x02\uFBB3\x02\uFBD5\x02'+'\uFD3F\x02\uFD52\x02\uFD91\x02\uFD94\x02\uFDC9\x02\uFDF2\x02\uFDFD\x02'+'\uFE72\x02\uFE76\x02\uFE78\x02\uFEFE\x02\uFF23\x02\uFF3C\x02\uFF43\x02'+'\uFF5C\x02\uFF68\x02\uFFC0\x02\uFFC4\x02\uFFC9\x02\uFFCC\x02\uFFD1\x02'+'\uFFD4\x02\uFFD9\x02\uFFDC\x02\uFFDE\x02\x02\x03\r\x03\x0F\x03(\x03*\x03'+'<\x03>\x03?\x03A\x03O\x03R\x03_\x03\x82\x03\xFC\x03\u0142\x03\u0176\x03'+'\u0282\x03\u029E\x03\u02A2\x03\u02D2\x03\u0302\x03\u0321\x03\u0332\x03'+'\u034C\x03\u0352\x03\u0377\x03\u0382\x03\u039F\x03\u03A2\x03\u03C5\x03'+'\u03CA\x03\u03D1\x03\u03D3\x03\u03D7\x03\u0402\x03\u049F\x03\u04B2\x03'+'\u04D5\x03\u04DA\x03\u04FD\x03\u0502\x03\u0529\x03\u0532\x03\u0565\x03'+'\u0602\x03\u0738\x03\u0742\x03\u0757\x03\u0762\x03\u0769\x03\u0802\x03'+'\u0807\x03\u080A\x03\u080A\x03\u080C\x03\u0837\x03\u0839\x03\u083A\x03'+'\u083E\x03\u083E\x03\u0841\x03\u0857\x03\u0862\x03\u0878\x03\u0882\x03'+'\u08A0\x03\u08E2\x03\u08F4\x03\u08F6\x03\u08F7\x03\u0902\x03\u0917\x03'+'\u0922\x03\u093B\x03\u0982\x03\u09B9\x03\u09C0\x03\u09C1\x03\u0A02\x03'+'\u0A02\x03\u0A12\x03\u0A15\x03\u0A17\x03\u0A19\x03\u0A1B\x03\u0A35\x03'+'\u0A62\x03\u0A7E\x03\u0A82\x03\u0A9E\x03\u0AC2\x03\u0AC9\x03\u0ACB\x03'+'\u0AE6\x03\u0B02\x03\u0B37\x03\u0B42\x03\u0B57\x03\u0B62\x03\u0B74\x03'+'\u0B82\x03\u0B93\x03\u0C02\x03\u0C4A\x03\u0C82\x03\u0CB4\x03\u0CC2\x03'+'\u0CF4\x03\u1005\x03\u1039\x03\u1085\x03\u10B1\x03\u10D2\x03\u10EA\x03'+'\u1105\x03\u1128\x03\u1152\x03\u1174\x03\u1178\x03\u1178\x03\u1185\x03'+'\u11B4\x03\u11C3\x03\u11C6\x03\u11DC\x03\u11DC\x03\u11DE\x03\u11DE\x03'+'\u1202\x03\u1213\x03\u1215\x03\u122D\x03\u1282\x03\u1288\x03\u128A\x03'+'\u128A\x03\u128C\x03\u128F\x03\u1291\x03\u129F\x03\u12A1\x03\u12AA\x03'+'\u12B2\x03\u12E0\x03\u1307\x03\u130E\x03\u1311\x03\u1312\x03\u1315\x03'+'\u132A\x03\u132C\x03\u1332\x03\u1334\x03\u1335\x03\u1337\x03\u133B\x03'+'\u133F\x03\u133F\x03\u1352\x03\u1352\x03\u135F\x03\u1363\x03\u1402\x03'+'\u1436\x03\u1449\x03\u144C\x03\u1482\x03\u14B1\x03\u14C6\x03\u14C7\x03'+'\u14C9\x03\u14C9\x03\u1582\x03\u15B0\x03\u15DA\x03\u15DD\x03\u1602\x03'+'\u1631\x03\u1646\x03\u1646\x03\u1682\x03\u16AC\x03\u1702\x03\u171B\x03'+'\u18A2\x03\u18E1\x03\u1901\x03\u1901\x03\u1AC2\x03\u1AFA\x03\u1C02\x03'+'\u1C0A\x03\u1C0C\x03\u1C30\x03\u1C42\x03\u1C42\x03\u1C74\x03\u1C91\x03'+'\u2002\x03\u239B\x03\u2402\x03\u2470\x03\u2482\x03\u2545\x03\u3002\x03'+'\u3430\x03\u4402\x03\u4648\x03\u6802\x03\u6A3A\x03\u6A42\x03\u6A60\x03'+'\u6AD2\x03\u6AEF\x03\u6B02\x03\u6B31\x03\u6B42\x03\u6B45\x03\u6B65\x03'+'\u6B79\x03\u6B7F\x03\u6B91\x03\u6F02\x03\u6F46\x03\u6F52\x03\u6F52\x03'+'\u6F95\x03\u6FA1\x03\u6FE2\x03\u6FE2\x03\u7002\x03\u87EE\x03\u8802\x03'+'\u8AF4\x03\uB002\x03\uB003\x03\uBC02\x03\uBC6C\x03\uBC72\x03\uBC7E\x03'+'\uBC82\x03\uBC8A\x03\uBC92\x03\uBC9B\x03\uD402\x03\uD456\x03\uD458\x03'+'\uD49E\x03\uD4A0\x03\uD4A1\x03\uD4A4\x03\uD4A4\x03\uD4A7\x03\uD4A8\x03'+'\uD4AB\x03\uD4AE\x03\uD4B0\x03\uD4BB\x03\uD4BD\x03\uD4BD\x03\uD4BF\x03'+'\uD4C5\x03\uD4C7\x03\uD507\x03\uD509\x03\uD50C\x03\uD50F\x03\uD516\x03'+'\uD518\x03\uD51E\x03\uD520\x03\uD53B\x03\uD53D\x03\uD540\x03\uD542\x03'+'\uD546\x03\uD548\x03\uD548';XPathLexer._serializedATNSegment1='\x03\uD54C\x03\uD552\x03\uD554\x03\uD6A7\x03\uD6AA\x03\uD6C2\x03\uD6C4'+'\x03\uD6DC\x03\uD6DE\x03\uD6FC\x03\uD6FE\x03\uD716\x03\uD718\x03\uD736'+'\x03\uD738\x03\uD750\x03\uD752\x03\uD770\x03\uD772\x03\uD78A\x03\uD78C'+'\x03\uD7AA\x03\uD7AC\x03\uD7C4\x03\uD7C6\x03\uD7CD\x03\uE802\x03\uE8C6'+'\x03\uE902\x03\uE945\x03\uEE02\x03\uEE05\x03\uEE07\x03\uEE21\x03\uEE23'+'\x03\uEE24\x03\uEE26\x03\uEE26\x03\uEE29\x03\uEE29\x03\uEE2B\x03\uEE34'+'\x03\uEE36\x03\uEE39\x03\uEE3B\x03\uEE3B\x03\uEE3D\x03\uEE3D\x03\uEE44'+'\x03\uEE44\x03\uEE49\x03\uEE49\x03\uEE4B\x03\uEE4B\x03\uEE4D\x03\uEE4D'+'\x03\uEE4F\x03\uEE51\x03\uEE53\x03\uEE54\x03\uEE56\x03\uEE56\x03\uEE59'+'\x03\uEE59\x03\uEE5B\x03\uEE5B\x03\uEE5D\x03\uEE5D\x03\uEE5F\x03\uEE5F'+'\x03\uEE61\x03\uEE61\x03\uEE63\x03\uEE64\x03\uEE66\x03\uEE66\x03\uEE69'+'\x03\uEE6C\x03\uEE6E\x03\uEE74\x03\uEE76\x03\uEE79\x03\uEE7B\x03\uEE7E'+'\x03\uEE80\x03\uEE80\x03\uEE82\x03\uEE8B\x03\uEE8D\x03\uEE9D\x03\uEEA3'+'\x03\uEEA5\x03\uEEA7\x03\uEEAB\x03\uEEAD\x03\uEEBD\x03\x02\x04\uA6D8\x04'+'\uA702\x04\uB736\x04\uB742\x04\uB81F\x04\uB822\x04\uCEA3\x04\uF802\x04'+'\uFA1F\x041\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03'+"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\x11\x03\x02"+"\x02\x02\x03\x13\x03\x02\x02\x02\x05\x16\x03\x02\x02\x02\x07\x18\x03\x02"+"\x02\x02\t\x1A\x03\x02\x02\x02\v\x1C\x03\x02\x02\x02\r%\x03\x02\x02\x02"+"\x0F\'\x03\x02\x02\x02\x11)\x03\x02\x02\x02\x13\x14\x071\x02\x02\x14\x15"+"\x071\x02\x02\x15\x04\x03\x02\x02\x02\x16\x17\x071\x02\x02\x17\x06\x03"+"\x02\x02\x02\x18\x19\x07,\x02\x02\x19\b\x03\x02\x02\x02\x1A\x1B\x07#\x02"+"\x02\x1B\n\x03\x02\x02\x02\x1C \x05\x0F\b\x02\x1D\x1F\x05\r\x07\x02\x1E"+"\x1D\x03\x02\x02\x02\x1F\"\x03\x02\x02\x02 \x1E\x03\x02\x02\x02 !\x03"+"\x02\x02\x02!#\x03\x02\x02\x02\" \x03\x02\x02\x02#$\b\x06\x02\x02$\f\x03"+"\x02\x02\x02%&\t\x02\x02\x02&\x0E\x03\x02\x02\x02\'(\t\x03\x02\x02(\x10"+"\x03\x02\x02\x02)-\x07)\x02\x02*,\v\x02\x02\x02+*\x03\x02\x02\x02,/\x03"+"\x02\x02\x02-.\x03\x02\x02\x02-+\x03\x02\x02\x02.0\x03\x02\x02\x02/-\x03"+"\x02\x02\x0201\x07)\x02\x021\x12\x03\x02\x02\x02\x05\x02 -\x03\x03\x06"+"\x02";XPathLexer._serializedATN=Utils.join([XPathLexer._serializedATNSegment0,XPathLexer._serializedATNSegment1],"");exports.XPathLexer=XPathLexer;},{"../../Lexer":232,"../../VocabularyImpl":250,"../../atn/ATNDeserializer":255,"../../atn/LexerATNSimulator":276,"../../misc/Utils":337}],357:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../../Decorators");var XPathLexerErrorListener=function(){function XPathLexerErrorListener(){classCallCheck(this,XPathLexerErrorListener);}createClass(XPathLexerErrorListener,[{key:'syntaxError',value:function syntaxError(recognizer,offendingSymbol,line,charPositionInLine,msg,e){// intentionally empty
	}}]);return XPathLexerErrorListener;}();__decorate([Decorators_1.Override],XPathLexerErrorListener.prototype,"syntaxError",null);exports.XPathLexerErrorListener=XPathLexerErrorListener;},{"../../Decorators":224}],358:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var Decorators_1=require("../../Decorators");var Trees_1=require("../Trees");var XPathElement_1=require("./XPathElement");/**
	 * Either `ID` at start of path or `...//ID` in middle of path.
	 */var XPathRuleAnywhereElement=function(_XPathElement_1$XPath){inherits(XPathRuleAnywhereElement,_XPathElement_1$XPath);function XPathRuleAnywhereElement(ruleName,ruleIndex){classCallCheck(this,XPathRuleAnywhereElement);var _this308=possibleConstructorReturn(this,(XPathRuleAnywhereElement.__proto__||Object.getPrototypeOf(XPathRuleAnywhereElement)).call(this,ruleName));_this308.ruleIndex=ruleIndex;return _this308;}createClass(XPathRuleAnywhereElement,[{key:'evaluate',value:function evaluate(t){return Trees_1.Trees.findAllRuleNodes(t,this.ruleIndex);}}]);return XPathRuleAnywhereElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathRuleAnywhereElement.prototype,"evaluate",null);exports.XPathRuleAnywhereElement=XPathRuleAnywhereElement;},{"../../Decorators":224,"../Trees":344,"./XPathElement":355}],359:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var ParserRuleContext_1=require("../../ParserRuleContext");var Decorators_1=require("../../Decorators");var Trees_1=require("../Trees");var XPathElement_1=require("./XPathElement");var XPathRuleElement=function(_XPathElement_1$XPath2){inherits(XPathRuleElement,_XPathElement_1$XPath2);function XPathRuleElement(ruleName,ruleIndex){classCallCheck(this,XPathRuleElement);var _this309=possibleConstructorReturn(this,(XPathRuleElement.__proto__||Object.getPrototypeOf(XPathRuleElement)).call(this,ruleName));_this309.ruleIndex=ruleIndex;return _this309;}createClass(XPathRuleElement,[{key:'evaluate',value:function evaluate(t){// return all children of t that match nodeName
	var nodes=[];var _iteratorNormalCompletion192=true;var _didIteratorError192=false;var _iteratorError192=undefined;try{for(var _iterator192=Trees_1.Trees.getChildren(t)[Symbol.iterator](),_step192;!(_iteratorNormalCompletion192=(_step192=_iterator192.next()).done);_iteratorNormalCompletion192=true){var c=_step192.value;if(c instanceof ParserRuleContext_1.ParserRuleContext){if(c.ruleIndex===this.ruleIndex&&!this.invert||c.ruleIndex!==this.ruleIndex&&this.invert){nodes.push(c);}}}}catch(err){_didIteratorError192=true;_iteratorError192=err;}finally{try{if(!_iteratorNormalCompletion192&&_iterator192.return){_iterator192.return();}}finally{if(_didIteratorError192){throw _iteratorError192;}}}return nodes;}}]);return XPathRuleElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathRuleElement.prototype,"evaluate",null);exports.XPathRuleElement=XPathRuleElement;},{"../../Decorators":224,"../../ParserRuleContext":239,"../Trees":344,"./XPathElement":355}],360:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var Trees_1=require("../Trees");var XPathElement_1=require("./XPathElement");var XPathTokenAnywhereElement=function(_XPathElement_1$XPath3){inherits(XPathTokenAnywhereElement,_XPathElement_1$XPath3);function XPathTokenAnywhereElement(tokenName,tokenType){classCallCheck(this,XPathTokenAnywhereElement);var _this310=possibleConstructorReturn(this,(XPathTokenAnywhereElement.__proto__||Object.getPrototypeOf(XPathTokenAnywhereElement)).call(this,tokenName));_this310.tokenType=tokenType;return _this310;}createClass(XPathTokenAnywhereElement,[{key:'evaluate',value:function evaluate(t){return Trees_1.Trees.findAllTokenNodes(t,this.tokenType);}}]);return XPathTokenAnywhereElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathTokenAnywhereElement.prototype,"evaluate",null);exports.XPathTokenAnywhereElement=XPathTokenAnywhereElement;},{"../../Decorators":224,"../Trees":344,"./XPathElement":355}],361:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var TerminalNode_1=require("../TerminalNode");var Trees_1=require("../Trees");var XPathElement_1=require("./XPathElement");var XPathTokenElement=function(_XPathElement_1$XPath4){inherits(XPathTokenElement,_XPathElement_1$XPath4);function XPathTokenElement(tokenName,tokenType){classCallCheck(this,XPathTokenElement);var _this311=possibleConstructorReturn(this,(XPathTokenElement.__proto__||Object.getPrototypeOf(XPathTokenElement)).call(this,tokenName));_this311.tokenType=tokenType;return _this311;}createClass(XPathTokenElement,[{key:'evaluate',value:function evaluate(t){// return all children of t that match nodeName
	var nodes=[];var _iteratorNormalCompletion193=true;var _didIteratorError193=false;var _iteratorError193=undefined;try{for(var _iterator193=Trees_1.Trees.getChildren(t)[Symbol.iterator](),_step193;!(_iteratorNormalCompletion193=(_step193=_iterator193.next()).done);_iteratorNormalCompletion193=true){var c=_step193.value;if(c instanceof TerminalNode_1.TerminalNode){if(c.symbol.type===this.tokenType&&!this.invert||c.symbol.type!==this.tokenType&&this.invert){nodes.push(c);}}}}catch(err){_didIteratorError193=true;_iteratorError193=err;}finally{try{if(!_iteratorNormalCompletion193&&_iterator193.return){_iterator193.return();}}finally{if(_didIteratorError193){throw _iteratorError193;}}}return nodes;}}]);return XPathTokenElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathTokenElement.prototype,"evaluate",null);exports.XPathTokenElement=XPathTokenElement;},{"../../Decorators":224,"../TerminalNode":343,"../Trees":344,"./XPathElement":355}],362:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var Trees_1=require("../Trees");var XPath_1=require("./XPath");var XPathElement_1=require("./XPathElement");var XPathWildcardAnywhereElement=function(_XPathElement_1$XPath5){inherits(XPathWildcardAnywhereElement,_XPathElement_1$XPath5);function XPathWildcardAnywhereElement(){classCallCheck(this,XPathWildcardAnywhereElement);return possibleConstructorReturn(this,(XPathWildcardAnywhereElement.__proto__||Object.getPrototypeOf(XPathWildcardAnywhereElement)).call(this,XPath_1.XPath.WILDCARD));}createClass(XPathWildcardAnywhereElement,[{key:'evaluate',value:function evaluate(t){if(this.invert){// !* is weird but valid (empty)
	return [];}return Trees_1.Trees.getDescendants(t);}}]);return XPathWildcardAnywhereElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathWildcardAnywhereElement.prototype,"evaluate",null);exports.XPathWildcardAnywhereElement=XPathWildcardAnywhereElement;},{"../../Decorators":224,"../Trees":344,"./XPath":354,"./XPathElement":355}],363:[function(require,module,exports){/*!
	 * Copyright 2016 The ANTLR Project. All rights reserved.
	 * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.
	 */var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==='undefined'?'undefined':_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});// CONVERSTION complete, Burt Harris 10/14/2016
	var Decorators_1=require("../../Decorators");var Trees_1=require("../Trees");var XPath_1=require("./XPath");var XPathElement_1=require("./XPathElement");var XPathWildcardElement=function(_XPathElement_1$XPath6){inherits(XPathWildcardElement,_XPathElement_1$XPath6);function XPathWildcardElement(){classCallCheck(this,XPathWildcardElement);return possibleConstructorReturn(this,(XPathWildcardElement.__proto__||Object.getPrototypeOf(XPathWildcardElement)).call(this,XPath_1.XPath.WILDCARD));}createClass(XPathWildcardElement,[{key:'evaluate',value:function evaluate(t){var kids=[];if(this.invert){// !* is weird but valid (empty)
	return kids;}var _iteratorNormalCompletion194=true;var _didIteratorError194=false;var _iteratorError194=undefined;try{for(var _iterator194=Trees_1.Trees.getChildren(t)[Symbol.iterator](),_step194;!(_iteratorNormalCompletion194=(_step194=_iterator194.next()).done);_iteratorNormalCompletion194=true){var c=_step194.value;kids.push(c);}}catch(err){_didIteratorError194=true;_iteratorError194=err;}finally{try{if(!_iteratorNormalCompletion194&&_iterator194.return){_iterator194.return();}}finally{if(_didIteratorError194){throw _iteratorError194;}}}return kids;}}]);return XPathWildcardElement;}(XPathElement_1.XPathElement);__decorate([Decorators_1.Override],XPathWildcardElement.prototype,"evaluate",null);exports.XPathWildcardElement=XPathWildcardElement;},{"../../Decorators":224,"../Trees":344,"./XPath":354,"./XPathElement":355}],364:[function(require,module,exports){(function(global){(function(){var objectAssign=require('object-assign');// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
	// original notice:
	/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */function compare(a,b){if(a===b){return 0;}var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y){return -1;}if(y<x){return 1;}return 0;}function isBuffer(b){if(global.Buffer&&typeof global.Buffer.isBuffer==='function'){return global.Buffer.isBuffer(b);}return !!(b!=null&&b._isBuffer);}// based on node assert, original notice:
	// NB: The URL to the CommonJS spec is kept just for tradition.
	//     node-assert has evolved a lot since then, both in API and behavior.
	// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
	//
	// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
	//
	// Originally from narwhal.js (http://narwhaljs.org)
	// Copyright (c) 2009 Thomas Robinson <280north.com>
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the 'Software'), to
	// deal in the Software without restriction, including without limitation the
	// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
	// sell copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	var util=require('util/');var hasOwn=Object.prototype.hasOwnProperty;var pSlice=Array.prototype.slice;var functionsHaveNames=function(){return function foo(){}.name==='foo';}();function pToString(obj){return Object.prototype.toString.call(obj);}function isView(arrbuf){if(isBuffer(arrbuf)){return false;}if(typeof global.ArrayBuffer!=='function'){return false;}if(typeof ArrayBuffer.isView==='function'){return ArrayBuffer.isView(arrbuf);}if(!arrbuf){return false;}if(arrbuf instanceof DataView){return true;}if(arrbuf.buffer&&arrbuf.buffer instanceof ArrayBuffer){return true;}return false;}// 1. The assert module provides functions that throw
	// AssertionError's when particular conditions are not met. The
	// assert module must conform to the following interface.
	var assert=module.exports=ok;// 2. The AssertionError is defined in assert.
	// new assert.AssertionError({ message: message,
	//                             actual: actual,
	//                             expected: expected })
	var regex=/\s*function\s+([^\(\s]*)\s*/;// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
	function getName(func){if(!util.isFunction(func)){return;}if(functionsHaveNames){return func.name;}var str=func.toString();var match=str.match(regex);return match&&match[1];}assert.AssertionError=function AssertionError(options){this.name='AssertionError';this.actual=options.actual;this.expected=options.expected;this.operator=options.operator;if(options.message){this.message=options.message;this.generatedMessage=false;}else {this.message=getMessage(this);this.generatedMessage=true;}var stackStartFunction=options.stackStartFunction||fail;if(Error.captureStackTrace){Error.captureStackTrace(this,stackStartFunction);}else {// non v8 browsers so we can have a stacktrace
	var err=new Error();if(err.stack){var out=err.stack;// try to strip useless frames
	var fn_name=getName(stackStartFunction);var idx=out.indexOf('\n'+fn_name);if(idx>=0){// once we have located the function frame
	// we need to strip out everything before it (and its line)
	var next_line=out.indexOf('\n',idx+1);out=out.substring(next_line+1);}this.stack=out;}}};// assert.AssertionError instanceof Error
	util.inherits(assert.AssertionError,Error);function truncate(s,n){if(typeof s==='string'){return s.length<n?s:s.slice(0,n);}else {return s;}}function inspect(something){if(functionsHaveNames||!util.isFunction(something)){return util.inspect(something);}var rawname=getName(something);var name=rawname?': '+rawname:'';return '[Function'+name+']';}function getMessage(self){return truncate(inspect(self.actual),128)+' '+self.operator+' '+truncate(inspect(self.expected),128);}// At present only the three keys mentioned above are used and
	// understood by the spec. Implementations or sub modules can pass
	// other keys to the AssertionError's constructor - they will be
	// ignored.
	// 3. All of the following functions must throw an AssertionError
	// when a corresponding condition is not met, with a message that
	// may be undefined if not provided.  All assertion methods provide
	// both the actual and expected values to the assertion error for
	// display purposes.
	function fail(actual,expected,message,operator,stackStartFunction){throw new assert.AssertionError({message:message,actual:actual,expected:expected,operator:operator,stackStartFunction:stackStartFunction});}// EXTENSION! allows for well behaved errors defined elsewhere.
	assert.fail=fail;// 4. Pure assertion tests whether a value is truthy, as determined
	// by !!guard.
	// assert.ok(guard, message_opt);
	// This statement is equivalent to assert.equal(true, !!guard,
	// message_opt);. To test strictly for the value true, use
	// assert.strictEqual(true, guard, message_opt);.
	function ok(value,message){if(!value)fail(value,true,message,'==',assert.ok);}assert.ok=ok;// 5. The equality assertion tests shallow, coercive equality with
	// ==.
	// assert.equal(actual, expected, message_opt);
	assert.equal=function equal(actual,expected,message){if(actual!=expected)fail(actual,expected,message,'==',assert.equal);};// 6. The non-equality assertion tests for whether two objects are not equal
	// with != assert.notEqual(actual, expected, message_opt);
	assert.notEqual=function notEqual(actual,expected,message){if(actual==expected){fail(actual,expected,message,'!=',assert.notEqual);}};// 7. The equivalence assertion tests a deep equality relation.
	// assert.deepEqual(actual, expected, message_opt);
	assert.deepEqual=function deepEqual(actual,expected,message){if(!_deepEqual(actual,expected,false)){fail(actual,expected,message,'deepEqual',assert.deepEqual);}};assert.deepStrictEqual=function deepStrictEqual(actual,expected,message){if(!_deepEqual(actual,expected,true)){fail(actual,expected,message,'deepStrictEqual',assert.deepStrictEqual);}};function _deepEqual(actual,expected,strict,memos){// 7.1. All identical values are equivalent, as determined by ===.
	if(actual===expected){return true;}else if(isBuffer(actual)&&isBuffer(expected)){return compare(actual,expected)===0;// 7.2. If the expected value is a Date object, the actual value is
	// equivalent if it is also a Date object that refers to the same time.
	}else if(util.isDate(actual)&&util.isDate(expected)){return actual.getTime()===expected.getTime();// 7.3 If the expected value is a RegExp object, the actual value is
	// equivalent if it is also a RegExp object with the same source and
	// properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
	}else if(util.isRegExp(actual)&&util.isRegExp(expected)){return actual.source===expected.source&&actual.global===expected.global&&actual.multiline===expected.multiline&&actual.lastIndex===expected.lastIndex&&actual.ignoreCase===expected.ignoreCase;// 7.4. Other pairs that do not both pass typeof value == 'object',
	// equivalence is determined by ==.
	}else if((actual===null||(typeof actual==='undefined'?'undefined':_typeof(actual))!=='object')&&(expected===null||(typeof expected==='undefined'?'undefined':_typeof(expected))!=='object')){return strict?actual===expected:actual==expected;// If both values are instances of typed arrays, wrap their underlying
	// ArrayBuffers in a Buffer each to increase performance
	// This optimization requires the arrays to have the same type as checked by
	// Object.prototype.toString (aka pToString). Never perform binary
	// comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
	// bit patterns are not identical.
	}else if(isView(actual)&&isView(expected)&&pToString(actual)===pToString(expected)&&!(actual instanceof Float32Array||actual instanceof Float64Array)){return compare(new Uint8Array(actual.buffer),new Uint8Array(expected.buffer))===0;// 7.5 For all other Object pairs, including Array objects, equivalence is
	// determined by having the same number of owned properties (as verified
	// with Object.prototype.hasOwnProperty.call), the same set of keys
	// (although not necessarily the same order), equivalent values for every
	// corresponding key, and an identical 'prototype' property. Note: this
	// accounts for both named and indexed properties on Arrays.
	}else if(isBuffer(actual)!==isBuffer(expected)){return false;}else {memos=memos||{actual:[],expected:[]};var actualIndex=memos.actual.indexOf(actual);if(actualIndex!==-1){if(actualIndex===memos.expected.indexOf(expected)){return true;}}memos.actual.push(actual);memos.expected.push(expected);return objEquiv(actual,expected,strict,memos);}}function isArguments(object){return Object.prototype.toString.call(object)=='[object Arguments]';}function objEquiv(a,b,strict,actualVisitedObjects){if(a===null||a===undefined||b===null||b===undefined)return false;// if one is a primitive, the other must be same
	if(util.isPrimitive(a)||util.isPrimitive(b))return a===b;if(strict&&Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))return false;var aIsArgs=isArguments(a);var bIsArgs=isArguments(b);if(aIsArgs&&!bIsArgs||!aIsArgs&&bIsArgs)return false;if(aIsArgs){a=pSlice.call(a);b=pSlice.call(b);return _deepEqual(a,b,strict);}var ka=objectKeys(a);var kb=objectKeys(b);var key,i;// having the same number of owned properties (keys incorporates
	// hasOwnProperty)
	if(ka.length!==kb.length)return false;//the same set of keys (although not necessarily the same order),
	ka.sort();kb.sort();//~~~cheap key test
	for(i=ka.length-1;i>=0;i--){if(ka[i]!==kb[i])return false;}//equivalent values for every corresponding key, and
	//~~~possibly expensive deep test
	for(i=ka.length-1;i>=0;i--){key=ka[i];if(!_deepEqual(a[key],b[key],strict,actualVisitedObjects))return false;}return true;}// 8. The non-equivalence assertion tests for any deep inequality.
	// assert.notDeepEqual(actual, expected, message_opt);
	assert.notDeepEqual=function notDeepEqual(actual,expected,message){if(_deepEqual(actual,expected,false)){fail(actual,expected,message,'notDeepEqual',assert.notDeepEqual);}};assert.notDeepStrictEqual=notDeepStrictEqual;function notDeepStrictEqual(actual,expected,message){if(_deepEqual(actual,expected,true)){fail(actual,expected,message,'notDeepStrictEqual',notDeepStrictEqual);}}// 9. The strict equality assertion tests strict equality, as determined by ===.
	// assert.strictEqual(actual, expected, message_opt);
	assert.strictEqual=function strictEqual(actual,expected,message){if(actual!==expected){fail(actual,expected,message,'===',assert.strictEqual);}};// 10. The strict non-equality assertion tests for strict inequality, as
	// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);
	assert.notStrictEqual=function notStrictEqual(actual,expected,message){if(actual===expected){fail(actual,expected,message,'!==',assert.notStrictEqual);}};function expectedException(actual,expected){if(!actual||!expected){return false;}if(Object.prototype.toString.call(expected)=='[object RegExp]'){return expected.test(actual);}try{if(actual instanceof expected){return true;}}catch(e){// Ignore.  The instanceof check doesn't work for arrow functions.
	}if(Error.isPrototypeOf(expected)){return false;}return expected.call({},actual)===true;}function _tryBlock(block){var error;try{block();}catch(e){error=e;}return error;}function _throws(shouldThrow,block,expected,message){var actual;if(typeof block!=='function'){throw new TypeError('"block" argument must be a function');}if(typeof expected==='string'){message=expected;expected=null;}actual=_tryBlock(block);message=(expected&&expected.name?' ('+expected.name+').':'.')+(message?' '+message:'.');if(shouldThrow&&!actual){fail(actual,expected,'Missing expected exception'+message);}var userProvidedMessage=typeof message==='string';var isUnwantedException=!shouldThrow&&util.isError(actual);var isUnexpectedException=!shouldThrow&&actual&&!expected;if(isUnwantedException&&userProvidedMessage&&expectedException(actual,expected)||isUnexpectedException){fail(actual,expected,'Got unwanted exception'+message);}if(shouldThrow&&actual&&expected&&!expectedException(actual,expected)||!shouldThrow&&actual){throw actual;}}// 11. Expected to throw an error:
	// assert.throws(block, Error_opt, message_opt);
	assert.throws=function(block,/*optional*/error,/*optional*/message){_throws(true,block,error,message);};// EXTENSION! This is annoying to write outside this module.
	assert.doesNotThrow=function(block,/*optional*/error,/*optional*/message){_throws(false,block,error,message);};assert.ifError=function(err){if(err)throw err;};// Expose a strict only variant of assert
	function strict(value,message){if(!value)fail(value,true,message,'==',strict);}assert.strict=objectAssign(strict,assert,{equal:assert.strictEqual,deepEqual:assert.deepStrictEqual,notEqual:assert.notStrictEqual,notDeepEqual:assert.notDeepStrictEqual});assert.strict.strict=assert.strict;var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){if(hasOwn.call(obj,key))keys.push(key);}return keys;};}).call(this);}).call(this,typeof commonjsGlobal!=="undefined"?commonjsGlobal:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"object-assign":515,"util/":518}],365:[function(require,module,exports){module.exports=function _atob(str){return atob(str);};},{}],366:[function(require,module,exports){exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}// Support decoding URL-safe base64 strings, as Node.js does.
	// See: https://en.wikipedia.org/wiki/Base64#URL_applications
	revLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function getLens(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// Trim off extra bytes after placeholder bytes are found
	// See: https://github.com/beatgammit/base64-js/issues/42
	var validLen=b64.indexOf('=');if(validLen===-1)validLen=len;var placeHoldersLen=validLen===len?0:4-validLen%4;return [validLen,placeHoldersLen];}// base64 is 4/3 + up to two characters of the original data
	function byteLength(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return (validLen+placeHoldersLen)*3/4-placeHoldersLen;}function _byteLength(b64,validLen,placeHoldersLen){return (validLen+placeHoldersLen)*3/4-placeHoldersLen;}function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;// if there are placeholders, only get up to the last complete 4 chars
	var len=placeHoldersLen>0?validLen-4:validLen;var i;for(i=0;i<len;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[curByte++]=tmp>>16&0xFF;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&0xFF0000)+(uint8[i+1]<<8&0xFF00)+(uint8[i+2]&0xFF);output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes
	var parts=[];var maxChunkLength=16383;// must be multiple of 3
	// go through the array every three bytes, we'll deal with trailing stuff later
	for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes
	if(extraBytes===1){tmp=uint8[len-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&0x3F]+'==');}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&0x3F]+lookup[tmp<<2&0x3F]+'=');}return parts.join('');}},{}],367:[function(require,module,exports){var bigInt=function(undefined$1){var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz";var supportsNativeBigInt=typeof BigInt==="function";function Integer(v,radix,alphabet,caseSensitive){if(typeof v==="undefined")return Integer[0];if(typeof radix!=="undefined")return +radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v);}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false;}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true;}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value;}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return -MAX_INT<n&&n<MAX_INT;}function smallToArray(n){// For performance reasons doesn't reference BASE, need to change this function if BASE changes
	if(n<1e7)return [n];if(n<1e14)return [n%1e7,Math.floor(n/1e7)];return [n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)];}function arrayToSmall(arr){// If BASE changes this function may need to change
	trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE;}}return arr;}function trim(v){var i=v.length;while(v[--i]===0){}v.length=i+1;}function createArray(length){// function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
	var x=new Array(length);var i=-1;while(++i<length){x[i]=0;}return x;}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n);}function add(a,b){// assumes a and b are arrays with a.length >= b.length
	var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base;}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base;}if(carry>0)r.push(carry);return r;}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a);}function addSmall(a,carry){// assumes a is array, carry is number with 0 <= carry < MAX_INT
	var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate());}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign);}return new BigInteger(addAny(a,b),this.sign);};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate());}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b));}return new BigInteger(addSmall(b,Math.abs(a)),a<0);};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value);};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){// assumes a and b are arrays with a >= b
	var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1;}else borrow=0;r[i]=difference;}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else {r[i++]=difference;break;}r[i]=difference;}for(;i<a_l;i++){r[i]=a[i];}trim(r);return r;}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b);}else {value=subtract(b,a);sign=!sign;}value=arrayToSmall(value);if(typeof value==="number"){if(sign)value=-value;return new SmallInteger(value);}return new BigInteger(value,sign);}function subtractSmall(a,b,sign){// assumes a is array, b is number with 0 <= b < MAX_INT
	var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference;}r=arrayToSmall(r);if(typeof r==="number"){if(sign)r=-r;return new SmallInteger(r);}return new BigInteger(r,sign);}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate());}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign);};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate());}var b=n.value;if(n.isSmall){return new SmallInteger(a-b);}return subtractSmall(b,Math.abs(a),a>=0);};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value);};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign);};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small;};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value);};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false);};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value));};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value);};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry;}}trim(r);return r;}function multiplySmall(a,b){// assumes a is array, b is number with |b| < BASE
	var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}function shiftLeft(x,n){var r=[];while(n-->0){r.push(0);}return r.concat(x);}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product;}// The following function is derived from a surface fit of a graph plotting the performance difference
	// between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
	function useKaratsuba(l1,l2){return -0.012*l1-0.012*l2+0.000015*l1*l2>0;}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign);}b=smallToArray(abs);}if(useKaratsuba(a.length,b.length))// Karatsuba is only faster for certain array sizes
	return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign);};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){// a >= 0
	if(a<BASE){return new BigInteger(multiplySmall(b,a),sign);}return new BigInteger(multiplyLong(b,smallToArray(a)),sign);}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value);}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign);};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign);};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this);};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value);};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){//console.assert(2 * BASE * BASE < MAX_INT);
	var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base;}r[i+l]=carry;}trim(r);return r;}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false);};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false);};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value);};function divMod1(a,b){// Left over from previous version. Performs faster than divMod2 on smaller input sizes.
	var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],// normalization
	lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit);}// quotientDigit <= base - 1
	carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1;}else {remainder[shift+i]=borrow;borrow=0;}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0;}else {remainder[shift+i]=carry;carry=1;}}borrow+=carry;}result[shift]=quotientDigit;}// denormalization
	remainder=divModSmall(remainder,lambda)[0];return [arrayToSmall(result),arrayToSmall(remainder)];}function divMod2(a,b){// Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
	// Performs faster than divMod1 on larger input sizes.
	var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue;}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base;}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--;}while(guess);result.push(guess);part=subtract(part,check);}result.reverse();return [arrayToSmall(result),arrayToSmall(part)];}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0;}return [quotient,remainder|0];}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return [new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)];}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error("Cannot divide by zero");if(self.isSmall){if(n.isSmall){return [new SmallInteger(truncate(a/b)),new SmallInteger(a%b)];}return [Integer[0],self];}if(n.isSmall){if(b===1)return [self,Integer[0]];if(b==-1)return [self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient==="number"){if(self.sign!==n.sign)quotient=-quotient;return [new SmallInteger(quotient),new SmallInteger(remainder)];}return [new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)];}b=smallToArray(abs);}var comparison=compareAbs(a,b);if(comparison===-1)return [Integer[0],self];if(comparison===0)return [Integer[self.sign===n.sign?1:-1],Integer[0]];// divMod1 is faster on smaller input sizes
	if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient==="number"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient);}else quotient=new BigInteger(quotient,qSign);if(typeof mod==="number"){if(mSign)mod=-mod;mod=new SmallInteger(mod);}else mod=new BigInteger(mod,mSign);return [quotient,mod];}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return {quotient:result[0],remainder:result[1]};};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0];};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value);};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1];};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value);};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0];}if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b;}if(b===0)break;b/=2;x=x.square();}return y;};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b;}if(b===_0)break;b/=_2;x=x.square();}return y;};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);if(exp.isNegative()){exp=exp.multiply(Integer[-1]);base=base.modInv(mod);}while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod);}return r;};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1;}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1;}return 0;}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b);};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1;}return -1;};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1;};BigInteger.prototype.compare=function(v){// See discussion about comparison with Infinity:
	// https://github.com/peterolson/BigInteger.js/issues/61
	if(v===Infinity){return -1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1;}if(n.isSmall){return this.sign?-1:1;}return compareAbs(a,b)*(this.sign?-1:1);};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return -1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1;}if(a<0!==n.sign){return a<0?-1:1;}return a<0?1:-1;};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return -1;}if(v===-Infinity){return 1;}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1;};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0;};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0;};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0;};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0;};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0;};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0;};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return (this.value[0]&1)===0;};SmallInteger.prototype.isEven=function(){return (this.value&1)===0;};NativeBigInt.prototype.isEven=function(){return (this.value&BigInt(1))===BigInt(0);};BigInteger.prototype.isOdd=function(){return (this.value[0]&1)===1;};SmallInteger.prototype.isOdd=function(){return (this.value&1)===1;};NativeBigInt.prototype.isOdd=function(){return (this.value&BigInt(1))===BigInt(1);};BigInteger.prototype.isPositive=function(){return !this.sign;};SmallInteger.prototype.isPositive=function(){return this.value>0;};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign;};SmallInteger.prototype.isNegative=function(){return this.value<0;};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false;};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1;};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1);};BigInteger.prototype.isZero=function(){return false;};SmallInteger.prototype.isZero=function(){return this.value===0;};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0);};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero();};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true;// we don't know if it's prime: let the other functions figure it out
	}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,i,x;while(b.isEven()){b=b.divide(2),r++;}next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next;}return false;}return true;}// Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
	BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined$1)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2));}return millerRabinTest(n,a);};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations,rng){var isPrime=isBasicPrime(this);if(isPrime!==undefined$1)return isPrime;var n=this.abs();var t=iterations===undefined$1?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2),rng));}return millerRabinTest(n,a);};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR));}if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");if(t.compare(0)===-1){t=t.add(n);}if(this.isNegative()){return t.negate();}return t;};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign);}return new BigInteger(addSmall(value,1),this.sign);};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false);};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1));};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true);}return subtractSmall(value,1,this.sign);};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true);};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1));};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE){powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);}var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE;}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1;}return result.multiply(powersOfTwo[n]);};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1;}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit;// two's complement for negative numbers
	}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit;// two's complement for negative numbers
	}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit));}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]));}return sum;}BigInteger.prototype.not=function(){return this.negate().prev();};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b;});};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b;});};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b;});};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){// get lowestOneBit (rough)
	// SmallInteger: return Min(lowestOneBit(n), 1 << 30)
	// BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
	var v=n.value,x=typeof v==="number"?v|LOBMASK_I:typeof v==="bigint"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x;}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2};}return {p:bigInt(1),e:0};}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1));}if(n.compareTo(bigInt(0))===0){return bigInt(0);}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1));};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b;}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b;}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d);}while(a.isEven()){a=a.divide(roughLOB(a));}do{while(b.isEven()){b=b.divide(roughLOB(b));}if(a.greater(b)){t=b;b=a;a=t;}b=b.subtract(a);}while(!b.isZero());return c.isUnit()?a:a.multiply(c);}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b);}function randBetween(a,b,rng){a=parseValue(a);b=parseValue(b);var usedRNG=rng||Math.random;var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(usedRNG()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(usedRNG()*top);result.push(digit);if(digit<top)restricted=false;}return low.add(Integer.fromArray(result,BASE,false));}var parseBase=function parseBase(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase();}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i;}for(i=0;i<length;i++){var c=text[i];if(c==="-")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c==="1"&&absBase===1)continue;throw new Error(c+" is not a valid digit in base "+base+".");}}}base=parseValue(base);var digits=[];var isNegative=text[0]==="-";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c==="<"){var start=i;do{i++;}while(text[i]!==">"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)));}else throw new Error(c+" is not a valid character");}return parseBaseFromArray(digits,base,isNegative);};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base);}return isNegative?val.negate():val;}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit];}return "<"+digit+">";}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return {value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.");}if(base.equals(-1)){if(n.isZero())return {value:[0],isNegative:false};if(n.isNegative())return {value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return {value:[].concat.apply([],arr),isNegative:false};}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs();}if(base.isUnit()){if(n.isZero())return {value:[0],isNegative:false};return {value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg};}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next();}out.push(digit.toJSNumber());}out.push(left.toJSNumber());return {value:out.reverse(),isNegative:neg};}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return (arr.isNegative?"-":"")+arr.value.map(function(x){return stringify(x,alphabet);}).join('');}BigInteger.prototype.toArray=function(radix){return toBase(this,radix);};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix);};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix);};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined$1)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit;}var sign=this.sign?"-":"";return sign+str;};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined$1)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value);};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString();};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10);};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value;};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10);};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error("Invalid integer: "+v);}var sign=v[0]==="-";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(split.length===2){var exp=split[1];if(exp[0]==="+")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0];var decimalPlace=text.indexOf(".");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1);}if(exp<0)throw new Error("Cannot include negative exponent part for integers");text+=new Array(exp+1).join("0");v=text;}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error("Invalid integer: "+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?"-"+v:v));}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l;}trim(r);return new BigInteger(r,sign);}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v));}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v);}return parseStringValue(v.toString());}function parseValue(v){if(typeof v==="number"){return parseNumberValue(v);}if(typeof v==="string"){return parseStringValue(v);}if(typeof v==="bigint"){return new NativeBigInt(v);}return v;}// Pre-define numbers in range [-999,999]
	for(var i=0;i<1000;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i);}// Backwards compatibility
	Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt;};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative);};return Integer;}();// Node.js check
	if(typeof module!=="undefined"&&module.hasOwnProperty("exports")){module.exports=bigInt;}//amd check
	},{}],368:[function(require,module,exports){(function(Buffer){(function(){var base64=require('base64-js');var ieee754=require('ieee754');exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=0x7fffffff;exports.kMaxLength=K_MAX_LENGTH;/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
	 *               implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * We report that the browser does not support typed arrays if the are not subclassable
	 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
	 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
	 * for __proto__ and has a buggy typed array implementation.
	 */Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&typeof console.error==='function'){console.error('This browser lacks typed array (Uint8Array) support which is required by '+'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');}function typedArraySupport(){// Can typed array instances can be augmented?
	try{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42;}};return arr.foo()===42;}catch(e){return false;}}Object.defineProperty(Buffer.prototype,'parent',{enumerable:true,get:function get(){if(!Buffer.isBuffer(this))return undefined;return this.buffer;}});Object.defineProperty(Buffer.prototype,'offset',{enumerable:true,get:function get(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset;}});function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError('The value "'+length+'" is invalid for option "size"');}// Return an augmented `Uint8Array` instance
	var buf=new Uint8Array(length);buf.__proto__=Buffer.prototype;return buf;}/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */function Buffer(arg,encodingOrOffset,length){// Common case.
	if(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new TypeError('The "string" argument must be of type string. Received type number');}return allocUnsafe(arg);}return from(arg,encodingOrOffset,length);}// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	if(typeof Symbol!=='undefined'&&Symbol.species!=null&&Buffer[Symbol.species]===Buffer){Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false});}Buffer.poolSize=8192;// not used by this implementation
	function from(value,encodingOrOffset,length){if(typeof value==='string'){return fromString(value,encodingOrOffset);}if(ArrayBuffer.isView(value)){return fromArrayLike(value);}if(value==null){throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+(typeof value==='undefined'?'undefined':_typeof(value)));}if(isInstance(value,ArrayBuffer)||value&&isInstance(value.buffer,ArrayBuffer)){return fromArrayBuffer(value,encodingOrOffset,length);}if(typeof value==='number'){throw new TypeError('The "value" argument must not be of type number. Received type number');}var valueOf=value.valueOf&&value.valueOf();if(valueOf!=null&&valueOf!==value){return Buffer.from(valueOf,encodingOrOffset,length);}var b=fromObject(value);if(b)return b;if(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&typeof value[Symbol.toPrimitive]==='function'){return Buffer.from(value[Symbol.toPrimitive]('string'),encodingOrOffset,length);}throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+'or Array-like Object. Received type '+(typeof value==='undefined'?'undefined':_typeof(value)));}/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/Buffer.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length);};// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
	// https://github.com/feross/buffer/pull/148
	Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;function assertSize(size){if(typeof size!=='number'){throw new TypeError('"size" argument must be of type number');}else if(size<0){throw new RangeError('The value "'+size+'" is invalid for option "size"');}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This
	// prevents accidentally sending in a number that would
	// be interpretted as a start offset.
	return typeof encoding==='string'?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill);}return createBuffer(size);}/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/Buffer.alloc=function(size,fill,encoding){return alloc(size,fill,encoding);};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0);}/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */Buffer.allocUnsafe=function(size){return allocUnsafe(size);};/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(size);};function fromString(string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will
	// cause everything after the first invalid character to be ignored. (e.g.
	// 'abxxcd' will be treated as 'ab')
	buf=buf.slice(0,actual);}return buf;}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255;}return buf;}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('"offset" is outside of buffer bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('"length" is outside of buffer bounds');}var buf;if(byteOffset===undefined&&length===undefined){buf=new Uint8Array(array);}else if(length===undefined){buf=new Uint8Array(array,byteOffset);}else {buf=new Uint8Array(array,byteOffset,length);}// Return an augmented `Uint8Array` instance
	buf.__proto__=Buffer.prototype;return buf;}function fromObject(obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf;}obj.copy(buf,0,0,len);return buf;}if(obj.length!==undefined){if(typeof obj.length!=='number'||numberIsNaN(obj.length)){return createBuffer(0);}return fromArrayLike(obj);}if(obj.type==='Buffer'&&Array.isArray(obj.data)){return fromArrayLike(obj.data);}}function checked(length){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
	// length is NaN (which is otherwise coerced to zero.)
	if(length>=K_MAX_LENGTH){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');}return length|0;}function SlowBuffer(length){if(+length!=length){// eslint-disable-line eqeqeq
	length=0;}return Buffer.alloc(+length);}Buffer.isBuffer=function isBuffer(b){return b!=null&&b._isBuffer===true&&b!==Buffer.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false
	};Buffer.compare=function compare(a,b){if(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);if(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return -1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError('"list" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(isInstance(buf,Uint8Array)){buf=Buffer.from(buf);}if(!Buffer.isBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length;}if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){return string.byteLength;}if(typeof string!=='string'){throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. '+'Received type '+(typeof string==='undefined'?'undefined':_typeof(string)));}var len=string.length;var mustMatch=arguments.length>2&&arguments[2]===true;if(!mustMatch&&len===0)return 0;// Use a for loop to avoid recursion
	var loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase){return mustMatch?-1:utf8ToBytes(string).length;// assume utf8
	}encoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	// property of a typed array.
	// This behaves neither like String nor Uint8Array in that we set start/end
	// to their upper/lower bounds if the value passed is out of range.
	// undefined is handled specially as per ECMA-262 6th Edition,
	// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	if(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32
	// coercion fail below.
	if(start>this.length){return '';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return '';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	end>>>=0;start>>>=0;if(end<=start){return '';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
	// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
	// reliably in a browserify context because there could be multiple different
	// copies of the 'buffer' package in use. This method works even for Buffer
	// instances that were created from another copy of the `buffer` package.
	// See: https://github.com/feross/buffer/issues/154
	Buffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length;if(length===0)return '';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=exports.INSPECT_MAX_BYTES;str=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();if(this.length>max)str+=' ... ';return '<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(isInstance(target,Uint8Array)){target=Buffer.from(target,target.offset,target.byteLength);}if(!Buffer.isBuffer(target)){throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. '+'Received type '+(typeof target==='undefined'?'undefined':_typeof(target)));}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return -1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return -1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match
	if(buffer.length===0)return -1;// Normalize byteOffset
	if(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.
	if(numberIsNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	byteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer
	if(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return -1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return -1;}// Normalize val
	if(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf
	if(Buffer.isBuffer(val)){// Special case: looking for empty string/buffer always fails
	if(val.length===0){return -1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]
	if(typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else {return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return -1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else {return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else {if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else {if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return -1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else {length=Number(length);if(length>remaining){length=remaining;}}var strLen=string.length;if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)
	if(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)
	}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])
	}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===undefined)encoding='utf8';}else {encoding=length;length=undefined;}}else {throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write
	return base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return {type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else {return base64.fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a
	// replacement char (U+FFFD) and advance only 1 byte
	codePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)
	codePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()
	}// Decode in chunks to avoid "call stack size exceeded".
	var res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf=this.subarray(start,end);// Return an augmented `Uint8Array` instance
	newBuf.__proto__=Buffer.prototype;return newBuf;};/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return (this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return (0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4);}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8);}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy=function copy(target,targetStart,start,end){if(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done
	if(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions
	if(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('Index out of range');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?
	if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;if(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){// Use built-in when available, missing from IE11
	this.copyWithin(targetStart,start,end);}else if(this===target&&start<targetStart&&targetStart<end){// descending copy from end
	for(var i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else {Uint8Array.prototype.set.call(target,this.subarray(start,end),targetStart);}return len;};// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:
	if(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}if(val.length===1){var code=val.charCodeAt(0);if(encoding==='utf8'&&code<128||encoding==='latin1'){// Fast path: If `val` fits into a single byte, use that numeric value.
	val=code;}}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.
	if(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else {var bytes=Buffer.isBuffer(val)?val:Buffer.from(val,encoding);var len=bytes.length;if(len===0){throw new TypeError('The value "'+val+'" is invalid for argument "value"');}for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS
	// ================
	var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){// Node takes equal signs as end of the Base64 encoding
	str=str.split('=')[0];// Node strips out invalid characters like \n and \t from the string, base64-js does not
	str=str.trim().replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''
	if(str.length<2)return '';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	while(str.length%4!==0){str=str+'=';}return str;}function toHex(n){if(n<16)return '0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component
	if(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead
	if(!leadSurrogate){// no lead yet
	if(codePoint>0xDBFF){// unexpected trail
	if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead
	if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead
	leadSurrogate=codePoint;continue;}// 2 leads in a row
	if(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair
	codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead
	if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8
	if(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else {throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..
	byteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return base64.toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
	// the `instanceof` check but they should be treated as of that type.
	// See: https://github.com/feross/buffer/issues/166
	function isInstance(obj,type){return obj instanceof type||obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&obj.constructor.name===type.name;}function numberIsNaN(obj){// For IE11 support
	return obj!==obj;// eslint-disable-line no-self-compare
	}}).call(this);}).call(this,require("buffer").Buffer);},{"base64-js":366,"buffer":368,"ieee754":370}],369:[function(require,module,exports){// https://d3js.org/d3-format/ v1.4.5 Copyright 2020 Mike Bostock
	(function(global,factory){(typeof exports==='undefined'?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?factory(exports):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.d3=global.d3||{}));})(this,function(exports){function formatDecimal(x){return Math.abs(x=Math.round(x))>=1e21?x.toLocaleString("en").replace(/,/g,""):x.toString(10);}// Computes the decimal coefficient and exponent of the specified number x with
	// significant digits p, where x is positive and p is in [1, 21] or undefined.
	// For example, formatDecimalParts(1.23) returns ["123", 0].
	function formatDecimalParts(x,p){if((i=(x=p?x.toExponential(p-1):x.toExponential()).indexOf("e"))<0)return null;// NaN, ±Infinity
	var i,coefficient=x.slice(0,i);// The string returned by toExponential either has the form \d\.\d+e[-+]\d+
	// (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
	return [coefficient.length>1?coefficient[0]+coefficient.slice(2):coefficient,+x.slice(i+1)];}function exponent(x){return x=formatDecimalParts(Math.abs(x)),x?x[1]:NaN;}function formatGroup(grouping,thousands){return function(value,width){var i=value.length,t=[],j=0,g=grouping[0],length=0;while(i>0&&g>0){if(length+g+1>width)g=Math.max(1,width-length);t.push(value.substring(i-=g,i+g));if((length+=g+1)>width)break;g=grouping[j=(j+1)%grouping.length];}return t.reverse().join(thousands);};}function formatNumerals(numerals){return function(value){return value.replace(/[0-9]/g,function(i){return numerals[+i];});};}// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
	var re=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function formatSpecifier(specifier){if(!(match=re.exec(specifier)))throw new Error("invalid format: "+specifier);var match;return new FormatSpecifier({fill:match[1],align:match[2],sign:match[3],symbol:match[4],zero:match[5],width:match[6],comma:match[7],precision:match[8]&&match[8].slice(1),trim:match[9],type:match[10]});}formatSpecifier.prototype=FormatSpecifier.prototype;// instanceof
	function FormatSpecifier(specifier){this.fill=specifier.fill===undefined?" ":specifier.fill+"";this.align=specifier.align===undefined?">":specifier.align+"";this.sign=specifier.sign===undefined?"-":specifier.sign+"";this.symbol=specifier.symbol===undefined?"":specifier.symbol+"";this.zero=!!specifier.zero;this.width=specifier.width===undefined?undefined:+specifier.width;this.comma=!!specifier.comma;this.precision=specifier.precision===undefined?undefined:+specifier.precision;this.trim=!!specifier.trim;this.type=specifier.type===undefined?"":specifier.type+"";}FormatSpecifier.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===undefined?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===undefined?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type;};// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
	function formatTrim(s){out:for(var n=s.length,i=1,i0=-1,i1;i<n;++i){switch(s[i]){case".":i0=i1=i;break;case"0":if(i0===0)i0=i;i1=i;break;default:if(!+s[i])break out;if(i0>0)i0=0;break;}}return i0>0?s.slice(0,i0)+s.slice(i1+1):s;}var prefixExponent;function formatPrefixAuto(x,p){var d=formatDecimalParts(x,p);if(!d)return x+"";var coefficient=d[0],exponent=d[1],i=exponent-(prefixExponent=Math.max(-8,Math.min(8,Math.floor(exponent/3)))*3)+1,n=coefficient.length;return i===n?coefficient:i>n?coefficient+new Array(i-n+1).join("0"):i>0?coefficient.slice(0,i)+"."+coefficient.slice(i):"0."+new Array(1-i).join("0")+formatDecimalParts(x,Math.max(0,p+i-1))[0];// less than 1y!
	}function formatRounded(x,p){var d=formatDecimalParts(x,p);if(!d)return x+"";var coefficient=d[0],exponent=d[1];return exponent<0?"0."+new Array(-exponent).join("0")+coefficient:coefficient.length>exponent+1?coefficient.slice(0,exponent+1)+"."+coefficient.slice(exponent+1):coefficient+new Array(exponent-coefficient.length+2).join("0");}var formatTypes={"%":function _(x,p){return (x*100).toFixed(p);},"b":function b(x){return Math.round(x).toString(2);},"c":function c(x){return x+"";},"d":formatDecimal,"e":function e(x,p){return x.toExponential(p);},"f":function f(x,p){return x.toFixed(p);},"g":function g(x,p){return x.toPrecision(p);},"o":function o(x){return Math.round(x).toString(8);},"p":function p(x,_p2){return formatRounded(x*100,_p2);},"r":formatRounded,"s":formatPrefixAuto,"X":function X(x){return Math.round(x).toString(16).toUpperCase();},"x":function x(_x52){return Math.round(_x52).toString(16);}};function identity(x){return x;}var map=Array.prototype.map,prefixes=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function formatLocale(locale){var group=locale.grouping===undefined||locale.thousands===undefined?identity:formatGroup(map.call(locale.grouping,Number),locale.thousands+""),currencyPrefix=locale.currency===undefined?"":locale.currency[0]+"",currencySuffix=locale.currency===undefined?"":locale.currency[1]+"",decimal=locale.decimal===undefined?".":locale.decimal+"",numerals=locale.numerals===undefined?identity:formatNumerals(map.call(locale.numerals,String)),percent=locale.percent===undefined?"%":locale.percent+"",minus=locale.minus===undefined?"-":locale.minus+"",nan=locale.nan===undefined?"NaN":locale.nan+"";function newFormat(specifier){specifier=formatSpecifier(specifier);var fill=specifier.fill,align=specifier.align,sign=specifier.sign,symbol=specifier.symbol,zero=specifier.zero,width=specifier.width,comma=specifier.comma,precision=specifier.precision,trim=specifier.trim,type=specifier.type;// The "n" type is an alias for ",g".
	if(type==="n")comma=true,type="g";// The "" type, and any invalid type, is an alias for ".12~g".
	else if(!formatTypes[type])precision===undefined&&(precision=12),trim=true,type="g";// If zero fill is specified, padding goes after sign and before digits.
	if(zero||fill==="0"&&align==="=")zero=true,fill="0",align="=";// Compute the prefix and suffix.
	// For SI-prefix, the suffix is lazily computed.
	var prefix=symbol==="$"?currencyPrefix:symbol==="#"&&/[boxX]/.test(type)?"0"+type.toLowerCase():"",suffix=symbol==="$"?currencySuffix:/[%p]/.test(type)?percent:"";// What format function should we use?
	// Is this an integer type?
	// Can this type generate exponential notation?
	var formatType=formatTypes[type],maybeSuffix=/[defgprs%]/.test(type);// Set the default precision if not specified,
	// or clamp the specified precision to the supported range.
	// For significant precision, it must be in [1, 21].
	// For fixed precision, it must be in [0, 20].
	precision=precision===undefined?6:/[gprs]/.test(type)?Math.max(1,Math.min(21,precision)):Math.max(0,Math.min(20,precision));function format(value){var valuePrefix=prefix,valueSuffix=suffix,i,n,c;if(type==="c"){valueSuffix=formatType(value)+valueSuffix;value="";}else {value=+value;// Determine the sign. -0 is not less than 0, but 1 / -0 is!
	var valueNegative=value<0||1/value<0;// Perform the initial formatting.
	value=isNaN(value)?nan:formatType(Math.abs(value),precision);// Trim insignificant zeros.
	if(trim)value=formatTrim(value);// If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
	if(valueNegative&&+value===0&&sign!=="+")valueNegative=false;// Compute the prefix and suffix.
	valuePrefix=(valueNegative?sign==="("?sign:minus:sign==="-"||sign==="("?"":sign)+valuePrefix;valueSuffix=(type==="s"?prefixes[8+prefixExponent/3]:"")+valueSuffix+(valueNegative&&sign==="("?")":"");// Break the formatted value into the integer “value” part that can be
	// grouped, and fractional or exponential “suffix” part that is not.
	if(maybeSuffix){i=-1,n=value.length;while(++i<n){if(c=value.charCodeAt(i),48>c||c>57){valueSuffix=(c===46?decimal+value.slice(i+1):value.slice(i))+valueSuffix;value=value.slice(0,i);break;}}}}// If the fill character is not "0", grouping is applied before padding.
	if(comma&&!zero)value=group(value,Infinity);// Compute the padding.
	var length=valuePrefix.length+value.length+valueSuffix.length,padding=length<width?new Array(width-length+1).join(fill):"";// If the fill character is "0", grouping is applied after padding.
	if(comma&&zero)value=group(padding+value,padding.length?width-valueSuffix.length:Infinity),padding="";// Reconstruct the final output based on the desired alignment.
	switch(align){case"<":value=valuePrefix+value+valueSuffix+padding;break;case"=":value=valuePrefix+padding+value+valueSuffix;break;case"^":value=padding.slice(0,length=padding.length>>1)+valuePrefix+value+valueSuffix+padding.slice(length);break;default:value=padding+valuePrefix+value+valueSuffix;break;}return numerals(value);}format.toString=function(){return specifier+"";};return format;}function formatPrefix(specifier,value){var f=newFormat((specifier=formatSpecifier(specifier),specifier.type="f",specifier)),e=Math.max(-8,Math.min(8,Math.floor(exponent(value)/3)))*3,k=Math.pow(10,-e),prefix=prefixes[8+e/3];return function(value){return f(k*value)+prefix;};}return {format:newFormat,formatPrefix:formatPrefix};}var locale;defaultLocale({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"});function defaultLocale(definition){locale=formatLocale(definition);exports.format=locale.format;exports.formatPrefix=locale.formatPrefix;return locale;}function precisionFixed(step){return Math.max(0,-exponent(Math.abs(step)));}function precisionPrefix(step,value){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(exponent(value)/3)))*3-exponent(Math.abs(step)));}function precisionRound(step,max){step=Math.abs(step),max=Math.abs(max)-step;return Math.max(0,exponent(max)-exponent(step))+1;}exports.FormatSpecifier=FormatSpecifier;exports.formatDefaultLocale=defaultLocale;exports.formatLocale=formatLocale;exports.formatSpecifier=formatSpecifier;exports.precisionFixed=precisionFixed;exports.precisionPrefix=precisionPrefix;exports.precisionRound=precisionRound;Object.defineProperty(exports,'__esModule',{value:true});});},{}],370:[function(require,module,exports){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else {m=m+Math.pow(2,mLen);e=e-eBias;}return (s?-1:1)*m*Math.pow(2,e-mLen);};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else {e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else {value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else {m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;};},{}],371:[function(require,module,exports){if(typeof Object.create==='function'){// implementation from standard node.js 'util' module
	module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});};}else {// old school shim for old browsers
	module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function TempCtor(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;};}},{}],372:[function(require,module,exports){module.exports=require('./lib/jspath');},{"./lib/jspath":373}],373:[function(require,module,exports){/**
	* JSPath
	*
	* Copyright (c) 2012 Filatov Dmitry (dfilatov@yandex-team.ru)
	* With parts by Marat Dulin (mdevils@gmail.com)
	* Dual licensed under the MIT and GPL licenses:
	* http://www.opensource.org/licenses/mit-license.php
	* http://www.gnu.org/licenses/gpl.html
	*
	* @version 0.4.0
	*/(function(){var SYNTAX={PATH:1,SELECTOR:2,OBJ_PRED:3,POS_PRED:4,LOGICAL_EXPR:5,COMPARISON_EXPR:6,MATH_EXPR:7,CONCAT_EXPR:8,UNARY_EXPR:9,POS_EXPR:10,LITERAL:11};// parser
	var parse=function(){var TOKEN={ID:1,NUM:2,STR:3,BOOL:4,NULL:5,PUNCT:6,EOP:7},MESSAGES={UNEXP_TOKEN:'Unexpected token "%0"',UNEXP_EOP:'Unexpected end of path'};var path,idx,buf,len;function parse(_path){path=_path.split('');idx=0;buf=null;len=path.length;var res=parsePathConcatExpr(),token=lex();if(token.type!==TOKEN.EOP){throwUnexpected(token);}return res;}function parsePathConcatExpr(){var expr=parsePathConcatPartExpr(),operands;while(match('|')){lex();(operands||(operands=[expr])).push(parsePathConcatPartExpr());}return operands?{type:SYNTAX.CONCAT_EXPR,args:operands}:expr;}function parsePathConcatPartExpr(){return match('(')?parsePathGroupExpr():parsePath();}function parsePathGroupExpr(){expect('(');var expr=parsePathConcatExpr();expect(')');var parts=[],part;while(part=parsePredicate()){parts.push(part);}if(!parts.length){return expr;}else if(expr.type===SYNTAX.PATH){expr.parts=expr.parts.concat(parts);return expr;}parts.unshift(expr);return {type:SYNTAX.PATH,parts:parts};}function parsePredicate(){if(match('[')){return parsePosPredicate();}if(match('{')){return parseObjectPredicate();}if(match('(')){return parsePathGroupExpr();}}function parsePath(){if(!matchPath()){throwUnexpected(lex());}var fromRoot=false,subst;if(match('^')){lex();fromRoot=true;}else if(matchSubst()){subst=lex().val.substr(1);}var parts=[],part;while(part=parsePathPart()){parts.push(part);}return {type:SYNTAX.PATH,fromRoot:fromRoot,subst:subst,parts:parts};}function parsePathPart(){return matchSelector()?parseSelector():parsePredicate();}function parseSelector(){var selector=lex().val,token=lookahead(),prop;if(match('*')||token.type===TOKEN.ID||token.type===TOKEN.STR){prop=lex().val;}return {type:SYNTAX.SELECTOR,selector:selector,prop:prop};}function parsePosPredicate(){expect('[');var expr=parsePosExpr();expect(']');return {type:SYNTAX.POS_PRED,arg:expr};}function parseObjectPredicate(){expect('{');var expr=parseLogicalORExpr();expect('}');return {type:SYNTAX.OBJ_PRED,arg:expr};}function parseLogicalORExpr(){var expr=parseLogicalANDExpr(),operands;while(match('||')){lex();(operands||(operands=[expr])).push(parseLogicalANDExpr());}return operands?{type:SYNTAX.LOGICAL_EXPR,op:'||',args:operands}:expr;}function parseLogicalANDExpr(){var expr=parseEqualityExpr(),operands;while(match('&&')){lex();(operands||(operands=[expr])).push(parseEqualityExpr());}return operands?{type:SYNTAX.LOGICAL_EXPR,op:'&&',args:operands}:expr;}function parseEqualityExpr(){var expr=parseRelationalExpr();while(match('==')||match('!=')||match('===')||match('!==')||match('^==')||match('==^')||match('^=')||match('=^')||match('$==')||match('==$')||match('$=')||match('=$')||match('*==')||match('==*')||match('*=')||match('=*')){expr={type:SYNTAX.COMPARISON_EXPR,op:lex().val,args:[expr,parseEqualityExpr()]};}return expr;}function parseRelationalExpr(){var expr=parseAdditiveExpr();while(match('<')||match('>')||match('<=')||match('>=')){expr={type:SYNTAX.COMPARISON_EXPR,op:lex().val,args:[expr,parseRelationalExpr()]};}return expr;}function parseAdditiveExpr(){var expr=parseMultiplicativeExpr();while(match('+')||match('-')){expr={type:SYNTAX.MATH_EXPR,op:lex().val,args:[expr,parseMultiplicativeExpr()]};}return expr;}function parseMultiplicativeExpr(){var expr=parseUnaryExpr();while(match('*')||match('/')||match('%')){expr={type:SYNTAX.MATH_EXPR,op:lex().val,args:[expr,parseMultiplicativeExpr()]};}return expr;}function parsePosExpr(){if(match(':')){lex();return {type:SYNTAX.POS_EXPR,toIdx:parseUnaryExpr()};}var fromExpr=parseUnaryExpr();if(match(':')){lex();if(match(']')){return {type:SYNTAX.POS_EXPR,fromIdx:fromExpr};}return {type:SYNTAX.POS_EXPR,fromIdx:fromExpr,toIdx:parseUnaryExpr()};}return {type:SYNTAX.POS_EXPR,idx:fromExpr};}function parseUnaryExpr(){if(match('!')||match('-')){return {type:SYNTAX.UNARY_EXPR,op:lex().val,arg:parseUnaryExpr()};}return parsePrimaryExpr();}function parsePrimaryExpr(){var token=lookahead(),type=token.type;if(type===TOKEN.STR||type===TOKEN.NUM||type===TOKEN.BOOL||type===TOKEN.NULL){return {type:SYNTAX.LITERAL,val:lex().val};}if(matchPath()){return parsePath();}if(match('(')){return parseGroupExpr();}return throwUnexpected(lex());}function parseGroupExpr(){expect('(');var expr=parseLogicalORExpr();expect(')');return expr;}function match(val){var token=lookahead();return token.type===TOKEN.PUNCT&&token.val===val;}function matchPath(){return matchSelector()||matchSubst()||match('^');}function matchSelector(){var token=lookahead();if(token.type===TOKEN.PUNCT){var val=token.val;return val==='.'||val==='..';}return false;}function matchSubst(){var token=lookahead();return token.type===TOKEN.ID&&token.val[0]==='$';}function expect(val){var token=lex();if(token.type!==TOKEN.PUNCT||token.val!==val){throwUnexpected(token);}}function lookahead(){if(buf!==null){return buf;}var pos=idx;buf=advance();idx=pos;return buf;}function advance(){while(isWhiteSpace(path[idx])){++idx;}if(idx>=len){return {type:TOKEN.EOP,range:[idx,idx]};}var token=scanPunctuator();if(token||(token=scanId())||(token=scanString())||(token=scanNumeric())){return token;}token={range:[idx,idx]};idx>=len?token.type=TOKEN.EOP:token.val=path[idx];throwUnexpected(token);}function lex(){var token;if(buf){idx=buf.range[1];token=buf;buf=null;return token;}return advance();}function isDigit(ch){return '0123456789'.indexOf(ch)>=0;}function isWhiteSpace(ch){return ' \r\n\t'.indexOf(ch)>-1;}function isIdStart(ch){return ch==='$'||ch==='@'||ch==='_'||ch>='a'&&ch<='z'||ch>='A'&&ch<='Z';}function isIdPart(ch){return isIdStart(ch)||ch>='0'&&ch<='9';}function scanId(){var ch=path[idx];if(!isIdStart(ch)){return;}var start=idx,id=ch;while(++idx<len){ch=path[idx];if(!isIdPart(ch)){break;}id+=ch;}switch(id){case'true':case'false':return {type:TOKEN.BOOL,val:id==='true',range:[start,idx]};case'null':return {type:TOKEN.NULL,val:null,range:[start,idx]};default:return {type:TOKEN.ID,val:id,range:[start,idx]};}}function scanString(){if(path[idx]!=='"'&&path[idx]!=='\''){return;}var orig=path[idx],start=++idx,str='',eosFound=false,ch;while(idx<len){ch=path[idx++];if(ch==='\\'){ch=path[idx++];}else if((ch==='"'||ch==='\'')&&ch===orig){eosFound=true;break;}str+=ch;}if(eosFound){return {type:TOKEN.STR,val:str,range:[start,idx]};}}function scanNumeric(){var start=idx,ch=path[idx],isFloat=ch==='.';if(isFloat||isDigit(ch)){var num=ch;while(++idx<len){ch=path[idx];if(ch==='.'){if(isFloat){return;}isFloat=true;}else if(!isDigit(ch)){break;}num+=ch;}return {type:TOKEN.NUM,val:isFloat?parseFloat(num):parseInt(num,10),range:[start,idx]};}}function scanPunctuator(){var start=idx,ch1=path[idx],ch2=path[idx+1];if(ch1==='.'){if(isDigit(ch2)){return;}return path[++idx]==='.'?{type:TOKEN.PUNCT,val:'..',range:[start,++idx]}:{type:TOKEN.PUNCT,val:'.',range:[start,idx]};}if(ch2==='='){var ch3=path[idx+2];if(ch3==='='){if('=!^$*'.indexOf(ch1)>=0){return {type:TOKEN.PUNCT,val:ch1+ch2+ch3,range:[start,idx+=3]};}}else if('^$*'.indexOf(ch3)>=0){if(ch1==='='){return {type:TOKEN.PUNCT,val:ch1+ch2+ch3,range:[start,idx+=3]};}}else if('=!^$*><'.indexOf(ch1)>=0){return {type:TOKEN.PUNCT,val:ch1+ch2,range:[start,idx+=2]};}}else if(ch1==='='&&'^$*'.indexOf(ch2)>=0){return {type:TOKEN.PUNCT,val:ch1+ch2,range:[start,idx+=2]};}if(ch1===ch2&&(ch1==='|'||ch1==='&')){return {type:TOKEN.PUNCT,val:ch1+ch2,range:[start,idx+=2]};}if(':{}()[]^+-*/%!><|'.indexOf(ch1)>=0){return {type:TOKEN.PUNCT,val:ch1,range:[start,++idx]};}}function throwUnexpected(token){if(token.type===TOKEN.EOP){throwError(token,MESSAGES.UNEXP_EOP);}throwError(token,MESSAGES.UNEXP_TOKEN,token.val);}function throwError(token,messageFormat){var args=Array.prototype.slice.call(arguments,2),msg=messageFormat.replace(/%(\d)/g,function(_,idx){return args[idx]||'';}),error=new Error(msg);error.column=token.range[0];throw error;}return parse;}();// translator
	var translate=function(){var body,vars,lastVarId,unusedVars;function acquireVar(){if(unusedVars.length){return unusedVars.shift();}var varName='v'+ ++lastVarId;vars.push(varName);return varName;}function releaseVars(){var args=arguments,i=args.length;while(i--){unusedVars.push(args[i]);}}function translate(ast){body=[];vars=['res'];lastVarId=0;unusedVars=[];translateExpr(ast,'res','data');body.unshift('var ',Array.isArray?'isArr = Array.isArray':'toStr = Object.prototype.toString, isArr = function(o) { return toStr.call(o) === "[object Array]"; }',', concat = Array.prototype.concat',',',vars.join(','),';');if(ast.type===SYNTAX.PATH){var lastPart=ast.parts[ast.parts.length-1];if(lastPart&&lastPart.type===SYNTAX.POS_PRED&&'idx'in lastPart.arg){body.push('res = res[0];');}}body.push('return res;');return body.join('');}function translatePath(path,dest,ctx){var parts=path.parts,i=0,len=parts.length;body.push(dest,'=',path.fromRoot?'data':path.subst?'subst.'+path.subst:ctx,';','isArr('+dest+') || ('+dest+' = ['+dest+']);');while(i<len){var item=parts[i++];switch(item.type){case SYNTAX.SELECTOR:item.selector==='..'?translateDescendantSelector(item,dest,dest):translateSelector(item,dest,dest);break;case SYNTAX.OBJ_PRED:translateObjectPredicate(item,dest,dest);break;case SYNTAX.POS_PRED:translatePosPredicate(item,dest,dest);break;case SYNTAX.CONCAT_EXPR:translateConcatExpr(item,dest,dest);break;}}}function translateSelector(sel,dest,ctx){if(sel.prop){var propStr=escapeStr(sel.prop),res=acquireVar(),i=acquireVar(),len=acquireVar(),curCtx=acquireVar(),j=acquireVar(),val=acquireVar(),tmpArr=acquireVar();body.push(res,'= [];',i,'= 0;',len,'=',ctx,'.length;',tmpArr,'= [];','while(',i,'<',len,') {',curCtx,'=',ctx,'[',i,'++];','if(',curCtx,'!= null) {');if(sel.prop==='*'){body.push('if(typeof ',curCtx,'=== "object") {','if(isArr(',curCtx,')) {',res,'=',res,'.concat(',curCtx,');','}','else {','for(',j,' in ',curCtx,') {','if(',curCtx,'.hasOwnProperty(',j,')) {',val,'=',curCtx,'[',j,'];');inlineAppendToArray(res,val);body.push('}','}','}','}');}else {body.push(val,'=',curCtx,'[',propStr,'];');inlineAppendToArray(res,val,tmpArr,len);}body.push('}','}',dest,'=',len,'> 1 &&',tmpArr,'.length?',tmpArr,'.length > 1?','concat.apply(',res,',',tmpArr,') :',res,'.concat(',tmpArr,'[0]) :',res,';');releaseVars(res,i,len,curCtx,j,val,tmpArr);}}function translateDescendantSelector(sel,dest,baseCtx){var prop=sel.prop,ctx=acquireVar(),curCtx=acquireVar(),childCtxs=acquireVar(),i=acquireVar(),j=acquireVar(),val=acquireVar(),len=acquireVar(),res=acquireVar();body.push(ctx,'=',baseCtx,'.slice(),',res,'= [];','while(',ctx,'.length) {',curCtx,'=',ctx,'.shift();');prop?body.push('if(typeof ',curCtx,'=== "object" &&',curCtx,') {'):body.push('if(typeof ',curCtx,'!= null) {');body.push(childCtxs,'= [];','if(isArr(',curCtx,')) {',i,'= 0,',len,'=',curCtx,'.length;','while(',i,'<',len,') {',val,'=',curCtx,'[',i,'++];');prop&&body.push('if(typeof ',val,'=== "object") {');inlineAppendToArray(childCtxs,val);prop&&body.push('}');body.push('}','}','else {');if(prop){if(prop!=='*'){body.push(val,'=',curCtx,'["'+prop+'"];');inlineAppendToArray(res,val);}}else {inlineAppendToArray(res,curCtx);body.push('if(typeof ',curCtx,'=== "object") {');}body.push('for(',j,' in ',curCtx,') {','if(',curCtx,'.hasOwnProperty(',j,')) {',val,'=',curCtx,'[',j,'];');inlineAppendToArray(childCtxs,val);prop==='*'&&inlineAppendToArray(res,val);body.push('}','}');prop||body.push('}');body.push('}',childCtxs,'.length &&',ctx,'.unshift.apply(',ctx,',',childCtxs,');','}','}',dest,'=',res,';');releaseVars(ctx,curCtx,childCtxs,i,j,val,len,res);}function translateObjectPredicate(expr,dest,ctx){var resVar=acquireVar(),i=acquireVar(),len=acquireVar(),cond=acquireVar(),curItem=acquireVar();body.push(resVar,'= [];',i,'= 0;',len,'=',ctx,'.length;','while(',i,'<',len,') {',curItem,'=',ctx,'[',i,'++];');translateExpr(expr.arg,cond,curItem);body.push(convertToBool(expr.arg,cond),'&&',resVar,'.push(',curItem,');','}',dest,'=',resVar,';');releaseVars(resVar,i,len,curItem,cond);}function translatePosPredicate(item,dest,ctx){var arrayExpr=item.arg,fromIdx,toIdx;if(arrayExpr.idx){var idx=acquireVar();translateExpr(arrayExpr.idx,idx,ctx);body.push(idx,'< 0 && (',idx,'=',ctx,'.length +',idx,');',dest,'=',ctx,'[',idx,'] == null? [] : [',ctx,'[',idx,']];');releaseVars(idx);return false;}else if(arrayExpr.fromIdx){if(arrayExpr.toIdx){translateExpr(arrayExpr.fromIdx,fromIdx=acquireVar(),ctx);translateExpr(arrayExpr.toIdx,toIdx=acquireVar(),ctx);body.push(dest,'=',ctx,'.slice(',fromIdx,',',toIdx,');');releaseVars(fromIdx,toIdx);}else {translateExpr(arrayExpr.fromIdx,fromIdx=acquireVar(),ctx);body.push(dest,'=',ctx,'.slice(',fromIdx,');');releaseVars(fromIdx);}}else {translateExpr(arrayExpr.toIdx,toIdx=acquireVar(),ctx);body.push(dest,'=',ctx,'.slice(0,',toIdx,');');releaseVars(toIdx);}}function translateExpr(expr,dest,ctx){switch(expr.type){case SYNTAX.PATH:translatePath(expr,dest,ctx);break;case SYNTAX.CONCAT_EXPR:translateConcatExpr(expr,dest,ctx);break;case SYNTAX.COMPARISON_EXPR:translateComparisonExpr(expr,dest,ctx);break;case SYNTAX.MATH_EXPR:translateMathExpr(expr,dest,ctx);break;case SYNTAX.LOGICAL_EXPR:translateLogicalExpr(expr,dest,ctx);break;case SYNTAX.UNARY_EXPR:translateUnaryExpr(expr,dest,ctx);break;case SYNTAX.LITERAL:body.push(dest,'=');translateLiteral(expr.val);body.push(';');break;}}function translateLiteral(val){body.push(typeof val==='string'?escapeStr(val):val===null?'null':val);}function translateComparisonExpr(expr,dest,ctx){var val1=acquireVar(),val2=acquireVar(),isVal1Array=acquireVar(),isVal2Array=acquireVar(),i=acquireVar(),j=acquireVar(),len1=acquireVar(),len2=acquireVar(),leftArg=expr.args[0],rightArg=expr.args[1];body.push(dest,'= false;');translateExpr(leftArg,val1,ctx);translateExpr(rightArg,val2,ctx);var isLeftArgPath=leftArg.type===SYNTAX.PATH,isRightArgLiteral=rightArg.type===SYNTAX.LITERAL;body.push(isVal1Array,'=');isLeftArgPath?body.push('true;'):body.push('isArr(',val1,');');body.push(isVal2Array,'=');isRightArgLiteral?body.push('false;'):body.push('isArr(',val2,');');body.push('if(');isLeftArgPath||body.push(isVal1Array,'&&');body.push(val1,'.length === 1) {',val1,'=',val1,'[0];',isVal1Array,'= false;','}');isRightArgLiteral||body.push('if(',isVal2Array,'&&',val2,'.length === 1) {',val2,'=',val2,'[0];',isVal2Array,'= false;','}');body.push(i,'= 0;','if(',isVal1Array,') {',len1,'=',val1,'.length;');if(!isRightArgLiteral){body.push('if(',isVal2Array,') {',len2,'=',val2,'.length;','while(',i,'<',len1,'&& !',dest,') {',j,'= 0;','while(',j,'<',len2,') {');writeCondition(expr.op,[val1,'[',i,']'].join(''),[val2,'[',j,']'].join(''));body.push(dest,'= true;','break;','}','++',j,';','}','++',i,';','}','}','else {');}body.push('while(',i,'<',len1,') {');writeCondition(expr.op,[val1,'[',i,']'].join(''),val2);body.push(dest,'= true;','break;','}','++',i,';','}');isRightArgLiteral||body.push('}');body.push('}');if(!isRightArgLiteral){body.push('else if(',isVal2Array,') {',len2,'=',val2,'.length;','while(',i,'<',len2,') {');writeCondition(expr.op,val1,[val2,'[',i,']'].join(''));body.push(dest,'= true;','break;','}','++',i,';','}','}');}body.push('else {',dest,'=',binaryOperators[expr.op](val1,val2),';','}');releaseVars(val1,val2,isVal1Array,isVal2Array,i,j,len1,len2);}function writeCondition(op,val1Expr,val2Expr){body.push('if(',binaryOperators[op](val1Expr,val2Expr),') {');}function translateLogicalExpr(expr,dest,ctx){var conditionVars=[],args=expr.args,len=args.length,i=0,val;body.push(dest,'= false;');switch(expr.op){case'&&':while(i<len){conditionVars.push(val=acquireVar());translateExpr(args[i],val,ctx);body.push('if(',convertToBool(args[i++],val),') {');}body.push(dest,'= true;');break;case'||':while(i<len){conditionVars.push(val=acquireVar());translateExpr(args[i],val,ctx);body.push('if(',convertToBool(args[i],val),') {',dest,'= true;','}');if(i++ +1<len){body.push('else {');}}--len;break;}while(len--){body.push('}');}releaseVars.apply(null,conditionVars);}function translateMathExpr(expr,dest,ctx){var val1=acquireVar(),val2=acquireVar(),args=expr.args;translateExpr(args[0],val1,ctx);translateExpr(args[1],val2,ctx);body.push(dest,'=',binaryOperators[expr.op](convertToSingleValue(args[0],val1),convertToSingleValue(args[1],val2)),';');releaseVars(val1,val2);}function translateUnaryExpr(expr,dest,ctx){var val=acquireVar(),arg=expr.arg;translateExpr(arg,val,ctx);switch(expr.op){case'!':body.push(dest,'= !',convertToBool(arg,val)+';');break;case'-':body.push(dest,'= -',convertToSingleValue(arg,val)+';');break;}releaseVars(val);}function translateConcatExpr(expr,dest,ctx){var argVars=[],args=expr.args,len=args.length,i=0;while(i<len){argVars.push(acquireVar());translateExpr(args[i],argVars[i++],ctx);}body.push(dest,'= concat.call(',argVars.join(','),');');releaseVars.apply(null,argVars);}function escapeStr(s){return '\''+s.replace(/\\/g,'\\\\').replace(/'/g,'\\\'')+'\'';}function inlineAppendToArray(res,val,tmpArr,len){body.push('if(typeof ',val,'!== "undefined") {','if(isArr(',val,')) {');if(tmpArr){body.push(len,'> 1?');inlinePushToArray(tmpArr,val);body.push(':');}body.push(res,'=',res,'.length?',res,'.concat(',val,') :',val,'.slice()',';','}','else {');tmpArr&&body.push('if(',tmpArr,'.length) {',res,'= concat.apply(',res,',',tmpArr,');',tmpArr,'= [];','}');inlinePushToArray(res,val);body.push(';','}','}');}function inlinePushToArray(res,val){body.push(res,'.length?',res,'.push(',val,') :',res,'[0] =',val);}function convertToBool(arg,varName){switch(arg.type){case SYNTAX.LOGICAL_EXPR:return varName;case SYNTAX.LITERAL:return '!!'+varName;case SYNTAX.PATH:return varName+'.length > 0';default:return ['(typeof ',varName,'=== "boolean"?',varName,':','isArr(',varName,')?',varName,'.length > 0 : !!',varName,')'].join('');}}function convertToSingleValue(arg,varName){switch(arg.type){case SYNTAX.LITERAL:return varName;case SYNTAX.PATH:return varName+'[0]';default:return ['(isArr(',varName,')?',varName,'[0] : ',varName,')'].join('');}}function startsWithStrict(val1,val2){return ['typeof ',val1,'=== "string" && typeof ',val2,'=== "string" &&',val1,'.indexOf(',val2,') === 0'].join('');}function startsWith(val1,val2){return [val1,'!= null &&',val2,'!= null &&',val1,'.toString().toLowerCase().indexOf(',val2,'.toString().toLowerCase()) === 0'].join('');}function endsWithStrict(val1,val2){return ['typeof ',val1,'=== "string" && typeof ',val2,'=== "string" &&',val1,'.length >=',val2,'.length &&',val1,'.lastIndexOf(',val2,') ===',val1,'.length -',val2,'.length'].join('');}function endsWith(val1,val2){return [val1,'!= null &&',val2,'!= null &&','(',val1,'=',val1,'.toString()).length >=','(',val2,'=',val2,'.toString()).length &&','(',val1,'.toLowerCase()).lastIndexOf(','(',val2,'.toLowerCase())) ===',val1,'.length -',val2,'.length'].join('');}function containsStrict(val1,val2){return ['typeof ',val1,'=== "string" && typeof ',val2,'=== "string" &&',val1,'.indexOf(',val2,') > -1'].join('');}function contains(val1,val2){return [val1,'!= null && ',val2,'!= null &&',val1,'.toString().toLowerCase().indexOf(',val2,'.toString().toLowerCase()) > -1'].join('');}var binaryOperators={'===':function _(val1,val2){return val1+'==='+val2;},'==':function _(val1,val2){return ['typeof ',val1,'=== "string" && typeof ',val2,'=== "string"?',val1,'.toLowerCase() ===',val2,'.toLowerCase() :'+val1,'==',val2].join('');},'>=':function _(val1,val2){return val1+'>='+val2;},'>':function _(val1,val2){return val1+'>'+val2;},'<=':function _(val1,val2){return val1+'<='+val2;},'<':function _(val1,val2){return val1+'<'+val2;},'!==':function _(val1,val2){return val1+'!=='+val2;},'!=':function _(val1,val2){return val1+'!='+val2;},'^==':startsWithStrict,'==^':function _(val1,val2){return startsWithStrict(val2,val1);},'^=':startsWith,'=^':function _(val1,val2){return startsWith(val2,val1);},'$==':endsWithStrict,'==$':function $(val1,val2){return endsWithStrict(val2,val1);},'$=':endsWith,'=$':function $(val1,val2){return endsWith(val2,val1);},'*==':containsStrict,'==*':function _(val1,val2){return containsStrict(val2,val1);},'=*':function _(val1,val2){return contains(val2,val1);},'*=':contains,'+':function _(val1,val2){return val1+'+'+val2;},'-':function _(val1,val2){return val1+'-'+val2;},'*':function _(val1,val2){return val1+'*'+val2;},'/':function _(val1,val2){return val1+'/'+val2;},'%':function _(val1,val2){return val1+'%'+val2;}};return translate;}();function compile(path){return Function('data,subst',translate(parse(path)));}var cache={},cacheKeys=[],params={cacheSize:100},setParamsHooks={cacheSize:function cacheSize(oldVal,newVal){if(newVal<oldVal&&cacheKeys.length>newVal){var removedKeys=cacheKeys.splice(0,cacheKeys.length-newVal),i=removedKeys.length;while(i--){delete cache[removedKeys[i]];}}}};var decl=function decl(path,ctx,substs){if(!cache[path]){cache[path]=compile(path);if(cacheKeys.push(path)>params.cacheSize){delete cache[cacheKeys.shift()];}}return cache[path](ctx,substs||{});};decl.version='0.3.4';decl.params=function(_params){if(!arguments.length){return params;}for(var name in _params){if(_params.hasOwnProperty(name)){setParamsHooks[name]&&setParamsHooks[name](params[name],_params[name]);params[name]=_params[name];}}};decl.compile=compile;decl.apply=decl;if((typeof module==='undefined'?'undefined':_typeof(module))==='object'&&_typeof(module.exports)==='object'){module.exports=decl;}else if((typeof modules==='undefined'?'undefined':_typeof(modules))==='object'){modules.define('jspath',function(provide){provide(decl);});}else {window.JSPath=decl;}})();},{}],374:[function(require,module,exports){var getNative=require('./_getNative'),root=require('./_root');/* Built-in method references that are verified to be native. */var DataView=getNative(root,'DataView');module.exports=DataView;},{"./_getNative":436,"./_root":474}],375:[function(require,module,exports){var hashClear=require('./_hashClear'),hashDelete=require('./_hashDelete'),hashGet=require('./_hashGet'),hashHas=require('./_hashHas'),hashSet=require('./_hashSet');/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}// Add methods to `Hash`.
	Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;module.exports=Hash;},{"./_hashClear":442,"./_hashDelete":443,"./_hashGet":444,"./_hashHas":445,"./_hashSet":446}],376:[function(require,module,exports){var listCacheClear=require('./_listCacheClear'),listCacheDelete=require('./_listCacheDelete'),listCacheGet=require('./_listCacheGet'),listCacheHas=require('./_listCacheHas'),listCacheSet=require('./_listCacheSet');/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}// Add methods to `ListCache`.
	ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module.exports=ListCache;},{"./_listCacheClear":455,"./_listCacheDelete":456,"./_listCacheGet":457,"./_listCacheHas":458,"./_listCacheSet":459}],377:[function(require,module,exports){var getNative=require('./_getNative'),root=require('./_root');/* Built-in method references that are verified to be native. */var Map=getNative(root,'Map');module.exports=Map;},{"./_getNative":436,"./_root":474}],378:[function(require,module,exports){var mapCacheClear=require('./_mapCacheClear'),mapCacheDelete=require('./_mapCacheDelete'),mapCacheGet=require('./_mapCacheGet'),mapCacheHas=require('./_mapCacheHas'),mapCacheSet=require('./_mapCacheSet');/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}// Add methods to `MapCache`.
	MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;module.exports=MapCache;},{"./_mapCacheClear":460,"./_mapCacheDelete":461,"./_mapCacheGet":462,"./_mapCacheHas":463,"./_mapCacheSet":464}],379:[function(require,module,exports){var getNative=require('./_getNative'),root=require('./_root');/* Built-in method references that are verified to be native. */var Promise=getNative(root,'Promise');module.exports=Promise;},{"./_getNative":436,"./_root":474}],380:[function(require,module,exports){var getNative=require('./_getNative'),root=require('./_root');/* Built-in method references that are verified to be native. */var Set=getNative(root,'Set');module.exports=Set;},{"./_getNative":436,"./_root":474}],381:[function(require,module,exports){var MapCache=require('./_MapCache'),setCacheAdd=require('./_setCacheAdd'),setCacheHas=require('./_setCacheHas');/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}// Add methods to `SetCache`.
	SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;module.exports=SetCache;},{"./_MapCache":378,"./_setCacheAdd":475,"./_setCacheHas":476}],382:[function(require,module,exports){var ListCache=require('./_ListCache'),stackClear=require('./_stackClear'),stackDelete=require('./_stackDelete'),stackGet=require('./_stackGet'),stackHas=require('./_stackHas'),stackSet=require('./_stackSet');/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}// Add methods to `Stack`.
	Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module.exports=Stack;},{"./_ListCache":376,"./_stackClear":480,"./_stackDelete":481,"./_stackGet":482,"./_stackHas":483,"./_stackSet":484}],383:[function(require,module,exports){var root=require('./_root');/** Built-in value references. */var _Symbol=root.Symbol;module.exports=_Symbol;},{"./_root":474}],384:[function(require,module,exports){var root=require('./_root');/** Built-in value references. */var Uint8Array=root.Uint8Array;module.exports=Uint8Array;},{"./_root":474}],385:[function(require,module,exports){var getNative=require('./_getNative'),root=require('./_root');/* Built-in method references that are verified to be native. */var WeakMap=getNative(root,'WeakMap');module.exports=WeakMap;},{"./_getNative":436,"./_root":474}],386:[function(require,module,exports){/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}module.exports=apply;},{}],387:[function(require,module,exports){/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}module.exports=arrayFilter;},{}],388:[function(require,module,exports){var baseTimes=require('./_baseTimes'),isArguments=require('./isArguments'),isArray=require('./isArray'),isBuffer=require('./isBuffer'),isIndex=require('./_isIndex'),isTypedArray=require('./isTypedArray');/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
	key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
	isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
	isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
	isIndex(key,length)))){result.push(key);}}return result;}module.exports=arrayLikeKeys;},{"./_baseTimes":418,"./_isIndex":448,"./isArguments":493,"./isArray":494,"./isBuffer":496,"./isTypedArray":502}],389:[function(require,module,exports){/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}module.exports=arrayMap;},{}],390:[function(require,module,exports){/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}module.exports=arrayPush;},{}],391:[function(require,module,exports){/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}module.exports=arraySome;},{}],392:[function(require,module,exports){var eq=require('./eq');/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return -1;}module.exports=assocIndexOf;},{"./eq":489}],393:[function(require,module,exports){var baseForOwn=require('./_baseForOwn'),createBaseEach=require('./_createBaseEach');/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */var baseEach=createBaseEach(baseForOwn);module.exports=baseEach;},{"./_baseForOwn":396,"./_createBaseEach":426}],394:[function(require,module,exports){var arrayPush=require('./_arrayPush'),isFlattenable=require('./_isFlattenable');/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
	baseFlatten(value,depth-1,predicate,isStrict,result);}else {arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}module.exports=baseFlatten;},{"./_arrayPush":390,"./_isFlattenable":447}],395:[function(require,module,exports){var createBaseFor=require('./_createBaseFor');/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */var baseFor=createBaseFor();module.exports=baseFor;},{"./_createBaseFor":427}],396:[function(require,module,exports){var baseFor=require('./_baseFor'),keys=require('./keys');/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}module.exports=baseForOwn;},{"./_baseFor":395,"./keys":503}],397:[function(require,module,exports){var castPath=require('./_castPath'),toKey=require('./_toKey');/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;}module.exports=baseGet;},{"./_castPath":422,"./_toKey":486}],398:[function(require,module,exports){var arrayPush=require('./_arrayPush'),isArray=require('./isArray');/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}module.exports=baseGetAllKeys;},{"./_arrayPush":390,"./isArray":494}],399:[function(require,module,exports){var _Symbol2=require('./_Symbol'),getRawTag=require('./_getRawTag'),objectToString=require('./_objectToString');/** `Object#toString` result references. */var nullTag='[object Null]',undefinedTag='[object Undefined]';/** Built-in value references. */var symToStringTag=_Symbol2?_Symbol2.toStringTag:undefined;/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}module.exports=baseGetTag;},{"./_Symbol":383,"./_getRawTag":437,"./_objectToString":471}],400:[function(require,module,exports){/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */function baseHasIn(object,key){return object!=null&&key in Object(object);}module.exports=baseHasIn;},{}],401:[function(require,module,exports){var baseGetTag=require('./_baseGetTag'),isObjectLike=require('./isObjectLike');/** `Object#toString` result references. */var argsTag='[object Arguments]';/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}module.exports=baseIsArguments;},{"./_baseGetTag":399,"./isObjectLike":500}],402:[function(require,module,exports){var baseIsEqualDeep=require('./_baseIsEqualDeep'),isObjectLike=require('./isObjectLike');/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}module.exports=baseIsEqual;},{"./_baseIsEqualDeep":403,"./isObjectLike":500}],403:[function(require,module,exports){var Stack=require('./_Stack'),equalArrays=require('./_equalArrays'),equalByTag=require('./_equalByTag'),equalObjects=require('./_equalObjects'),getTag=require('./_getTag'),isArray=require('./isArray'),isBuffer=require('./isBuffer'),isTypedArray=require('./isTypedArray');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1;/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',objectTag='[object Object]';/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}module.exports=baseIsEqualDeep;},{"./_Stack":382,"./_equalArrays":429,"./_equalByTag":430,"./_equalObjects":431,"./_getTag":439,"./isArray":494,"./isBuffer":496,"./isTypedArray":502}],404:[function(require,module,exports){var Stack=require('./_Stack'),baseIsEqual=require('./_baseIsEqual');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return !length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else {var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}module.exports=baseIsMatch;},{"./_Stack":382,"./_baseIsEqual":402}],405:[function(require,module,exports){var isFunction=require('./isFunction'),isMasked=require('./_isMasked'),isObject=require('./isObject'),toSource=require('./_toSource');/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used for built-in method references. */var funcProto=Function.prototype,objectProto=Object.prototype;/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}module.exports=baseIsNative;},{"./_isMasked":452,"./_toSource":487,"./isFunction":497,"./isObject":499}],406:[function(require,module,exports){var baseGetTag=require('./_baseGetTag'),isLength=require('./isLength'),isObjectLike=require('./isObjectLike');/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',funcTag='[object Function]',mapTag='[object Map]',numberTag='[object Number]',objectTag='[object Object]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',weakMapTag='[object WeakMap]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}module.exports=baseIsTypedArray;},{"./_baseGetTag":399,"./isLength":498,"./isObjectLike":500}],407:[function(require,module,exports){var baseMatches=require('./_baseMatches'),baseMatchesProperty=require('./_baseMatchesProperty'),identity=require('./identity'),isArray=require('./isArray'),property=require('./property');/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	if(typeof value=='function'){return value;}if(value==null){return identity;}if((typeof value==='undefined'?'undefined':_typeof(value))=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}module.exports=baseIteratee;},{"./_baseMatches":410,"./_baseMatchesProperty":411,"./identity":492,"./isArray":494,"./property":505}],408:[function(require,module,exports){var isPrototype=require('./_isPrototype'),nativeKeys=require('./_nativeKeys');/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}module.exports=baseKeys;},{"./_isPrototype":453,"./_nativeKeys":469}],409:[function(require,module,exports){var baseEach=require('./_baseEach'),isArrayLike=require('./isArrayLike');/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}module.exports=baseMap;},{"./_baseEach":393,"./isArrayLike":495}],410:[function(require,module,exports){var baseIsMatch=require('./_baseIsMatch'),getMatchData=require('./_getMatchData'),matchesStrictComparable=require('./_matchesStrictComparable');/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}module.exports=baseMatches;},{"./_baseIsMatch":404,"./_getMatchData":435,"./_matchesStrictComparable":466}],411:[function(require,module,exports){var baseIsEqual=require('./_baseIsEqual'),get=require('./get'),hasIn=require('./hasIn'),isKey=require('./_isKey'),isStrictComparable=require('./_isStrictComparable'),matchesStrictComparable=require('./_matchesStrictComparable'),toKey=require('./_toKey');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}module.exports=baseMatchesProperty;},{"./_baseIsEqual":402,"./_isKey":450,"./_isStrictComparable":454,"./_matchesStrictComparable":466,"./_toKey":486,"./get":490,"./hasIn":491}],412:[function(require,module,exports){var arrayMap=require('./_arrayMap'),baseGet=require('./_baseGet'),baseIteratee=require('./_baseIteratee'),baseMap=require('./_baseMap'),baseSortBy=require('./_baseSortBy'),baseUnary=require('./_baseUnary'),compareMultiple=require('./_compareMultiple'),identity=require('./identity'),isArray=require('./isArray');/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap(iteratees,function(iteratee){if(isArray(iteratee)){return function(value){return baseGet(value,iteratee.length===1?iteratee[0]:iteratee);};}return iteratee;});}else {iteratees=[identity];}var index=-1;iteratees=arrayMap(iteratees,baseUnary(baseIteratee));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return {'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}module.exports=baseOrderBy;},{"./_arrayMap":389,"./_baseGet":397,"./_baseIteratee":407,"./_baseMap":409,"./_baseSortBy":417,"./_baseUnary":420,"./_compareMultiple":424,"./identity":492,"./isArray":494}],413:[function(require,module,exports){/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */function baseProperty(key){return function(object){return object==null?undefined:object[key];};}module.exports=baseProperty;},{}],414:[function(require,module,exports){var baseGet=require('./_baseGet');/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}module.exports=basePropertyDeep;},{"./_baseGet":397}],415:[function(require,module,exports){var identity=require('./identity'),overRest=require('./_overRest'),setToString=require('./_setToString');/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}module.exports=baseRest;},{"./_overRest":473,"./_setToString":478,"./identity":492}],416:[function(require,module,exports){var constant=require('./constant'),defineProperty=require('./_defineProperty'),identity=require('./identity');/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};module.exports=baseSetToString;},{"./_defineProperty":428,"./constant":488,"./identity":492}],417:[function(require,module,exports){/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}module.exports=baseSortBy;},{}],418:[function(require,module,exports){/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}module.exports=baseTimes;},{}],419:[function(require,module,exports){var _Symbol3=require('./_Symbol'),arrayMap=require('./_arrayMap'),isArray=require('./isArray'),isSymbol=require('./isSymbol');/** Used as references for various `Number` constants. */var INFINITY=1/0;/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol3?_Symbol3.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
	if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
	return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}module.exports=baseToString;},{"./_Symbol":383,"./_arrayMap":389,"./isArray":494,"./isSymbol":501}],420:[function(require,module,exports){/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */function baseUnary(func){return function(value){return func(value);};}module.exports=baseUnary;},{}],421:[function(require,module,exports){/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */function cacheHas(cache,key){return cache.has(key);}module.exports=cacheHas;},{}],422:[function(require,module,exports){var isArray=require('./isArray'),isKey=require('./_isKey'),stringToPath=require('./_stringToPath'),toString=require('./toString');/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}module.exports=castPath;},{"./_isKey":450,"./_stringToPath":485,"./isArray":494,"./toString":509}],423:[function(require,module,exports){var isSymbol=require('./isSymbol');/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return -1;}}return 0;}module.exports=compareAscending;},{"./isSymbol":501}],424:[function(require,module,exports){var compareAscending=require('./_compareAscending');/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	// that causes it, under certain circumstances, to provide the same value for
	// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	// for more details.
	//
	// This also ensures a stable sort in V8 and other engines.
	// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	return object.index-other.index;}module.exports=compareMultiple;},{"./_compareAscending":423}],425:[function(require,module,exports){var root=require('./_root');/** Used to detect overreaching core-js shims. */var coreJsData=root['__core-js_shared__'];module.exports=coreJsData;},{"./_root":474}],426:[function(require,module,exports){var isArrayLike=require('./isArrayLike');/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}module.exports=createBaseEach;},{"./isArrayLike":495}],427:[function(require,module,exports){/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}module.exports=createBaseFor;},{}],428:[function(require,module,exports){var getNative=require('./_getNative');var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();module.exports=defineProperty;},{"./_getNative":436}],429:[function(require,module,exports){var SetCache=require('./_SetCache'),arraySome=require('./_arraySome'),cacheHas=require('./_cacheHas');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Check that cyclic values are equal.
	var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
	while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
	if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}module.exports=equalArrays;},{"./_SetCache":381,"./_arraySome":391,"./_cacheHas":421}],430:[function(require,module,exports){var _Symbol4=require('./_Symbol'),Uint8Array=require('./_Uint8Array'),eq=require('./eq'),equalArrays=require('./_equalArrays'),mapToArray=require('./_mapToArray'),setToArray=require('./_setToArray');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** `Object#toString` result references. */var boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',mapTag='[object Map]',numberTag='[object Number]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]';/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol4?_Symbol4.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
	// Invalid dates are coerced to `NaN`.
	return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
	// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	// for more details.
	return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
	var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
	stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}module.exports=equalByTag;},{"./_Symbol":383,"./_Uint8Array":384,"./_equalArrays":429,"./_mapToArray":465,"./_setToArray":477,"./eq":489}],431:[function(require,module,exports){var getAllKeys=require('./_getAllKeys');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1;/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Check that cyclic values are equal.
	var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
	if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
	if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}module.exports=equalObjects;},{"./_getAllKeys":433}],432:[function(require,module,exports){(function(global){(function(){/** Detect free variable `global` from Node.js. */var freeGlobal=(typeof global==='undefined'?'undefined':_typeof(global))=='object'&&global&&global.Object===Object&&global;module.exports=freeGlobal;}).call(this);}).call(this,typeof commonjsGlobal!=="undefined"?commonjsGlobal:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],433:[function(require,module,exports){var baseGetAllKeys=require('./_baseGetAllKeys'),getSymbols=require('./_getSymbols'),keys=require('./keys');/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}module.exports=getAllKeys;},{"./_baseGetAllKeys":398,"./_getSymbols":438,"./keys":503}],434:[function(require,module,exports){var isKeyable=require('./_isKeyable');/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}module.exports=getMapData;},{"./_isKeyable":451}],435:[function(require,module,exports){var isStrictComparable=require('./_isStrictComparable'),keys=require('./keys');/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}module.exports=getMatchData;},{"./_isStrictComparable":454,"./keys":503}],436:[function(require,module,exports){var baseIsNative=require('./_baseIsNative'),getValue=require('./_getValue');/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined;}module.exports=getNative;},{"./_baseIsNative":405,"./_getValue":440}],437:[function(require,module,exports){var _Symbol5=require('./_Symbol');/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */var nativeObjectToString=objectProto.toString;/** Built-in value references. */var symToStringTag=_Symbol5?_Symbol5.toStringTag:undefined;/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else {delete value[symToStringTag];}}return result;}module.exports=getRawTag;},{"./_Symbol":383}],438:[function(require,module,exports){var arrayFilter=require('./_arrayFilter'),stubArray=require('./stubArray');/** Used for built-in method references. */var objectProto=Object.prototype;/** Built-in value references. */var propertyIsEnumerable=objectProto.propertyIsEnumerable;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeGetSymbols=Object.getOwnPropertySymbols;/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return [];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};module.exports=getSymbols;},{"./_arrayFilter":387,"./stubArray":507}],439:[function(require,module,exports){var DataView=require('./_DataView'),Map=require('./_Map'),Promise=require('./_Promise'),Set=require('./_Set'),WeakMap=require('./_WeakMap'),baseGetTag=require('./_baseGetTag'),toSource=require('./_toSource');/** `Object#toString` result references. */var mapTag='[object Map]',objectTag='[object Object]',promiseTag='[object Promise]',setTag='[object Set]',weakMapTag='[object WeakMap]';var dataViewTag='[object DataView]';/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}module.exports=getTag;},{"./_DataView":374,"./_Map":377,"./_Promise":379,"./_Set":380,"./_WeakMap":385,"./_baseGetTag":399,"./_toSource":487}],440:[function(require,module,exports){/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */function getValue(object,key){return object==null?undefined:object[key];}module.exports=getValue;},{}],441:[function(require,module,exports){var castPath=require('./_castPath'),isArguments=require('./isArguments'),isArray=require('./isArray'),isIndex=require('./_isIndex'),isLength=require('./isLength'),toKey=require('./_toKey');/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return !!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}module.exports=hasPath;},{"./_castPath":422,"./_isIndex":448,"./_toKey":486,"./isArguments":493,"./isArray":494,"./isLength":498}],442:[function(require,module,exports){var nativeCreate=require('./_nativeCreate');/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}module.exports=hashClear;},{"./_nativeCreate":468}],443:[function(require,module,exports){/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}module.exports=hashDelete;},{}],444:[function(require,module,exports){var nativeCreate=require('./_nativeCreate');/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;}module.exports=hashGet;},{"./_nativeCreate":468}],445:[function(require,module,exports){var nativeCreate=require('./_nativeCreate');/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);}module.exports=hashHas;},{"./_nativeCreate":468}],446:[function(require,module,exports){var nativeCreate=require('./_nativeCreate');/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;}module.exports=hashSet;},{"./_nativeCreate":468}],447:[function(require,module,exports){var _Symbol6=require('./_Symbol'),isArguments=require('./isArguments'),isArray=require('./isArray');/** Built-in value references. */var spreadableSymbol=_Symbol6?_Symbol6.isConcatSpreadable:undefined;/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}module.exports=isFlattenable;},{"./_Symbol":383,"./isArguments":493,"./isArray":494}],448:[function(require,module,exports){/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER=9007199254740991;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */function isIndex(value,length){var type=typeof value==='undefined'?'undefined':_typeof(value);length=length==null?MAX_SAFE_INTEGER:length;return !!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}module.exports=isIndex;},{}],449:[function(require,module,exports){var eq=require('./eq'),isArrayLike=require('./isArrayLike'),isIndex=require('./_isIndex'),isObject=require('./isObject');/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index==='undefined'?'undefined':_typeof(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}module.exports=isIterateeCall;},{"./_isIndex":448,"./eq":489,"./isArrayLike":495,"./isObject":499}],450:[function(require,module,exports){var isArray=require('./isArray'),isSymbol=require('./isSymbol');/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value==='undefined'?'undefined':_typeof(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}module.exports=isKey;},{"./isArray":494,"./isSymbol":501}],451:[function(require,module,exports){/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */function isKeyable(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}module.exports=isKeyable;},{}],452:[function(require,module,exports){var coreJsData=require('./_coreJsData');/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */function isMasked(func){return !!maskSrcKey&&maskSrcKey in func;}module.exports=isMasked;},{"./_coreJsData":425}],453:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype;/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}module.exports=isPrototype;},{}],454:[function(require,module,exports){var isObject=require('./isObject');/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */function isStrictComparable(value){return value===value&&!isObject(value);}module.exports=isStrictComparable;},{"./isObject":499}],455:[function(require,module,exports){/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */function listCacheClear(){this.__data__=[];this.size=0;}module.exports=listCacheClear;},{}],456:[function(require,module,exports){var assocIndexOf=require('./_assocIndexOf');/** Used for built-in method references. */var arrayProto=Array.prototype;/** Built-in value references. */var splice=arrayProto.splice;/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else {splice.call(data,index,1);}--this.size;return true;}module.exports=listCacheDelete;},{"./_assocIndexOf":392}],457:[function(require,module,exports){var assocIndexOf=require('./_assocIndexOf');/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];}module.exports=listCacheGet;},{"./_assocIndexOf":392}],458:[function(require,module,exports){var assocIndexOf=require('./_assocIndexOf');/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}module.exports=listCacheHas;},{"./_assocIndexOf":392}],459:[function(require,module,exports){var assocIndexOf=require('./_assocIndexOf');/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else {data[index][1]=value;}return this;}module.exports=listCacheSet;},{"./_assocIndexOf":392}],460:[function(require,module,exports){var Hash=require('./_Hash'),ListCache=require('./_ListCache'),Map=require('./_Map');/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}module.exports=mapCacheClear;},{"./_Hash":375,"./_ListCache":376,"./_Map":377}],461:[function(require,module,exports){var getMapData=require('./_getMapData');/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}module.exports=mapCacheDelete;},{"./_getMapData":434}],462:[function(require,module,exports){var getMapData=require('./_getMapData');/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */function mapCacheGet(key){return getMapData(this,key).get(key);}module.exports=mapCacheGet;},{"./_getMapData":434}],463:[function(require,module,exports){var getMapData=require('./_getMapData');/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */function mapCacheHas(key){return getMapData(this,key).has(key);}module.exports=mapCacheHas;},{"./_getMapData":434}],464:[function(require,module,exports){var getMapData=require('./_getMapData');/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}module.exports=mapCacheSet;},{"./_getMapData":434}],465:[function(require,module,exports){/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}module.exports=mapToArray;},{}],466:[function(require,module,exports){/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object));};}module.exports=matchesStrictComparable;},{}],467:[function(require,module,exports){var memoize=require('./memoize');/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}module.exports=memoizeCapped;},{"./memoize":504}],468:[function(require,module,exports){var getNative=require('./_getNative');/* Built-in method references that are verified to be native. */var nativeCreate=getNative(Object,'create');module.exports=nativeCreate;},{"./_getNative":436}],469:[function(require,module,exports){var overArg=require('./_overArg');/* Built-in method references for those with the same name as other `lodash` methods. */var nativeKeys=overArg(Object.keys,Object);module.exports=nativeKeys;},{"./_overArg":472}],470:[function(require,module,exports){var freeGlobal=require('./_freeGlobal');/** Detect free variable `exports`. */var freeExports=(typeof exports==='undefined'?'undefined':_typeof(exports))=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&(typeof module==='undefined'?'undefined':_typeof(module))=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
	var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
	return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();module.exports=nodeUtil;},{"./_freeGlobal":432}],471:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype;/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */var nativeObjectToString=objectProto.toString;/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */function objectToString(value){return nativeObjectToString.call(value);}module.exports=objectToString;},{}],472:[function(require,module,exports){/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */function overArg(func,transform){return function(arg){return func(transform(arg));};}module.exports=overArg;},{}],473:[function(require,module,exports){var apply=require('./_apply');/* Built-in method references for those with the same name as other `lodash` methods. */var nativeMax=Math.max;/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}module.exports=overRest;},{"./_apply":386}],474:[function(require,module,exports){var freeGlobal=require('./_freeGlobal');/** Detect free variable `self`. */var freeSelf=(typeof self==='undefined'?'undefined':_typeof(self))=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();module.exports=root;},{"./_freeGlobal":432}],475:[function(require,module,exports){/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}module.exports=setCacheAdd;},{}],476:[function(require,module,exports){/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */function setCacheHas(value){return this.__data__.has(value);}module.exports=setCacheHas;},{}],477:[function(require,module,exports){/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}module.exports=setToArray;},{}],478:[function(require,module,exports){var baseSetToString=require('./_baseSetToString'),shortOut=require('./_shortOut');/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */var setToString=shortOut(baseSetToString);module.exports=setToString;},{"./_baseSetToString":416,"./_shortOut":479}],479:[function(require,module,exports){/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeNow=Date.now;/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else {count=0;}return func.apply(undefined,arguments);};}module.exports=shortOut;},{}],480:[function(require,module,exports){var ListCache=require('./_ListCache');/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */function stackClear(){this.__data__=new ListCache();this.size=0;}module.exports=stackClear;},{"./_ListCache":376}],481:[function(require,module,exports){/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}module.exports=stackDelete;},{}],482:[function(require,module,exports){/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */function stackGet(key){return this.__data__.get(key);}module.exports=stackGet;},{}],483:[function(require,module,exports){/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */function stackHas(key){return this.__data__.has(key);}module.exports=stackHas;},{}],484:[function(require,module,exports){var ListCache=require('./_ListCache'),Map=require('./_Map'),MapCache=require('./_MapCache');/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}module.exports=stackSet;},{"./_ListCache":376,"./_Map":377,"./_MapCache":378}],485:[function(require,module,exports){var memoizeCapped=require('./_memoizeCapped');/** Used to match property names within property paths. */var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});module.exports=stringToPath;},{"./_memoizeCapped":467}],486:[function(require,module,exports){var isSymbol=require('./isSymbol');/** Used as references for various `Number` constants. */var INFINITY=1/0;/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}module.exports=toKey;},{"./isSymbol":501}],487:[function(require,module,exports){/** Used for built-in method references. */var funcProto=Function.prototype;/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return '';}module.exports=toSource;},{}],488:[function(require,module,exports){/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */function constant(value){return function(){return value;};}module.exports=constant;},{}],489:[function(require,module,exports){/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */function eq(value,other){return value===other||value!==value&&other!==other;}module.exports=eq;},{}],490:[function(require,module,exports){var baseGet=require('./_baseGet');/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;}module.exports=get;},{"./_baseGet":397}],491:[function(require,module,exports){var baseHasIn=require('./_baseHasIn'),hasPath=require('./_hasPath');/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}module.exports=hasIn;},{"./_baseHasIn":400,"./_hasPath":441}],492:[function(require,module,exports){/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */function identity(value){return value;}module.exports=identity;},{}],493:[function(require,module,exports){var baseIsArguments=require('./_baseIsArguments'),isObjectLike=require('./isObjectLike');/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Built-in value references. */var propertyIsEnumerable=objectProto.propertyIsEnumerable;/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};module.exports=isArguments;},{"./_baseIsArguments":401,"./isObjectLike":500}],494:[function(require,module,exports){/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */var isArray=Array.isArray;module.exports=isArray;},{}],495:[function(require,module,exports){var isFunction=require('./isFunction'),isLength=require('./isLength');/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}module.exports=isArrayLike;},{"./isFunction":497,"./isLength":498}],496:[function(require,module,exports){var root=require('./_root'),stubFalse=require('./stubFalse');/** Detect free variable `exports`. */var freeExports=(typeof exports==='undefined'?'undefined':_typeof(exports))=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&(typeof module==='undefined'?'undefined':_typeof(module))=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Built-in value references. */var Buffer=moduleExports?root.Buffer:undefined;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeIsBuffer=Buffer?Buffer.isBuffer:undefined;/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */var isBuffer=nativeIsBuffer||stubFalse;module.exports=isBuffer;},{"./_root":474,"./stubFalse":508}],497:[function(require,module,exports){var baseGetTag=require('./_baseGetTag'),isObject=require('./isObject');/** `Object#toString` result references. */var asyncTag='[object AsyncFunction]',funcTag='[object Function]',genTag='[object GeneratorFunction]',proxyTag='[object Proxy]';/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
	// in Safari 9 which returns 'object' for typed arrays and other constructors.
	var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}module.exports=isFunction;},{"./_baseGetTag":399,"./isObject":499}],498:[function(require,module,exports){/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER=9007199254740991;/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}module.exports=isLength;},{}],499:[function(require,module,exports){/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */function isObject(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return value!=null&&(type=='object'||type=='function');}module.exports=isObject;},{}],500:[function(require,module,exports){/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */function isObjectLike(value){return value!=null&&(typeof value==='undefined'?'undefined':_typeof(value))=='object';}module.exports=isObjectLike;},{}],501:[function(require,module,exports){var baseGetTag=require('./_baseGetTag'),isObjectLike=require('./isObjectLike');/** `Object#toString` result references. */var symbolTag='[object Symbol]';/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */function isSymbol(value){return (typeof value==='undefined'?'undefined':_typeof(value))=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}module.exports=isSymbol;},{"./_baseGetTag":399,"./isObjectLike":500}],502:[function(require,module,exports){var baseIsTypedArray=require('./_baseIsTypedArray'),baseUnary=require('./_baseUnary'),nodeUtil=require('./_nodeUtil');/* Node.js helper references. */var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;module.exports=isTypedArray;},{"./_baseIsTypedArray":406,"./_baseUnary":420,"./_nodeUtil":470}],503:[function(require,module,exports){var arrayLikeKeys=require('./_arrayLikeKeys'),baseKeys=require('./_baseKeys'),isArrayLike=require('./isArrayLike');/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}module.exports=keys;},{"./_arrayLikeKeys":388,"./_baseKeys":408,"./isArrayLike":495}],504:[function(require,module,exports){var MapCache=require('./_MapCache');/** Error message constants. */var FUNC_ERROR_TEXT='Expected a function';/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
	memoize.Cache=MapCache;module.exports=memoize;},{"./_MapCache":378}],505:[function(require,module,exports){var baseProperty=require('./_baseProperty'),basePropertyDeep=require('./_basePropertyDeep'),isKey=require('./_isKey'),toKey=require('./_toKey');/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}module.exports=property;},{"./_baseProperty":413,"./_basePropertyDeep":414,"./_isKey":450,"./_toKey":486}],506:[function(require,module,exports){var baseFlatten=require('./_baseFlatten'),baseOrderBy=require('./_baseOrderBy'),baseRest=require('./_baseRest'),isIterateeCall=require('./_isIterateeCall');/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 30 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, [function(o) { return o.user; }]);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
	 */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return [];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});module.exports=sortBy;},{"./_baseFlatten":394,"./_baseOrderBy":412,"./_baseRest":415,"./_isIterateeCall":449}],507:[function(require,module,exports){/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */function stubArray(){return [];}module.exports=stubArray;},{}],508:[function(require,module,exports){/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */function stubFalse(){return false;}module.exports=stubFalse;},{}],509:[function(require,module,exports){var baseToString=require('./_baseToString');/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */function toString(value){return value==null?'':baseToString(value);}module.exports=toString;},{"./_baseToString":419}],510:[function(require,module,exports){var Yallist=require('yallist');var MAX=Symbol('max');var LENGTH=Symbol('length');var LENGTH_CALCULATOR=Symbol('lengthCalculator');var ALLOW_STALE=Symbol('allowStale');var MAX_AGE=Symbol('maxAge');var DISPOSE=Symbol('dispose');var NO_DISPOSE_ON_SET=Symbol('noDisposeOnSet');var LRU_LIST=Symbol('lruList');var CACHE=Symbol('cache');var UPDATE_AGE_ON_GET=Symbol('updateAgeOnGet');var naiveLength=function naiveLength(){return 1;};// lruList is a yallist where the head is the youngest
	// item, and the tail is the oldest.  the list contains the Hit
	// objects as the entries.
	// Each Hit object has a reference to its Yallist.Node.  This
	// never changes.
	//
	// cache is a Map (or PseudoMap) that matches the keys to
	// the Yallist.Node object.
	var LRUCache=function(){function LRUCache(options){classCallCheck(this,LRUCache);if(typeof options==='number')options={max:options};if(!options)options={};if(options.max&&(typeof options.max!=='number'||options.max<0))throw new TypeError('max must be a non-negative number');// Kind of weird to have a default max of Infinity, but oh well.
	var max=this[MAX]=options.max||Infinity;var lc=options.length||naiveLength;this[LENGTH_CALCULATOR]=typeof lc!=='function'?naiveLength:lc;this[ALLOW_STALE]=options.stale||false;if(options.maxAge&&typeof options.maxAge!=='number')throw new TypeError('maxAge must be a number');this[MAX_AGE]=options.maxAge||0;this[DISPOSE]=options.dispose;this[NO_DISPOSE_ON_SET]=options.noDisposeOnSet||false;this[UPDATE_AGE_ON_GET]=options.updateAgeOnGet||false;this.reset();}// resize the cache when the max changes.
	createClass(LRUCache,[{key:'rforEach',value:function rforEach(fn,thisp){thisp=thisp||this;for(var walker=this[LRU_LIST].tail;walker!==null;){var prev=walker.prev;forEachStep(this,fn,walker,thisp);walker=prev;}}},{key:'forEach',value:function forEach(fn,thisp){thisp=thisp||this;for(var walker=this[LRU_LIST].head;walker!==null;){var _next10=walker.next;forEachStep(this,fn,walker,thisp);walker=_next10;}}},{key:'keys',value:function keys(){return this[LRU_LIST].toArray().map(function(k){return k.key;});}},{key:'values',value:function values(){return this[LRU_LIST].toArray().map(function(k){return k.value;});}},{key:'reset',value:function reset(){var _this314=this;if(this[DISPOSE]&&this[LRU_LIST]&&this[LRU_LIST].length){this[LRU_LIST].forEach(function(hit){return _this314[DISPOSE](hit.key,hit.value);});}this[CACHE]=new Map();// hash of items by key
	this[LRU_LIST]=new Yallist();// list of items in order of use recency
	this[LENGTH]=0;// length of items in the list
	}},{key:'dump',value:function dump(){var _this315=this;return this[LRU_LIST].map(function(hit){return isStale(_this315,hit)?false:{k:hit.key,v:hit.value,e:hit.now+(hit.maxAge||0)};}).toArray().filter(function(h){return h;});}},{key:'dumpLru',value:function dumpLru(){return this[LRU_LIST];}},{key:'set',value:function set(key,value,maxAge){maxAge=maxAge||this[MAX_AGE];if(maxAge&&typeof maxAge!=='number')throw new TypeError('maxAge must be a number');var now=maxAge?Date.now():0;var len=this[LENGTH_CALCULATOR](value,key);if(this[CACHE].has(key)){if(len>this[MAX]){_del(this,this[CACHE].get(key));return false;}var node=this[CACHE].get(key);var item=node.value;// dispose of the old one before overwriting
	// split out into 2 ifs for better coverage tracking
	if(this[DISPOSE]){if(!this[NO_DISPOSE_ON_SET])this[DISPOSE](key,item.value);}item.now=now;item.maxAge=maxAge;item.value=value;this[LENGTH]+=len-item.length;item.length=len;this.get(key);trim(this);return true;}var hit=new Entry(key,value,len,now,maxAge);// oversized objects fall out of cache automatically.
	if(hit.length>this[MAX]){if(this[DISPOSE])this[DISPOSE](key,value);return false;}this[LENGTH]+=hit.length;this[LRU_LIST].unshift(hit);this[CACHE].set(key,this[LRU_LIST].head);trim(this);return true;}},{key:'has',value:function has(key){if(!this[CACHE].has(key))return false;var hit=this[CACHE].get(key).value;return !isStale(this,hit);}},{key:'get',value:function get(key){return _get(this,key,true);}},{key:'peek',value:function peek(key){return _get(this,key,false);}},{key:'pop',value:function pop(){var node=this[LRU_LIST].tail;if(!node)return null;_del(this,node);return node.value;}},{key:'del',value:function del(key){_del(this,this[CACHE].get(key));}},{key:'load',value:function load(arr){// reset the cache
	this.reset();var now=Date.now();// A previous serialized cache has the most recent items first
	for(var l=arr.length-1;l>=0;l--){var hit=arr[l];var expiresAt=hit.e||0;if(expiresAt===0)// the item was created without expiration in a non aged cache
	this.set(hit.k,hit.v);else {var maxAge=expiresAt-now;// dont add already expired items
	if(maxAge>0){this.set(hit.k,hit.v,maxAge);}}}}},{key:'prune',value:function prune(){var _this316=this;this[CACHE].forEach(function(value,key){return _get(_this316,key,false);});}},{key:'max',set:function set(mL){if(typeof mL!=='number'||mL<0)throw new TypeError('max must be a non-negative number');this[MAX]=mL||Infinity;trim(this);},get:function get(){return this[MAX];}},{key:'allowStale',set:function set(allowStale){this[ALLOW_STALE]=!!allowStale;},get:function get(){return this[ALLOW_STALE];}},{key:'maxAge',set:function set(mA){if(typeof mA!=='number')throw new TypeError('maxAge must be a non-negative number');this[MAX_AGE]=mA;trim(this);},get:function get(){return this[MAX_AGE];}// resize the cache when the lengthCalculator changes.
	},{key:'lengthCalculator',set:function set(lC){var _this317=this;if(typeof lC!=='function')lC=naiveLength;if(lC!==this[LENGTH_CALCULATOR]){this[LENGTH_CALCULATOR]=lC;this[LENGTH]=0;this[LRU_LIST].forEach(function(hit){hit.length=_this317[LENGTH_CALCULATOR](hit.value,hit.key);_this317[LENGTH]+=hit.length;});}trim(this);},get:function get(){return this[LENGTH_CALCULATOR];}},{key:'length',get:function get(){return this[LENGTH];}},{key:'itemCount',get:function get(){return this[LRU_LIST].length;}}]);return LRUCache;}();var _get=function _get(self,key,doUse){var node=self[CACHE].get(key);if(node){var hit=node.value;if(isStale(self,hit)){_del(self,node);if(!self[ALLOW_STALE])return undefined;}else {if(doUse){if(self[UPDATE_AGE_ON_GET])node.value.now=Date.now();self[LRU_LIST].unshiftNode(node);}}return hit.value;}};var isStale=function isStale(self,hit){if(!hit||!hit.maxAge&&!self[MAX_AGE])return false;var diff=Date.now()-hit.now;return hit.maxAge?diff>hit.maxAge:self[MAX_AGE]&&diff>self[MAX_AGE];};var trim=function trim(self){if(self[LENGTH]>self[MAX]){for(var walker=self[LRU_LIST].tail;self[LENGTH]>self[MAX]&&walker!==null;){// We know that we're about to delete this one, and also
	// what the next least recently used key will be, so just
	// go ahead and set it now.
	var prev=walker.prev;_del(self,walker);walker=prev;}}};var _del=function _del(self,node){if(node){var hit=node.value;if(self[DISPOSE])self[DISPOSE](hit.key,hit.value);self[LENGTH]-=hit.length;self[CACHE].delete(hit.key);self[LRU_LIST].removeNode(node);}};var Entry=function Entry(key,value,length,now,maxAge){classCallCheck(this,Entry);this.key=key;this.value=value;this.length=length;this.now=now;this.maxAge=maxAge||0;};var forEachStep=function forEachStep(self,fn,node,thisp){var hit=node.value;if(isStale(self,hit)){_del(self,node);if(!self[ALLOW_STALE])hit=undefined;}if(hit)fn.call(thisp,hit.value,hit.key,self);};module.exports=LRUCache;},{"yallist":520}],511:[function(require,module,exports){module.exports={"version":"2020a","zones":["Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5","Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5","Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5","Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5","Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6","Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4","Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5","Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6","Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5","Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3","Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4","Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5","Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0|","Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5","Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5","Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5","Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|","Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5","Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5","Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4","America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326","America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4","America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3","America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4","America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|","America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|","America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|","America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|","America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|","America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|","America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|","America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4","America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5","America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2","America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3","America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5","America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4","America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5","America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3","America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2","America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2","America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5","America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4","America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2","America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4","America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4","America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5","America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3","America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5","America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5","America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4","America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5","America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2","America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4","America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8","America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3","America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|13e2","America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5","America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5","America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5","America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3","America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5","America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5","America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2","America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5","America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3","America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2","America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2","America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5","America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5","America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4","America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4","America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5","America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4","America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2","America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2","America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4","America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3","America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5","America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6","America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6","America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4","America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5","America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5","America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4","America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4","America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4","America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2","America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5","America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6","America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2","America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3","America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5","America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5","America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5","America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4","America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6","America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2","America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2","America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2","America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3","America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4","America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5","America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4","America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4","America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5","America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|","America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842","America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2","America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5","America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4","America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229","America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4","America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5","America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5","America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6","America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452","America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2","America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3","America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5","America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656","America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|23e3","America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4","America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642","America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10","Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70","Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80","Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1","Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60","Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5","Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40","Antarctica/Rothera|-00 -03|0 30|01|gOo0|130","Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20","Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40","Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25","Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4","Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5","Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5","Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5","Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3","Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4","Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4","Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4","Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5","Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4","Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5","Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6","Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|","Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5","Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4","Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4","Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6","Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4","Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3","Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6","Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5","Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6","Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5","Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4","Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5","Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4","Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5","Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4","Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5","Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5","Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3","Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6","Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6","Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4","Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4","Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5","Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4","Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6","Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5","Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5","Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2","Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5","Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5","Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4","Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4","Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3","Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5","Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6","Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4","Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4","Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5","Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5","Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4","Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4","Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5","Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4","Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5","Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4","Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4","Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6","Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2","Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5","Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5","Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5","Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6","Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3","Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6","Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5","Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5","Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2","Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4","Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5","Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5","Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4","Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3","Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4","Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3","Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4","Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4","Atlantic/South_Georgia|-02|20|0||30","Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2","Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5","Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5","Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5","Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3","Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746","Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4","Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368","Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4","Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347","Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10","Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5","Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5","CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2","CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","EST|EST|50|0||","EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Etc/GMT-0|GMT|0|0||","Etc/GMT-1|+01|-10|0||","Pacific/Port_Moresby|+10|-a0|0||25e4","Etc/GMT-11|+11|-b0|0||","Pacific/Tarawa|+12|-c0|0||29e3","Etc/GMT-13|+13|-d0|0||","Etc/GMT-14|+14|-e0|0||","Etc/GMT-2|+02|-20|0||","Etc/GMT-3|+03|-30|0||","Etc/GMT-4|+04|-40|0||","Etc/GMT-5|+05|-50|0||","Etc/GMT-6|+06|-60|0||","Indian/Christmas|+07|-70|0||21e2","Etc/GMT-8|+08|-80|0||","Pacific/Palau|+09|-90|0||21e3","Etc/GMT+1|-01|10|0||","Etc/GMT+10|-10|a0|0||","Etc/GMT+11|-11|b0|0||","Etc/GMT+12|-12|c0|0||","Etc/GMT+3|-03|30|0||","Etc/GMT+4|-04|40|0||","Etc/GMT+5|-05|50|0||","Etc/GMT+6|-06|60|0||","Etc/GMT+7|-07|70|0||","Etc/GMT+8|-08|80|0||","Etc/GMT+9|-09|90|0||","Etc/UTC|UTC|0|0||","Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5","Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3","Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5","Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5","Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6","Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5","Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5","Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5","Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5","Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4","Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4","Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3","Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4","Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5","Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4","Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5","Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5","Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5","Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3","Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6","Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6","Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4","Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5","Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5","Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|","Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4","Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5","Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4","Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5","Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4","Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5","Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5","Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4","HST|HST|a0|0||","Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2","Indian/Cocos|+0630|-6u|0||596","Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130","Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3","Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4","Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4","Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4","Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3","MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","MST|MST|70|0||","MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600","Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3","Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4","Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3","Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3","Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1","Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483","Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4","Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3","Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125","Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4","Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4","Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4","Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2","Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2","Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3","Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2","Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2","Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3","Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2","Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4","Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3","Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56","Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3","Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3","Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4","Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3","PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"],"links":["Africa/Abidjan|Africa/Bamako","Africa/Abidjan|Africa/Banjul","Africa/Abidjan|Africa/Conakry","Africa/Abidjan|Africa/Dakar","Africa/Abidjan|Africa/Freetown","Africa/Abidjan|Africa/Lome","Africa/Abidjan|Africa/Nouakchott","Africa/Abidjan|Africa/Ouagadougou","Africa/Abidjan|Africa/Timbuktu","Africa/Abidjan|Atlantic/St_Helena","Africa/Cairo|Egypt","Africa/Johannesburg|Africa/Maseru","Africa/Johannesburg|Africa/Mbabane","Africa/Lagos|Africa/Bangui","Africa/Lagos|Africa/Brazzaville","Africa/Lagos|Africa/Douala","Africa/Lagos|Africa/Kinshasa","Africa/Lagos|Africa/Libreville","Africa/Lagos|Africa/Luanda","Africa/Lagos|Africa/Malabo","Africa/Lagos|Africa/Niamey","Africa/Lagos|Africa/Porto-Novo","Africa/Maputo|Africa/Blantyre","Africa/Maputo|Africa/Bujumbura","Africa/Maputo|Africa/Gaborone","Africa/Maputo|Africa/Harare","Africa/Maputo|Africa/Kigali","Africa/Maputo|Africa/Lubumbashi","Africa/Maputo|Africa/Lusaka","Africa/Nairobi|Africa/Addis_Ababa","Africa/Nairobi|Africa/Asmara","Africa/Nairobi|Africa/Asmera","Africa/Nairobi|Africa/Dar_es_Salaam","Africa/Nairobi|Africa/Djibouti","Africa/Nairobi|Africa/Kampala","Africa/Nairobi|Africa/Mogadishu","Africa/Nairobi|Indian/Antananarivo","Africa/Nairobi|Indian/Comoro","Africa/Nairobi|Indian/Mayotte","Africa/Tripoli|Libya","America/Adak|America/Atka","America/Adak|US/Aleutian","America/Anchorage|US/Alaska","America/Argentina/Buenos_Aires|America/Buenos_Aires","America/Argentina/Catamarca|America/Argentina/ComodRivadavia","America/Argentina/Catamarca|America/Catamarca","America/Argentina/Cordoba|America/Cordoba","America/Argentina/Cordoba|America/Rosario","America/Argentina/Jujuy|America/Jujuy","America/Argentina/Mendoza|America/Mendoza","America/Atikokan|America/Coral_Harbour","America/Chicago|US/Central","America/Curacao|America/Aruba","America/Curacao|America/Kralendijk","America/Curacao|America/Lower_Princes","America/Denver|America/Shiprock","America/Denver|Navajo","America/Denver|US/Mountain","America/Detroit|US/Michigan","America/Edmonton|Canada/Mountain","America/Fort_Wayne|America/Indiana/Indianapolis","America/Fort_Wayne|America/Indianapolis","America/Fort_Wayne|US/East-Indiana","America/Godthab|America/Nuuk","America/Halifax|Canada/Atlantic","America/Havana|Cuba","America/Indiana/Knox|America/Knox_IN","America/Indiana/Knox|US/Indiana-Starke","America/Jamaica|Jamaica","America/Kentucky/Louisville|America/Louisville","America/Los_Angeles|US/Pacific","America/Los_Angeles|US/Pacific-New","America/Manaus|Brazil/West","America/Mazatlan|Mexico/BajaSur","America/Mexico_City|Mexico/General","America/New_York|US/Eastern","America/Noronha|Brazil/DeNoronha","America/Panama|America/Cayman","America/Phoenix|US/Arizona","America/Port_of_Spain|America/Anguilla","America/Port_of_Spain|America/Antigua","America/Port_of_Spain|America/Dominica","America/Port_of_Spain|America/Grenada","America/Port_of_Spain|America/Guadeloupe","America/Port_of_Spain|America/Marigot","America/Port_of_Spain|America/Montserrat","America/Port_of_Spain|America/St_Barthelemy","America/Port_of_Spain|America/St_Kitts","America/Port_of_Spain|America/St_Lucia","America/Port_of_Spain|America/St_Thomas","America/Port_of_Spain|America/St_Vincent","America/Port_of_Spain|America/Tortola","America/Port_of_Spain|America/Virgin","America/Regina|Canada/Saskatchewan","America/Rio_Branco|America/Porto_Acre","America/Rio_Branco|Brazil/Acre","America/Santiago|Chile/Continental","America/Sao_Paulo|Brazil/East","America/St_Johns|Canada/Newfoundland","America/Tijuana|America/Ensenada","America/Tijuana|America/Santa_Isabel","America/Tijuana|Mexico/BajaNorte","America/Toronto|America/Montreal","America/Toronto|Canada/Eastern","America/Vancouver|Canada/Pacific","America/Whitehorse|Canada/Yukon","America/Winnipeg|Canada/Central","Asia/Ashgabat|Asia/Ashkhabad","Asia/Bangkok|Asia/Phnom_Penh","Asia/Bangkok|Asia/Vientiane","Asia/Dhaka|Asia/Dacca","Asia/Dubai|Asia/Muscat","Asia/Ho_Chi_Minh|Asia/Saigon","Asia/Hong_Kong|Hongkong","Asia/Jerusalem|Asia/Tel_Aviv","Asia/Jerusalem|Israel","Asia/Kathmandu|Asia/Katmandu","Asia/Kolkata|Asia/Calcutta","Asia/Kuala_Lumpur|Asia/Singapore","Asia/Kuala_Lumpur|Singapore","Asia/Macau|Asia/Macao","Asia/Makassar|Asia/Ujung_Pandang","Asia/Nicosia|Europe/Nicosia","Asia/Qatar|Asia/Bahrain","Asia/Rangoon|Asia/Yangon","Asia/Riyadh|Asia/Aden","Asia/Riyadh|Asia/Kuwait","Asia/Seoul|ROK","Asia/Shanghai|Asia/Chongqing","Asia/Shanghai|Asia/Chungking","Asia/Shanghai|Asia/Harbin","Asia/Shanghai|PRC","Asia/Taipei|ROC","Asia/Tehran|Iran","Asia/Thimphu|Asia/Thimbu","Asia/Tokyo|Japan","Asia/Ulaanbaatar|Asia/Ulan_Bator","Asia/Urumqi|Asia/Kashgar","Atlantic/Faroe|Atlantic/Faeroe","Atlantic/Reykjavik|Iceland","Atlantic/South_Georgia|Etc/GMT+2","Australia/Adelaide|Australia/South","Australia/Brisbane|Australia/Queensland","Australia/Broken_Hill|Australia/Yancowinna","Australia/Darwin|Australia/North","Australia/Hobart|Australia/Tasmania","Australia/Lord_Howe|Australia/LHI","Australia/Melbourne|Australia/Victoria","Australia/Perth|Australia/West","Australia/Sydney|Australia/ACT","Australia/Sydney|Australia/Canberra","Australia/Sydney|Australia/NSW","Etc/GMT-0|Etc/GMT","Etc/GMT-0|Etc/GMT+0","Etc/GMT-0|Etc/GMT0","Etc/GMT-0|Etc/Greenwich","Etc/GMT-0|GMT","Etc/GMT-0|GMT+0","Etc/GMT-0|GMT-0","Etc/GMT-0|GMT0","Etc/GMT-0|Greenwich","Etc/UTC|Etc/UCT","Etc/UTC|Etc/Universal","Etc/UTC|Etc/Zulu","Etc/UTC|UCT","Etc/UTC|UTC","Etc/UTC|Universal","Etc/UTC|Zulu","Europe/Belgrade|Europe/Ljubljana","Europe/Belgrade|Europe/Podgorica","Europe/Belgrade|Europe/Sarajevo","Europe/Belgrade|Europe/Skopje","Europe/Belgrade|Europe/Zagreb","Europe/Chisinau|Europe/Tiraspol","Europe/Dublin|Eire","Europe/Helsinki|Europe/Mariehamn","Europe/Istanbul|Asia/Istanbul","Europe/Istanbul|Turkey","Europe/Lisbon|Portugal","Europe/London|Europe/Belfast","Europe/London|Europe/Guernsey","Europe/London|Europe/Isle_of_Man","Europe/London|Europe/Jersey","Europe/London|GB","Europe/London|GB-Eire","Europe/Moscow|W-SU","Europe/Oslo|Arctic/Longyearbyen","Europe/Oslo|Atlantic/Jan_Mayen","Europe/Prague|Europe/Bratislava","Europe/Rome|Europe/San_Marino","Europe/Rome|Europe/Vatican","Europe/Warsaw|Poland","Europe/Zurich|Europe/Busingen","Europe/Zurich|Europe/Vaduz","Indian/Christmas|Etc/GMT-7","Pacific/Auckland|Antarctica/McMurdo","Pacific/Auckland|Antarctica/South_Pole","Pacific/Auckland|NZ","Pacific/Chatham|NZ-CHAT","Pacific/Chuuk|Pacific/Truk","Pacific/Chuuk|Pacific/Yap","Pacific/Easter|Chile/EasterIsland","Pacific/Guam|Pacific/Saipan","Pacific/Honolulu|Pacific/Johnston","Pacific/Honolulu|US/Hawaii","Pacific/Kwajalein|Kwajalein","Pacific/Pago_Pago|Pacific/Midway","Pacific/Pago_Pago|Pacific/Samoa","Pacific/Pago_Pago|US/Samoa","Pacific/Palau|Etc/GMT-9","Pacific/Pohnpei|Pacific/Ponape","Pacific/Port_Moresby|Etc/GMT-10","Pacific/Tarawa|Etc/GMT-12","Pacific/Tarawa|Pacific/Funafuti","Pacific/Tarawa|Pacific/Wake","Pacific/Tarawa|Pacific/Wallis"],"countries":["AD|Europe/Andorra","AE|Asia/Dubai","AF|Asia/Kabul","AG|America/Port_of_Spain America/Antigua","AI|America/Port_of_Spain America/Anguilla","AL|Europe/Tirane","AM|Asia/Yerevan","AO|Africa/Lagos Africa/Luanda","AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo","AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia","AS|Pacific/Pago_Pago","AT|Europe/Vienna","AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla","AW|America/Curacao America/Aruba","AX|Europe/Helsinki Europe/Mariehamn","AZ|Asia/Baku","BA|Europe/Belgrade Europe/Sarajevo","BB|America/Barbados","BD|Asia/Dhaka","BE|Europe/Brussels","BF|Africa/Abidjan Africa/Ouagadougou","BG|Europe/Sofia","BH|Asia/Qatar Asia/Bahrain","BI|Africa/Maputo Africa/Bujumbura","BJ|Africa/Lagos Africa/Porto-Novo","BL|America/Port_of_Spain America/St_Barthelemy","BM|Atlantic/Bermuda","BN|Asia/Brunei","BO|America/La_Paz","BQ|America/Curacao America/Kralendijk","BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco","BS|America/Nassau","BT|Asia/Thimphu","BW|Africa/Maputo Africa/Gaborone","BY|Europe/Minsk","BZ|America/Belize","CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson","CC|Indian/Cocos","CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi","CF|Africa/Lagos Africa/Bangui","CG|Africa/Lagos Africa/Brazzaville","CH|Europe/Zurich","CI|Africa/Abidjan","CK|Pacific/Rarotonga","CL|America/Santiago America/Punta_Arenas Pacific/Easter","CM|Africa/Lagos Africa/Douala","CN|Asia/Shanghai Asia/Urumqi","CO|America/Bogota","CR|America/Costa_Rica","CU|America/Havana","CV|Atlantic/Cape_Verde","CW|America/Curacao","CX|Indian/Christmas","CY|Asia/Nicosia Asia/Famagusta","CZ|Europe/Prague","DE|Europe/Zurich Europe/Berlin Europe/Busingen","DJ|Africa/Nairobi Africa/Djibouti","DK|Europe/Copenhagen","DM|America/Port_of_Spain America/Dominica","DO|America/Santo_Domingo","DZ|Africa/Algiers","EC|America/Guayaquil Pacific/Galapagos","EE|Europe/Tallinn","EG|Africa/Cairo","EH|Africa/El_Aaiun","ER|Africa/Nairobi Africa/Asmara","ES|Europe/Madrid Africa/Ceuta Atlantic/Canary","ET|Africa/Nairobi Africa/Addis_Ababa","FI|Europe/Helsinki","FJ|Pacific/Fiji","FK|Atlantic/Stanley","FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae","FO|Atlantic/Faroe","FR|Europe/Paris","GA|Africa/Lagos Africa/Libreville","GB|Europe/London","GD|America/Port_of_Spain America/Grenada","GE|Asia/Tbilisi","GF|America/Cayenne","GG|Europe/London Europe/Guernsey","GH|Africa/Accra","GI|Europe/Gibraltar","GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule","GM|Africa/Abidjan Africa/Banjul","GN|Africa/Abidjan Africa/Conakry","GP|America/Port_of_Spain America/Guadeloupe","GQ|Africa/Lagos Africa/Malabo","GR|Europe/Athens","GS|Atlantic/South_Georgia","GT|America/Guatemala","GU|Pacific/Guam","GW|Africa/Bissau","GY|America/Guyana","HK|Asia/Hong_Kong","HN|America/Tegucigalpa","HR|Europe/Belgrade Europe/Zagreb","HT|America/Port-au-Prince","HU|Europe/Budapest","ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura","IE|Europe/Dublin","IL|Asia/Jerusalem","IM|Europe/London Europe/Isle_of_Man","IN|Asia/Kolkata","IO|Indian/Chagos","IQ|Asia/Baghdad","IR|Asia/Tehran","IS|Atlantic/Reykjavik","IT|Europe/Rome","JE|Europe/London Europe/Jersey","JM|America/Jamaica","JO|Asia/Amman","JP|Asia/Tokyo","KE|Africa/Nairobi","KG|Asia/Bishkek","KH|Asia/Bangkok Asia/Phnom_Penh","KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati","KM|Africa/Nairobi Indian/Comoro","KN|America/Port_of_Spain America/St_Kitts","KP|Asia/Pyongyang","KR|Asia/Seoul","KW|Asia/Riyadh Asia/Kuwait","KY|America/Panama America/Cayman","KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral","LA|Asia/Bangkok Asia/Vientiane","LB|Asia/Beirut","LC|America/Port_of_Spain America/St_Lucia","LI|Europe/Zurich Europe/Vaduz","LK|Asia/Colombo","LR|Africa/Monrovia","LS|Africa/Johannesburg Africa/Maseru","LT|Europe/Vilnius","LU|Europe/Luxembourg","LV|Europe/Riga","LY|Africa/Tripoli","MA|Africa/Casablanca","MC|Europe/Monaco","MD|Europe/Chisinau","ME|Europe/Belgrade Europe/Podgorica","MF|America/Port_of_Spain America/Marigot","MG|Africa/Nairobi Indian/Antananarivo","MH|Pacific/Majuro Pacific/Kwajalein","MK|Europe/Belgrade Europe/Skopje","ML|Africa/Abidjan Africa/Bamako","MM|Asia/Yangon","MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan","MO|Asia/Macau","MP|Pacific/Guam Pacific/Saipan","MQ|America/Martinique","MR|Africa/Abidjan Africa/Nouakchott","MS|America/Port_of_Spain America/Montserrat","MT|Europe/Malta","MU|Indian/Mauritius","MV|Indian/Maldives","MW|Africa/Maputo Africa/Blantyre","MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas","MY|Asia/Kuala_Lumpur Asia/Kuching","MZ|Africa/Maputo","NA|Africa/Windhoek","NC|Pacific/Noumea","NE|Africa/Lagos Africa/Niamey","NF|Pacific/Norfolk","NG|Africa/Lagos","NI|America/Managua","NL|Europe/Amsterdam","NO|Europe/Oslo","NP|Asia/Kathmandu","NR|Pacific/Nauru","NU|Pacific/Niue","NZ|Pacific/Auckland Pacific/Chatham","OM|Asia/Dubai Asia/Muscat","PA|America/Panama","PE|America/Lima","PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier","PG|Pacific/Port_Moresby Pacific/Bougainville","PH|Asia/Manila","PK|Asia/Karachi","PL|Europe/Warsaw","PM|America/Miquelon","PN|Pacific/Pitcairn","PR|America/Puerto_Rico","PS|Asia/Gaza Asia/Hebron","PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores","PW|Pacific/Palau","PY|America/Asuncion","QA|Asia/Qatar","RE|Indian/Reunion","RO|Europe/Bucharest","RS|Europe/Belgrade","RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr","RW|Africa/Maputo Africa/Kigali","SA|Asia/Riyadh","SB|Pacific/Guadalcanal","SC|Indian/Mahe","SD|Africa/Khartoum","SE|Europe/Stockholm","SG|Asia/Singapore","SH|Africa/Abidjan Atlantic/St_Helena","SI|Europe/Belgrade Europe/Ljubljana","SJ|Europe/Oslo Arctic/Longyearbyen","SK|Europe/Prague Europe/Bratislava","SL|Africa/Abidjan Africa/Freetown","SM|Europe/Rome Europe/San_Marino","SN|Africa/Abidjan Africa/Dakar","SO|Africa/Nairobi Africa/Mogadishu","SR|America/Paramaribo","SS|Africa/Juba","ST|Africa/Sao_Tome","SV|America/El_Salvador","SX|America/Curacao America/Lower_Princes","SY|Asia/Damascus","SZ|Africa/Johannesburg Africa/Mbabane","TC|America/Grand_Turk","TD|Africa/Ndjamena","TF|Indian/Reunion Indian/Kerguelen","TG|Africa/Abidjan Africa/Lome","TH|Asia/Bangkok","TJ|Asia/Dushanbe","TK|Pacific/Fakaofo","TL|Asia/Dili","TM|Asia/Ashgabat","TN|Africa/Tunis","TO|Pacific/Tongatapu","TR|Europe/Istanbul","TT|America/Port_of_Spain","TV|Pacific/Funafuti","TW|Asia/Taipei","TZ|Africa/Nairobi Africa/Dar_es_Salaam","UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye","UG|Africa/Nairobi Africa/Kampala","UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway","US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu","UY|America/Montevideo","UZ|Asia/Samarkand Asia/Tashkent","VA|Europe/Rome Europe/Vatican","VC|America/Port_of_Spain America/St_Vincent","VE|America/Caracas","VG|America/Port_of_Spain America/Tortola","VI|America/Port_of_Spain America/St_Thomas","VN|Asia/Bangkok Asia/Ho_Chi_Minh","VU|Pacific/Efate","WF|Pacific/Wallis","WS|Pacific/Apia","YE|Asia/Riyadh Asia/Aden","YT|Africa/Nairobi Indian/Mayotte","ZA|Africa/Johannesburg","ZM|Africa/Maputo Africa/Lusaka","ZW|Africa/Maputo Africa/Harare"]};},{}],512:[function(require,module,exports){var moment=module.exports=require("./moment-timezone");moment.tz.load(require('./data/packed/latest.json'));},{"./data/packed/latest.json":511,"./moment-timezone":513}],513:[function(require,module,exports){//! moment-timezone.js
	//! version : 0.5.31
	//! Copyright (c) JS Foundation and other contributors
	//! license : MIT
	//! github.com/moment/moment-timezone
	(function(root,factory){/*global define*/if((typeof module==='undefined'?'undefined':_typeof(module))==='object'&&module.exports){module.exports=factory(require('moment'));// Node
	}else {factory(root.moment);// Browser
	}})(this,function(moment){if(moment.version===undefined&&moment.default){moment=moment.default;}// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }
	var VERSION="0.5.31",zones={},links={},_countries={},names={},guesses={},cachedGuess;if(!moment||typeof moment.version!=='string'){logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');}var momentVersion=moment.version.split('.'),major=+momentVersion[0],minor=+momentVersion[1];// Moment.js version check
	if(major<2||major===2&&minor<6){logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js '+moment.version+'. See momentjs.com');}/************************************
			Unpacking
		************************************/function charCodeToInt(charCode){if(charCode>96){return charCode-87;}else if(charCode>64){return charCode-29;}return charCode-48;}function unpackBase60(string){var i=0,parts=string.split('.'),whole=parts[0],fractional=parts[1]||'',multiplier=1,num,out=0,sign=1;// handle negative numbers
	if(string.charCodeAt(0)===45){i=1;sign=-1;}// handle digits before the decimal
	for(i;i<whole.length;i++){num=charCodeToInt(whole.charCodeAt(i));out=60*out+num;}// handle digits after the decimal
	for(i=0;i<fractional.length;i++){multiplier=multiplier/60;num=charCodeToInt(fractional.charCodeAt(i));out+=num*multiplier;}return out*sign;}function arrayToInt(array){for(var i=0;i<array.length;i++){array[i]=unpackBase60(array[i]);}}function intToUntil(array,length){for(var i=0;i<length;i++){array[i]=Math.round((array[i-1]||0)+array[i]*60000);// minutes to milliseconds
	}array[length-1]=Infinity;}function mapIndices(source,indices){var out=[],i;for(i=0;i<indices.length;i++){out[i]=source[indices[i]];}return out;}function unpack(string){var data=string.split('|'),offsets=data[2].split(' '),indices=data[3].split(''),untils=data[4].split(' ');arrayToInt(offsets);arrayToInt(indices);arrayToInt(untils);intToUntil(untils,indices.length);return {name:data[0],abbrs:mapIndices(data[1].split(' '),indices),offsets:mapIndices(offsets,indices),untils:untils,population:data[5]|0};}/************************************
			Zone object
		************************************/function Zone(packedString){if(packedString){this._set(unpack(packedString));}}Zone.prototype={_set:function _set(unpacked){this.name=unpacked.name;this.abbrs=unpacked.abbrs;this.untils=unpacked.untils;this.offsets=unpacked.offsets;this.population=unpacked.population;},_index:function _index(timestamp){var target=+timestamp,untils=this.untils,i;for(i=0;i<untils.length;i++){if(target<untils[i]){return i;}}},countries:function countries(){var zone_name=this.name;return Object.keys(_countries).filter(function(country_code){return _countries[country_code].zones.indexOf(zone_name)!==-1;});},parse:function parse(timestamp){var target=+timestamp,offsets=this.offsets,untils=this.untils,max=untils.length-1,offset,offsetNext,offsetPrev,i;for(i=0;i<max;i++){offset=offsets[i];offsetNext=offsets[i+1];offsetPrev=offsets[i?i-1:i];if(offset<offsetNext&&tz.moveAmbiguousForward){offset=offsetNext;}else if(offset>offsetPrev&&tz.moveInvalidForward){offset=offsetPrev;}if(target<untils[i]-offset*60000){return offsets[i];}}return offsets[max];},abbr:function abbr(mom){return this.abbrs[this._index(mom)];},offset:function offset(mom){logError("zone.offset has been deprecated in favor of zone.utcOffset");return this.offsets[this._index(mom)];},utcOffset:function utcOffset(mom){return this.offsets[this._index(mom)];}};/************************************
			Country object
		************************************/function Country(country_name,zone_names){this.name=country_name;this.zones=zone_names;}/************************************
			Current Timezone
		************************************/function OffsetAt(at){var timeString=at.toTimeString();var abbr=timeString.match(/\([a-z ]+\)/i);if(abbr&&abbr[0]){// 17:56:31 GMT-0600 (CST)
	// 17:56:31 GMT-0600 (Central Standard Time)
	abbr=abbr[0].match(/[A-Z]/g);abbr=abbr?abbr.join(''):undefined;}else {// 17:56:31 CST
	// 17:56:31 GMT+0800 (台北標準時間)
	abbr=timeString.match(/[A-Z]{3,5}/g);abbr=abbr?abbr[0]:undefined;}if(abbr==='GMT'){abbr=undefined;}this.at=+at;this.abbr=abbr;this.offset=at.getTimezoneOffset();}function ZoneScore(zone){this.zone=zone;this.offsetScore=0;this.abbrScore=0;}ZoneScore.prototype.scoreOffsetAt=function(offsetAt){this.offsetScore+=Math.abs(this.zone.utcOffset(offsetAt.at)-offsetAt.offset);if(this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g,'')!==offsetAt.abbr){this.abbrScore++;}};function findChange(low,high){var mid,diff;while(diff=((high.at-low.at)/12e4|0)*6e4){mid=new OffsetAt(new Date(low.at+diff));if(mid.offset===low.offset){low=mid;}else {high=mid;}}return low;}function userOffsets(){var startYear=new Date().getFullYear()-2,last=new OffsetAt(new Date(startYear,0,1)),offsets=[last],change,next,i;for(i=1;i<48;i++){next=new OffsetAt(new Date(startYear,i,1));if(next.offset!==last.offset){change=findChange(last,next);offsets.push(change);offsets.push(new OffsetAt(new Date(change.at+6e4)));}last=next;}for(i=0;i<4;i++){offsets.push(new OffsetAt(new Date(startYear+i,0,1)));offsets.push(new OffsetAt(new Date(startYear+i,6,1)));}return offsets;}function sortZoneScores(a,b){if(a.offsetScore!==b.offsetScore){return a.offsetScore-b.offsetScore;}if(a.abbrScore!==b.abbrScore){return a.abbrScore-b.abbrScore;}if(a.zone.population!==b.zone.population){return b.zone.population-a.zone.population;}return b.zone.name.localeCompare(a.zone.name);}function addToGuesses(name,offsets){var i,offset;arrayToInt(offsets);for(i=0;i<offsets.length;i++){offset=offsets[i];guesses[offset]=guesses[offset]||{};guesses[offset][name]=true;}}function guessesForUserOffsets(offsets){var offsetsLength=offsets.length,filteredGuesses={},out=[],i,j,guessesOffset;for(i=0;i<offsetsLength;i++){guessesOffset=guesses[offsets[i].offset]||{};for(j in guessesOffset){if(guessesOffset.hasOwnProperty(j)){filteredGuesses[j]=true;}}}for(i in filteredGuesses){if(filteredGuesses.hasOwnProperty(i)){out.push(names[i]);}}return out;}function rebuildGuess(){// use Intl API when available and returning valid time zone
	try{var intlName=Intl.DateTimeFormat().resolvedOptions().timeZone;if(intlName&&intlName.length>3){var name=names[normalizeName(intlName)];if(name){return name;}logError("Moment Timezone found "+intlName+" from the Intl api, but did not have that data loaded.");}}catch(e){// Intl unavailable, fall back to manual guessing.
	}var offsets=userOffsets(),offsetsLength=offsets.length,guesses=guessesForUserOffsets(offsets),zoneScores=[],zoneScore,i,j;for(i=0;i<guesses.length;i++){zoneScore=new ZoneScore(getZone(guesses[i]),offsetsLength);for(j=0;j<offsetsLength;j++){zoneScore.scoreOffsetAt(offsets[j]);}zoneScores.push(zoneScore);}zoneScores.sort(sortZoneScores);return zoneScores.length>0?zoneScores[0].zone.name:undefined;}function guess(ignoreCache){if(!cachedGuess||ignoreCache){cachedGuess=rebuildGuess();}return cachedGuess;}/************************************
			Global Methods
		************************************/function normalizeName(name){return (name||'').toLowerCase().replace(/\//g,'_');}function addZone(packed){var i,name,split,normalized;if(typeof packed==="string"){packed=[packed];}for(i=0;i<packed.length;i++){split=packed[i].split('|');name=split[0];normalized=normalizeName(name);zones[normalized]=packed[i];names[normalized]=name;addToGuesses(normalized,split[2].split(' '));}}function getZone(name,caller){name=normalizeName(name);var zone=zones[name];var link;if(zone instanceof Zone){return zone;}if(typeof zone==='string'){zone=new Zone(zone);zones[name]=zone;return zone;}// Pass getZone to prevent recursion more than 1 level deep
	if(links[name]&&caller!==getZone&&(link=getZone(links[name],getZone))){zone=zones[name]=new Zone();zone._set(link);zone.name=names[name];return zone;}return null;}function getNames(){var i,out=[];for(i in names){if(names.hasOwnProperty(i)&&(zones[i]||zones[links[i]])&&names[i]){out.push(names[i]);}}return out.sort();}function getCountryNames(){return Object.keys(_countries);}function addLink(aliases){var i,alias,normal0,normal1;if(typeof aliases==="string"){aliases=[aliases];}for(i=0;i<aliases.length;i++){alias=aliases[i].split('|');normal0=normalizeName(alias[0]);normal1=normalizeName(alias[1]);links[normal0]=normal1;names[normal0]=alias[0];links[normal1]=normal0;names[normal1]=alias[1];}}function addCountries(data){var i,country_code,country_zones,split;if(!data||!data.length)return;for(i=0;i<data.length;i++){split=data[i].split('|');country_code=split[0].toUpperCase();country_zones=split[1].split(' ');_countries[country_code]=new Country(country_code,country_zones);}}function getCountry(name){name=name.toUpperCase();return _countries[name]||null;}function zonesForCountry(country,with_offset){country=getCountry(country);if(!country)return null;var zones=country.zones.sort();if(with_offset){return zones.map(function(zone_name){var zone=getZone(zone_name);return {name:zone_name,offset:zone.utcOffset(new Date())};});}return zones;}function loadData(data){addZone(data.zones);addLink(data.links);addCountries(data.countries);tz.dataVersion=data.version;}function zoneExists(name){if(!zoneExists.didShowError){zoneExists.didShowError=true;logError("moment.tz.zoneExists('"+name+"') has been deprecated in favor of !moment.tz.zone('"+name+"')");}return !!getZone(name);}function needsOffset(m){var isUnixTimestamp=m._f==='X'||m._f==='x';return !!(m._a&&m._tzm===undefined&&!isUnixTimestamp);}function logError(message){if(typeof console!=='undefined'&&typeof console.error==='function'){console.error(message);}}/************************************
			moment.tz namespace
		************************************/function tz(input){var args=Array.prototype.slice.call(arguments,0,-1),name=arguments[arguments.length-1],zone=getZone(name),out=moment.utc.apply(null,args);if(zone&&!moment.isMoment(input)&&needsOffset(out)){out.add(zone.parse(out),'minutes');}out.tz(name);return out;}tz.version=VERSION;tz.dataVersion='';tz._zones=zones;tz._links=links;tz._names=names;tz._countries=_countries;tz.add=addZone;tz.link=addLink;tz.load=loadData;tz.zone=getZone;tz.zoneExists=zoneExists;// deprecated in 0.1.0
	tz.guess=guess;tz.names=getNames;tz.Zone=Zone;tz.unpack=unpack;tz.unpackBase60=unpackBase60;tz.needsOffset=needsOffset;tz.moveInvalidForward=true;tz.moveAmbiguousForward=false;tz.countries=getCountryNames;tz.zonesForCountry=zonesForCountry;/************************************
			Interface with Moment.js
		************************************/var fn=moment.fn;moment.tz=tz;moment.defaultZone=null;moment.updateOffset=function(mom,keepTime){var zone=moment.defaultZone,offset;if(mom._z===undefined){if(zone&&needsOffset(mom)&&!mom._isUTC){mom._d=moment.utc(mom._a)._d;mom.utc().add(zone.parse(mom),'minutes');}mom._z=zone;}if(mom._z){offset=mom._z.utcOffset(mom);if(Math.abs(offset)<16){offset=offset/60;}if(mom.utcOffset!==undefined){var z=mom._z;mom.utcOffset(-offset,keepTime);mom._z=z;}else {mom.zone(offset,keepTime);}}};fn.tz=function(name,keepTime){if(name){if(typeof name!=='string'){throw new Error('Time zone name must be a string, got '+name+' ['+(typeof name==='undefined'?'undefined':_typeof(name))+']');}this._z=getZone(name);if(this._z){moment.updateOffset(this,keepTime);}else {logError("Moment Timezone has no data for "+name+". See http://momentjs.com/timezone/docs/#/data-loading/.");}return this;}if(this._z){return this._z.name;}};function abbrWrap(old){return function(){if(this._z){return this._z.abbr(this);}return old.call(this);};}function resetZoneWrap(old){return function(){this._z=null;return old.apply(this,arguments);};}function resetZoneWrap2(old){return function(){if(arguments.length>0)this._z=null;return old.apply(this,arguments);};}fn.zoneName=abbrWrap(fn.zoneName);fn.zoneAbbr=abbrWrap(fn.zoneAbbr);fn.utc=resetZoneWrap(fn.utc);fn.local=resetZoneWrap(fn.local);fn.utcOffset=resetZoneWrap2(fn.utcOffset);moment.tz.setDefault=function(name){if(major<2||major===2&&minor<9){logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js '+moment.version+'.');}moment.defaultZone=name?getZone(name):null;return moment;};// Cloning a moment should include the _z property.
	var momentProperties=moment.momentProperties;if(Object.prototype.toString.call(momentProperties)==='[object Array]'){// moment 2.8.1+
	momentProperties.push('_z');momentProperties.push('_a');}else if(momentProperties){// moment 2.7.0
	momentProperties._z=null;}// INJECT DATA
	return moment;});},{"moment":514}],514:[function(require,module,exports){//! moment.js
	(function(global,factory){(typeof exports==='undefined'?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?module.exports=factory():global.moment=factory();})(this,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
	// without creating circular dependencies.
	function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
	// input != null
	return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else {var k;for(k in obj){if(hasOwnProp(obj,k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
	return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidEra:null,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],era:null,meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else {some=function some(fun){var t=Object(this),len=t.length>>>0,i;for(i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m),parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;}),isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidEra&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else {return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else {getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
	// so we can properly clone ourselves.
	var momentProperties=hooks.momentProperties=[],updateInProgress=false;function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}// Moment prototype object
	function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
	// objects.
	if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[],arg,i,key;for(i=0;i<arguments.length;i++){arg='';if(_typeof(arguments[i])==='object'){arg+='\n['+i+'] ';for(key in arguments[0]){if(hasOwnProp(arguments[0],key)){arg+=key+': '+arguments[0][key]+', ';}}arg=arg.slice(0,-2);// Remove trailing comma and space
	}else {arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return typeof Function!=='undefined'&&input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){if(hasOwnProp(config,i)){prop=config[i];if(isFunction(prop)){this[i]=prop;}else {this['_'+i]=prop;}}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
	// number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	// TODO: Remove "ordinalParse" fallback in next major release.
	this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else {delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
	res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else {keys=function keys(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,formatFunctions={},formatTokenFunctions={};// token:    'M'
	// padded:   ['MM', 2]
	// ordinal:  'Mo'
	// callback: function () { this.month() + 1 }
	function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function func(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else {array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
	function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.match(formattingTokens).map(function(tok){if(tok==='MMMM'||tok==='MM'||tok==='DD'||tok==='dddd'){return tok.slice(1);}return tok;}).join('');return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d',defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',w:'a week',ww:'%d weeks',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[],u;for(u in unitsObj){if(hasOwnProp(unitsObj,u)){units.push({unit:u,priority:priorities[u]});}}units.sort(function(a,b){return a.priority-b.priority;});return units;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}function absFloor(number){if(number<0){// -0 -> 0
	return Math.ceil(number)||0;}else {return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else {return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){value=toInt(value);mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else {mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
	function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if((typeof units==='undefined'?'undefined':_typeof(units))==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units),i;for(i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else {units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}var match1=/\d/,//       0 - 9
	match2=/\d\d/,//      00 - 99
	match3=/\d{3}/,//     000 - 999
	match4=/\d{4}/,//    0000 - 9999
	match6=/[+-]?\d{6}/,// -999999 - 999999
	match1to2=/\d\d?/,//       0 - 99
	match3to4=/\d\d\d\d?/,//     999 - 9999
	match5to6=/\d\d\d\d\d\d?/,//   99999 - 999999
	match1to3=/\d{1,3}/,//       0 - 999
	match1to4=/\d{1,4}/,//       0 - 9999
	match1to6=/[+-]?\d{1,6}/,// -999999 - 999999
	matchUnsigned=/\d+/,//       0 - inf
	matchSigned=/[+-]?\d+/,//    -inf - inf
	matchOffset=/Z|[+-]\d\d:?\d\d/gi,// +00:00 -00:00 +0000 -0000 or Z
	matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi,// +00 -00 +00:00 -00:00 +0000 -0000 or Z
	matchTimestamp=/[+-]?\d+(\.\d{1,3})?/,// 123456789 123456789.123
	// any word (or two) characters or numbers including two/three word month in arabic.
	// includes scottish gaelic two word and hyphenated months
	matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,regexes;regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function func(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,WEEK=7,WEEKDAY=8;function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else {indexOf=function indexOf(o){// I know
	var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
	addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
	addUnitAlias('month','M');// PRIORITY
	addUnitPriority('month',8);// PARSING
	addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
	if(month!=null){array[MONTH]=month;}else {getParsingFlags(config).invalidMonth=input;}});// LOCALES
	var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,defaultMonthsShortRegex=matchWord,defaultMonthsRegex=matchWord;function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
	this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else {if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
	// Sorting makes sure if one month (or abbr) is a prefix of another
	// see sorting in computeMonthsParse
	for(i=0;i<12;i++){// make the regex if we don't have it already
	mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
	if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
	function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
	return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else {value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
	if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else {return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else {return this._monthsShortRegex;}}else {if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else {return this._monthsRegex;}}else {if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
	mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
	// will match the longer piece.
	shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}// FORMATTING
	addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?zeroFill(y,4):'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
	addUnitAlias('year','y');// PRIORITIES
	addUnitPriority('year',1);// PARSING
	addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
	function daysInYear(year){return isLeapYear(year)?366:365;}// HOOKS
	hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
	var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
	// https://stackoverflow.com/q/181348
	var date;// the date constructor remaps years 0-99 to 1900-1999
	if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
	date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else {date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date,args;// the Date.UTC function remaps years 0-99 to 1900-1999
	if(y<100&&y>=0){args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
	args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else {date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
	function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
	fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
	fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else {resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else {resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
	addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
	addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
	addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
	addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
	// LOCALES
	function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
	doy:6// The week that contains Jan 6th is the first week of the year.
	};function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
	function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
	addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
	addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
	addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
	addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
	if(weekday!=null){week.d=weekday;}else {getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
	function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
	function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),defaultWeekdaysRegex=matchWord,defaultWeekdaysShortRegex=matchWord,defaultWeekdaysMinRegex=matchWord;function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else {if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
	mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
	if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
	function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else {return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
	// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	// as a setter, sunday should belong to the previous week.
	if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else {return this.day()||7;}}function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else {return this._weekdaysRegex;}}else {if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else {return this._weekdaysShortRegex;}}else {if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else {return this._weekdaysMinRegex;}}else {if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
	mom=createUTC([2000,1]).day(i);minp=regexEscape(this.weekdaysMin(mom,''));shortp=regexEscape(this.weekdaysShort(mom,''));longp=regexEscape(this.weekdays(mom,''));minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
	// will match the longer piece.
	minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
	function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
	addUnitAlias('hour','h');// PRIORITY
	addUnitPriority('hour',13);// PARSING
	function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
	function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	// Using charAt should be more compatible.
	return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i,// Setting the hour should keep the time, because the user explicitly
	// specified which hour they want. So trying to maintain the same hour (in
	// a new timezone) makes sense. Adding/subtracting hours does not follow
	// this rule.
	getSetHour=makeGetSet('Hours',true);function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else {return isLower?'am':'AM';}}var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
	var locales={},localeFamilies={},globalLocale;function commonPrefix(arr1,arr2){var i,minl=Math.min(arr1.length,arr2.length);for(i=0;i<minl;i+=1){if(arr1[i]!==arr2[i]){return i;}}return minl;}function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
	// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&commonPrefix(split,next)>=j-1){//the next array item is better than a shallower substring of this one
	break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null,aliasedRequire;// TODO: Find a better way to register and load all the locales in Node
	if(locales[name]===undefined&&typeof module!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;aliasedRequire=require;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){// mark as not found to avoid repeating expensive file require call causing high CPU
	// when trying to find en-US, en_US, en-us for every format call
	locales[name]=null;// null means not found
	}}return locales[name];}// This function will load locale and then set the global locale.  If
	// no arguments are passed in, it will simply return the current global
	// locale key.
	function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else {data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
	globalLocale=data;}else {if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
	console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else {locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else {if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
	// make sure we set the locale AFTER all child locales have been
	// created, so we won't end up with the child locale set.
	getSetGlobalLocale(name);return locales[name];}else {// useful for testing
	delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;if(locales[name]!=null&&locales[name].parentLocale!=null){// Update existing child locale in-place to avoid memory-leaks
	locales[name].set(mergeConfigs(locales[name]._config,config));}else {// MERGE
	tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);if(tmpLocale==null){// updateLocale is called for creating a new locale
	// Set abbr so it will have a name (getters return
	// undefined otherwise).
	config.abbr=name;}locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;}// backwards compat for now: also set the locale
	getSetGlobalLocale(name);}else {// pass null for config to unupdate, useful for tests
	if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;if(name===getSetGlobalLocale()){getSetGlobalLocale(name);}}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
	function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
	locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow,a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// iso 8601 regex
	// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tzRegex=/Z|[+-]\d\d(?::?\d\d)?/,isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/],['YYYYMM',/\d{6}/,false],['YYYY',/\d{4}/,false]],// iso time formats and regexes
	isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]],aspNetJsonRegex=/^\/?Date\((-?\d+)/i,// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};// date from iso format
	function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
	timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else {config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else {config._isValid=false;}}function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
	return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an independent day-of-week check.
	var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
	return 0;}else {var hm=parseInt(numOffset,10),m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
	function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i)),parsedArray;if(match){parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else {config._isValid=false;}}// date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
	function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else {return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else {return;}if(config._strict){config._isValid=false;}else {// Final attempt, use Input Fallback
	hooks.createFromInputFallback(config);}}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// Pick the first defined of two or three arguments.
	function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
	var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
	// the array should mirror the parameters below
	// note: all values past the year are optional and will default to the lowest possible value.
	// [year, month, day , hour, minute, second, millisecond]
	function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
	if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
	if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
	// * if no year, month, day of month are given, default to today
	// * if day of month is given, default month and year
	// * if month is given, default only year
	// * if year is given, don't default anything
	for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
	for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
	if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
	// with parseZone.
	if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
	if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow,curWeek;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
	// how we interpret now (local, utc, fixed offset). So create
	// a now version of current config (take local/utc/offset flags, and
	// create now).
	weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else {dow=config._locale._week.dow;doy=config._locale._week.doy;curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
	week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
	weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
	weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else {// default to beginning of week
	weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else {temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// constant that refers to the ISO standard
	hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
	hooks.RFC_2822=function(){};// date from string and format string
	function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
	if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
	var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0,era;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
	if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else {getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
	getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
	if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
	config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);// handle era
	era=getParsingFlags(config).era;if(era!==null){config._a[YEAR]=config._locale.erasConvertYear(era,config._a[YEAR]);}configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
	return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
	isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else {// this is not supposed to happen
	return hour;}}// date from string and array of format strings
	function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore,validFormatFound,bestFormatIsValid=false;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;validFormatFound=false;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(isValid(tempConfig)){validFormatFound=true;}// if there is any input that was not parsed add a penalty for that format
	currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
	currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(!bestFormatIsValid){if(scoreToBeat==null||currentScore<scoreToBeat||validFormatFound){scoreToBeat=currentScore;bestMoment=tempConfig;if(validFormatFound){bestFormatIsValid=true;}}}else {if(currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i),dayOrDate=i.day===undefined?i.date:i.day;config._a=map([i.year,i.month,dayOrDate,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
	res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else {configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
	config._d=new Date(input);}else {hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(format===true||format===false){strict=format;format=undefined;}if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
	// https://github.com/moment/moment/issues/1423
	c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else {return createInvalid();}}),prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else {return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
	// other. This relies on the function fn to be transitive.
	//
	// moments should either be an array of moment objects or an array, whose
	// first element is an array of moment objects.
	function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
	function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function now(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){var key,unitHasDecimal=false,i;for(key in m){if(hasOwnProp(m,key)&&!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}for(i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
	}if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
	this._milliseconds=+milliseconds+seconds*1e3+// 1000
	minutes*6e4+// 1000 * 60
	hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	// Because of dateAddRemove treats 24 hours as different from a
	// day when working around DST, we need to store them separately
	this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
	// which months you are are talking about, so we have to store
	// it separately.
	this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else {return Math.round(number);}}// compare two arrays, return the number of differences
	function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}// FORMATTING
	function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset(),sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
	addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
	// timezone chunker
	// '+10:00' > ['10',  '00']
	// '-1530'  > ['-15', '30']
	var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher),chunk,parts,minutes;if(matches===null){return null;}chunk=matches[matches.length-1]||[];parts=(chunk+'').match(chunkOffset)||['-',0,0];minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
	function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
	res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else {return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
	// https://github.com/moment/moment/pull/1871
	return -Math.round(m._d.getTimezoneOffset());}// HOOKS
	// This function will be called whenever a moment is mutated.
	// It is intended to keep the offset in sync with the timezone.
	hooks.updateOffset=function(){};// MOMENTS
	// keepLocalTime = true means only change the timezone, without
	// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	// +0200, so we adjust the time as needed, to be valid.
	//
	// Keeping the time actually adds/subtracts (one hour)
	// from the actual represented time. That is why we call updateOffset
	// a second time. In case it wants us to change the offset again
	// _changeInProgress == true case, then we have to adjust, because
	// there is no such time in the given timezone.
	function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else {return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else {return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else {this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={},other;copyConfig(c,this);c=prepareConfig(c);if(c._a){other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else {this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
	var aspNetRegex=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	// and further modified to allow for strings containing both week and day
	isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
	match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)||!isNaN(+input)){duration={};if(key){duration[key]=+input;}else {duration.milliseconds=+input;}}else if(match=aspNetRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
	};}else if(match=isoRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
	duration={};}else if((typeof duration==='undefined'?'undefined':_typeof(duration))==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}if(isDuration(input)&&hasOwnProp(input,'_isValid')){ret._isValid=input._isValid;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
	// converts floats to ints.
	// inp may be undefined, so careful calling replace on it.
	var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
	return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else {res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
	function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
	if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
	return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add'),subtract=createAdder(-1,'subtract');function isString(input){return typeof input==='string'||input instanceof String;}// type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
	function isMomentInput(input){return isMoment(input)||isDate(input)||isString(input)||isNumber(input)||isNumberOrStringArray(input)||isMomentInputObject(input)||input===null||input===undefined;}function isMomentInputObject(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['years','year','y','months','month','M','days','day','d','dates','date','D','hours','hour','h','minutes','minute','m','seconds','second','s','milliseconds','millisecond','ms'],i,property;for(i=0;i<properties.length;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function isNumberOrStringArray(input){var arrayTest=isArray(input),dataTypeTest=false;if(arrayTest){dataTypeTest=input.filter(function(item){return !isNumber(item)&&isString(input);}).length===0;}return arrayTest&&dataTypeTest;}function isCalendarSpec(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['sameDay','nextDay','lastDay','nextWeek','lastWeek','sameElse'],i,property;for(i=0;i<properties.length;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// Support for single parameter, formats only overload to the calendar function
	if(arguments.length===1){if(!arguments[0]){time=undefined;formats=undefined;}else if(isMomentInput(arguments[0])){time=arguments[0];formats=undefined;}else if(isCalendarSpec(arguments[0])){formats=arguments[0];time=undefined;}}// We want to compare the start of today, vs this.
	// Getting start-of-today depends on whether we're local/utc/offset or not.
	var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse',output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else {return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else {return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else {inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
	case'minute':output=(this-that)/6e4;break;// 1000 * 60
	case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
	case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
	case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
	default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){if(a.date()<b.date()){// end-of-month calculations work correct when the start month has more
	// days than the end month.
	return -monthDiff(b,a);}// difference in months
	var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
	anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
	adjust=(b-anchor)/(anchor-anchor2);}else {anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
	adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
	return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true,m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
	if(utc){return this.toDate().toISOString();}else {return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment',zone='',prefix,year,datetime,suffix;if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}prefix='['+func+'("]';year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';datetime='-MM-DD[T]HH:mm:ss.SSS';suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else {return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else {return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
	// instance.  Otherwise, it will return the locale configuration
	// variables for this instance.
	function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else {newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else {return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000,MS_PER_MINUTE=60*MS_PER_SECOND,MS_PER_HOUR=60*MS_PER_MINUTE,MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
	function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
	if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
	return new Date(y+400,m,d)-MS_PER_400_YEARS;}else {return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
	if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
	return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else {return Date.UTC(y,m,d);}}function startOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
	return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}addFormatToken('N',0,0,'eraAbbr');addFormatToken('NN',0,0,'eraAbbr');addFormatToken('NNN',0,0,'eraAbbr');addFormatToken('NNNN',0,0,'eraName');addFormatToken('NNNNN',0,0,'eraNarrow');addFormatToken('y',['y',1],'yo','eraYear');addFormatToken('y',['yy',2],0,'eraYear');addFormatToken('y',['yyy',3],0,'eraYear');addFormatToken('y',['yyyy',4],0,'eraYear');addRegexToken('N',matchEraAbbr);addRegexToken('NN',matchEraAbbr);addRegexToken('NNN',matchEraAbbr);addRegexToken('NNNN',matchEraName);addRegexToken('NNNNN',matchEraNarrow);addParseToken(['N','NN','NNN','NNNN','NNNNN'],function(input,array,config,token){var era=config._locale.erasParse(input,token,config._strict);if(era){getParsingFlags(config).era=era;}else {getParsingFlags(config).invalidEra=input;}});addRegexToken('y',matchUnsigned);addRegexToken('yy',matchUnsigned);addRegexToken('yyy',matchUnsigned);addRegexToken('yyyy',matchUnsigned);addRegexToken('yo',matchEraYearOrdinal);addParseToken(['y','yy','yyy','yyyy'],YEAR);addParseToken(['yo'],function(input,array,config,token){var match;if(config._locale._eraYearOrdinalRegex){match=input.match(config._locale._eraYearOrdinalRegex);}if(config._locale.eraYearOrdinalParse){array[YEAR]=config._locale.eraYearOrdinalParse(input,match);}else {array[YEAR]=parseInt(input,10);}});function localeEras(m,format){var i,l,date,eras=this._eras||getLocale('en')._eras;for(i=0,l=eras.length;i<l;++i){switch(_typeof(eras[i].since)){case'string':// truncate time
	date=hooks(eras[i].since).startOf('day');eras[i].since=date.valueOf();break;}switch(_typeof(eras[i].until)){case'undefined':eras[i].until=+Infinity;break;case'string':// truncate time
	date=hooks(eras[i].until).startOf('day').valueOf();eras[i].until=date.valueOf();break;}}return eras;}function localeErasParse(eraName,format,strict){var i,l,eras=this.eras(),name,abbr,narrow;eraName=eraName.toUpperCase();for(i=0,l=eras.length;i<l;++i){name=eras[i].name.toUpperCase();abbr=eras[i].abbr.toUpperCase();narrow=eras[i].narrow.toUpperCase();if(strict){switch(format){case'N':case'NN':case'NNN':if(abbr===eraName){return eras[i];}break;case'NNNN':if(name===eraName){return eras[i];}break;case'NNNNN':if(narrow===eraName){return eras[i];}break;}}else if([name,abbr,narrow].indexOf(eraName)>=0){return eras[i];}}}function localeErasConvertYear(era,year){var dir=era.since<=era.until?+1:-1;if(year===undefined){return hooks(era.since).year();}else {return hooks(era.since).year()+(year-era.offset)*dir;}}function getEraName(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
	val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].name;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].name;}}return '';}function getEraNarrow(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
	val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].narrow;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].narrow;}}return '';}function getEraAbbr(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
	val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].abbr;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].abbr;}}return '';}function getEraYear(){var i,l,dir,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){dir=eras[i].since<=eras[i].until?+1:-1;// truncate time
	val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until||eras[i].until<=val&&val<=eras[i].since){return (this.year()-hooks(eras[i].since).year())*dir+eras[i].offset;}}return this.year();}function erasNameRegex(isStrict){if(!hasOwnProp(this,'_erasNameRegex')){computeErasParse.call(this);}return isStrict?this._erasNameRegex:this._erasRegex;}function erasAbbrRegex(isStrict){if(!hasOwnProp(this,'_erasAbbrRegex')){computeErasParse.call(this);}return isStrict?this._erasAbbrRegex:this._erasRegex;}function erasNarrowRegex(isStrict){if(!hasOwnProp(this,'_erasNarrowRegex')){computeErasParse.call(this);}return isStrict?this._erasNarrowRegex:this._erasRegex;}function matchEraAbbr(isStrict,locale){return locale.erasAbbrRegex(isStrict);}function matchEraName(isStrict,locale){return locale.erasNameRegex(isStrict);}function matchEraNarrow(isStrict,locale){return locale.erasNarrowRegex(isStrict);}function matchEraYearOrdinal(isStrict,locale){return locale._eraYearOrdinalRegex||matchUnsigned;}function computeErasParse(){var abbrPieces=[],namePieces=[],narrowPieces=[],mixedPieces=[],i,l,eras=this.eras();for(i=0,l=eras.length;i<l;++i){namePieces.push(regexEscape(eras[i].name));abbrPieces.push(regexEscape(eras[i].abbr));narrowPieces.push(regexEscape(eras[i].narrow));mixedPieces.push(regexEscape(eras[i].name));mixedPieces.push(regexEscape(eras[i].abbr));mixedPieces.push(regexEscape(eras[i].narrow));}this._erasRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._erasNameRegex=new RegExp('^('+namePieces.join('|')+')','i');this._erasAbbrRegex=new RegExp('^('+abbrPieces.join('|')+')','i');this._erasNarrowRegex=new RegExp('^('+narrowPieces.join('|')+')','i');}// FORMATTING
	addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
	addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
	addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
	addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
	function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getISOWeeksInISOWeekYear(){return weeksInYear(this.isoWeekYear(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getWeeksInWeekYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.weekYear(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else {weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
	addFormatToken('Q',0,'Qo','quarter');// ALIASES
	addUnitAlias('quarter','Q');// PRIORITY
	addUnitPriority('quarter',7);// PARSING
	addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
	function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
	addFormatToken('D',['DD',2],'Do','date');// ALIASES
	addUnitAlias('date','D');// PRIORITY
	addUnitPriority('date',9);// PARSING
	addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
	return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
	var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
	addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
	addUnitAlias('dayOfYear','DDD');// PRIORITY
	addUnitPriority('dayOfYear',4);// PARSING
	addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
	// MOMENTS
	function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
	addFormatToken('m',['mm',2],0,'minute');// ALIASES
	addUnitAlias('minute','m');// PRIORITY
	addUnitPriority('minute',14);// PARSING
	addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
	var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
	addFormatToken('s',['ss',2],0,'second');// ALIASES
	addUnitAlias('second','s');// PRIORITY
	addUnitPriority('second',15);// PARSING
	addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
	var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
	addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
	addUnitAlias('millisecond','ms');// PRIORITY
	addUnitPriority('millisecond',16);// PARSING
	addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token,getSetMillisecond;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
	addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
	function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;if(typeof Symbol!=='undefined'&&Symbol.for!=null){proto[Symbol.for('nodejs.util.inspect.custom')]=function(){return 'Moment<'+this.format()+'>';};}proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.eraName=getEraName;proto.eraNarrow=getEraNarrow;proto.eraAbbr=getEraAbbr;proto.eraYear=getEraYear;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.weeksInWeekYear=getWeeksInWeekYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.isoWeeksInISOWeekYear=getISOWeeksInISOWeekYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.eras=localeEras;proto$1.erasParse=localeErasParse;proto$1.erasConvertYear=localeErasConvertYear;proto$1.erasAbbrRegex=erasAbbrRegex;proto$1.erasNameRegex=erasNameRegex;proto$1.erasNarrowRegex=erasNarrowRegex;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale(),utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i,out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
	// (5)
	// (fmt, 5)
	// (fmt)
	// (true)
	// (true, 5)
	// (true, fmt, 5)
	// (true, fmt)
	function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else {format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0,i,out=[];if(index!=null){return get$1(format,(index+shift)%7,field,'day');}for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{eras:[{since:'0001-01-01',until:+Infinity,offset:1,name:'Anno Domini',narrow:'AD',abbr:'AD'},{since:'0000-12-31',until:-Infinity,offset:1,name:'Before Christ',narrow:'BC',abbr:'BC'}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function ordinal(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
	hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
	function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
	function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else {return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data,seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
	// check: https://github.com/moment/moment/issues/2166
	if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
	// examples of what that means.
	data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
	monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
	years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
	// 400 years have 12 months === 4800
	return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
	return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days,months,milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else {// handle milliseconds separately because of floating point math errors (issue #1867)
	days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
	case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
	function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms'),asSeconds=makeAs('s'),asMinutes=makeAs('m'),asHours=makeAs('h'),asDays=makeAs('d'),asWeeks=makeAs('w'),asMonths=makeAs('M'),asQuarters=makeAs('Q'),asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds'),seconds=makeGetter('seconds'),minutes=makeGetter('minutes'),hours=makeGetter('hours'),days=makeGetter('days'),months=makeGetter('months'),years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round,thresholds={ss:44,// a few seconds to seconds
	s:45,// seconds to minute
	m:45,// minutes to hour
	h:22,// hours to day
	d:26,// days to month/week
	w:null,// weeks to month
	M:11// months to year
	};// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,thresholds,locale){var duration=createDuration(posNegDuration).abs(),seconds=round(duration.as('s')),minutes=round(duration.as('m')),hours=round(duration.as('h')),days=round(duration.as('d')),months=round(duration.as('M')),weeks=round(duration.as('w')),years=round(duration.as('y')),a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days];if(thresholds.w!=null){a=a||weeks<=1&&['w']||weeks<thresholds.w&&['ww',weeks];}a=a||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
	function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
	function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(argWithSuffix,argThresholds){if(!this.isValid()){return this.localeData().invalidDate();}var withSuffix=false,th=thresholds,locale,output;if((typeof argWithSuffix==='undefined'?'undefined':_typeof(argWithSuffix))==='object'){argThresholds=argWithSuffix;argWithSuffix=false;}if(typeof argWithSuffix==='boolean'){withSuffix=argWithSuffix;}if((typeof argThresholds==='undefined'?'undefined':_typeof(argThresholds))==='object'){th=Object.assign({},thresholds,argThresholds);if(argThresholds.s!=null&&argThresholds.ss==null){th.ss=argThresholds.s-1;}}locale=this.localeData();output=relativeTime$1(this,!withSuffix,th,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
	//  * milliseconds bubble up until they become hours
	//  * days do not bubble at all
	//  * months bubble up until they become years
	// This is because there is no context-free conversion between hours and days
	// (think of clock changes)
	// and also not between days and months (28-31 days per month)
	if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000,days=abs$1(this._days),months=abs$1(this._months),minutes,hours,years,s,total=this.asSeconds(),totalSign,ymSign,daysSign,hmsSign;if(!total){// this is the same as C#'s (Noda) and python (isodate)...
	// but not other JS (goog.date)
	return 'P0D';}// 3600 seconds -> 60 minutes -> 1 hour
	minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
	years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';totalSign=total<0?'-':'';ymSign=sign(this._months)!==sign(total)?'-':'';daysSign=sign(this._days)!==sign(total)?'-':'';hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(years?ymSign+years+'Y':'')+(months?ymSign+months+'M':'')+(days?daysSign+days+'D':'')+(hours||minutes||seconds?'T':'')+(hours?hmsSign+hours+'H':'')+(minutes?hmsSign+minutes+'M':'')+(seconds?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// FORMATTING
	addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
	addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});//! moment.js
	hooks.version='2.29.1';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
	hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
	DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
	DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
	DATE:'YYYY-MM-DD',// <input type="date" />
	TIME:'HH:mm',// <input type="time" />
	TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
	TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
	WEEK:'GGGG-[W]WW',// <input type="week" />
	MONTH:'YYYY-MM'// <input type="month" />
	};return hooks;});},{}],515:[function(require,module,exports){/* eslint-disable no-unused-vars */var getOwnPropertySymbols=Object.getOwnPropertySymbols;var hasOwnProperty=Object.prototype.hasOwnProperty;var propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val===null||val===undefined){throw new TypeError('Object.assign cannot be called with null or undefined');}return Object(val);}function shouldUseNative(){try{if(!Object.assign){return false;}// Detect buggy property enumeration order in older V8 versions.
	// https://bugs.chromium.org/p/v8/issues/detail?id=4118
	var test1=new String('abc');// eslint-disable-line no-new-wrappers
	test1[5]='de';if(Object.getOwnPropertyNames(test1)[0]==='5'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056
	var test2={};for(var i=0;i<10;i++){test2['_'+String.fromCharCode(i)]=i;}var order2=Object.getOwnPropertyNames(test2).map(function(n){return test2[n];});if(order2.join('')!=='0123456789'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056
	var test3={};'abcdefghijklmnopqrst'.split('').forEach(function(letter){test3[letter]=letter;});if(Object.keys(Object.assign({},test3)).join('')!=='abcdefghijklmnopqrst'){return false;}return true;}catch(err){// We don't expect any of the above to throw, but better to be safe.
	return false;}}module.exports=shouldUseNative()?Object.assign:function(target,source){var from;var to=toObject(target);var symbols;for(var s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from){if(hasOwnProperty.call(from,key)){to[key]=from[key];}}if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++){if(propIsEnumerable.call(from,symbols[i])){to[symbols[i]]=from[symbols[i]];}}}}return to;};},{}],516:[function(require,module,exports){// shim for using process in browser
	var process=module.exports={};// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else {cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else {cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations
	return setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined
	if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
	return cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	return cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	return cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations
	return clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined
	if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
	return cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	return cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	// Some versions of I.E. have different rules for clearTimeout vs setTimeout
	return cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else {queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects
	function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues
	process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return [];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return '/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],517:[function(require,module,exports){module.exports=function isBuffer(arg){return arg&&(typeof arg==='undefined'?'undefined':_typeof(arg))==='object'&&typeof arg.copy==='function'&&typeof arg.fill==='function'&&typeof arg.readUInt8==='function';};},{}],518:[function(require,module,exports){(function(process,global){(function(){// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	var formatRegExp=/%[sdj%]/g;exports.format=function(f){if(!isString(f)){var objects=[];for(var i=0;i<arguments.length;i++){objects.push(inspect(arguments[i]));}return objects.join(' ');}var i=1;var args=arguments;var len=args.length;var str=String(f).replace(formatRegExp,function(x){if(x==='%%')return '%';if(i>=len)return x;switch(x){case'%s':return String(args[i++]);case'%d':return Number(args[i++]);case'%j':try{return JSON.stringify(args[i++]);}catch(_){return '[Circular]';}default:return x;}});for(var x=args[i];i<len;x=args[++i]){if(isNull(x)||!isObject(x)){str+=' '+x;}else {str+=' '+inspect(x);}}return str;};// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate=function(fn,msg){// Allow for deprecating things in the process of starting up.
	if(isUndefined(global.process)){return function(){return exports.deprecate(fn,msg).apply(this,arguments);};}if(process.noDeprecation===true){return fn;}var warned=false;function deprecated(){if(!warned){if(process.throwDeprecation){throw new Error(msg);}else if(process.traceDeprecation){console.trace(msg);}else {console.error(msg);}warned=true;}return fn.apply(this,arguments);}return deprecated;};var debugs={};var debugEnviron;exports.debuglog=function(set){if(isUndefined(debugEnviron))debugEnviron=process.env.NODE_DEBUG||'';set=set.toUpperCase();if(!debugs[set]){if(new RegExp('\\b'+set+'\\b','i').test(debugEnviron)){var pid=process.pid;debugs[set]=function(){var msg=exports.format.apply(exports,arguments);console.error('%s %d: %s',set,pid,msg);};}else {debugs[set]=function(){};}}return debugs[set];};/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 *//* legacy: obj, showHidden, depth, colors*/function inspect(obj,opts){// default options
	var ctx={seen:[],stylize:stylizeNoColor};// legacy...
	if(arguments.length>=3)ctx.depth=arguments[2];if(arguments.length>=4)ctx.colors=arguments[3];if(isBoolean(opts)){// legacy...
	ctx.showHidden=opts;}else if(opts){// got an "options" object
	exports._extend(ctx,opts);}// set default options
	if(isUndefined(ctx.showHidden))ctx.showHidden=false;if(isUndefined(ctx.depth))ctx.depth=2;if(isUndefined(ctx.colors))ctx.colors=false;if(isUndefined(ctx.customInspect))ctx.customInspect=true;if(ctx.colors)ctx.stylize=stylizeWithColor;return formatValue(ctx,obj,ctx.depth);}exports.inspect=inspect;// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors={'bold':[1,22],'italic':[3,23],'underline':[4,24],'inverse':[7,27],'white':[37,39],'grey':[90,39],'black':[30,39],'blue':[34,39],'cyan':[36,39],'green':[32,39],'magenta':[35,39],'red':[31,39],'yellow':[33,39]};// Don't use 'blue' not visible on cmd.exe
	inspect.styles={'special':'cyan','number':'yellow','boolean':'yellow','undefined':'grey','null':'bold','string':'green','date':'magenta',// "name": intentionally not styling
	'regexp':'red'};function stylizeWithColor(str,styleType){var style=inspect.styles[styleType];if(style){return '\x1B['+inspect.colors[style][0]+'m'+str+'\x1B['+inspect.colors[style][1]+'m';}else {return str;}}function stylizeNoColor(str,styleType){return str;}function arrayToHash(array){var hash={};array.forEach(function(val,idx){hash[val]=true;});return hash;}function formatValue(ctx,value,recurseTimes){// Provide a hook for user-specified inspect functions.
	// Check that value is an object with an inspect function on it
	if(ctx.customInspect&&value&&isFunction(value.inspect)&&// Filter out the util module, it's inspect function is special
	value.inspect!==exports.inspect&&// Also filter out any prototype objects using the circular check.
	!(value.constructor&&value.constructor.prototype===value)){var ret=value.inspect(recurseTimes,ctx);if(!isString(ret)){ret=formatValue(ctx,ret,recurseTimes);}return ret;}// Primitive types cannot have properties
	var primitive=formatPrimitive(ctx,value);if(primitive){return primitive;}// Look up the keys of the object.
	var keys=Object.keys(value);var visibleKeys=arrayToHash(keys);if(ctx.showHidden){keys=Object.getOwnPropertyNames(value);}// IE doesn't make error fields non-enumerable
	// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	if(isError(value)&&(keys.indexOf('message')>=0||keys.indexOf('description')>=0)){return formatError(value);}// Some type of object without properties can be shortcutted.
	if(keys.length===0){if(isFunction(value)){var name=value.name?': '+value.name:'';return ctx.stylize('[Function'+name+']','special');}if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}if(isDate(value)){return ctx.stylize(Date.prototype.toString.call(value),'date');}if(isError(value)){return formatError(value);}}var base='',array=false,braces=['{','}'];// Make Array say that they are Array
	if(isArray(value)){array=true;braces=['[',']'];}// Make functions say that they are functions
	if(isFunction(value)){var n=value.name?': '+value.name:'';base=' [Function'+n+']';}// Make RegExps say that they are RegExps
	if(isRegExp(value)){base=' '+RegExp.prototype.toString.call(value);}// Make dates with properties first say the date
	if(isDate(value)){base=' '+Date.prototype.toUTCString.call(value);}// Make error with message first say the error
	if(isError(value)){base=' '+formatError(value);}if(keys.length===0&&(!array||value.length==0)){return braces[0]+base+braces[1];}if(recurseTimes<0){if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else {return ctx.stylize('[Object]','special');}}ctx.seen.push(value);var output;if(array){output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else {output=keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}ctx.seen.pop();return reduceToSingleString(output,base,braces);}function formatPrimitive(ctx,value){if(isUndefined(value))return ctx.stylize('undefined','undefined');if(isString(value)){var simple='\''+JSON.stringify(value).replace(/^"|"$/g,'').replace(/'/g,"\\'").replace(/\\"/g,'"')+'\'';return ctx.stylize(simple,'string');}if(isNumber(value))return ctx.stylize(''+value,'number');if(isBoolean(value))return ctx.stylize(''+value,'boolean');// For some reason typeof null is "object", so special case here.
	if(isNull(value))return ctx.stylize('null','null');}function formatError(value){return '['+Error.prototype.toString.call(value)+']';}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){var output=[];for(var i=0,l=value.length;i<l;++i){if(hasOwnProperty(value,String(i))){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),true));}else {output.push('');}}keys.forEach(function(key){if(!key.match(/^\d+$/)){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,true));}});return output;}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name,str,desc;desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};if(desc.get){if(desc.set){str=ctx.stylize('[Getter/Setter]','special');}else {str=ctx.stylize('[Getter]','special');}}else {if(desc.set){str=ctx.stylize('[Setter]','special');}}if(!hasOwnProperty(visibleKeys,key)){name='['+key+']';}if(!str){if(ctx.seen.indexOf(desc.value)<0){if(isNull(recurseTimes)){str=formatValue(ctx,desc.value,null);}else {str=formatValue(ctx,desc.value,recurseTimes-1);}if(str.indexOf('\n')>-1){if(array){str=str.split('\n').map(function(line){return '  '+line;}).join('\n').substr(2);}else {str='\n'+str.split('\n').map(function(line){return '   '+line;}).join('\n');}}}else {str=ctx.stylize('[Circular]','special');}}if(isUndefined(name)){if(array&&key.match(/^\d+$/)){return str;}name=JSON.stringify(''+key);if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){name=name.substr(1,name.length-2);name=ctx.stylize(name,'name');}else {name=name.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'");name=ctx.stylize(name,'string');}}return name+': '+str;}function reduceToSingleString(output,base,braces){var length=output.reduce(function(prev,cur){if(cur.indexOf('\n')>=0);return prev+cur.replace(/\u001b\[\d\d?m/g,'').length+1;},0);if(length>60){return braces[0]+(base===''?'':base+'\n ')+' '+output.join(',\n  ')+' '+braces[1];}return braces[0]+base+' '+output.join(', ')+' '+braces[1];}// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar){return Array.isArray(ar);}exports.isArray=isArray;function isBoolean(arg){return typeof arg==='boolean';}exports.isBoolean=isBoolean;function isNull(arg){return arg===null;}exports.isNull=isNull;function isNullOrUndefined(arg){return arg==null;}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg==='number';}exports.isNumber=isNumber;function isString(arg){return typeof arg==='string';}exports.isString=isString;function isSymbol(arg){return (typeof arg==='undefined'?'undefined':_typeof(arg))==='symbol';}exports.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0;}exports.isUndefined=isUndefined;function isRegExp(re){return isObject(re)&&objectToString(re)==='[object RegExp]';}exports.isRegExp=isRegExp;function isObject(arg){return (typeof arg==='undefined'?'undefined':_typeof(arg))==='object'&&arg!==null;}exports.isObject=isObject;function isDate(d){return isObject(d)&&objectToString(d)==='[object Date]';}exports.isDate=isDate;function isError(e){return isObject(e)&&(objectToString(e)==='[object Error]'||e instanceof Error);}exports.isError=isError;function isFunction(arg){return typeof arg==='function';}exports.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg==='boolean'||typeof arg==='number'||typeof arg==='string'||(typeof arg==='undefined'?'undefined':_typeof(arg))==='symbol'||// ES6 symbol
	typeof arg==='undefined';}exports.isPrimitive=isPrimitive;exports.isBuffer=require('./support/isBuffer');function objectToString(o){return Object.prototype.toString.call(o);}function pad(n){return n<10?'0'+n.toString(10):n.toString(10);}var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];// 26 Feb 16:19:34
	function timestamp(){var d=new Date();var time=[pad(d.getHours()),pad(d.getMinutes()),pad(d.getSeconds())].join(':');return [d.getDate(),months[d.getMonth()],time].join(' ');}// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log=function(){console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));};/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */exports.inherits=require('inherits');exports._extend=function(origin,add){// Don't do anything if add isn't an object
	if(!add||!isObject(add))return origin;var keys=Object.keys(add);var i=keys.length;while(i--){origin[keys[i]]=add[keys[i]];}return origin;};function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}}).call(this);}).call(this,require('_process'),typeof commonjsGlobal!=="undefined"?commonjsGlobal:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"./support/isBuffer":517,"_process":516,"inherits":371}],519:[function(require,module,exports){module.exports=function(Yallist){Yallist.prototype[Symbol.iterator]=/*#__PURE__*/regeneratorRuntime.mark(function _callee3(){var walker;return regeneratorRuntime.wrap(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:walker=this.head;case 1:if(!walker){_context5.next=7;break;}_context5.next=4;return walker.value;case 4:walker=walker.next;_context5.next=1;break;case 7:case'end':return _context5.stop();}}},_callee3,this);});};},{}],520:[function(require,module,exports){module.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(list){var self=this;if(!(self instanceof Yallist)){self=new Yallist();}self.tail=null;self.head=null;self.length=0;if(list&&typeof list.forEach==='function'){list.forEach(function(item){self.push(item);});}else if(arguments.length>0){for(var i=0,l=arguments.length;i<l;i++){self.push(arguments[i]);}}return self;}Yallist.prototype.removeNode=function(node){if(node.list!==this){throw new Error('removing node which does not belong to this list');}var next=node.next;var prev=node.prev;if(next){next.prev=prev;}if(prev){prev.next=next;}if(node===this.head){this.head=next;}if(node===this.tail){this.tail=prev;}node.list.length--;node.next=null;node.prev=null;node.list=null;return next;};Yallist.prototype.unshiftNode=function(node){if(node===this.head){return;}if(node.list){node.list.removeNode(node);}var head=this.head;node.list=this;node.next=head;if(head){head.prev=node;}this.head=node;if(!this.tail){this.tail=node;}this.length++;};Yallist.prototype.pushNode=function(node){if(node===this.tail){return;}if(node.list){node.list.removeNode(node);}var tail=this.tail;node.list=this;node.prev=tail;if(tail){tail.next=node;}this.tail=node;if(!this.head){this.head=node;}this.length++;};Yallist.prototype.push=function(){for(var i=0,l=arguments.length;i<l;i++){push(this,arguments[i]);}return this.length;};Yallist.prototype.unshift=function(){for(var i=0,l=arguments.length;i<l;i++){unshift(this,arguments[i]);}return this.length;};Yallist.prototype.pop=function(){if(!this.tail){return undefined;}var res=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null;}else {this.head=null;}this.length--;return res;};Yallist.prototype.shift=function(){if(!this.head){return undefined;}var res=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null;}else {this.tail=null;}this.length--;return res;};Yallist.prototype.forEach=function(fn,thisp){thisp=thisp||this;for(var walker=this.head,i=0;walker!==null;i++){fn.call(thisp,walker.value,i,this);walker=walker.next;}};Yallist.prototype.forEachReverse=function(fn,thisp){thisp=thisp||this;for(var walker=this.tail,i=this.length-1;walker!==null;i--){fn.call(thisp,walker.value,i,this);walker=walker.prev;}};Yallist.prototype.get=function(n){for(var i=0,walker=this.head;walker!==null&&i<n;i++){// abort out of the list early if we hit a cycle
	walker=walker.next;}if(i===n&&walker!==null){return walker.value;}};Yallist.prototype.getReverse=function(n){for(var i=0,walker=this.tail;walker!==null&&i<n;i++){// abort out of the list early if we hit a cycle
	walker=walker.prev;}if(i===n&&walker!==null){return walker.value;}};Yallist.prototype.map=function(fn,thisp){thisp=thisp||this;var res=new Yallist();for(var walker=this.head;walker!==null;){res.push(fn.call(thisp,walker.value,this));walker=walker.next;}return res;};Yallist.prototype.mapReverse=function(fn,thisp){thisp=thisp||this;var res=new Yallist();for(var walker=this.tail;walker!==null;){res.push(fn.call(thisp,walker.value,this));walker=walker.prev;}return res;};Yallist.prototype.reduce=function(fn,initial){var acc;var walker=this.head;if(arguments.length>1){acc=initial;}else if(this.head){walker=this.head.next;acc=this.head.value;}else {throw new TypeError('Reduce of empty list with no initial value');}for(var i=0;walker!==null;i++){acc=fn(acc,walker.value,i);walker=walker.next;}return acc;};Yallist.prototype.reduceReverse=function(fn,initial){var acc;var walker=this.tail;if(arguments.length>1){acc=initial;}else if(this.tail){walker=this.tail.prev;acc=this.tail.value;}else {throw new TypeError('Reduce of empty list with no initial value');}for(var i=this.length-1;walker!==null;i--){acc=fn(acc,walker.value,i);walker=walker.prev;}return acc;};Yallist.prototype.toArray=function(){var arr=new Array(this.length);for(var i=0,walker=this.head;walker!==null;i++){arr[i]=walker.value;walker=walker.next;}return arr;};Yallist.prototype.toArrayReverse=function(){var arr=new Array(this.length);for(var i=0,walker=this.tail;walker!==null;i++){arr[i]=walker.value;walker=walker.prev;}return arr;};Yallist.prototype.slice=function(from,to){to=to||this.length;if(to<0){to+=this.length;}from=from||0;if(from<0){from+=this.length;}var ret=new Yallist();if(to<from||to<0){return ret;}if(from<0){from=0;}if(to>this.length){to=this.length;}for(var i=0,walker=this.head;walker!==null&&i<from;i++){walker=walker.next;}for(;walker!==null&&i<to;i++,walker=walker.next){ret.push(walker.value);}return ret;};Yallist.prototype.sliceReverse=function(from,to){to=to||this.length;if(to<0){to+=this.length;}from=from||0;if(from<0){from+=this.length;}var ret=new Yallist();if(to<from||to<0){return ret;}if(from<0){from=0;}if(to>this.length){to=this.length;}for(var i=this.length,walker=this.tail;walker!==null&&i>to;i--){walker=walker.prev;}for(;walker!==null&&i>from;i--,walker=walker.prev){ret.push(walker.value);}return ret;};Yallist.prototype.splice=function(start,deleteCount/*, ...nodes */){if(start>this.length){start=this.length-1;}if(start<0){start=this.length+start;}for(var i=0,walker=this.head;walker!==null&&i<start;i++){walker=walker.next;}var ret=[];for(var i=0;walker&&i<deleteCount;i++){ret.push(walker.value);walker=this.removeNode(walker);}if(walker===null){walker=this.tail;}if(walker!==this.head&&walker!==this.tail){walker=walker.prev;}for(var i=2;i<arguments.length;i++){walker=insert(this,walker,arguments[i]);}return ret;};Yallist.prototype.reverse=function(){var head=this.head;var tail=this.tail;for(var walker=head;walker!==null;walker=walker.prev){var p=walker.prev;walker.prev=walker.next;walker.next=p;}this.head=tail;this.tail=head;return this;};function insert(self,node,value){var inserted=node===self.head?new Node(value,null,node,self):new Node(value,node,node.next,self);if(inserted.next===null){self.tail=inserted;}if(inserted.prev===null){self.head=inserted;}self.length++;return inserted;}function push(self,item){self.tail=new Node(item,self.tail,null,self);if(!self.head){self.head=self.tail;}self.length++;}function unshift(self,item){self.head=new Node(item,null,self.head,self);if(!self.tail){self.tail=self.head;}self.length++;}function Node(value,prev,next,list){if(!(this instanceof Node)){return new Node(value,prev,next,list);}this.list=list;this.value=value;if(prev){prev.next=this;this.prev=prev;}else {this.prev=null;}if(next){next.prev=this;this.next=next;}else {this.next=null;}}try{// add if support for Symbol.iterator is present
	require('./iterator.js')(Yallist);}catch(er){}},{"./iterator.js":519}]},{},[1])(1);});
	});

	var templateEngine = createCommonjsModule(function (module, exports) {

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.Template = exports.GlobalSettings = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.

	    var EvaluationContext = /** @class */function () {
	        function EvaluationContext(context) {
	            this._stateStack = [];
	            if (context !== undefined) {
	                this.$root = context.$root;
	            }
	        }
	        EvaluationContext.prototype.isReservedField = function (name) {
	            return EvaluationContext._reservedFields.indexOf(name) >= 0;
	        };
	        EvaluationContext.prototype.saveState = function () {
	            this._stateStack.push({
	                $data: this.$data,
	                $index: this.$index
	            });
	        };
	        EvaluationContext.prototype.restoreLastState = function () {
	            if (this._stateStack.length === 0) {
	                throw new Error("There is no evaluation context state to restore.");
	            }
	            var savedContext = this._stateStack.pop();
	            this.$data = savedContext.$data;
	            this.$index = savedContext.$index;
	        };
	        Object.defineProperty(EvaluationContext.prototype, "$data", {
	            get: function get() {
	                return this._$data !== undefined ? this._$data : this.$root;
	            },
	            set: function set(value) {
	                this._$data = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        EvaluationContext._reservedFields = ["$data", "$when", "$root", "$index"];
	        return EvaluationContext;
	    }();
	    var TemplateObjectMemory = /** @class */function () {
	        function TemplateObjectMemory() {
	            this._memory = new browser.SimpleObjectMemory(this);
	        }
	        TemplateObjectMemory.prototype.getValue = function (path) {
	            var actualPath = path.length > 0 && path[0] !== "$" ? "$data." + path : path;
	            return this._memory.getValue(actualPath);
	        };
	        TemplateObjectMemory.prototype.setValue = function (path, input) {
	            this._memory.setValue(path, input);
	        };
	        TemplateObjectMemory.prototype.version = function () {
	            return this._memory.version();
	        };
	        return TemplateObjectMemory;
	    }();
	    /**
	     * Holds global settings that can be used to customize the way templates are expanded.
	     */
	    var GlobalSettings = /** @class */function () {
	        function GlobalSettings() {}
	        /**
	         * Callback invoked when expression evaluation needs the value of a field in the source data object
	         * and that field is undefined or null. By default, expression evaluation will substitute an undefined
	         * field with its binding expression (e.g. `${field}`). This callback makes it possible to customize that
	         * behavior.
	         *
	         * **Example**
	         * Given this data object:
	         *
	         * ```json
	         * {
	         *     firstName: "David"
	         * }
	         * ```
	         *
	         * The expression `${firstName} ${lastName}` will evaluate to "David ${lastName}" because the `lastName`
	         * field is undefined.
	         *
	         * Now let's set the callback:
	         * ```typescript
	         * GlobalSettings.getUndefinedFieldValueSubstitutionString = (path: string) => { return "<undefined value>"; }
	         * ```
	         *
	         * With that, the above expression will evaluate to "David &lt;undefined value&gt;"
	         */
	        GlobalSettings.getUndefinedFieldValueSubstitutionString = undefined;
	        return GlobalSettings;
	    }();
	    exports.GlobalSettings = GlobalSettings;
	    /**
	     * Represents a template that can be bound to data.
	     */
	    var Template = /** @class */function () {
	        /**
	         * Initializes a new Template instance based on the provided payload.
	         * Once created, the instance can be bound to different data objects
	         * in a loop.
	         *
	         * @param payload The template payload.
	         */
	        function Template(payload) {
	            this._preparedPayload = Template.prepare(payload);
	        }
	        Template.prepare = function (node) {
	            if (typeof node === "string") {
	                return Template.parseInterpolatedString(node);
	            } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === "object" && node !== null) {
	                if (Array.isArray(node)) {
	                    var result = [];
	                    for (var _i = 0, node_1 = node; _i < node_1.length; _i++) {
	                        var item = node_1[_i];
	                        result.push(Template.prepare(item));
	                    }
	                    return result;
	                } else {
	                    var keys = Object.keys(node);
	                    var result = {};
	                    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
	                        var key = keys_1[_a];
	                        result[key] = Template.prepare(node[key]);
	                    }
	                    return result;
	                }
	            } else {
	                return node;
	            }
	        };
	        Template.internalTryEvaluateExpression = function (expression, context, allowSubstitutions) {
	            var memory = new TemplateObjectMemory();
	            memory.$root = context.$root;
	            memory.$data = context.$data;
	            memory.$index = context.$index;
	            var options = undefined;
	            if (allowSubstitutions) {
	                options = new browser.Options();
	                options.nullSubstitution = function (path) {
	                    var substitutionValue = undefined;
	                    if (GlobalSettings.getUndefinedFieldValueSubstitutionString) {
	                        substitutionValue = GlobalSettings.getUndefinedFieldValueSubstitutionString(path);
	                    }
	                    return substitutionValue ? substitutionValue : "${" + path + "}";
	                };
	            }
	            // The root of an expression coming from an interpolated string is of type Concat.
	            // In that case, and if the caller allows it, we're doing our own concatenation
	            // in order to catch each individual expression evaluation error and substitute in
	            // the final string
	            if (expression.type === browser.ExpressionType.Concat && allowSubstitutions) {
	                var result = "";
	                for (var _i = 0, _a = expression.children; _i < _a.length; _i++) {
	                    var childExpression = _a[_i];
	                    var evaluationResult = void 0;
	                    try {
	                        evaluationResult = childExpression.tryEvaluate(memory, options);
	                    } catch (ex) {
	                        // We'll swallow all exceptions here
	                        evaluationResult = {
	                            value: undefined,
	                            error: ex
	                        };
	                    }
	                    if (evaluationResult.error) {
	                        evaluationResult.value = "${" + childExpression.toString() + "}";
	                    }
	                    result += evaluationResult.value.toString();
	                }
	                return { value: result, error: undefined };
	            }
	            return expression.tryEvaluate(memory, options);
	        };
	        /**
	         * Parses an interpolated string into an Expression object ready to evaluate.
	         *
	         * @param interpolatedString The interpolated string to parse. Example: "Hello ${name}"
	         * @returns An Expression object if the provided interpolated string contained at least one expression (e.g. "${expression}"); the original string otherwise.
	         */
	        Template.parseInterpolatedString = function (interpolatedString) {
	            var regExp = /\${([^{}}]+)}/g;
	            var matches = null;
	            var lastMatch;
	            var matchCount = 0;
	            // Determine if the string contains any ${<expression>}
	            while (matchCount <= 1 && (matches = regExp.exec(interpolatedString)) != null) {
	                lastMatch = matches;
	                matchCount++;
	            }
	            var lookup = function lookup(type) {
	                var standardFunction = browser.ExpressionFunctions.standardFunctions.get(type);
	                if (standardFunction) {
	                    return standardFunction;
	                } else {
	                    return new browser.ExpressionEvaluator(type, function (expression, state, options) {
	                        throw new Error("Unknown function " + type);
	                    }, browser.ReturnType.String);
	                }
	            };
	            // If there are none, it's just a string
	            if (matchCount === 0) {
	                return interpolatedString;
	            }
	            // If the entire string is enclosed in a single ${}, extract the enclosed expression
	            else if (matchCount === 1 && lastMatch[0].length === interpolatedString.length) {
	                    return browser.Expression.parse(lastMatch[1], lookup);
	                }
	            // Otherwise, it's an interpolated string with multiple embedded expressions
	            return browser.Expression.parse("`" + interpolatedString + "`", lookup);
	        };
	        /**
	         * Tries to evaluate the provided expression using the provided context.
	         *
	         * @param expression The expression to evaluate.
	         * @param context The context (data) used to evaluate the expression.
	         * @param allowSubstitutions Indicates if the expression evaluator should substitute undefined value with a default
	         *   string or the value returned by the GlobalSettings.getUndefinedFieldValueSubstitutionString callback.
	         * @returns An object representing the result of the evaluation. If the evaluation succeeded, the value property
	         *   contains the actual evaluation result, and the error property is undefined. If the evaluation fails, the error
	         *   property contains a message detailing the error that occurred.
	         */
	        Template.tryEvaluateExpression = function (expression, context, allowSubstitutions) {
	            return Template.internalTryEvaluateExpression(expression, new EvaluationContext(context), allowSubstitutions);
	        };
	        Template.prototype.expandSingleObject = function (node) {
	            var result = {};
	            var keys = Object.keys(node);
	            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
	                var key = keys_2[_i];
	                if (!this._context.isReservedField(key)) {
	                    var value = this.internalExpand(node[key]);
	                    if (value !== undefined) {
	                        result[key] = value;
	                    }
	                }
	            }
	            return result;
	        };
	        Template.prototype.internalExpand = function (node) {
	            var result;
	            this._context.saveState();
	            if (Array.isArray(node)) {
	                var itemArray = [];
	                for (var _i = 0, node_2 = node; _i < node_2.length; _i++) {
	                    var item = node_2[_i];
	                    var expandedItem = this.internalExpand(item);
	                    if (expandedItem !== null) {
	                        if (Array.isArray(expandedItem)) {
	                            itemArray = itemArray.concat(expandedItem);
	                        } else {
	                            itemArray.push(expandedItem);
	                        }
	                    }
	                }
	                result = itemArray;
	            } else if (node instanceof browser.Expression) {
	                var evaluationResult = Template.internalTryEvaluateExpression(node, this._context, true);
	                if (!evaluationResult.error) {
	                    result = evaluationResult.value;
	                } else {
	                    throw new Error(evaluationResult.error);
	                }
	            } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === "object" && node !== null) {
	                var when = node["$when"];
	                var dataContext = node["$data"];
	                var dataContextIsArray = false;
	                var dataContexts = void 0;
	                if (dataContext === undefined) {
	                    dataContexts = [undefined];
	                } else {
	                    if (dataContext instanceof browser.Expression) {
	                        var evaluationResult = Template.internalTryEvaluateExpression(dataContext, this._context, true);
	                        if (!evaluationResult.error) {
	                            dataContext = evaluationResult.value;
	                        } else {
	                            throw new Error(evaluationResult.error);
	                        }
	                    }
	                    if (Array.isArray(dataContext)) {
	                        dataContexts = dataContext;
	                        dataContextIsArray = true;
	                    } else {
	                        dataContexts = [dataContext];
	                    }
	                }
	                result = [];
	                for (var i = 0; i < dataContexts.length; i++) {
	                    if (dataContextIsArray) {
	                        this._context.$index = i;
	                    }
	                    if (dataContexts[i] !== undefined) {
	                        this._context.$data = dataContexts[i];
	                    }
	                    var dropObject = false;
	                    if (when instanceof browser.Expression) {
	                        var evaluationResult = Template.internalTryEvaluateExpression(when, this._context, false);
	                        var whenValue = false;
	                        // If $when fails to evaluate or evaluates to anything but a boolean, consider it is false
	                        if (!evaluationResult.error) {
	                            whenValue = typeof evaluationResult.value === "boolean" && evaluationResult.value;
	                        }
	                        dropObject = !whenValue;
	                    }
	                    if (!dropObject) {
	                        var expandedObject = this.expandSingleObject(node);
	                        if (expandedObject !== null) {
	                            result.push(expandedObject);
	                        }
	                    }
	                }
	                if (result.length === 0) {
	                    result = null;
	                } else if (result.length === 1) {
	                    result = result[0];
	                }
	            } else {
	                result = node;
	            }
	            this._context.restoreLastState();
	            return result;
	        };
	        /**
	         * Expands the template using the provided context. Template expansion involves
	         * evaluating the expressions used in the original template payload, as well as
	         * repeating (expanding) parts of that payload that are bound to arrays.
	         *
	         * Example:
	         *
	         * ```typescript
	         * let context = {
	         *     $root: {
	         *         firstName: "John",
	         *         lastName: "Doe",
	         *         children: [
	         *             { fullName: "Jane Doe", age: 9 },
	         *             { fullName: "Alex Doe", age: 12 }
	         *         ]
	         *     }
	         * }
	         *
	         * let templatePayload = {
	         *     type: "AdaptiveCard",
	         *     version: "1.2",
	         *     body: [
	         *         {
	         *             type: "TextBlock",
	         *             text: "${firstName} ${lastName}"
	         *         },
	         *         {
	         *             type: "TextBlock",
	         *             $data: "${children}",
	         *             text: "${fullName} (${age})"
	         *         }
	         *     ]
	         * }
	         *
	         * let template = new Template(templatePayload);
	         *
	         * let expandedTemplate = template.expand(context);
	         * ```
	         *
	         * With the above code, the value of `expandedTemplate` will be
	         *
	         * ```json
	         * {
	         *     type: "AdaptiveCard",
	         *     version: "1.2",
	         *     body: [
	         *         {
	         *             type: "TextBlock",
	         *             text: "John Doe"
	         *         },
	         *         {
	         *             type: "TextBlock",
	         *             text: "Jane Doe (9)"
	         *         },
	         *         {
	         *             type: "TextBlock",
	         *             text: "Alex Doe (12)"
	         *         }
	         *     ]
	         * }
	         * ```
	         *
	         * @param context The context to bind the template to.
	         * @returns A value representing the expanded template. The type of that value
	         *   is dependent on the type of the original template payload passed to the constructor.
	         */
	        Template.prototype.expand = function (context) {
	            this._context = new EvaluationContext(context);
	            return this.internalExpand(this._preparedPayload);
	        };
	        return Template;
	    }();
	    exports.Template = Template;
	    
	});

	var adaptivecardsTemplating = createCommonjsModule(function (module, exports) {

	    var __createBinding = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function (o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        Object.defineProperty(o, k2, { enumerable: true, get: function get() {
	                return m[k];
	            } });
	    } : function (o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        o[k2] = m[k];
	    });
	    var __exportStar = commonjsGlobal && commonjsGlobal.__exportStar || function (m, exports) {
	        for (var p in m) {
	            if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
	        }
	    };
	    Object.defineProperty(exports, "__esModule", { value: true });
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.
	    __exportStar(templateEngine, exports);
	    
	});

	var enums = createCommonjsModule(function (module, exports) {
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.ContainerFitStatus = exports.ValidationEvent = exports.ValidationPhase = exports.ContainerStyle = exports.InputTextStyle = exports.ActionIconPlacement = exports.FillMode = exports.Orientation = exports.ShowCardActionMode = exports.ImageStyle = exports.ActionAlignment = exports.VerticalAlignment = exports.HorizontalAlignment = exports.TextColor = exports.Spacing = exports.FontType = exports.TextWeight = exports.TextSize = exports.SizeUnit = exports.ImageSize = exports.Size = exports.ActionStyle = void 0;
	    // Note the "weird" way these readonly fields are declared is to work around
	    // a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	    // and adopt this syntax for all other static readonly fields.
	    var ActionStyle = /** @class */function () {
	        function ActionStyle() {}
	        ActionStyle.Default = "default";
	        ActionStyle.Positive = "positive";
	        ActionStyle.Destructive = "destructive";
	        return ActionStyle;
	    }();
	    exports.ActionStyle = ActionStyle;
	    (function (Size) {
	        Size[Size["Auto"] = 0] = "Auto";
	        Size[Size["Stretch"] = 1] = "Stretch";
	        Size[Size["Small"] = 2] = "Small";
	        Size[Size["Medium"] = 3] = "Medium";
	        Size[Size["Large"] = 4] = "Large";
	    })(exports.Size || (exports.Size = {}));
	    (function (ImageSize) {
	        ImageSize[ImageSize["Small"] = 0] = "Small";
	        ImageSize[ImageSize["Medium"] = 1] = "Medium";
	        ImageSize[ImageSize["Large"] = 2] = "Large";
	    })(exports.ImageSize || (exports.ImageSize = {}));
	    (function (SizeUnit) {
	        SizeUnit[SizeUnit["Weight"] = 0] = "Weight";
	        SizeUnit[SizeUnit["Pixel"] = 1] = "Pixel";
	    })(exports.SizeUnit || (exports.SizeUnit = {}));
	    (function (TextSize) {
	        TextSize[TextSize["Small"] = 0] = "Small";
	        TextSize[TextSize["Default"] = 1] = "Default";
	        TextSize[TextSize["Medium"] = 2] = "Medium";
	        TextSize[TextSize["Large"] = 3] = "Large";
	        TextSize[TextSize["ExtraLarge"] = 4] = "ExtraLarge";
	    })(exports.TextSize || (exports.TextSize = {}));
	    (function (TextWeight) {
	        TextWeight[TextWeight["Lighter"] = 0] = "Lighter";
	        TextWeight[TextWeight["Default"] = 1] = "Default";
	        TextWeight[TextWeight["Bolder"] = 2] = "Bolder";
	    })(exports.TextWeight || (exports.TextWeight = {}));
	    (function (FontType) {
	        FontType[FontType["Default"] = 0] = "Default";
	        FontType[FontType["Monospace"] = 1] = "Monospace";
	    })(exports.FontType || (exports.FontType = {}));
	    (function (Spacing) {
	        Spacing[Spacing["None"] = 0] = "None";
	        Spacing[Spacing["Small"] = 1] = "Small";
	        Spacing[Spacing["Default"] = 2] = "Default";
	        Spacing[Spacing["Medium"] = 3] = "Medium";
	        Spacing[Spacing["Large"] = 4] = "Large";
	        Spacing[Spacing["ExtraLarge"] = 5] = "ExtraLarge";
	        Spacing[Spacing["Padding"] = 6] = "Padding";
	    })(exports.Spacing || (exports.Spacing = {}));
	    (function (TextColor) {
	        TextColor[TextColor["Default"] = 0] = "Default";
	        TextColor[TextColor["Dark"] = 1] = "Dark";
	        TextColor[TextColor["Light"] = 2] = "Light";
	        TextColor[TextColor["Accent"] = 3] = "Accent";
	        TextColor[TextColor["Good"] = 4] = "Good";
	        TextColor[TextColor["Warning"] = 5] = "Warning";
	        TextColor[TextColor["Attention"] = 6] = "Attention";
	    })(exports.TextColor || (exports.TextColor = {}));
	    (function (HorizontalAlignment) {
	        HorizontalAlignment[HorizontalAlignment["Left"] = 0] = "Left";
	        HorizontalAlignment[HorizontalAlignment["Center"] = 1] = "Center";
	        HorizontalAlignment[HorizontalAlignment["Right"] = 2] = "Right";
	    })(exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));
	    (function (VerticalAlignment) {
	        VerticalAlignment[VerticalAlignment["Top"] = 0] = "Top";
	        VerticalAlignment[VerticalAlignment["Center"] = 1] = "Center";
	        VerticalAlignment[VerticalAlignment["Bottom"] = 2] = "Bottom";
	    })(exports.VerticalAlignment || (exports.VerticalAlignment = {}));
	    (function (ActionAlignment) {
	        ActionAlignment[ActionAlignment["Left"] = 0] = "Left";
	        ActionAlignment[ActionAlignment["Center"] = 1] = "Center";
	        ActionAlignment[ActionAlignment["Right"] = 2] = "Right";
	        ActionAlignment[ActionAlignment["Stretch"] = 3] = "Stretch";
	    })(exports.ActionAlignment || (exports.ActionAlignment = {}));
	    (function (ImageStyle) {
	        ImageStyle[ImageStyle["Default"] = 0] = "Default";
	        ImageStyle[ImageStyle["Person"] = 1] = "Person";
	    })(exports.ImageStyle || (exports.ImageStyle = {}));
	    (function (ShowCardActionMode) {
	        ShowCardActionMode[ShowCardActionMode["Inline"] = 0] = "Inline";
	        ShowCardActionMode[ShowCardActionMode["Popup"] = 1] = "Popup";
	    })(exports.ShowCardActionMode || (exports.ShowCardActionMode = {}));
	    (function (Orientation) {
	        Orientation[Orientation["Horizontal"] = 0] = "Horizontal";
	        Orientation[Orientation["Vertical"] = 1] = "Vertical";
	    })(exports.Orientation || (exports.Orientation = {}));
	    (function (FillMode) {
	        FillMode[FillMode["Cover"] = 0] = "Cover";
	        FillMode[FillMode["RepeatHorizontally"] = 1] = "RepeatHorizontally";
	        FillMode[FillMode["RepeatVertically"] = 2] = "RepeatVertically";
	        FillMode[FillMode["Repeat"] = 3] = "Repeat";
	    })(exports.FillMode || (exports.FillMode = {}));
	    (function (ActionIconPlacement) {
	        ActionIconPlacement[ActionIconPlacement["LeftOfTitle"] = 0] = "LeftOfTitle";
	        ActionIconPlacement[ActionIconPlacement["AboveTitle"] = 1] = "AboveTitle";
	    })(exports.ActionIconPlacement || (exports.ActionIconPlacement = {}));
	    (function (InputTextStyle) {
	        InputTextStyle[InputTextStyle["Text"] = 0] = "Text";
	        InputTextStyle[InputTextStyle["Tel"] = 1] = "Tel";
	        InputTextStyle[InputTextStyle["Url"] = 2] = "Url";
	        InputTextStyle[InputTextStyle["Email"] = 3] = "Email";
	    })(exports.InputTextStyle || (exports.InputTextStyle = {}));
	    /*
	        This should really be a string enum, e.g.
	    
	            export enum ContainerStyle {
	                Default = "default",
	                Emphasis = "emphasis"
	            }
	    
	        However, some hosts do not use a version of TypeScript
	        recent enough to understand string enums. This is
	        a compatible construct that does not require using
	        a more recent version of TypeScript.
	    
	        Also note the "weird" way these readonly fields are declared is to work around
	        a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        and adopt this syntax for all other static readonly fields.
	    */
	    var ContainerStyle = /** @class */function () {
	        function ContainerStyle() {}
	        ContainerStyle.Default = "default";
	        ContainerStyle.Emphasis = "emphasis";
	        ContainerStyle.Accent = "accent";
	        ContainerStyle.Good = "good";
	        ContainerStyle.Attention = "attention";
	        ContainerStyle.Warning = "warning";
	        return ContainerStyle;
	    }();
	    exports.ContainerStyle = ContainerStyle;
	    (function (ValidationPhase) {
	        ValidationPhase[ValidationPhase["Parse"] = 0] = "Parse";
	        ValidationPhase[ValidationPhase["ToJSON"] = 1] = "ToJSON";
	        ValidationPhase[ValidationPhase["Validation"] = 2] = "Validation";
	    })(exports.ValidationPhase || (exports.ValidationPhase = {}));
	    (function (ValidationEvent) {
	        ValidationEvent[ValidationEvent["Hint"] = 0] = "Hint";
	        ValidationEvent[ValidationEvent["ActionTypeNotAllowed"] = 1] = "ActionTypeNotAllowed";
	        ValidationEvent[ValidationEvent["CollectionCantBeEmpty"] = 2] = "CollectionCantBeEmpty";
	        ValidationEvent[ValidationEvent["Deprecated"] = 3] = "Deprecated";
	        ValidationEvent[ValidationEvent["ElementTypeNotAllowed"] = 4] = "ElementTypeNotAllowed";
	        ValidationEvent[ValidationEvent["InteractivityNotAllowed"] = 5] = "InteractivityNotAllowed";
	        ValidationEvent[ValidationEvent["InvalidPropertyValue"] = 6] = "InvalidPropertyValue";
	        ValidationEvent[ValidationEvent["MissingCardType"] = 7] = "MissingCardType";
	        ValidationEvent[ValidationEvent["PropertyCantBeNull"] = 8] = "PropertyCantBeNull";
	        ValidationEvent[ValidationEvent["TooManyActions"] = 9] = "TooManyActions";
	        ValidationEvent[ValidationEvent["UnknownActionType"] = 10] = "UnknownActionType";
	        ValidationEvent[ValidationEvent["UnknownElementType"] = 11] = "UnknownElementType";
	        ValidationEvent[ValidationEvent["UnsupportedCardVersion"] = 12] = "UnsupportedCardVersion";
	        ValidationEvent[ValidationEvent["DuplicateId"] = 13] = "DuplicateId";
	        ValidationEvent[ValidationEvent["UnsupportedProperty"] = 14] = "UnsupportedProperty";
	        ValidationEvent[ValidationEvent["RequiredInputsShouldHaveLabel"] = 15] = "RequiredInputsShouldHaveLabel";
	        ValidationEvent[ValidationEvent["RequiredInputsShouldHaveErrorMessage"] = 16] = "RequiredInputsShouldHaveErrorMessage";
	        ValidationEvent[ValidationEvent["Other"] = 17] = "Other";
	    })(exports.ValidationEvent || (exports.ValidationEvent = {}));
	    (function (ContainerFitStatus) {
	        ContainerFitStatus[ContainerFitStatus["FullyInContainer"] = 0] = "FullyInContainer";
	        ContainerFitStatus[ContainerFitStatus["Overflowing"] = 1] = "Overflowing";
	        ContainerFitStatus[ContainerFitStatus["FullyOutOfContainer"] = 2] = "FullyOutOfContainer";
	    })(exports.ContainerFitStatus || (exports.ContainerFitStatus = {}));
	    
	});

	var shared = createCommonjsModule(function (module, exports) {

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.UUID = exports.SizeAndUnit = exports.PaddingDefinition = exports.SpacingDefinition = exports.StringWithSubstitutions = exports.ContentTypes = exports.GlobalSettings = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.

	    var GlobalSettings = /** @class */function () {
	        function GlobalSettings() {}
	        GlobalSettings.useAdvancedTextBlockTruncation = true;
	        GlobalSettings.useAdvancedCardBottomTruncation = false;
	        GlobalSettings.useMarkdownInRadioButtonAndCheckbox = true;
	        GlobalSettings.allowMarkForTextHighlighting = false;
	        GlobalSettings.alwaysBleedSeparators = false;
	        GlobalSettings.enableFullJsonRoundTrip = false;
	        GlobalSettings.displayInputValidationErrors = true;
	        GlobalSettings.allowPreProcessingPropertyValues = false;
	        GlobalSettings.setTabIndexAtCardRoot = true;
	        GlobalSettings.enableFallback = true;
	        return GlobalSettings;
	    }();
	    exports.GlobalSettings = GlobalSettings;
	    exports.ContentTypes = {
	        applicationJson: "application/json",
	        applicationXWwwFormUrlencoded: "application/x-www-form-urlencoded"
	    };
	    var StringWithSubstitutions = /** @class */function () {
	        function StringWithSubstitutions() {
	            this._isProcessed = false;
	        }
	        StringWithSubstitutions.prototype.getReferencedInputs = function (inputs, referencedInputs) {
	            if (!referencedInputs) {
	                throw new Error("The referencedInputs parameter cannot be null.");
	            }
	            for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
	                var input = inputs_1[_i];
	                var matches = new RegExp("\\{{2}(" + input.id + ").value\\}{2}", "gi").exec(this._original);
	                if (matches != null && input.id) {
	                    referencedInputs[input.id] = input;
	                }
	            }
	        };
	        StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {
	            this._processed = this._original;
	            if (this._original) {
	                var regEx = /\{{2}([a-z0-9_$@]+).value\}{2}/gi;
	                var matches = void 0;
	                while ((matches = regEx.exec(this._original)) !== null) {
	                    for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {
	                        var key = _a[_i];
	                        if (key.toLowerCase() == matches[1].toLowerCase()) {
	                            var matchedInput = inputs[key];
	                            var valueForReplace = "";
	                            if (matchedInput.value) {
	                                valueForReplace = matchedInput.value;
	                            }
	                            if (contentType === exports.ContentTypes.applicationJson) {
	                                valueForReplace = JSON.stringify(valueForReplace);
	                                valueForReplace = valueForReplace.slice(1, -1);
	                            } else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {
	                                valueForReplace = encodeURIComponent(valueForReplace);
	                            }
	                            this._processed = this._processed.replace(matches[0], valueForReplace);
	                            break;
	                        }
	                    }
	                }
	            }
	            this._isProcessed = true;
	        };
	        StringWithSubstitutions.prototype.getOriginal = function () {
	            return this._original;
	        };
	        StringWithSubstitutions.prototype.get = function () {
	            if (!this._isProcessed) {
	                return this._original;
	            } else {
	                return this._processed;
	            }
	        };
	        StringWithSubstitutions.prototype.set = function (value) {
	            this._original = value;
	            this._isProcessed = false;
	        };
	        return StringWithSubstitutions;
	    }();
	    exports.StringWithSubstitutions = StringWithSubstitutions;
	    var SpacingDefinition = /** @class */function () {
	        function SpacingDefinition(top, right, bottom, left) {
	            if (top === void 0) {
	                top = 0;
	            }
	            if (right === void 0) {
	                right = 0;
	            }
	            if (bottom === void 0) {
	                bottom = 0;
	            }
	            if (left === void 0) {
	                left = 0;
	            }
	            this.left = 0;
	            this.top = 0;
	            this.right = 0;
	            this.bottom = 0;
	            this.top = top;
	            this.right = right;
	            this.bottom = bottom;
	            this.left = left;
	        }
	        return SpacingDefinition;
	    }();
	    exports.SpacingDefinition = SpacingDefinition;
	    var PaddingDefinition = /** @class */function () {
	        function PaddingDefinition(top, right, bottom, left) {
	            if (top === void 0) {
	                top = enums.Spacing.None;
	            }
	            if (right === void 0) {
	                right = enums.Spacing.None;
	            }
	            if (bottom === void 0) {
	                bottom = enums.Spacing.None;
	            }
	            if (left === void 0) {
	                left = enums.Spacing.None;
	            }
	            this.top = enums.Spacing.None;
	            this.right = enums.Spacing.None;
	            this.bottom = enums.Spacing.None;
	            this.left = enums.Spacing.None;
	            this.top = top;
	            this.right = right;
	            this.bottom = bottom;
	            this.left = left;
	        }
	        return PaddingDefinition;
	    }();
	    exports.PaddingDefinition = PaddingDefinition;
	    var SizeAndUnit = /** @class */function () {
	        function SizeAndUnit(physicalSize, unit) {
	            this.physicalSize = physicalSize;
	            this.unit = unit;
	        }
	        SizeAndUnit.parse = function (input, requireUnitSpecifier) {
	            if (requireUnitSpecifier === void 0) {
	                requireUnitSpecifier = false;
	            }
	            var result = new SizeAndUnit(0, enums.SizeUnit.Weight);
	            if (typeof input === "number") {
	                result.physicalSize = input;
	                return result;
	            } else if (typeof input === "string") {
	                var regExp = /^([0-9]+)(px|\*)?$/g;
	                var matches = regExp.exec(input);
	                var expectedMatchCount = requireUnitSpecifier ? 3 : 2;
	                if (matches && matches.length >= expectedMatchCount) {
	                    result.physicalSize = parseInt(matches[1]);
	                    if (matches.length == 3) {
	                        if (matches[2] == "px") {
	                            result.unit = enums.SizeUnit.Pixel;
	                        }
	                    }
	                    return result;
	                }
	            }
	            throw new Error("Invalid size: " + input);
	        };
	        return SizeAndUnit;
	    }();
	    exports.SizeAndUnit = SizeAndUnit;
	    /**
	     * Fast UUID generator, RFC4122 version 4 compliant.
	     * @author Jeff Ward (jcward.com).
	     * @license MIT license
	     * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
	     **/
	    var UUID = /** @class */function () {
	        function UUID() {}
	        UUID.generate = function () {
	            var d0 = Math.random() * 0xffffffff | 0;
	            var d1 = Math.random() * 0xffffffff | 0;
	            var d2 = Math.random() * 0xffffffff | 0;
	            var d3 = Math.random() * 0xffffffff | 0;
	            return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' + UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' + UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] + UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];
	        };
	        UUID.initialize = function () {
	            for (var i = 0; i < 256; i++) {
	                UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);
	            }
	        };
	        UUID.lut = [];
	        return UUID;
	    }();
	    exports.UUID = UUID;
	    UUID.initialize();
	    
	});

	var utils = createCommonjsModule(function (module, exports) {

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.getFitStatus = exports.truncate = exports.stringToCssColor = exports.renderSeparation = exports.parseEnum = exports.getEnumValueByName = exports.parseBool = exports.parseNumber = exports.parseString = exports.appendChild = exports.generateUniqueId = exports.isMobileOS = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.


	    function isMobileOS() {
	        var userAgent = window.navigator.userAgent;
	        return !!userAgent.match(/Android/i) || !!userAgent.match(/iPad/i) || !!userAgent.match(/iPhone/i);
	    }
	    exports.isMobileOS = isMobileOS;
	    /**
	     * Generate a UUID prepended with "__ac-"
	     */
	    function generateUniqueId() {
	        return "__ac-" + shared.UUID.generate();
	    }
	    exports.generateUniqueId = generateUniqueId;
	    function appendChild(node, child) {
	        if (child) {
	            node.appendChild(child);
	        }
	    }
	    exports.appendChild = appendChild;
	    function parseString(obj, defaultValue) {
	        return typeof obj === "string" ? obj : defaultValue;
	    }
	    exports.parseString = parseString;
	    function parseNumber(obj, defaultValue) {
	        return typeof obj === "number" ? obj : defaultValue;
	    }
	    exports.parseNumber = parseNumber;
	    function parseBool(value, defaultValue) {
	        if (typeof value === "boolean") {
	            return value;
	        } else if (typeof value === "string") {
	            switch (value.toLowerCase()) {
	                case "true":
	                    return true;
	                case "false":
	                    return false;
	                default:
	                    return defaultValue;
	            }
	        }
	        return defaultValue;
	    }
	    exports.parseBool = parseBool;
	    function getEnumValueByName(enumType, name) {
	        for (var key in enumType) {
	            var keyAsNumber = parseInt(key, 10);
	            if (keyAsNumber >= 0) {
	                var value = enumType[key];
	                if (value && typeof value === "string" && value.toLowerCase() === name.toLowerCase()) {
	                    return keyAsNumber;
	                }
	            }
	        }
	        return undefined;
	    }
	    exports.getEnumValueByName = getEnumValueByName;
	    function parseEnum(enumType, name, defaultValue) {
	        if (!name) {
	            return defaultValue;
	        }
	        var enumValue = getEnumValueByName(enumType, name);
	        return enumValue !== undefined ? enumValue : defaultValue;
	    }
	    exports.parseEnum = parseEnum;
	    function renderSeparation(hostConfig, separationDefinition, orientation) {
	        if (separationDefinition.spacing > 0 || separationDefinition.lineThickness && separationDefinition.lineThickness > 0) {
	            var separator = document.createElement("div");
	            separator.className = hostConfig.makeCssClassName("ac-" + (orientation == enums.Orientation.Horizontal ? "horizontal" : "vertical") + "-separator");
	            separator.setAttribute("aria-hidden", "true");
	            var color = separationDefinition.lineColor ? stringToCssColor(separationDefinition.lineColor) : "";
	            if (orientation == enums.Orientation.Horizontal) {
	                if (separationDefinition.lineThickness) {
	                    separator.style.paddingTop = separationDefinition.spacing / 2 + "px";
	                    separator.style.marginBottom = separationDefinition.spacing / 2 + "px";
	                    separator.style.borderBottom = separationDefinition.lineThickness + "px solid " + color;
	                } else {
	                    separator.style.height = separationDefinition.spacing + "px";
	                }
	            } else {
	                if (separationDefinition.lineThickness) {
	                    separator.style.paddingLeft = separationDefinition.spacing / 2 + "px";
	                    separator.style.marginRight = separationDefinition.spacing / 2 + "px";
	                    separator.style.borderRight = separationDefinition.lineThickness + "px solid " + color;
	                } else {
	                    separator.style.width = separationDefinition.spacing + "px";
	                }
	            }
	            separator.style.overflow = "hidden";
	            separator.style.flex = "0 0 auto";
	            return separator;
	        } else {
	            return undefined;
	        }
	    }
	    exports.renderSeparation = renderSeparation;
	    function stringToCssColor(color) {
	        if (color) {
	            var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;
	            var matches = regEx.exec(color);
	            if (matches && matches[4]) {
	                var a = parseInt(matches[1], 16) / 255;
	                var r = parseInt(matches[2], 16);
	                var g = parseInt(matches[3], 16);
	                var b = parseInt(matches[4], 16);
	                return "rgba(" + r + "," + g + "," + b + "," + a + ")";
	            }
	        }
	        return color;
	    }
	    exports.stringToCssColor = stringToCssColor;
	    function truncate(element, maxHeight, lineHeight) {
	        var fits = function fits() {
	            // Allow a one pixel overflow to account for rounding differences
	            // between browsers
	            return maxHeight - element.scrollHeight >= -1.0;
	        };
	        if (fits()) return;
	        var fullText = element.innerHTML;
	        var truncateAt = function truncateAt(idx) {
	            element.innerHTML = fullText.substring(0, idx) + '...';
	        };
	        var breakableIndices = findBreakableIndices(fullText);
	        var lo = 0;
	        var hi = breakableIndices.length;
	        var bestBreakIdx = 0;
	        // Do a binary search for the longest string that fits
	        while (lo < hi) {
	            var mid = Math.floor((lo + hi) / 2);
	            truncateAt(breakableIndices[mid]);
	            if (fits()) {
	                bestBreakIdx = breakableIndices[mid];
	                lo = mid + 1;
	            } else {
	                hi = mid;
	            }
	        }
	        truncateAt(bestBreakIdx);
	        // If we have extra room, try to expand the string letter by letter
	        // (covers the case where we have to break in the middle of a long word)
	        if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {
	            var idx = findNextCharacter(fullText, bestBreakIdx);
	            while (idx < fullText.length) {
	                truncateAt(idx);
	                if (fits()) {
	                    bestBreakIdx = idx;
	                    idx = findNextCharacter(fullText, idx);
	                } else {
	                    break;
	                }
	            }
	            truncateAt(bestBreakIdx);
	        }
	    }
	    exports.truncate = truncate;
	    function findBreakableIndices(html) {
	        var results = [];
	        var idx = findNextCharacter(html, -1);
	        while (idx < html.length) {
	            if (html[idx] == ' ') {
	                results.push(idx);
	            }
	            idx = findNextCharacter(html, idx);
	        }
	        return results;
	    }
	    function findNextCharacter(html, currIdx) {
	        currIdx += 1;
	        // If we found the start of an HTML tag, keep advancing until we get
	        // past it, so we don't end up truncating in the middle of the tag
	        while (currIdx < html.length && html[currIdx] == '<') {
	            while (currIdx < html.length && html[currIdx++] != '>') {}
	        }
	        return currIdx;
	    }
	    function getFitStatus(element, containerEnd) {
	        var start = element.offsetTop;
	        var end = start + element.clientHeight;
	        if (end <= containerEnd) {
	            return enums.ContainerFitStatus.FullyInContainer;
	        } else if (start < containerEnd) {
	            return enums.ContainerFitStatus.Overflowing;
	        } else {
	            return enums.ContainerFitStatus.FullyOutOfContainer;
	        }
	    }
	    exports.getFitStatus = getFitStatus;
	    
	});

	var strings = createCommonjsModule(function (module, exports) {

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.Strings = void 0;
	    var Strings = /** @class */function () {
	        function Strings() {}
	        Strings.errors = {
	            unknownElementType: function unknownElementType(typeName) {
	                return "Unknown element type \"" + typeName + "\". Fallback will be used if present.";
	            },
	            unknownActionType: function unknownActionType(typeName) {
	                return "Unknown action type \"" + typeName + "\". Fallback will be used if present.";
	            },
	            elementTypeNotAllowed: function elementTypeNotAllowed(typeName) {
	                return "Element type \"" + typeName + "\" is not allowed in this context.";
	            },
	            actionTypeNotAllowed: function actionTypeNotAllowed(typeName) {
	                return "Action type \"" + typeName + "\" is not allowed in this context.";
	            },
	            invalidPropertyValue: function invalidPropertyValue(value, propertyName) {
	                return "Invalid value \"" + value + "\" for property \"" + propertyName + "\".";
	            },
	            showCardMustHaveCard: function showCardMustHaveCard() {
	                return "\"An Action.ShowCard must have its \"card\" property set to a valid AdaptiveCard object.";
	            },
	            invalidColumnWidth: function invalidColumnWidth(invalidWidth) {
	                return "Invalid column width \"" + invalidWidth + "\" - defaulting to \"auto\".";
	            },
	            invalidCardVersion: function invalidCardVersion(defaultingToVersion) {
	                return "Invalid card version. Defaulting to \"" + defaultingToVersion + "\".";
	            },
	            invalidVersionString: function invalidVersionString(versionString) {
	                return "Invalid version string \"" + versionString + "\".";
	            },
	            propertyValueNotSupported: function propertyValueNotSupported(value, propertyName, supportedInVersion, versionUsed) {
	                return "Value \"" + value + "\" for property \"" + propertyName + "\" is supported in version " + supportedInVersion + ", but you are using version " + versionUsed + ".";
	            },
	            propertyNotSupported: function propertyNotSupported(propertyName, supportedInVersion, versionUsed) {
	                return "Property \"" + propertyName + "\" is supported in version " + supportedInVersion + ", but you are using version " + versionUsed + ".";
	            },
	            indexOutOfRange: function indexOutOfRange(index) {
	                return "Index out of range (" + index + ").";
	            },
	            elementCannotBeUsedAsInline: function elementCannotBeUsedAsInline() {
	                return "RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.";
	            },
	            inlineAlreadyParented: function inlineAlreadyParented() {
	                return "RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.";
	            },
	            interactivityNotAllowed: function interactivityNotAllowed() {
	                return "Interactivity is not allowed.";
	            },
	            inputsMustHaveUniqueId: function inputsMustHaveUniqueId() {
	                return "All inputs must have a unique Id.";
	            },
	            choiceSetMustHaveAtLeastOneChoice: function choiceSetMustHaveAtLeastOneChoice() {
	                return "An Input.ChoiceSet must have at least one choice defined.";
	            },
	            choiceSetChoicesMustHaveTitleAndValue: function choiceSetChoicesMustHaveTitleAndValue() {
	                return "All choices in an Input.ChoiceSet must have their title and value properties set.";
	            },
	            propertyMustBeSet: function propertyMustBeSet(propertyName) {
	                return "Property \"" + propertyName + "\" must be set.";
	            },
	            actionHttpHeadersMustHaveNameAndValue: function actionHttpHeadersMustHaveNameAndValue() {
	                return "All headers of an Action.Http must have their name and value properties set.";
	            },
	            tooManyActions: function tooManyActions(maximumActions) {
	                return "Maximum number of actions exceeded (" + maximumActions + ").";
	            },
	            columnAlreadyBelongsToAnotherSet: function columnAlreadyBelongsToAnotherSet() {
	                return "This column already belongs to another ColumnSet.";
	            },
	            invalidCardType: function invalidCardType() {
	                return "Invalid or missing card type. Make sure the card's type property is set to \"AdaptiveCard\".";
	            },
	            unsupportedCardVersion: function unsupportedCardVersion(version, maxSupportedVersion) {
	                return "The specified card version (" + version + ") is not supported. The maximum supported card version is " + maxSupportedVersion + ".";
	            },
	            duplicateId: function duplicateId(id) {
	                return "Duplicate Id \"" + id + "\".";
	            },
	            markdownProcessingNotEnabled: function markdownProcessingNotEnabled() {
	                return "Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown";
	            },
	            processMarkdownEventRemoved: function processMarkdownEventRemoved() {
	                return "The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.";
	            },
	            elementAlreadyParented: function elementAlreadyParented() {
	                return "The element already belongs to another container.";
	            },
	            actionAlreadyParented: function actionAlreadyParented() {
	                return "The action already belongs to another element.";
	            },
	            elementTypeNotStandalone: function elementTypeNotStandalone(typeName) {
	                return "Elements of type " + typeName + " cannot be used as standalone elements.";
	            }
	        };
	        Strings.hints = {
	            dontUseWeightedAndStrecthedColumnsInSameSet: function dontUseWeightedAndStrecthedColumnsInSameSet() {
	                return "It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.";
	            }
	        };
	        Strings.defaults = {
	            inlineActionTitle: function inlineActionTitle() {
	                return "Inline Action";
	            }
	        };
	        return Strings;
	    }();
	    exports.Strings = Strings;
	    
	});

	var serialization = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.SerializableObject = exports.property = exports.SerializableObjectSchema = exports.CustomProperty = exports.SerializableObjectCollectionProperty = exports.SerializableObjectProperty = exports.EnumProperty = exports.ValueSetProperty = exports.PixelSizeProperty = exports.NumProperty = exports.BoolProperty = exports.StringProperty = exports.PropertyDefinition = exports.BaseSerializationContext = exports.isVersionLessOrEqual = exports.Versions = exports.Version = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.


	    var Version = /** @class */function () {
	        function Version(major, minor, label) {
	            if (major === void 0) {
	                major = 1;
	            }
	            if (minor === void 0) {
	                minor = 1;
	            }
	            this._isValid = true;
	            this._major = major;
	            this._minor = minor;
	            this._label = label;
	        }
	        Version.parse = function (versionString, context) {
	            if (!versionString) {
	                return undefined;
	            }
	            var result = new Version();
	            result._versionString = versionString;
	            var regEx = /(\d+).(\d+)/gi;
	            var matches = regEx.exec(versionString);
	            if (matches != null && matches.length == 3) {
	                result._major = parseInt(matches[1]);
	                result._minor = parseInt(matches[2]);
	            } else {
	                result._isValid = false;
	            }
	            if (!result._isValid) {
	                context.logParseEvent(undefined, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidVersionString(result._versionString));
	            }
	            return result;
	        };
	        Version.prototype.toString = function () {
	            return !this._isValid ? this._versionString : this._major + "." + this._minor;
	        };
	        Version.prototype.toJSON = function () {
	            return this.toString();
	        };
	        Version.prototype.compareTo = function (otherVersion) {
	            if (!this.isValid || !otherVersion.isValid) {
	                throw new Error("Cannot compare invalid version.");
	            }
	            if (this.major > otherVersion.major) {
	                return 1;
	            } else if (this.major < otherVersion.major) {
	                return -1;
	            } else if (this.minor > otherVersion.minor) {
	                return 1;
	            } else if (this.minor < otherVersion.minor) {
	                return -1;
	            }
	            return 0;
	        };
	        Object.defineProperty(Version.prototype, "label", {
	            get: function get() {
	                return this._label ? this._label : this.toString();
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Version.prototype, "major", {
	            get: function get() {
	                return this._major;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Version.prototype, "minor", {
	            get: function get() {
	                return this._minor;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Version.prototype, "isValid", {
	            get: function get() {
	                return this._isValid;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return Version;
	    }();
	    exports.Version = Version;
	    var Versions = /** @class */function () {
	        function Versions() {}
	        Versions.v1_0 = new Version(1, 0);
	        Versions.v1_1 = new Version(1, 1);
	        Versions.v1_2 = new Version(1, 2);
	        Versions.v1_3 = new Version(1, 3);
	        Versions.latest = Versions.v1_3;
	        return Versions;
	    }();
	    exports.Versions = Versions;
	    function isVersionLessOrEqual(version, targetVersion) {
	        if (version instanceof Version) {
	            if (targetVersion instanceof Version) {
	                return targetVersion.compareTo(version) >= 0;
	            } else {
	                // Target version is *
	                return true;
	            }
	        } else {
	            // Version is *
	            return true;
	        }
	    }
	    exports.isVersionLessOrEqual = isVersionLessOrEqual;
	    var BaseSerializationContext = /** @class */function () {
	        function BaseSerializationContext(targetVersion) {
	            if (targetVersion === void 0) {
	                targetVersion = Versions.latest;
	            }
	            this.targetVersion = targetVersion;
	            this._validationEvents = [];
	        }
	        BaseSerializationContext.prototype.serializeValue = function (target, propertyName, propertyValue, defaultValue) {
	            if (defaultValue === void 0) {
	                defaultValue = undefined;
	            }
	            if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {
	                if (!shared.GlobalSettings.enableFullJsonRoundTrip) {
	                    delete target[propertyName];
	                }
	            } else {
	                target[propertyName] = propertyValue;
	            }
	        };
	        BaseSerializationContext.prototype.serializeNumber = function (target, propertyName, propertyValue, defaultValue) {
	            if (defaultValue === void 0) {
	                defaultValue = undefined;
	            }
	            if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {
	                delete target[propertyName];
	            } else {
	                target[propertyName] = propertyValue;
	            }
	        };
	        BaseSerializationContext.prototype.serializeEnum = function (enumType, target, propertyName, propertyValue, defaultValue) {
	            if (defaultValue === void 0) {
	                defaultValue = undefined;
	            }
	            var targetValue = target[propertyName];
	            var canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;
	            if (propertyValue == defaultValue) {
	                if (canDeleteTarget) {
	                    delete target[propertyName];
	                }
	            } else {
	                if (propertyValue == undefined) {
	                    if (canDeleteTarget) {
	                        delete target[propertyName];
	                    }
	                } else {
	                    target[propertyName] = enumType[propertyValue];
	                }
	            }
	        };
	        BaseSerializationContext.prototype.serializeArray = function (target, propertyName, propertyValue) {
	            var items = [];
	            if (propertyValue) {
	                for (var _i = 0, propertyValue_1 = propertyValue; _i < propertyValue_1.length; _i++) {
	                    var item = propertyValue_1[_i];
	                    var serializedItem = undefined;
	                    if (item instanceof SerializableObject) {
	                        serializedItem = item.toJSON(this);
	                    } else if (item.toJSON) {
	                        serializedItem = item.toJSON();
	                    } else {
	                        serializedItem = item;
	                    }
	                    if (serializedItem !== undefined) {
	                        items.push(serializedItem);
	                    }
	                }
	            }
	            if (items.length == 0) {
	                if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {
	                    delete target[propertyName];
	                }
	            } else {
	                this.serializeValue(target, propertyName, items);
	            }
	        };
	        BaseSerializationContext.prototype.clearEvents = function () {
	            this._validationEvents = [];
	        };
	        BaseSerializationContext.prototype.logEvent = function (source, phase, event, message) {
	            this._validationEvents.push({
	                source: source,
	                phase: phase,
	                event: event,
	                message: message
	            });
	        };
	        BaseSerializationContext.prototype.logParseEvent = function (source, event, message) {
	            this.logEvent(source, enums.ValidationPhase.Parse, event, message);
	        };
	        BaseSerializationContext.prototype.getEventAt = function (index) {
	            return this._validationEvents[index];
	        };
	        Object.defineProperty(BaseSerializationContext.prototype, "eventCount", {
	            get: function get() {
	                return this._validationEvents.length;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return BaseSerializationContext;
	    }();
	    exports.BaseSerializationContext = BaseSerializationContext;
	    var SimpleSerializationContext = /** @class */function (_super) {
	        __extends(SimpleSerializationContext, _super);
	        function SimpleSerializationContext() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        return SimpleSerializationContext;
	    }(BaseSerializationContext);
	    var PropertyDefinition = /** @class */function () {
	        function PropertyDefinition(targetVersion, name, defaultValue, onGetInitialValue) {
	            this.targetVersion = targetVersion;
	            this.name = name;
	            this.defaultValue = defaultValue;
	            this.onGetInitialValue = onGetInitialValue;
	            this.isSerializationEnabled = true;
	            this.sequentialNumber = PropertyDefinition._sequentialNumber;
	            PropertyDefinition._sequentialNumber++;
	        }
	        PropertyDefinition.prototype.getInternalName = function () {
	            return this.name;
	        };
	        PropertyDefinition.prototype.parse = function (sender, source, context) {
	            return source[this.name];
	        };
	        PropertyDefinition.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, value, this.defaultValue);
	        };
	        PropertyDefinition._sequentialNumber = 0;
	        return PropertyDefinition;
	    }();
	    exports.PropertyDefinition = PropertyDefinition;
	    var StringProperty = /** @class */function (_super) {
	        __extends(StringProperty, _super);
	        function StringProperty(targetVersion, name, treatEmptyAsUndefined, regEx, defaultValue, onGetInitialValue) {
	            if (treatEmptyAsUndefined === void 0) {
	                treatEmptyAsUndefined = true;
	            }
	            var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.treatEmptyAsUndefined = treatEmptyAsUndefined;
	            _this.regEx = regEx;
	            _this.defaultValue = defaultValue;
	            _this.onGetInitialValue = onGetInitialValue;
	            return _this;
	        }
	        StringProperty.prototype.parse = function (sender, source, context) {
	            var parsedValue = utils.parseString(source[this.name], this.defaultValue);
	            var isUndefined = parsedValue === undefined || parsedValue === "" && this.treatEmptyAsUndefined;
	            if (!isUndefined && this.regEx !== undefined) {
	                var matches = this.regEx.exec(parsedValue);
	                if (!matches) {
	                    context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(parsedValue, this.name));
	                    return undefined;
	                }
	            }
	            return parsedValue;
	        };
	        StringProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, value === "" && this.treatEmptyAsUndefined ? undefined : value, this.defaultValue);
	        };
	        return StringProperty;
	    }(PropertyDefinition);
	    exports.StringProperty = StringProperty;
	    var BoolProperty = /** @class */function (_super) {
	        __extends(BoolProperty, _super);
	        function BoolProperty() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        BoolProperty.prototype.parse = function (sender, source, context) {
	            return utils.parseBool(source[this.name], this.defaultValue);
	        };
	        BoolProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, value, this.defaultValue);
	        };
	        return BoolProperty;
	    }(PropertyDefinition);
	    exports.BoolProperty = BoolProperty;
	    var NumProperty = /** @class */function (_super) {
	        __extends(NumProperty, _super);
	        function NumProperty() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        NumProperty.prototype.parse = function (sender, source, context) {
	            return utils.parseNumber(source[this.name], this.defaultValue);
	        };
	        NumProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeNumber(target, this.name, value, this.defaultValue);
	        };
	        return NumProperty;
	    }(PropertyDefinition);
	    exports.NumProperty = NumProperty;
	    var PixelSizeProperty = /** @class */function (_super) {
	        __extends(PixelSizeProperty, _super);
	        function PixelSizeProperty() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        PixelSizeProperty.prototype.parse = function (sender, source, context) {
	            var result = undefined;
	            var value = source[this.name];
	            if (typeof value === "string") {
	                var isValid = false;
	                try {
	                    var size = shared.SizeAndUnit.parse(value, true);
	                    if (size.unit == enums.SizeUnit.Pixel) {
	                        result = size.physicalSize;
	                        isValid = true;
	                    }
	                } catch (_a) {
	                    // Do nothing. A parse error is emitted below
	                }
	                if (!isValid) {
	                    context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(source[this.name], "minHeight"));
	                }
	            }
	            return result;
	        };
	        PixelSizeProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, typeof value === "number" && !isNaN(value) ? value + "px" : undefined);
	        };
	        return PixelSizeProperty;
	    }(PropertyDefinition);
	    exports.PixelSizeProperty = PixelSizeProperty;
	    var ValueSetProperty = /** @class */function (_super) {
	        __extends(ValueSetProperty, _super);
	        function ValueSetProperty(targetVersion, name, values, defaultValue, onGetInitialValue) {
	            var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.values = values;
	            _this.defaultValue = defaultValue;
	            _this.onGetInitialValue = onGetInitialValue;
	            return _this;
	        }
	        ValueSetProperty.prototype.isValidValue = function (value, context) {
	            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {
	                var versionedValue = _a[_i];
	                if (value.toLowerCase() === versionedValue.value.toLowerCase()) {
	                    var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;
	                    return targetVersion.compareTo(context.targetVersion) <= 0;
	                }
	            }
	            return false;
	        };
	        ValueSetProperty.prototype.parse = function (sender, source, context) {
	            var sourceValue = source[this.name];
	            if (sourceValue === undefined) {
	                return this.defaultValue;
	            }
	            if (typeof sourceValue === "string") {
	                for (var _i = 0, _a = this.values; _i < _a.length; _i++) {
	                    var versionedValue = _a[_i];
	                    if (sourceValue.toLowerCase() === versionedValue.value.toLowerCase()) {
	                        var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;
	                        if (targetVersion.compareTo(context.targetVersion) <= 0) {
	                            return versionedValue.value;
	                        } else {
	                            context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));
	                            return this.defaultValue;
	                        }
	                    }
	                }
	            }
	            context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(sourceValue, this.name));
	            return this.defaultValue;
	        };
	        ValueSetProperty.prototype.toJSON = function (sender, target, value, context) {
	            var valueFound = false;
	            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {
	                var versionedValue = _a[_i];
	                if (versionedValue.value === value) {
	                    var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;
	                    if (targetVersion.compareTo(context.targetVersion) <= 0) {
	                        valueFound = true;
	                        break;
	                    } else {
	                        context.logEvent(sender, enums.ValidationPhase.ToJSON, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.propertyValueNotSupported(value, this.name, targetVersion.toString(), context.targetVersion.toString()));
	                    }
	                }
	            }
	            if (valueFound) {
	                context.serializeValue(target, this.name, value, this.defaultValue);
	            }
	        };
	        return ValueSetProperty;
	    }(PropertyDefinition);
	    exports.ValueSetProperty = ValueSetProperty;
	    var EnumProperty = /** @class */function (_super) {
	        __extends(EnumProperty, _super);
	        function EnumProperty(targetVersion, name, enumType, defaultValue, values, onGetInitialValue) {
	            var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.enumType = enumType;
	            _this.defaultValue = defaultValue;
	            _this.onGetInitialValue = onGetInitialValue;
	            _this._values = [];
	            if (!values) {
	                for (var key in enumType) {
	                    var keyAsNumber = parseInt(key, 10);
	                    if (keyAsNumber >= 0) {
	                        _this._values.push({ value: keyAsNumber });
	                    }
	                }
	            } else {
	                _this._values = values;
	            }
	            return _this;
	        }
	        EnumProperty.prototype.parse = function (sender, source, context) {
	            var sourceValue = source[this.name];
	            if (typeof sourceValue !== "string") {
	                return this.defaultValue;
	            }
	            var enumValue = utils.getEnumValueByName(this.enumType, sourceValue);
	            if (enumValue !== undefined) {
	                for (var _i = 0, _a = this.values; _i < _a.length; _i++) {
	                    var versionedValue = _a[_i];
	                    if (versionedValue.value === enumValue) {
	                        var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;
	                        if (targetVersion.compareTo(context.targetVersion) <= 0) {
	                            return enumValue;
	                        } else {
	                            context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));
	                            return this.defaultValue;
	                        }
	                    }
	                }
	            }
	            context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(sourceValue, this.name));
	            return this.defaultValue;
	        };
	        EnumProperty.prototype.toJSON = function (sender, target, value, context) {
	            if (value !== undefined) {
	                var valueFound = false;
	                for (var _i = 0, _a = this.values; _i < _a.length; _i++) {
	                    var versionedValue = _a[_i];
	                    if (versionedValue.value === value) {
	                        var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;
	                        if (targetVersion.compareTo(context.targetVersion) <= 0) {
	                            valueFound = true;
	                            break;
	                        } else {
	                            context.logEvent(sender, enums.ValidationPhase.ToJSON, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(value, this.name));
	                        }
	                    }
	                }
	                if (valueFound) {
	                    context.serializeEnum(this.enumType, target, this.name, value, this.defaultValue);
	                }
	            }
	        };
	        Object.defineProperty(EnumProperty.prototype, "values", {
	            get: function get() {
	                return this._values;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return EnumProperty;
	    }(PropertyDefinition);
	    exports.EnumProperty = EnumProperty;
	    var SerializableObjectProperty = /** @class */function (_super) {
	        __extends(SerializableObjectProperty, _super);
	        function SerializableObjectProperty(targetVersion, name, objectType, defaultValue) {
	            var _this = _super.call(this, targetVersion, name, defaultValue, function (sender) {
	                return new _this.objectType();
	            }) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.objectType = objectType;
	            return _this;
	        }
	        SerializableObjectProperty.prototype.parse = function (sender, source, context) {
	            var sourceValue = source[this.name];
	            if (sourceValue === undefined) {
	                return this.onGetInitialValue ? this.onGetInitialValue(sender) : this.defaultValue;
	            }
	            var result = new this.objectType();
	            result.parse(sourceValue, context);
	            return result;
	        };
	        SerializableObjectProperty.prototype.toJSON = function (sender, target, value, context) {
	            var serializedValue = value !== undefined ? value.toJSON(context) : value;
	            if ((typeof serializedValue === 'undefined' ? 'undefined' : _typeof(serializedValue)) === "object" && Object.keys(serializedValue).length === 0) {
	                serializedValue = undefined;
	            }
	            _super.prototype.toJSON.call(this, sender, target, serializedValue, context);
	        };
	        return SerializableObjectProperty;
	    }(PropertyDefinition);
	    exports.SerializableObjectProperty = SerializableObjectProperty;
	    var SerializableObjectCollectionProperty = /** @class */function (_super) {
	        __extends(SerializableObjectCollectionProperty, _super);
	        function SerializableObjectCollectionProperty(targetVersion, name, objectType, onItemAdded) {
	            var _this = _super.call(this, targetVersion, name, undefined, function (sender) {
	                return [];
	            }) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.objectType = objectType;
	            _this.onItemAdded = onItemAdded;
	            return _this;
	        }
	        SerializableObjectCollectionProperty.prototype.parse = function (sender, source, context) {
	            var result = [];
	            var sourceCollection = source[this.name];
	            if (Array.isArray(sourceCollection)) {
	                for (var _i = 0, sourceCollection_1 = sourceCollection; _i < sourceCollection_1.length; _i++) {
	                    var sourceItem = sourceCollection_1[_i];
	                    var item = new this.objectType();
	                    item.parse(sourceItem, context);
	                    result.push(item);
	                    if (this.onItemAdded) {
	                        this.onItemAdded(sender, item);
	                    }
	                }
	            }
	            return result.length > 0 ? result : this.onGetInitialValue ? this.onGetInitialValue(sender) : undefined;
	        };
	        SerializableObjectCollectionProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeArray(target, this.name, value);
	        };
	        return SerializableObjectCollectionProperty;
	    }(PropertyDefinition);
	    exports.SerializableObjectCollectionProperty = SerializableObjectCollectionProperty;
	    var CustomProperty = /** @class */function (_super) {
	        __extends(CustomProperty, _super);
	        function CustomProperty(targetVersion, name, onParse, onToJSON, defaultValue, onGetInitialValue) {
	            var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.onParse = onParse;
	            _this.onToJSON = onToJSON;
	            _this.defaultValue = defaultValue;
	            _this.onGetInitialValue = onGetInitialValue;
	            if (!_this.onParse) {
	                throw new Error("CustomPropertyDefinition instances must have an onParse handler.");
	            }
	            if (!_this.onToJSON) {
	                throw new Error("CustomPropertyDefinition instances must have an onToJSON handler.");
	            }
	            return _this;
	        }
	        CustomProperty.prototype.parse = function (sender, source, context) {
	            return this.onParse(sender, this, source, context);
	        };
	        CustomProperty.prototype.toJSON = function (sender, target, value, context) {
	            this.onToJSON(sender, this, target, value, context);
	        };
	        return CustomProperty;
	    }(PropertyDefinition);
	    exports.CustomProperty = CustomProperty;
	    var SerializableObjectSchema = /** @class */function () {
	        function SerializableObjectSchema() {
	            this._properties = [];
	        }
	        SerializableObjectSchema.prototype.indexOf = function (property) {
	            for (var i = 0; i < this._properties.length; i++) {
	                if (this._properties[i] === property) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	        SerializableObjectSchema.prototype.add = function () {
	            var properties = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                properties[_i] = arguments[_i];
	            }
	            for (var i = 0; i < properties.length; i++) {
	                if (this.indexOf(properties[i]) === -1) {
	                    this._properties.push(properties[i]);
	                }
	            }
	        };
	        SerializableObjectSchema.prototype.remove = function () {
	            var properties = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                properties[_i] = arguments[_i];
	            }
	            for (var _a = 0, properties_1 = properties; _a < properties_1.length; _a++) {
	                var property_1 = properties_1[_a];
	                while (true) {
	                    var index = this.indexOf(property_1);
	                    if (index >= 0) {
	                        this._properties.splice(index, 1);
	                    } else {
	                        break;
	                    }
	                }
	            }
	        };
	        SerializableObjectSchema.prototype.getItemAt = function (index) {
	            return this._properties[index];
	        };
	        SerializableObjectSchema.prototype.getCount = function () {
	            return this._properties.length;
	        };
	        return SerializableObjectSchema;
	    }();
	    exports.SerializableObjectSchema = SerializableObjectSchema;
	    // This is a decorator function, used to map SerializableObject descendant class members to
	    // schema properties
	    function property(property) {
	        return function (target, propertyKey) {
	            var descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};
	            if (!descriptor.get && !descriptor.set) {
	                descriptor.get = function () {
	                    return this.getValue(property);
	                };
	                descriptor.set = function (value) {
	                    this.setValue(property, value);
	                };
	                Object.defineProperty(target, propertyKey, descriptor);
	            }
	        };
	    }
	    exports.property = property;
	    var SerializableObject = /** @class */function () {
	        function SerializableObject() {
	            this._propertyBag = {};
	            this._rawProperties = {};
	            this.maxVersion = Versions.v1_3;
	            var s = this.getSchema();
	            for (var i = 0; i < s.getCount(); i++) {
	                var property_2 = s.getItemAt(i);
	                if (property_2.onGetInitialValue) {
	                    this.setValue(property_2, property_2.onGetInitialValue(this));
	                }
	            }
	        }
	        SerializableObject.prototype.getDefaultSerializationContext = function () {
	            return new SimpleSerializationContext();
	        };
	        SerializableObject.prototype.populateSchema = function (schema) {
	            var ctor = this.constructor;
	            var properties = [];
	            for (var propertyName in ctor) {
	                try {
	                    var propertyValue = ctor[propertyName];
	                    if (propertyValue instanceof PropertyDefinition) {
	                        properties.push(propertyValue);
	                    }
	                } catch (_a) {
	                    // If a property happens to have a getter function and
	                    // it throws an exception, we need to catch it here
	                }
	            }
	            if (properties.length > 0) {
	                var sortedProperties = properties.sort(function (p1, p2) {
	                    if (p1.sequentialNumber > p2.sequentialNumber) {
	                        return 1;
	                    } else if (p1.sequentialNumber < p2.sequentialNumber) {
	                        return -1;
	                    }
	                    return 0;
	                });
	                schema.add.apply(schema, sortedProperties);
	            }
	            if (SerializableObject.onRegisterCustomProperties) {
	                SerializableObject.onRegisterCustomProperties(this, schema);
	            }
	        };
	        SerializableObject.prototype.getValue = function (property) {
	            return this._propertyBag.hasOwnProperty(property.getInternalName()) ? this._propertyBag[property.getInternalName()] : property.defaultValue;
	        };
	        SerializableObject.prototype.setValue = function (property, value) {
	            if (value === undefined || value === null) {
	                delete this._propertyBag[property.getInternalName()];
	            } else {
	                this._propertyBag[property.getInternalName()] = value;
	            }
	        };
	        SerializableObject.prototype.internalParse = function (source, context) {
	            this._propertyBag = {};
	            this._rawProperties = shared.GlobalSettings.enableFullJsonRoundTrip ? source ? source : {} : {};
	            if (source) {
	                var s = this.getSchema();
	                for (var i = 0; i < s.getCount(); i++) {
	                    var property_3 = s.getItemAt(i);
	                    if (property_3.isSerializationEnabled) {
	                        var propertyValue = property_3.onGetInitialValue ? property_3.onGetInitialValue(this) : undefined;
	                        if (source.hasOwnProperty(property_3.name)) {
	                            if (property_3.targetVersion.compareTo(context.targetVersion) <= 0) {
	                                propertyValue = property_3.parse(this, source, context);
	                            } else {
	                                context.logParseEvent(this, enums.ValidationEvent.UnsupportedProperty, strings.Strings.errors.propertyNotSupported(property_3.name, property_3.targetVersion.toString(), context.targetVersion.toString()));
	                            }
	                        }
	                        this.setValue(property_3, propertyValue);
	                    }
	                }
	            } else {
	                this.resetDefaultValues();
	            }
	        };
	        SerializableObject.prototype.internalToJSON = function (target, context) {
	            var s = this.getSchema();
	            var serializedProperties = [];
	            for (var i = 0; i < s.getCount(); i++) {
	                var property_4 = s.getItemAt(i);
	                // Avoid serializing the same property multiple times. This is necessary
	                // because some property definitions map to the same underlying schema
	                // property
	                if (property_4.isSerializationEnabled && property_4.targetVersion.compareTo(context.targetVersion) <= 0 && serializedProperties.indexOf(property_4.name) === -1) {
	                    property_4.toJSON(this, target, this.getValue(property_4), context);
	                    serializedProperties.push(property_4.name);
	                }
	            }
	        };
	        SerializableObject.prototype.shouldSerialize = function (context) {
	            return true;
	        };
	        SerializableObject.prototype.parse = function (source, context) {
	            this.internalParse(source, context ? context : new SimpleSerializationContext());
	        };
	        SerializableObject.prototype.toJSON = function (context) {
	            var effectiveContext;
	            if (context && context instanceof BaseSerializationContext) {
	                effectiveContext = context;
	            } else {
	                effectiveContext = this.getDefaultSerializationContext();
	                effectiveContext.toJSONOriginalParam = context;
	            }
	            if (this.shouldSerialize(effectiveContext)) {
	                var result = void 0;
	                if (shared.GlobalSettings.enableFullJsonRoundTrip && this._rawProperties && _typeof(this._rawProperties) === "object") {
	                    result = this._rawProperties;
	                } else {
	                    result = {};
	                }
	                this.internalToJSON(result, effectiveContext);
	                return result;
	            } else {
	                return undefined;
	            }
	        };
	        SerializableObject.prototype.hasDefaultValue = function (property) {
	            return this.getValue(property) === property.defaultValue;
	        };
	        SerializableObject.prototype.hasAllDefaultValues = function () {
	            var s = this.getSchema();
	            for (var i = 0; i < s.getCount(); i++) {
	                var property_5 = s.getItemAt(i);
	                if (!this.hasDefaultValue(property_5)) {
	                    return false;
	                }
	            }
	            return true;
	        };
	        SerializableObject.prototype.resetDefaultValues = function () {
	            var s = this.getSchema();
	            for (var i = 0; i < s.getCount(); i++) {
	                var property_6 = s.getItemAt(i);
	                this.setValue(property_6, property_6.defaultValue);
	            }
	        };
	        SerializableObject.prototype.setCustomProperty = function (name, value) {
	            var shouldDeleteProperty = typeof value === "string" && !value || value === undefined || value === null;
	            if (shouldDeleteProperty) {
	                delete this._rawProperties[name];
	            } else {
	                this._rawProperties[name] = value;
	            }
	        };
	        SerializableObject.prototype.getCustomProperty = function (name) {
	            return this._rawProperties[name];
	        };
	        SerializableObject.prototype.getSchema = function () {
	            var schema = SerializableObject._schemaCache[this.getSchemaKey()];
	            if (!schema) {
	                schema = new SerializableObjectSchema();
	                this.populateSchema(schema);
	                SerializableObject._schemaCache[this.getSchemaKey()] = schema;
	            }
	            return schema;
	        };
	        SerializableObject._schemaCache = {};
	        return SerializableObject;
	    }();
	    exports.SerializableObject = SerializableObject;
	    
	});

	var registry = createCommonjsModule(function (module, exports) {

	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.CardObjectRegistry = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.

	    var CardObjectRegistry = /** @class */function () {
	        function CardObjectRegistry() {
	            this._items = {};
	        }
	        CardObjectRegistry.prototype.findByName = function (typeName) {
	            return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;
	        };
	        CardObjectRegistry.prototype.clear = function () {
	            this._items = {};
	        };
	        CardObjectRegistry.prototype.register = function (typeName, objectType, schemaVersion) {
	            if (schemaVersion === void 0) {
	                schemaVersion = serialization.Versions.v1_0;
	            }
	            var registrationInfo = this.findByName(typeName);
	            if (registrationInfo !== undefined) {
	                registrationInfo.objectType = objectType;
	            } else {
	                registrationInfo = {
	                    typeName: typeName,
	                    objectType: objectType,
	                    schemaVersion: schemaVersion
	                };
	            }
	            this._items[typeName] = registrationInfo;
	        };
	        CardObjectRegistry.prototype.unregister = function (typeName) {
	            delete this._items[typeName];
	        };
	        CardObjectRegistry.prototype.createInstance = function (typeName, targetVersion) {
	            var registrationInfo = this.findByName(typeName);
	            return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0 ? new registrationInfo.objectType() : undefined;
	        };
	        CardObjectRegistry.prototype.getItemCount = function () {
	            return Object.keys(this._items).length;
	        };
	        CardObjectRegistry.prototype.getItemAt = function (index) {
	            var _this = this;
	            return Object.keys(this._items).map(function (e) {
	                return _this._items[e];
	            })[index];
	        };
	        return CardObjectRegistry;
	    }();
	    exports.CardObjectRegistry = CardObjectRegistry;
	    
	});

	var hostCapabilities = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.HostCapabilities = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.

	    var HostCapabilities = /** @class */function (_super) {
	        __extends(HostCapabilities, _super);
	        function HostCapabilities() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._capabilities = {};
	            return _this;
	        }
	        HostCapabilities.prototype.getSchemaKey = function () {
	            return "HostCapabilities";
	        };
	        HostCapabilities.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            if (source) {
	                for (var name_1 in source) {
	                    var jsonVersion = source[name_1];
	                    if (typeof jsonVersion === "string") {
	                        if (jsonVersion == "*") {
	                            this.addCapability(name_1, "*");
	                        } else {
	                            var version = serialization.Version.parse(jsonVersion, context);
	                            if (version && version.isValid) {
	                                this.addCapability(name_1, version);
	                            }
	                        }
	                    }
	                }
	            }
	        };
	        HostCapabilities.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            for (var key in this._capabilities) {
	                target[key] = this._capabilities[key];
	            }
	        };
	        HostCapabilities.prototype.addCapability = function (name, version) {
	            this._capabilities[name] = version;
	        };
	        HostCapabilities.prototype.removeCapability = function (name) {
	            delete this._capabilities[name];
	        };
	        HostCapabilities.prototype.clear = function () {
	            this._capabilities = {};
	        };
	        HostCapabilities.prototype.hasCapability = function (name, version) {
	            if (this._capabilities.hasOwnProperty(name)) {
	                if (version == "*" || this._capabilities[name] == "*") {
	                    return true;
	                }
	                return version.compareTo(this._capabilities[name]) <= 0;
	            }
	            return false;
	        };
	        HostCapabilities.prototype.areAllMet = function (hostCapabilities) {
	            for (var capabilityName in this._capabilities) {
	                if (!hostCapabilities.hasCapability(capabilityName, this._capabilities[capabilityName])) {
	                    return false;
	                }
	            }
	            return true;
	        };
	        return HostCapabilities;
	    }(serialization.SerializableObject);
	    exports.HostCapabilities = HostCapabilities;
	    
	});

	var cardObject = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    var __decorate = commonjsGlobal && commonjsGlobal.__decorate || function (decorators, target, key, desc) {
	        var c = arguments.length,
	            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	            d;
	        if ((typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	        }return c > 3 && r && Object.defineProperty(target, key, r), r;
	    };
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.CardObject = exports.ValidationResults = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.


	    var ValidationResults = /** @class */function () {
	        function ValidationResults() {
	            this.allIds = {};
	            this.validationEvents = [];
	        }
	        ValidationResults.prototype.addFailure = function (cardObject, event, message) {
	            this.validationEvents.push({
	                phase: enums.ValidationPhase.Validation,
	                source: cardObject,
	                event: event,
	                message: message
	            });
	        };
	        return ValidationResults;
	    }();
	    exports.ValidationResults = ValidationResults;
	    var CardObject = /** @class */function (_super) {
	        __extends(CardObject, _super);
	        function CardObject() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            //#endregion
	            _this._shouldFallback = false;
	            return _this;
	        }
	        CardObject.prototype.getSchemaKey = function () {
	            return this.getJsonTypeName();
	        };
	        Object.defineProperty(CardObject.prototype, "requires", {
	            get: function get() {
	                return this.getValue(CardObject.requiresProperty);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardObject.prototype.preProcessPropertyValue = function (property, propertyValue) {
	            var value = propertyValue === undefined ? this.getValue(property) : propertyValue;
	            if (shared.GlobalSettings.allowPreProcessingPropertyValues) {
	                var currentObject = this;
	                while (currentObject && !currentObject.onPreProcessPropertyValue) {
	                    currentObject = currentObject.parent;
	                }
	                if (currentObject && currentObject.onPreProcessPropertyValue) {
	                    return currentObject.onPreProcessPropertyValue(this, property, value);
	                }
	            }
	            return value;
	        };
	        CardObject.prototype.setParent = function (value) {
	            this._parent = value;
	        };
	        CardObject.prototype.setShouldFallback = function (value) {
	            this._shouldFallback = value;
	        };
	        CardObject.prototype.shouldFallback = function () {
	            return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);
	        };
	        CardObject.prototype.getRootObject = function () {
	            var rootObject = this;
	            while (rootObject.parent) {
	                rootObject = rootObject.parent;
	            }
	            return rootObject;
	        };
	        CardObject.prototype.internalValidateProperties = function (context) {
	            if (this.id) {
	                if (context.allIds.hasOwnProperty(this.id)) {
	                    if (context.allIds[this.id] == 1) {
	                        context.addFailure(this, enums.ValidationEvent.DuplicateId, strings.Strings.errors.duplicateId(this.id));
	                    }
	                    context.allIds[this.id] += 1;
	                } else {
	                    context.allIds[this.id] = 1;
	                }
	            }
	        };
	        CardObject.prototype.validateProperties = function () {
	            var result = new ValidationResults();
	            this.internalValidateProperties(result);
	            return result;
	        };
	        Object.defineProperty(CardObject.prototype, "parent", {
	            get: function get() {
	                return this._parent;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardObject.prototype, "renderedElement", {
	            get: function get() {
	                return this._renderedElement;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardObject.typeNameProperty = new serialization.StringProperty(serialization.Versions.v1_0, "type", undefined, undefined, undefined, function (sender) {
	            return sender.getJsonTypeName();
	        });
	        CardObject.idProperty = new serialization.StringProperty(serialization.Versions.v1_0, "id");
	        CardObject.requiresProperty = new serialization.SerializableObjectProperty(serialization.Versions.v1_2, "requires", hostCapabilities.HostCapabilities, new hostCapabilities.HostCapabilities());
	        __decorate([serialization.property(CardObject.idProperty)], CardObject.prototype, "id", void 0);
	        __decorate([serialization.property(CardObject.requiresProperty)], CardObject.prototype, "requires", null);
	        return CardObject;
	    }(serialization.SerializableObject);
	    exports.CardObject = CardObject;
	    
	});

	var hostConfig = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.defaultHostConfig = exports.HostConfig = exports.FontTypeSet = exports.FontTypeDefinition = exports.ContainerStyleSet = exports.ContainerStyleDefinition = exports.ColorSetDefinition = exports.ActionsConfig = exports.ShowCardActionConfig = exports.FactSetConfig = exports.FactTitleDefinition = exports.FactTextDefinition = exports.InputConfig = exports.InputLabelConfig = exports.RequiredInputLabelTextDefinition = exports.BaseTextDefinition = exports.MediaConfig = exports.ImageSetConfig = exports.AdaptiveCardConfig = exports.TextColorDefinition = exports.ColorDefinition = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.


	    function parseHostConfigEnum(targetEnum, value, defaultValue) {
	        if (typeof value === "string") {
	            var parsedValue = utils.parseEnum(targetEnum, value, defaultValue);
	            return parsedValue !== undefined ? parsedValue : defaultValue;
	        } else if (typeof value === "number") {
	            return value;
	        } else {
	            return defaultValue;
	        }
	    }
	    var ColorDefinition = /** @class */function () {
	        function ColorDefinition(defaultColor, subtleColor) {
	            this.default = "#000000";
	            this.subtle = "#666666";
	            if (defaultColor) {
	                this.default = defaultColor;
	            }
	            if (subtleColor) {
	                this.subtle = subtleColor;
	            }
	        }
	        ColorDefinition.prototype.parse = function (obj) {
	            if (obj) {
	                this.default = obj["default"] || this.default;
	                this.subtle = obj["subtle"] || this.subtle;
	            }
	        };
	        return ColorDefinition;
	    }();
	    exports.ColorDefinition = ColorDefinition;
	    var TextColorDefinition = /** @class */function (_super) {
	        __extends(TextColorDefinition, _super);
	        function TextColorDefinition() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.highlightColors = new ColorDefinition("#22000000", "#11000000");
	            return _this;
	        }
	        TextColorDefinition.prototype.parse = function (obj) {
	            _super.prototype.parse.call(this, obj);
	            if (obj) {
	                this.highlightColors.parse(obj["highlightColors"]);
	            }
	        };
	        return TextColorDefinition;
	    }(ColorDefinition);
	    exports.TextColorDefinition = TextColorDefinition;
	    var AdaptiveCardConfig = /** @class */function () {
	        function AdaptiveCardConfig(obj) {
	            this.allowCustomStyle = false;
	            if (obj) {
	                this.allowCustomStyle = obj["allowCustomStyle"] || this.allowCustomStyle;
	            }
	        }
	        return AdaptiveCardConfig;
	    }();
	    exports.AdaptiveCardConfig = AdaptiveCardConfig;
	    var ImageSetConfig = /** @class */function () {
	        function ImageSetConfig(obj) {
	            this.imageSize = enums.Size.Medium;
	            this.maxImageHeight = 100;
	            if (obj) {
	                this.imageSize = obj["imageSize"] != null ? obj["imageSize"] : this.imageSize;
	                this.maxImageHeight = utils.parseNumber(obj["maxImageHeight"], 100);
	            }
	        }
	        ImageSetConfig.prototype.toJSON = function () {
	            return {
	                imageSize: enums.Size[this.imageSize],
	                maxImageHeight: this.maxImageHeight
	            };
	        };
	        return ImageSetConfig;
	    }();
	    exports.ImageSetConfig = ImageSetConfig;
	    var MediaConfig = /** @class */function () {
	        function MediaConfig(obj) {
	            this.allowInlinePlayback = true;
	            if (obj) {
	                this.defaultPoster = obj["defaultPoster"];
	                this.allowInlinePlayback = obj["allowInlinePlayback"] || this.allowInlinePlayback;
	            }
	        }
	        MediaConfig.prototype.toJSON = function () {
	            return {
	                defaultPoster: this.defaultPoster,
	                allowInlinePlayback: this.allowInlinePlayback
	            };
	        };
	        return MediaConfig;
	    }();
	    exports.MediaConfig = MediaConfig;
	    var BaseTextDefinition = /** @class */function () {
	        function BaseTextDefinition(obj) {
	            this.size = enums.TextSize.Default;
	            this.color = enums.TextColor.Default;
	            this.isSubtle = false;
	            this.weight = enums.TextWeight.Default;
	            if (obj) {
	                this.size = parseHostConfigEnum(enums.TextSize, obj["size"], this.size);
	                this.color = parseHostConfigEnum(enums.TextColor, obj["color"], this.color);
	                this.isSubtle = obj["isSubtle"] || this.isSubtle;
	                this.weight = parseHostConfigEnum(enums.TextWeight, obj["weight"], this.getDefaultWeight());
	            }
	        }
	        BaseTextDefinition.prototype.getDefaultWeight = function () {
	            return enums.TextWeight.Default;
	        };
	        BaseTextDefinition.prototype.toJSON = function () {
	            return {
	                size: enums.TextSize[this.size],
	                color: enums.TextColor[this.color],
	                isSubtle: this.isSubtle,
	                weight: enums.TextWeight[this.weight]
	            };
	        };
	        return BaseTextDefinition;
	    }();
	    exports.BaseTextDefinition = BaseTextDefinition;
	    var RequiredInputLabelTextDefinition = /** @class */function (_super) {
	        __extends(RequiredInputLabelTextDefinition, _super);
	        function RequiredInputLabelTextDefinition(obj) {
	            var _this = _super.call(this, obj) || this;
	            _this.suffix = " *";
	            _this.suffixColor = enums.TextColor.Attention;
	            if (obj) {
	                _this.suffix = obj["suffix"] || _this.suffix;
	                _this.suffixColor = parseHostConfigEnum(enums.TextColor, obj["suffixColor"], _this.suffixColor);
	            }
	            return _this;
	        }
	        RequiredInputLabelTextDefinition.prototype.toJSON = function () {
	            var result = _super.prototype.toJSON.call(this);
	            result["suffix"] = this.suffix;
	            result["suffixColor"] = enums.TextColor[this.suffixColor];
	            return result;
	        };
	        return RequiredInputLabelTextDefinition;
	    }(BaseTextDefinition);
	    exports.RequiredInputLabelTextDefinition = RequiredInputLabelTextDefinition;
	    var InputLabelConfig = /** @class */function () {
	        function InputLabelConfig(obj) {
	            this.inputSpacing = enums.Spacing.Small;
	            this.requiredInputs = new RequiredInputLabelTextDefinition();
	            this.optionalInputs = new BaseTextDefinition();
	            if (obj) {
	                this.inputSpacing = parseHostConfigEnum(enums.Spacing, obj["inputSpacing"], this.inputSpacing);
	                this.requiredInputs = new RequiredInputLabelTextDefinition(obj["requiredInputs"]);
	                this.optionalInputs = new BaseTextDefinition(obj["optionalInputs"]);
	            }
	        }
	        return InputLabelConfig;
	    }();
	    exports.InputLabelConfig = InputLabelConfig;
	    var InputConfig = /** @class */function () {
	        function InputConfig(obj) {
	            this.label = new InputLabelConfig();
	            this.errorMessage = new BaseTextDefinition({ color: enums.TextColor.Attention });
	            if (obj) {
	                this.label = new InputLabelConfig(obj["label"]);
	                this.errorMessage = new BaseTextDefinition(obj["errorMessage"]);
	            }
	        }
	        return InputConfig;
	    }();
	    exports.InputConfig = InputConfig;
	    var FactTextDefinition = /** @class */function (_super) {
	        __extends(FactTextDefinition, _super);
	        function FactTextDefinition(obj) {
	            var _this = _super.call(this, obj) || this;
	            _this.wrap = true;
	            if (obj) {
	                _this.wrap = obj["wrap"] != null ? obj["wrap"] : _this.wrap;
	            }
	            return _this;
	        }
	        FactTextDefinition.prototype.toJSON = function () {
	            var result = _super.prototype.toJSON.call(this);
	            result["wrap"] = this.wrap;
	            return result;
	        };
	        return FactTextDefinition;
	    }(BaseTextDefinition);
	    exports.FactTextDefinition = FactTextDefinition;
	    var FactTitleDefinition = /** @class */function (_super) {
	        __extends(FactTitleDefinition, _super);
	        function FactTitleDefinition(obj) {
	            var _this = _super.call(this, obj) || this;
	            _this.maxWidth = 150;
	            _this.weight = enums.TextWeight.Bolder;
	            if (obj) {
	                _this.maxWidth = obj["maxWidth"] != null ? obj["maxWidth"] : _this.maxWidth;
	                _this.weight = parseHostConfigEnum(enums.TextWeight, obj["weight"], enums.TextWeight.Bolder);
	            }
	            return _this;
	        }
	        FactTitleDefinition.prototype.getDefaultWeight = function () {
	            return enums.TextWeight.Bolder;
	        };
	        return FactTitleDefinition;
	    }(FactTextDefinition);
	    exports.FactTitleDefinition = FactTitleDefinition;
	    var FactSetConfig = /** @class */function () {
	        function FactSetConfig(obj) {
	            this.title = new FactTitleDefinition();
	            this.value = new FactTextDefinition();
	            this.spacing = 10;
	            if (obj) {
	                this.title = new FactTitleDefinition(obj["title"]);
	                this.value = new FactTextDefinition(obj["value"]);
	                this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;
	            }
	        }
	        return FactSetConfig;
	    }();
	    exports.FactSetConfig = FactSetConfig;
	    var ShowCardActionConfig = /** @class */function () {
	        function ShowCardActionConfig(obj) {
	            this.actionMode = enums.ShowCardActionMode.Inline;
	            this.inlineTopMargin = 16;
	            this.style = enums.ContainerStyle.Emphasis;
	            if (obj) {
	                this.actionMode = parseHostConfigEnum(enums.ShowCardActionMode, obj["actionMode"], enums.ShowCardActionMode.Inline);
	                this.inlineTopMargin = obj["inlineTopMargin"] != null ? obj["inlineTopMargin"] : this.inlineTopMargin;
	                this.style = obj["style"] && typeof obj["style"] === "string" ? obj["style"] : enums.ContainerStyle.Emphasis;
	            }
	        }
	        ShowCardActionConfig.prototype.toJSON = function () {
	            return {
	                actionMode: enums.ShowCardActionMode[this.actionMode],
	                inlineTopMargin: this.inlineTopMargin,
	                style: this.style
	            };
	        };
	        return ShowCardActionConfig;
	    }();
	    exports.ShowCardActionConfig = ShowCardActionConfig;
	    var ActionsConfig = /** @class */function () {
	        function ActionsConfig(obj) {
	            this.maxActions = 5;
	            this.spacing = enums.Spacing.Default;
	            this.buttonSpacing = 20;
	            this.showCard = new ShowCardActionConfig();
	            this.preExpandSingleShowCardAction = false;
	            this.actionsOrientation = enums.Orientation.Horizontal;
	            this.actionAlignment = enums.ActionAlignment.Left;
	            this.iconPlacement = enums.ActionIconPlacement.LeftOfTitle;
	            this.allowTitleToWrap = false;
	            this.iconSize = 16;
	            if (obj) {
	                this.maxActions = obj["maxActions"] != null ? obj["maxActions"] : this.maxActions;
	                this.spacing = parseHostConfigEnum(enums.Spacing, obj.spacing && obj.spacing, enums.Spacing.Default);
	                this.buttonSpacing = obj["buttonSpacing"] != null ? obj["buttonSpacing"] : this.buttonSpacing;
	                this.showCard = new ShowCardActionConfig(obj["showCard"]);
	                this.preExpandSingleShowCardAction = utils.parseBool(obj["preExpandSingleShowCardAction"], false);
	                this.actionsOrientation = parseHostConfigEnum(enums.Orientation, obj["actionsOrientation"], enums.Orientation.Horizontal);
	                this.actionAlignment = parseHostConfigEnum(enums.ActionAlignment, obj["actionAlignment"], enums.ActionAlignment.Left);
	                this.iconPlacement = parseHostConfigEnum(enums.ActionIconPlacement, obj["iconPlacement"], enums.ActionIconPlacement.LeftOfTitle);
	                this.allowTitleToWrap = obj["allowTitleToWrap"] != null ? obj["allowTitleToWrap"] : this.allowTitleToWrap;
	                try {
	                    var sizeAndUnit = shared.SizeAndUnit.parse(obj["iconSize"]);
	                    if (sizeAndUnit.unit == enums.SizeUnit.Pixel) {
	                        this.iconSize = sizeAndUnit.physicalSize;
	                    }
	                } catch (e) {
	                    // Swallow this, keep default icon size
	                }
	            }
	        }
	        ActionsConfig.prototype.toJSON = function () {
	            return {
	                maxActions: this.maxActions,
	                spacing: enums.Spacing[this.spacing],
	                buttonSpacing: this.buttonSpacing,
	                showCard: this.showCard,
	                preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,
	                actionsOrientation: enums.Orientation[this.actionsOrientation],
	                actionAlignment: enums.ActionAlignment[this.actionAlignment]
	            };
	        };
	        return ActionsConfig;
	    }();
	    exports.ActionsConfig = ActionsConfig;
	    var ColorSetDefinition = /** @class */function () {
	        function ColorSetDefinition(obj) {
	            this.default = new TextColorDefinition();
	            this.dark = new TextColorDefinition();
	            this.light = new TextColorDefinition();
	            this.accent = new TextColorDefinition();
	            this.good = new TextColorDefinition();
	            this.warning = new TextColorDefinition();
	            this.attention = new TextColorDefinition();
	            this.parse(obj);
	        }
	        ColorSetDefinition.prototype.parseSingleColor = function (obj, propertyName) {
	            if (obj) {
	                this[propertyName].parse(obj[propertyName]);
	            }
	        };
	        ColorSetDefinition.prototype.parse = function (obj) {
	            if (obj) {
	                this.parseSingleColor(obj, "default");
	                this.parseSingleColor(obj, "dark");
	                this.parseSingleColor(obj, "light");
	                this.parseSingleColor(obj, "accent");
	                this.parseSingleColor(obj, "good");
	                this.parseSingleColor(obj, "warning");
	                this.parseSingleColor(obj, "attention");
	            }
	        };
	        return ColorSetDefinition;
	    }();
	    exports.ColorSetDefinition = ColorSetDefinition;
	    var ContainerStyleDefinition = /** @class */function () {
	        function ContainerStyleDefinition(obj) {
	            this.foregroundColors = new ColorSetDefinition({
	                "default": { default: "#333333", subtle: "#EE333333" },
	                "dark": { default: "#000000", subtle: "#66000000" },
	                "light": { default: "#FFFFFF", subtle: "#33000000" },
	                "accent": { default: "#2E89FC", subtle: "#882E89FC" },
	                "good": { default: "#028A02", subtle: "#DD027502" },
	                "warning": { default: "#E69500", subtle: "#DDE69500" },
	                "attention": { default: "#CC3300", subtle: "#DDCC3300" }
	            });
	            this.parse(obj);
	        }
	        ContainerStyleDefinition.prototype.parse = function (obj) {
	            if (obj) {
	                this.backgroundColor = obj["backgroundColor"];
	                this.foregroundColors.parse(obj["foregroundColors"]);
	                this.highlightBackgroundColor = obj["highlightBackgroundColor"];
	                this.highlightForegroundColor = obj["highlightForegroundColor"];
	            }
	        };
	        Object.defineProperty(ContainerStyleDefinition.prototype, "isBuiltIn", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ContainerStyleDefinition;
	    }();
	    exports.ContainerStyleDefinition = ContainerStyleDefinition;
	    var BuiltInContainerStyleDefinition = /** @class */function (_super) {
	        __extends(BuiltInContainerStyleDefinition, _super);
	        function BuiltInContainerStyleDefinition() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(BuiltInContainerStyleDefinition.prototype, "isBuiltIn", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return BuiltInContainerStyleDefinition;
	    }(ContainerStyleDefinition);
	    var ContainerStyleSet = /** @class */function () {
	        function ContainerStyleSet(obj) {
	            this._allStyles = {};
	            this._allStyles[enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();
	            this._allStyles[enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();
	            this._allStyles[enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();
	            this._allStyles[enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();
	            this._allStyles[enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();
	            this._allStyles[enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();
	            if (obj) {
	                this._allStyles[enums.ContainerStyle.Default].parse(obj[enums.ContainerStyle.Default]);
	                this._allStyles[enums.ContainerStyle.Emphasis].parse(obj[enums.ContainerStyle.Emphasis]);
	                this._allStyles[enums.ContainerStyle.Accent].parse(obj[enums.ContainerStyle.Accent]);
	                this._allStyles[enums.ContainerStyle.Good].parse(obj[enums.ContainerStyle.Good]);
	                this._allStyles[enums.ContainerStyle.Attention].parse(obj[enums.ContainerStyle.Attention]);
	                this._allStyles[enums.ContainerStyle.Warning].parse(obj[enums.ContainerStyle.Warning]);
	                var customStyleArray = obj["customStyles"];
	                if (customStyleArray && Array.isArray(customStyleArray)) {
	                    for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {
	                        var customStyle = customStyleArray_1[_i];
	                        if (customStyle) {
	                            var styleName = customStyle["name"];
	                            if (styleName && typeof styleName === "string") {
	                                if (this._allStyles.hasOwnProperty(styleName)) {
	                                    this._allStyles[styleName].parse(customStyle["style"]);
	                                } else {
	                                    this._allStyles[styleName] = new ContainerStyleDefinition(customStyle["style"]);
	                                }
	                            }
	                        }
	                    }
	                }
	            }
	        }
	        ContainerStyleSet.prototype.toJSON = function () {
	            var _this = this;
	            var customStyleArray = [];
	            Object.keys(this._allStyles).forEach(function (key) {
	                if (!_this._allStyles[key].isBuiltIn) {
	                    customStyleArray.push({
	                        name: key,
	                        style: _this._allStyles[key]
	                    });
	                }
	            });
	            var result = {
	                default: this.default,
	                emphasis: this.emphasis
	            };
	            if (customStyleArray.length > 0) {
	                result.customStyles = customStyleArray;
	            }
	            return result;
	        };
	        ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {
	            if (name && this._allStyles.hasOwnProperty(name)) {
	                return this._allStyles[name];
	            } else {
	                return defaultValue ? defaultValue : this._allStyles[enums.ContainerStyle.Default];
	            }
	        };
	        Object.defineProperty(ContainerStyleSet.prototype, "default", {
	            get: function get() {
	                return this._allStyles[enums.ContainerStyle.Default];
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(ContainerStyleSet.prototype, "emphasis", {
	            get: function get() {
	                return this._allStyles[enums.ContainerStyle.Emphasis];
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ContainerStyleSet;
	    }();
	    exports.ContainerStyleSet = ContainerStyleSet;
	    var FontTypeDefinition = /** @class */function () {
	        function FontTypeDefinition(fontFamily) {
	            this.fontFamily = "Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif";
	            this.fontSizes = {
	                small: 12,
	                default: 14,
	                medium: 17,
	                large: 21,
	                extraLarge: 26
	            };
	            this.fontWeights = {
	                lighter: 200,
	                default: 400,
	                bolder: 600
	            };
	            if (fontFamily) {
	                this.fontFamily = fontFamily;
	            }
	        }
	        FontTypeDefinition.prototype.parse = function (obj) {
	            this.fontFamily = obj["fontFamily"] || this.fontFamily;
	            this.fontSizes = {
	                small: obj.fontSizes && obj.fontSizes["small"] || this.fontSizes.small,
	                default: obj.fontSizes && obj.fontSizes["default"] || this.fontSizes.default,
	                medium: obj.fontSizes && obj.fontSizes["medium"] || this.fontSizes.medium,
	                large: obj.fontSizes && obj.fontSizes["large"] || this.fontSizes.large,
	                extraLarge: obj.fontSizes && obj.fontSizes["extraLarge"] || this.fontSizes.extraLarge
	            };
	            this.fontWeights = {
	                lighter: obj.fontWeights && obj.fontWeights["lighter"] || this.fontWeights.lighter,
	                default: obj.fontWeights && obj.fontWeights["default"] || this.fontWeights.default,
	                bolder: obj.fontWeights && obj.fontWeights["bolder"] || this.fontWeights.bolder
	            };
	        };
	        FontTypeDefinition.monospace = new FontTypeDefinition("'Courier New', Courier, monospace");
	        return FontTypeDefinition;
	    }();
	    exports.FontTypeDefinition = FontTypeDefinition;
	    var FontTypeSet = /** @class */function () {
	        function FontTypeSet(obj) {
	            this.default = new FontTypeDefinition();
	            this.monospace = new FontTypeDefinition("'Courier New', Courier, monospace");
	            if (obj) {
	                this.default.parse(obj["default"]);
	                this.monospace.parse(obj["monospace"]);
	            }
	        }
	        FontTypeSet.prototype.getStyleDefinition = function (style) {
	            switch (style) {
	                case enums.FontType.Monospace:
	                    return this.monospace;
	                case enums.FontType.Default:
	                default:
	                    return this.default;
	            }
	        };
	        return FontTypeSet;
	    }();
	    exports.FontTypeSet = FontTypeSet;
	    var HostConfig = /** @class */function () {
	        function HostConfig(obj) {
	            this.hostCapabilities = new hostCapabilities.HostCapabilities();
	            this.choiceSetInputValueSeparator = ",";
	            this.supportsInteractivity = true;
	            this.spacing = {
	                small: 3,
	                default: 8,
	                medium: 20,
	                large: 30,
	                extraLarge: 40,
	                padding: 15
	            };
	            this.separator = {
	                lineThickness: 1,
	                lineColor: "#EEEEEE"
	            };
	            this.imageSizes = {
	                small: 40,
	                medium: 80,
	                large: 160
	            };
	            this.containerStyles = new ContainerStyleSet();
	            this.inputs = new InputConfig();
	            this.actions = new ActionsConfig();
	            this.adaptiveCard = new AdaptiveCardConfig();
	            this.imageSet = new ImageSetConfig();
	            this.media = new MediaConfig();
	            this.factSet = new FactSetConfig();
	            this.alwaysAllowBleed = false;
	            if (obj) {
	                if (typeof obj === "string" || obj instanceof String) {
	                    obj = JSON.parse(obj);
	                }
	                this.choiceSetInputValueSeparator = obj && typeof obj["choiceSetInputValueSeparator"] === "string" ? obj["choiceSetInputValueSeparator"] : this.choiceSetInputValueSeparator;
	                this.supportsInteractivity = obj && typeof obj["supportsInteractivity"] === "boolean" ? obj["supportsInteractivity"] : this.supportsInteractivity;
	                this._legacyFontType = new FontTypeDefinition();
	                this._legacyFontType.parse(obj);
	                if (obj.fontTypes) {
	                    this.fontTypes = new FontTypeSet(obj.fontTypes);
	                }
	                if (obj.lineHeights) {
	                    this.lineHeights = {
	                        small: obj.lineHeights["small"],
	                        default: obj.lineHeights["default"],
	                        medium: obj.lineHeights["medium"],
	                        large: obj.lineHeights["large"],
	                        extraLarge: obj.lineHeights["extraLarge"]
	                    };
	                }
	                this.imageSizes = {
	                    small: obj.imageSizes && obj.imageSizes["small"] || this.imageSizes.small,
	                    medium: obj.imageSizes && obj.imageSizes["medium"] || this.imageSizes.medium,
	                    large: obj.imageSizes && obj.imageSizes["large"] || this.imageSizes.large
	                };
	                this.containerStyles = new ContainerStyleSet(obj["containerStyles"]);
	                this.spacing = {
	                    small: obj.spacing && obj.spacing["small"] || this.spacing.small,
	                    default: obj.spacing && obj.spacing["default"] || this.spacing.default,
	                    medium: obj.spacing && obj.spacing["medium"] || this.spacing.medium,
	                    large: obj.spacing && obj.spacing["large"] || this.spacing.large,
	                    extraLarge: obj.spacing && obj.spacing["extraLarge"] || this.spacing.extraLarge,
	                    padding: obj.spacing && obj.spacing["padding"] || this.spacing.padding
	                };
	                this.separator = {
	                    lineThickness: obj.separator && obj.separator["lineThickness"] || this.separator.lineThickness,
	                    lineColor: obj.separator && obj.separator["lineColor"] || this.separator.lineColor
	                };
	                this.inputs = new InputConfig(obj.inputs || this.inputs);
	                this.actions = new ActionsConfig(obj.actions || this.actions);
	                this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);
	                this.imageSet = new ImageSetConfig(obj["imageSet"]);
	                this.factSet = new FactSetConfig(obj["factSet"]);
	            }
	        }
	        HostConfig.prototype.getFontTypeDefinition = function (style) {
	            if (this.fontTypes) {
	                return this.fontTypes.getStyleDefinition(style);
	            } else {
	                return style == enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;
	            }
	        };
	        HostConfig.prototype.getEffectiveSpacing = function (spacing) {
	            switch (spacing) {
	                case enums.Spacing.Small:
	                    return this.spacing.small;
	                case enums.Spacing.Default:
	                    return this.spacing.default;
	                case enums.Spacing.Medium:
	                    return this.spacing.medium;
	                case enums.Spacing.Large:
	                    return this.spacing.large;
	                case enums.Spacing.ExtraLarge:
	                    return this.spacing.extraLarge;
	                case enums.Spacing.Padding:
	                    return this.spacing.padding;
	                default:
	                    return 0;
	            }
	        };
	        HostConfig.prototype.paddingDefinitionToSpacingDefinition = function (paddingDefinition) {
	            return new shared.SpacingDefinition(this.getEffectiveSpacing(paddingDefinition.top), this.getEffectiveSpacing(paddingDefinition.right), this.getEffectiveSpacing(paddingDefinition.bottom), this.getEffectiveSpacing(paddingDefinition.left));
	        };
	        HostConfig.prototype.makeCssClassNames = function () {
	            var classNames = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                classNames[_i] = arguments[_i];
	            }
	            var result = [];
	            for (var _a = 0, classNames_1 = classNames; _a < classNames_1.length; _a++) {
	                var className = classNames_1[_a];
	                result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + "-" : "") + className);
	            }
	            return result;
	        };
	        HostConfig.prototype.makeCssClassName = function () {
	            var classNames = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                classNames[_i] = arguments[_i];
	            }
	            var result = this.makeCssClassNames.apply(this, classNames).join(" ");
	            return result ? result : "";
	        };
	        Object.defineProperty(HostConfig.prototype, "fontFamily", {
	            get: function get() {
	                return this._legacyFontType.fontFamily;
	            },
	            set: function set(value) {
	                this._legacyFontType.fontFamily = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(HostConfig.prototype, "fontSizes", {
	            get: function get() {
	                return this._legacyFontType.fontSizes;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(HostConfig.prototype, "fontWeights", {
	            get: function get() {
	                return this._legacyFontType.fontWeights;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return HostConfig;
	    }();
	    exports.HostConfig = HostConfig;
	    exports.defaultHostConfig = new HostConfig({
	        supportsInteractivity: true,
	        spacing: {
	            small: 10,
	            default: 20,
	            medium: 30,
	            large: 40,
	            extraLarge: 50,
	            padding: 20
	        },
	        separator: {
	            lineThickness: 1,
	            lineColor: "#EEEEEE"
	        },
	        fontTypes: {
	            default: {
	                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
	                fontSizes: {
	                    small: 12,
	                    default: 14,
	                    medium: 17,
	                    large: 21,
	                    extraLarge: 26
	                },
	                fontWeights: {
	                    lighter: 200,
	                    default: 400,
	                    bolder: 600
	                }
	            },
	            monospace: {
	                fontFamily: "'Courier New', Courier, monospace",
	                fontSizes: {
	                    small: 12,
	                    default: 14,
	                    medium: 17,
	                    large: 21,
	                    extraLarge: 26
	                },
	                fontWeights: {
	                    lighter: 200,
	                    default: 400,
	                    bolder: 600
	                }
	            }
	        },
	        imageSizes: {
	            small: 40,
	            medium: 80,
	            large: 160
	        },
	        containerStyles: {
	            default: {
	                backgroundColor: "#FFFFFF",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            },
	            emphasis: {
	                backgroundColor: "#08000000",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            },
	            accent: {
	                backgroundColor: "#C7DEF9",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            },
	            good: {
	                backgroundColor: "#CCFFCC",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            },
	            attention: {
	                backgroundColor: "#FFC5B2",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            },
	            warning: {
	                backgroundColor: "#FFE2B2",
	                foregroundColors: {
	                    default: {
	                        default: "#333333",
	                        subtle: "#EE333333"
	                    },
	                    dark: {
	                        default: "#000000",
	                        subtle: "#66000000"
	                    },
	                    light: {
	                        default: "#FFFFFF",
	                        subtle: "#33000000"
	                    },
	                    accent: {
	                        default: "#2E89FC",
	                        subtle: "#882E89FC"
	                    },
	                    attention: {
	                        default: "#cc3300",
	                        subtle: "#DDcc3300"
	                    },
	                    good: {
	                        default: "#028A02",
	                        subtle: "#DD027502"
	                    },
	                    warning: {
	                        default: "#e69500",
	                        subtle: "#DDe69500"
	                    }
	                }
	            }
	        },
	        inputs: {
	            label: {
	                requiredInputs: {
	                    color: enums.TextColor.Accent,
	                    size: enums.TextSize.ExtraLarge,
	                    weight: enums.TextWeight.Bolder,
	                    isSubtle: true,
	                    suffix: " (required)",
	                    suffixColor: enums.TextColor.Good
	                },
	                optionalInputs: {
	                    color: enums.TextColor.Warning,
	                    size: enums.TextSize.Medium,
	                    weight: enums.TextWeight.Lighter,
	                    isSubtle: false
	                }
	            },
	            errorMessage: {
	                color: enums.TextColor.Accent,
	                size: enums.TextSize.Small,
	                weight: enums.TextWeight.Bolder
	            }
	        },
	        actions: {
	            maxActions: 5,
	            spacing: enums.Spacing.Default,
	            buttonSpacing: 10,
	            showCard: {
	                actionMode: enums.ShowCardActionMode.Inline,
	                inlineTopMargin: 16
	            },
	            actionsOrientation: enums.Orientation.Horizontal,
	            actionAlignment: enums.ActionAlignment.Left
	        },
	        adaptiveCard: {
	            allowCustomStyle: false
	        },
	        imageSet: {
	            imageSize: enums.Size.Medium,
	            maxImageHeight: 100
	        },
	        factSet: {
	            title: {
	                color: enums.TextColor.Default,
	                size: enums.TextSize.Default,
	                isSubtle: false,
	                weight: enums.TextWeight.Bolder,
	                wrap: true,
	                maxWidth: 150
	            },
	            value: {
	                color: enums.TextColor.Default,
	                size: enums.TextSize.Default,
	                isSubtle: false,
	                weight: enums.TextWeight.Default,
	                wrap: true
	            },
	            spacing: 10
	        }
	    });
	    
	});

	var textFormatters = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.formatText = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.
	    var AbstractTextFormatter = /** @class */function () {
	        function AbstractTextFormatter(regularExpression) {
	            this._regularExpression = regularExpression;
	        }
	        AbstractTextFormatter.prototype.format = function (lang, input) {
	            var matches;
	            if (input) {
	                var result = input;
	                while ((matches = this._regularExpression.exec(input)) != null) {
	                    result = result.replace(matches[0], this.internalFormat(lang, matches));
	                }
	                return result;
	            } else {
	                return input;
	            }
	        };
	        return AbstractTextFormatter;
	    }();
	    var DateFormatter = /** @class */function (_super) {
	        __extends(DateFormatter, _super);
	        function DateFormatter() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        DateFormatter.prototype.internalFormat = function (lang, matches) {
	            var date = new Date(Date.parse(matches[1]));
	            var format = matches[2] != undefined ? matches[2].toLowerCase() : "compact";
	            if (format != "compact") {
	                return date.toLocaleDateString(lang, { day: "numeric", weekday: format, month: format, year: "numeric" });
	            } else {
	                return date.toLocaleDateString();
	            }
	        };
	        return DateFormatter;
	    }(AbstractTextFormatter);
	    var TimeFormatter = /** @class */function (_super) {
	        __extends(TimeFormatter, _super);
	        function TimeFormatter() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        TimeFormatter.prototype.internalFormat = function (lang, matches) {
	            var date = new Date(Date.parse(matches[1]));
	            return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });
	        };
	        return TimeFormatter;
	    }(AbstractTextFormatter);
	    function formatText(lang, text) {
	        var formatters = [new DateFormatter(/\{{2}DATE\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\)\}{2}/g), new TimeFormatter(/\{{2}TIME\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))\)\}{2}/g)];
	        var result = text;
	        for (var _i = 0, formatters_1 = formatters; _i < formatters_1.length; _i++) {
	            var formatter = formatters_1[_i];
	            result = formatter.format(lang, result);
	        }
	        return result;
	    }
	    exports.formatText = formatText;
	    
	});

	var cardElements = createCommonjsModule(function (module, exports) {

	    var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {
	        var _extendStatics = function extendStatics(d, b) {
	            _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	                d.__proto__ = b;
	            } || function (d, b) {
	                for (var p in b) {
	                    if (b.hasOwnProperty(p)) d[p] = b[p];
	                }
	            };
	            return _extendStatics(d, b);
	        };
	        return function (d, b) {
	            _extendStatics(d, b);
	            function __() {
	                this.constructor = d;
	            }
	            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	        };
	    }();
	    var __decorate = commonjsGlobal && commonjsGlobal.__decorate || function (decorators, target, key, desc) {
	        var c = arguments.length,
	            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	            d;
	        if ((typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	        }return c > 3 && r && Object.defineProperty(target, key, r), r;
	    };
	    Object.defineProperty(exports, "__esModule", { value: true });
	    exports.SerializationContext = exports.GlobalRegistry = exports.AdaptiveCard = exports.ContainerWithActions = exports.ColumnSet = exports.Column = exports.Container = exports.BackgroundImage = exports.StylableCardElementContainer = exports.ActionSet = exports.ShowCardAction = exports.HttpAction = exports.HttpHeader = exports.ToggleVisibilityAction = exports.OpenUrlAction = exports.SubmitAction = exports.Action = exports.TimeInput = exports.TimeProperty = exports.DateInput = exports.NumberInput = exports.ChoiceSetInput = exports.Choice = exports.ToggleInput = exports.TextInput = exports.Input = exports.Media = exports.MediaSource = exports.ImageSet = exports.CardElementContainer = exports.Image = exports.FactSet = exports.Fact = exports.RichTextBlock = exports.TextRun = exports.TextBlock = exports.BaseTextBlock = exports.ActionProperty = exports.CardElement = void 0;
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.


	    var CardElement = /** @class */function (_super) {
	        __extends(CardElement, _super);
	        function CardElement() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._truncatedDueToOverflow = false;
	            return _this;
	        }
	        Object.defineProperty(CardElement.prototype, "lang", {
	            get: function get() {
	                var lang = this.getValue(CardElement.langProperty);
	                if (lang) {
	                    return lang;
	                } else {
	                    if (this.parent) {
	                        return this.parent.lang;
	                    } else {
	                        return undefined;
	                    }
	                }
	            },
	            set: function set(value) {
	                this.setValue(CardElement.langProperty, value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "isVisible", {
	            get: function get() {
	                return this.getValue(CardElement.isVisibleProperty);
	            },
	            set: function set(value) {
	                // If the element is going to be hidden, reset any changes that were due
	                // to overflow truncation (this ensures that if the element is later
	                // un-hidden it has the right content)
	                if (shared.GlobalSettings.useAdvancedCardBottomTruncation && !value) {
	                    this.undoOverflowTruncation();
	                }
	                if (this.isVisible !== value) {
	                    this.setValue(CardElement.isVisibleProperty, value);
	                    this.updateRenderedElementVisibility();
	                    if (this._renderedElement) {
	                        raiseElementVisibilityChangedEvent(this);
	                    }
	                }
	                if (this._renderedElement) {
	                    this._renderedElement.setAttribute("aria-expanded", value.toString());
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardElement.prototype.internalRenderSeparator = function () {
	            var renderedSeparator = utils.renderSeparation(this.hostConfig, {
	                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),
	                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,
	                lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined
	            }, this.separatorOrientation);
	            if (shared.GlobalSettings.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == enums.Orientation.Horizontal) {
	                // Adjust separator's margins if the option to always bleed separators is turned on
	                var parentContainer = this.getParentContainer();
	                if (parentContainer && parentContainer.getEffectivePadding()) {
	                    var parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());
	                    renderedSeparator.style.marginLeft = "-" + parentPhysicalPadding.left + "px";
	                    renderedSeparator.style.marginRight = "-" + parentPhysicalPadding.right + "px";
	                }
	            }
	            return renderedSeparator;
	        };
	        CardElement.prototype.updateRenderedElementVisibility = function () {
	            var displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : "none";
	            if (this._renderedElement) {
	                if (displayMode) {
	                    this._renderedElement.style.display = displayMode;
	                } else {
	                    this._renderedElement.style.removeProperty("display");
	                }
	            }
	            if (this._separatorElement) {
	                if (this.parent && this.parent.isFirstElement(this)) {
	                    this._separatorElement.style.display = "none";
	                } else {
	                    if (displayMode) {
	                        this._separatorElement.style.display = displayMode;
	                    } else {
	                        this._separatorElement.style.removeProperty("display");
	                    }
	                }
	            }
	        };
	        CardElement.prototype.hideElementDueToOverflow = function () {
	            if (this._renderedElement && this.isVisible) {
	                this._renderedElement.style.visibility = "hidden";
	                this.isVisible = false;
	                raiseElementVisibilityChangedEvent(this, false);
	            }
	        };
	        CardElement.prototype.showElementHiddenDueToOverflow = function () {
	            if (this._renderedElement && !this.isVisible) {
	                this._renderedElement.style.removeProperty("visibility");
	                this.isVisible = true;
	                raiseElementVisibilityChangedEvent(this, false);
	            }
	        };
	        // Marked private to emulate internal access
	        CardElement.prototype.handleOverflow = function (maxHeight) {
	            if (this.isVisible || this.isHiddenDueToOverflow()) {
	                var handled = this.truncateOverflow(maxHeight);
	                // Even if we were unable to truncate the element to fit this time,
	                // it still could have been previously truncated
	                this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;
	                if (!handled) {
	                    this.hideElementDueToOverflow();
	                } else if (handled && !this.isVisible) {
	                    this.showElementHiddenDueToOverflow();
	                }
	            }
	        };
	        // Marked private to emulate internal access
	        CardElement.prototype.resetOverflow = function () {
	            var sizeChanged = false;
	            if (this._truncatedDueToOverflow) {
	                this.undoOverflowTruncation();
	                this._truncatedDueToOverflow = false;
	                sizeChanged = true;
	            }
	            if (this.isHiddenDueToOverflow()) {
	                this.showElementHiddenDueToOverflow();
	            }
	            return sizeChanged;
	        };
	        CardElement.prototype.getDefaultSerializationContext = function () {
	            return new SerializationContext();
	        };
	        CardElement.prototype.createPlaceholderElement = function () {
	            var styleDefinition = this.getEffectiveStyleDefinition();
	            var foregroundCssColor = utils.stringToCssColor(styleDefinition.foregroundColors.default.subtle);
	            var element = document.createElement("div");
	            element.style.border = "1px dashed " + foregroundCssColor;
	            element.style.padding = "4px";
	            element.style.minHeight = "32px";
	            element.style.fontSize = "10px";
	            element.style.color = foregroundCssColor;
	            element.innerText = "Empty " + this.getJsonTypeName();
	            return element;
	        };
	        CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {
	            if (this.height === "auto") {
	                renderedElement.style.flex = "0 0 auto";
	            } else {
	                renderedElement.style.flex = "1 1 auto";
	            }
	        };
	        CardElement.prototype.isDisplayed = function () {
	            return this._renderedElement !== undefined && this.isVisible && this._renderedElement.offsetHeight > 0;
	        };
	        CardElement.prototype.overrideInternalRender = function () {
	            return this.internalRender();
	        };
	        CardElement.prototype.applyPadding = function () {
	            if (this.separatorElement) {
	                if (shared.GlobalSettings.alwaysBleedSeparators && this.separatorOrientation == enums.Orientation.Horizontal && !this.isBleeding()) {
	                    var padding = new shared.PaddingDefinition();
	                    this.getImmediateSurroundingPadding(padding);
	                    var physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);
	                    this.separatorElement.style.marginLeft = "-" + physicalPadding.left + "px";
	                    this.separatorElement.style.marginRight = "-" + physicalPadding.right + "px";
	                } else {
	                    this.separatorElement.style.marginRight = "0";
	                    this.separatorElement.style.marginLeft = "0";
	                }
	            }
	        };
	        /*
	         * Called when this element overflows the bottom of the card.
	         * maxHeight will be the amount of space still available on the card (0 if
	         * the element is fully off the card).
	         */
	        CardElement.prototype.truncateOverflow = function (maxHeight) {
	            // Child implementations should return true if the element handled
	            // the truncation request such that its content fits within maxHeight,
	            // false if the element should fall back to being hidden
	            return false;
	        };
	        /*
	         * This should reverse any changes performed in truncateOverflow().
	         */
	        CardElement.prototype.undoOverflowTruncation = function () {};
	        CardElement.prototype.getDefaultPadding = function () {
	            return new shared.PaddingDefinition();
	        };
	        CardElement.prototype.getHasBackground = function () {
	            return false;
	        };
	        CardElement.prototype.getPadding = function () {
	            return this._padding;
	        };
	        CardElement.prototype.setPadding = function (value) {
	            this._padding = value;
	        };
	        CardElement.prototype.shouldSerialize = function (context) {
	            return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;
	        };
	        Object.defineProperty(CardElement.prototype, "useDefaultSizing", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "allowCustomPadding", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "separatorOrientation", {
	            get: function get() {
	                return enums.Orientation.Horizontal;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "defaultStyle", {
	            get: function get() {
	                return enums.ContainerStyle.Default;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardElement.prototype.parse = function (source, context) {
	            _super.prototype.parse.call(this, source, context ? context : new SerializationContext());
	        };
	        CardElement.prototype.asString = function () {
	            return "";
	        };
	        CardElement.prototype.isBleeding = function () {
	            return false;
	        };
	        CardElement.prototype.getEffectiveStyle = function () {
	            if (this.parent) {
	                return this.parent.getEffectiveStyle();
	            }
	            return this.defaultStyle;
	        };
	        CardElement.prototype.getEffectiveStyleDefinition = function () {
	            return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());
	        };
	        CardElement.prototype.getForbiddenActionTypes = function () {
	            return [];
	        };
	        CardElement.prototype.getImmediateSurroundingPadding = function (result, processTop, processRight, processBottom, processLeft) {
	            if (processTop === void 0) {
	                processTop = true;
	            }
	            if (processRight === void 0) {
	                processRight = true;
	            }
	            if (processBottom === void 0) {
	                processBottom = true;
	            }
	            if (processLeft === void 0) {
	                processLeft = true;
	            }
	            if (this.parent) {
	                var doProcessTop = processTop && this.parent.isTopElement(this);
	                var doProcessRight = processRight && this.parent.isRightMostElement(this);
	                var doProcessBottom = processBottom && this.parent.isBottomElement(this);
	                var doProcessLeft = processLeft && this.parent.isLeftMostElement(this);
	                var effectivePadding = this.parent.getEffectivePadding();
	                if (effectivePadding) {
	                    if (doProcessTop && effectivePadding.top != enums.Spacing.None) {
	                        result.top = effectivePadding.top;
	                        doProcessTop = false;
	                    }
	                    if (doProcessRight && effectivePadding.right != enums.Spacing.None) {
	                        result.right = effectivePadding.right;
	                        doProcessRight = false;
	                    }
	                    if (doProcessBottom && effectivePadding.bottom != enums.Spacing.None) {
	                        result.bottom = effectivePadding.bottom;
	                        doProcessBottom = false;
	                    }
	                    if (doProcessLeft && effectivePadding.left != enums.Spacing.None) {
	                        result.left = effectivePadding.left;
	                        doProcessLeft = false;
	                    }
	                }
	                if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {
	                    this.parent.getImmediateSurroundingPadding(result, doProcessTop, doProcessRight, doProcessBottom, doProcessLeft);
	                }
	            }
	        };
	        CardElement.prototype.getActionCount = function () {
	            return 0;
	        };
	        CardElement.prototype.getActionAt = function (index) {
	            throw new Error(strings.Strings.errors.indexOutOfRange(index));
	        };
	        CardElement.prototype.remove = function () {
	            if (this.parent && this.parent instanceof CardElementContainer) {
	                return this.parent.removeItem(this);
	            }
	            return false;
	        };
	        CardElement.prototype.render = function () {
	            this._renderedElement = this.overrideInternalRender();
	            this._separatorElement = this.internalRenderSeparator();
	            if (this._renderedElement) {
	                if (this.id) {
	                    this._renderedElement.id = this.id;
	                }
	                if (this.customCssSelector) {
	                    this._renderedElement.classList.add(this.customCssSelector);
	                }
	                this._renderedElement.style.boxSizing = "border-box";
	                this._defaultRenderedElementDisplayMode = this._renderedElement.style.display ? this._renderedElement.style.display : undefined;
	                this.adjustRenderedElementSize(this._renderedElement);
	                this.updateLayout(false);
	            } else if (this.isDesignMode()) {
	                this._renderedElement = this.createPlaceholderElement();
	            }
	            return this._renderedElement;
	        };
	        CardElement.prototype.updateLayout = function (processChildren) {
	            this.updateRenderedElementVisibility();
	            this.applyPadding();
	        };
	        CardElement.prototype.indexOf = function (cardElement) {
	            return -1;
	        };
	        CardElement.prototype.isDesignMode = function () {
	            var rootElement = this.getRootElement();
	            return rootElement instanceof AdaptiveCard && rootElement.designMode;
	        };
	        CardElement.prototype.isFirstElement = function (element) {
	            return true;
	        };
	        CardElement.prototype.isLastElement = function (element) {
	            return true;
	        };
	        CardElement.prototype.isAtTheVeryLeft = function () {
	            return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;
	        };
	        CardElement.prototype.isAtTheVeryRight = function () {
	            return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;
	        };
	        CardElement.prototype.isAtTheVeryTop = function () {
	            return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;
	        };
	        CardElement.prototype.isAtTheVeryBottom = function () {
	            return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;
	        };
	        CardElement.prototype.isBleedingAtTop = function () {
	            return false;
	        };
	        CardElement.prototype.isBleedingAtBottom = function () {
	            return false;
	        };
	        CardElement.prototype.isLeftMostElement = function (element) {
	            return true;
	        };
	        CardElement.prototype.isRightMostElement = function (element) {
	            return true;
	        };
	        CardElement.prototype.isTopElement = function (element) {
	            return this.isFirstElement(element);
	        };
	        CardElement.prototype.isBottomElement = function (element) {
	            return this.isLastElement(element);
	        };
	        CardElement.prototype.isHiddenDueToOverflow = function () {
	            return this._renderedElement !== undefined && this._renderedElement.style.visibility == 'hidden';
	        };
	        CardElement.prototype.getRootElement = function () {
	            return this.getRootObject();
	        };
	        CardElement.prototype.getParentContainer = function () {
	            var currentElement = this.parent;
	            while (currentElement) {
	                if (currentElement instanceof Container) {
	                    return currentElement;
	                }
	                currentElement = currentElement.parent;
	            }
	            return undefined;
	        };
	        CardElement.prototype.getAllInputs = function (processActions) {
	            return [];
	        };
	        CardElement.prototype.getResourceInformation = function () {
	            return [];
	        };
	        CardElement.prototype.getElementById = function (id) {
	            return this.id === id ? this : undefined;
	        };
	        CardElement.prototype.getActionById = function (id) {
	            return undefined;
	        };
	        CardElement.prototype.getEffectivePadding = function () {
	            var padding = this.getPadding();
	            return padding && this.allowCustomPadding ? padding : this.getDefaultPadding();
	        };
	        Object.defineProperty(CardElement.prototype, "hostConfig", {
	            get: function get() {
	                if (this._hostConfig) {
	                    return this._hostConfig;
	                } else {
	                    if (this.parent) {
	                        return this.parent.hostConfig;
	                    } else {
	                        return hostConfig.defaultHostConfig;
	                    }
	                }
	            },
	            set: function set(value) {
	                this._hostConfig = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "index", {
	            get: function get() {
	                if (this.parent) {
	                    return this.parent.indexOf(this);
	                } else {
	                    return 0;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "isInteractive", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "isStandalone", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "isInline", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "hasVisibleSeparator", {
	            get: function get() {
	                if (this.parent && this.separatorElement) {
	                    return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());
	                } else {
	                    return false;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "separatorElement", {
	            get: function get() {
	                return this._separatorElement;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(CardElement.prototype, "parent", {
	            get: function get() {
	                return this._parent;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardElement.langProperty = new serialization.StringProperty(serialization.Versions.v1_1, "lang", true, /^[a-z]{2,3}$/ig);
	        CardElement.isVisibleProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "isVisible", true);
	        CardElement.separatorProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "separator", false);
	        CardElement.heightProperty = new serialization.ValueSetProperty(serialization.Versions.v1_1, "height", [{ value: "auto" }, { value: "stretch" }], "auto");
	        CardElement.horizontalAlignmentProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "horizontalAlignment", enums.HorizontalAlignment, enums.HorizontalAlignment.Left);
	        CardElement.spacingProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "spacing", enums.Spacing, enums.Spacing.Default);
	        __decorate([serialization.property(CardElement.horizontalAlignmentProperty)], CardElement.prototype, "horizontalAlignment", void 0);
	        __decorate([serialization.property(CardElement.spacingProperty)], CardElement.prototype, "spacing", void 0);
	        __decorate([serialization.property(CardElement.separatorProperty)], CardElement.prototype, "separator", void 0);
	        __decorate([serialization.property(CardElement.heightProperty)], CardElement.prototype, "height", void 0);
	        __decorate([serialization.property(CardElement.langProperty)], CardElement.prototype, "lang", null);
	        __decorate([serialization.property(CardElement.isVisibleProperty)], CardElement.prototype, "isVisible", null);
	        return CardElement;
	    }(cardObject.CardObject);
	    exports.CardElement = CardElement;
	    var ActionProperty = /** @class */function (_super) {
	        __extends(ActionProperty, _super);
	        function ActionProperty(targetVersion, name, forbiddenActionTypes) {
	            if (forbiddenActionTypes === void 0) {
	                forbiddenActionTypes = [];
	            }
	            var _this = _super.call(this, targetVersion, name, undefined) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.forbiddenActionTypes = forbiddenActionTypes;
	            return _this;
	        }
	        ActionProperty.prototype.parse = function (sender, source, context) {
	            var parent = sender;
	            return context.parseAction(parent, source[this.name], this.forbiddenActionTypes, parent.isDesignMode());
	        };
	        ActionProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined);
	        };
	        return ActionProperty;
	    }(serialization.PropertyDefinition);
	    exports.ActionProperty = ActionProperty;
	    var BaseTextBlock = /** @class */function (_super) {
	        __extends(BaseTextBlock, _super);
	        function BaseTextBlock(text) {
	            var _this = _super.call(this) || this;
	            _this.size = enums.TextSize.Default;
	            _this.weight = enums.TextWeight.Default;
	            _this.color = enums.TextColor.Default;
	            _this.isSubtle = false;
	            _this.ariaHidden = false;
	            if (text) {
	                _this.text = text;
	            }
	            return _this;
	        }
	        BaseTextBlock.prototype.populateSchema = function (schema) {
	            _super.prototype.populateSchema.call(this, schema);
	            // selectAction is declared on BaseTextBlock but is only exposed on TextRun,
	            // so the property is removed from the BaseTextBlock schema.
	            schema.remove(BaseTextBlock.selectActionProperty);
	        };
	        Object.defineProperty(BaseTextBlock.prototype, "text", {
	            get: function get() {
	                return this.getValue(BaseTextBlock.textProperty);
	            },
	            set: function set(value) {
	                this.setText(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#endregion
	        BaseTextBlock.prototype.getFontSize = function (fontType) {
	            switch (this.size) {
	                case enums.TextSize.Small:
	                    return fontType.fontSizes.small;
	                case enums.TextSize.Medium:
	                    return fontType.fontSizes.medium;
	                case enums.TextSize.Large:
	                    return fontType.fontSizes.large;
	                case enums.TextSize.ExtraLarge:
	                    return fontType.fontSizes.extraLarge;
	                default:
	                    return fontType.fontSizes.default;
	            }
	        };
	        BaseTextBlock.prototype.getColorDefinition = function (colorSet, color) {
	            switch (color) {
	                case enums.TextColor.Accent:
	                    return colorSet.accent;
	                case enums.TextColor.Dark:
	                    return colorSet.dark;
	                case enums.TextColor.Light:
	                    return colorSet.light;
	                case enums.TextColor.Good:
	                    return colorSet.good;
	                case enums.TextColor.Warning:
	                    return colorSet.warning;
	                case enums.TextColor.Attention:
	                    return colorSet.attention;
	                default:
	                    return colorSet.default;
	            }
	        };
	        BaseTextBlock.prototype.setText = function (value) {
	            this.setValue(BaseTextBlock.textProperty, value);
	        };
	        BaseTextBlock.prototype.init = function (textDefinition) {
	            this.size = textDefinition.size;
	            this.weight = textDefinition.weight;
	            this.color = textDefinition.color;
	            this.isSubtle = textDefinition.isSubtle;
	        };
	        BaseTextBlock.prototype.asString = function () {
	            return this.text;
	        };
	        BaseTextBlock.prototype.applyStylesTo = function (targetElement) {
	            var fontType = this.hostConfig.getFontTypeDefinition(this.fontType);
	            if (fontType.fontFamily) {
	                targetElement.style.fontFamily = fontType.fontFamily;
	            }
	            var fontSize;
	            switch (this.size) {
	                case enums.TextSize.Small:
	                    fontSize = fontType.fontSizes.small;
	                    break;
	                case enums.TextSize.Medium:
	                    fontSize = fontType.fontSizes.medium;
	                    break;
	                case enums.TextSize.Large:
	                    fontSize = fontType.fontSizes.large;
	                    break;
	                case enums.TextSize.ExtraLarge:
	                    fontSize = fontType.fontSizes.extraLarge;
	                    break;
	                default:
	                    fontSize = fontType.fontSizes.default;
	                    break;
	            }
	            targetElement.style.fontSize = fontSize + "px";
	            var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);
	            targetElement.style.color = utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);
	            var fontWeight;
	            switch (this.weight) {
	                case enums.TextWeight.Lighter:
	                    fontWeight = fontType.fontWeights.lighter;
	                    break;
	                case enums.TextWeight.Bolder:
	                    fontWeight = fontType.fontWeights.bolder;
	                    break;
	                default:
	                    fontWeight = fontType.fontWeights.default;
	                    break;
	            }
	            targetElement.style.fontWeight = fontWeight.toString();
	            if (this.ariaHidden) {
	                targetElement.setAttribute("aria-hidden", "true");
	            }
	        };
	        Object.defineProperty(BaseTextBlock.prototype, "effectiveColor", {
	            get: function get() {
	                return this.color ? this.color : enums.TextColor.Default;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        BaseTextBlock.textProperty = new serialization.StringProperty(serialization.Versions.v1_0, "text", true);
	        BaseTextBlock.sizeProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "size", enums.TextSize, enums.TextSize.Default);
	        BaseTextBlock.weightProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "weight", enums.TextWeight, enums.TextWeight.Default);
	        BaseTextBlock.colorProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "color", enums.TextColor, enums.TextColor.Default);
	        BaseTextBlock.isSubtleProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "isSubtle", false);
	        BaseTextBlock.fontTypeProperty = new serialization.EnumProperty(serialization.Versions.v1_2, "fontType", enums.FontType);
	        BaseTextBlock.selectActionProperty = new ActionProperty(serialization.Versions.v1_1, "selectAction", ["Action.ShowCard"]);
	        __decorate([serialization.property(BaseTextBlock.sizeProperty)], BaseTextBlock.prototype, "size", void 0);
	        __decorate([serialization.property(BaseTextBlock.weightProperty)], BaseTextBlock.prototype, "weight", void 0);
	        __decorate([serialization.property(BaseTextBlock.colorProperty)], BaseTextBlock.prototype, "color", void 0);
	        __decorate([serialization.property(BaseTextBlock.fontTypeProperty)], BaseTextBlock.prototype, "fontType", void 0);
	        __decorate([serialization.property(BaseTextBlock.isSubtleProperty)], BaseTextBlock.prototype, "isSubtle", void 0);
	        __decorate([serialization.property(BaseTextBlock.textProperty)], BaseTextBlock.prototype, "text", null);
	        __decorate([serialization.property(BaseTextBlock.selectActionProperty)], BaseTextBlock.prototype, "selectAction", void 0);
	        return BaseTextBlock;
	    }(CardElement);
	    exports.BaseTextBlock = BaseTextBlock;
	    var TextBlock = /** @class */function (_super) {
	        __extends(TextBlock, _super);
	        function TextBlock() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.wrap = false;
	            _this._treatAsPlainText = true;
	            _this.useMarkdown = true;
	            return _this;
	        }
	        TextBlock.prototype.restoreOriginalContent = function () {
	            if (this.renderedElement !== undefined) {
	                if (this.maxLines && this.maxLines > 0) {
	                    this.renderedElement.style.maxHeight = this._computedLineHeight * this.maxLines + "px";
	                }
	                this.renderedElement.innerHTML = this._originalInnerHtml;
	            }
	        };
	        TextBlock.prototype.truncateIfSupported = function (maxHeight) {
	            if (this.renderedElement !== undefined) {
	                // For now, only truncate TextBlocks that contain just a single
	                // paragraph -- since the maxLines calculation doesn't take into
	                // account Markdown lists
	                var children = this.renderedElement.children;
	                var isTextOnly = !children.length;
	                var truncationSupported = isTextOnly || children.length == 1 && children[0].tagName.toLowerCase() == 'p';
	                if (truncationSupported) {
	                    var element = isTextOnly ? this.renderedElement : children[0];
	                    utils.truncate(element, maxHeight, this._computedLineHeight);
	                    return true;
	                }
	            }
	            return false;
	        };
	        TextBlock.prototype.setText = function (value) {
	            _super.prototype.setText.call(this, value);
	            this._processedText = undefined;
	        };
	        TextBlock.prototype.internalRender = function () {
	            var _this = this;
	            this._processedText = undefined;
	            if (this.text) {
	                var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);
	                var hostConfig = this.hostConfig;
	                var element = void 0;
	                if (this.forElementId) {
	                    var labelElement = document.createElement("label");
	                    labelElement.htmlFor = this.forElementId;
	                    element = labelElement;
	                } else {
	                    element = document.createElement("div");
	                }
	                element.classList.add(hostConfig.makeCssClassName("ac-textBlock"));
	                element.style.overflow = "hidden";
	                this.applyStylesTo(element);
	                if (this.selectAction) {
	                    element.onclick = function (e) {
	                        e.preventDefault();
	                        e.cancelBubble = true;
	                        if (_this.selectAction) {
	                            _this.selectAction.execute();
	                        }
	                    };
	                    if (hostConfig.supportsInteractivity) {
	                        element.tabIndex = 0;
	                        element.setAttribute("role", this.selectAction.getAriaRole());
	                        if (this.selectAction.title) {
	                            element.setAttribute("aria-label", this.selectAction.title);
	                            element.title = this.selectAction.title;
	                        }
	                        element.classList.add(hostConfig.makeCssClassName("ac-selectable"));
	                    }
	                }
	                if (!this._processedText) {
	                    this._treatAsPlainText = true;
	                    var formattedText = textFormatters.formatText(this.lang, preProcessedText);
	                    if (this.useMarkdown && formattedText) {
	                        if (shared.GlobalSettings.allowMarkForTextHighlighting) {
	                            formattedText = formattedText.replace(/<mark>/g, "===").replace(/<\/mark>/g, "/==/");
	                        }
	                        var markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);
	                        if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {
	                            this._processedText = markdownProcessingResult.outputHtml;
	                            this._treatAsPlainText = false;
	                            // Only process <mark> tag if markdown processing was applied because
	                            // markdown processing is also responsible for sanitizing the input string
	                            if (shared.GlobalSettings.allowMarkForTextHighlighting && this._processedText) {
	                                var markStyle = "";
	                                var effectiveStyle = this.getEffectiveStyleDefinition();
	                                if (effectiveStyle.highlightBackgroundColor) {
	                                    markStyle += "background-color: " + effectiveStyle.highlightBackgroundColor + ";";
	                                }
	                                if (effectiveStyle.highlightForegroundColor) {
	                                    markStyle += "color: " + effectiveStyle.highlightForegroundColor + ";";
	                                }
	                                if (markStyle) {
	                                    markStyle = 'style="' + markStyle + '"';
	                                }
	                                this._processedText = this._processedText.replace(/===/g, "<mark " + markStyle + ">").replace(/\/==\//g, "</mark>");
	                            }
	                        } else {
	                            this._processedText = formattedText;
	                            this._treatAsPlainText = true;
	                        }
	                    } else {
	                        this._processedText = formattedText;
	                        this._treatAsPlainText = true;
	                    }
	                }
	                if (!this._processedText) {
	                    this._processedText = "";
	                }
	                if (this._treatAsPlainText) {
	                    element.innerText = this._processedText;
	                } else {
	                    element.innerHTML = this._processedText;
	                }
	                if (element.firstElementChild instanceof HTMLElement) {
	                    var firstElementChild = element.firstElementChild;
	                    firstElementChild.style.marginTop = "0px";
	                    firstElementChild.style.width = "100%";
	                    if (!this.wrap) {
	                        firstElementChild.style.overflow = "hidden";
	                        firstElementChild.style.textOverflow = "ellipsis";
	                    }
	                }
	                if (element.lastElementChild instanceof HTMLElement) {
	                    element.lastElementChild.style.marginBottom = "0px";
	                }
	                var anchors = element.getElementsByTagName("a");
	                for (var i = 0; i < anchors.length; i++) {
	                    var anchor = anchors[i];
	                    anchor.classList.add(hostConfig.makeCssClassName("ac-anchor"));
	                    anchor.target = "_blank";
	                    anchor.onclick = function (e) {
	                        if (raiseAnchorClickedEvent(_this, e.target)) {
	                            e.preventDefault();
	                            e.cancelBubble = true;
	                        }
	                    };
	                }
	                if (this.wrap) {
	                    element.style.wordWrap = "break-word";
	                    if (this.maxLines && this.maxLines > 0) {
	                        element.style.maxHeight = this._computedLineHeight * this.maxLines + "px";
	                        element.style.overflow = "hidden";
	                    }
	                } else {
	                    element.style.whiteSpace = "nowrap";
	                    element.style.textOverflow = "ellipsis";
	                }
	                if (shared.GlobalSettings.useAdvancedTextBlockTruncation || shared.GlobalSettings.useAdvancedCardBottomTruncation) {
	                    this._originalInnerHtml = element.innerHTML;
	                }
	                return element;
	            } else {
	                return undefined;
	            }
	        };
	        TextBlock.prototype.truncateOverflow = function (maxHeight) {
	            if (maxHeight >= this._computedLineHeight) {
	                return this.truncateIfSupported(maxHeight);
	            }
	            return false;
	        };
	        TextBlock.prototype.undoOverflowTruncation = function () {
	            this.restoreOriginalContent();
	            if (shared.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {
	                var maxHeight = this._computedLineHeight * this.maxLines;
	                this.truncateIfSupported(maxHeight);
	            }
	        };
	        TextBlock.prototype.applyStylesTo = function (targetElement) {
	            _super.prototype.applyStylesTo.call(this, targetElement);
	            var parentContainer = this.getParentContainer();
	            var isRtl = parentContainer ? parentContainer.isRtl() : false;
	            switch (this.horizontalAlignment) {
	                case enums.HorizontalAlignment.Center:
	                    targetElement.style.textAlign = "center";
	                    break;
	                case enums.HorizontalAlignment.Right:
	                    targetElement.style.textAlign = isRtl ? "left" : "right";
	                    break;
	                default:
	                    targetElement.style.textAlign = isRtl ? "right" : "left";
	                    break;
	            }
	            var lineHeights = this.hostConfig.lineHeights;
	            if (lineHeights) {
	                switch (this.size) {
	                    case enums.TextSize.Small:
	                        this._computedLineHeight = lineHeights.small;
	                        break;
	                    case enums.TextSize.Medium:
	                        this._computedLineHeight = lineHeights.medium;
	                        break;
	                    case enums.TextSize.Large:
	                        this._computedLineHeight = lineHeights.large;
	                        break;
	                    case enums.TextSize.ExtraLarge:
	                        this._computedLineHeight = lineHeights.extraLarge;
	                        break;
	                    default:
	                        this._computedLineHeight = lineHeights.default;
	                        break;
	                }
	            } else {
	                // Looks like 1.33 is the magic number to compute line-height
	                // from font size.
	                this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;
	            }
	            targetElement.style.lineHeight = this._computedLineHeight + "px";
	        };
	        TextBlock.prototype.getJsonTypeName = function () {
	            return "TextBlock";
	        };
	        TextBlock.prototype.updateLayout = function (processChildren) {
	            if (processChildren === void 0) {
	                processChildren = false;
	            }
	            _super.prototype.updateLayout.call(this, processChildren);
	            if (shared.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {
	                // Reset the element's innerHTML in case the available room for
	                // content has increased
	                this.restoreOriginalContent();
	                this.truncateIfSupported(this._computedLineHeight * this.maxLines);
	            }
	        };
	        TextBlock.wrapProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "wrap", false);
	        TextBlock.maxLinesProperty = new serialization.NumProperty(serialization.Versions.v1_0, "maxLines");
	        __decorate([serialization.property(TextBlock.wrapProperty)], TextBlock.prototype, "wrap", void 0);
	        __decorate([serialization.property(TextBlock.maxLinesProperty)], TextBlock.prototype, "maxLines", void 0);
	        return TextBlock;
	    }(BaseTextBlock);
	    exports.TextBlock = TextBlock;
	    var TextRun = /** @class */function (_super) {
	        __extends(TextRun, _super);
	        function TextRun() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.italic = false;
	            _this.strikethrough = false;
	            _this.highlight = false;
	            _this.underline = false;
	            return _this;
	        }
	        TextRun.prototype.populateSchema = function (schema) {
	            _super.prototype.populateSchema.call(this, schema);
	            schema.add(BaseTextBlock.selectActionProperty);
	        };
	        //#endregion
	        TextRun.prototype.internalRender = function () {
	            var _this = this;
	            if (this.text) {
	                var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);
	                var hostConfig = this.hostConfig;
	                var formattedText = textFormatters.formatText(this.lang, preProcessedText);
	                if (!formattedText) {
	                    formattedText = "";
	                }
	                var element = document.createElement("span");
	                element.classList.add(hostConfig.makeCssClassName("ac-textRun"));
	                this.applyStylesTo(element);
	                if (this.selectAction && hostConfig.supportsInteractivity) {
	                    var anchor = document.createElement("a");
	                    anchor.classList.add(hostConfig.makeCssClassName("ac-anchor"));
	                    var href = this.selectAction.getHref();
	                    anchor.href = href ? href : "";
	                    anchor.target = "_blank";
	                    anchor.onclick = function (e) {
	                        e.preventDefault();
	                        e.cancelBubble = true;
	                        if (_this.selectAction) {
	                            _this.selectAction.execute();
	                        }
	                    };
	                    if (this.selectAction.title) {
	                        anchor.setAttribute("aria-label", this.selectAction.title);
	                        anchor.title = this.selectAction.title;
	                    }
	                    anchor.innerText = formattedText;
	                    element.appendChild(anchor);
	                } else {
	                    element.innerText = formattedText;
	                }
	                return element;
	            } else {
	                return undefined;
	            }
	        };
	        TextRun.prototype.applyStylesTo = function (targetElement) {
	            _super.prototype.applyStylesTo.call(this, targetElement);
	            if (this.italic) {
	                targetElement.style.fontStyle = "italic";
	            }
	            if (this.strikethrough) {
	                targetElement.style.textDecoration = "line-through";
	            }
	            if (this.highlight) {
	                var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);
	                targetElement.style.backgroundColor = utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);
	            }
	            if (this.underline) {
	                targetElement.style.textDecoration = "underline";
	            }
	        };
	        TextRun.prototype.getJsonTypeName = function () {
	            return "TextRun";
	        };
	        Object.defineProperty(TextRun.prototype, "isStandalone", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(TextRun.prototype, "isInline", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        TextRun.italicProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "italic", false);
	        TextRun.strikethroughProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "strikethrough", false);
	        TextRun.highlightProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "highlight", false);
	        TextRun.underlineProperty = new serialization.BoolProperty(serialization.Versions.v1_3, "underline", false);
	        __decorate([serialization.property(TextRun.italicProperty)], TextRun.prototype, "italic", void 0);
	        __decorate([serialization.property(TextRun.strikethroughProperty)], TextRun.prototype, "strikethrough", void 0);
	        __decorate([serialization.property(TextRun.highlightProperty)], TextRun.prototype, "highlight", void 0);
	        __decorate([serialization.property(TextRun.underlineProperty)], TextRun.prototype, "underline", void 0);
	        return TextRun;
	    }(BaseTextBlock);
	    exports.TextRun = TextRun;
	    var RichTextBlock = /** @class */function (_super) {
	        __extends(RichTextBlock, _super);
	        function RichTextBlock() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._inlines = [];
	            return _this;
	        }
	        RichTextBlock.prototype.internalAddInline = function (inline, forceAdd) {
	            if (forceAdd === void 0) {
	                forceAdd = false;
	            }
	            if (!inline.isInline) {
	                throw new Error(strings.Strings.errors.elementCannotBeUsedAsInline());
	            }
	            var doAdd = inline.parent === undefined || forceAdd;
	            if (!doAdd && inline.parent != this) {
	                throw new Error(strings.Strings.errors.inlineAlreadyParented());
	            } else {
	                inline.setParent(this);
	                this._inlines.push(inline);
	            }
	        };
	        RichTextBlock.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            this._inlines = [];
	            if (Array.isArray(source["inlines"])) {
	                for (var _i = 0, _a = source["inlines"]; _i < _a.length; _i++) {
	                    var jsonInline = _a[_i];
	                    var inline = void 0;
	                    if (typeof jsonInline === "string") {
	                        var textRun = new TextRun();
	                        textRun.text = jsonInline;
	                        inline = textRun;
	                    } else {
	                        // No fallback for inlines in 1.2
	                        inline = context.parseElement(this, jsonInline, false);
	                    }
	                    if (inline) {
	                        this.internalAddInline(inline, true);
	                    }
	                }
	            }
	        };
	        RichTextBlock.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            if (this._inlines.length > 0) {
	                var jsonInlines = [];
	                for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {
	                    var inline = _a[_i];
	                    jsonInlines.push(inline.toJSON(context));
	                }
	                context.serializeValue(target, "inlines", jsonInlines);
	            }
	        };
	        RichTextBlock.prototype.internalRender = function () {
	            if (this._inlines.length > 0) {
	                var element = void 0;
	                if (this.forElementId) {
	                    var labelElement = document.createElement("label");
	                    labelElement.htmlFor = this.forElementId;
	                    element = labelElement;
	                } else {
	                    element = document.createElement("div");
	                }
	                element.className = this.hostConfig.makeCssClassName("ac-richTextBlock");
	                var parentContainer = this.getParentContainer();
	                var isRtl = parentContainer ? parentContainer.isRtl() : false;
	                switch (this.horizontalAlignment) {
	                    case enums.HorizontalAlignment.Center:
	                        element.style.textAlign = "center";
	                        break;
	                    case enums.HorizontalAlignment.Right:
	                        element.style.textAlign = isRtl ? "left" : "right";
	                        break;
	                    default:
	                        element.style.textAlign = isRtl ? "right" : "left";
	                        break;
	                }
	                var renderedInlines = 0;
	                for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {
	                    var inline = _a[_i];
	                    var renderedInline = inline.render();
	                    if (renderedInline) {
	                        element.appendChild(renderedInline);
	                        renderedInlines++;
	                    }
	                }
	                if (renderedInlines > 0) {
	                    return element;
	                }
	            }
	            return undefined;
	        };
	        RichTextBlock.prototype.asString = function () {
	            var result = "";
	            for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {
	                var inline = _a[_i];
	                result += inline.asString();
	            }
	            return result;
	        };
	        RichTextBlock.prototype.getJsonTypeName = function () {
	            return "RichTextBlock";
	        };
	        RichTextBlock.prototype.getInlineCount = function () {
	            return this._inlines.length;
	        };
	        RichTextBlock.prototype.getInlineAt = function (index) {
	            if (index >= 0 && index < this._inlines.length) {
	                return this._inlines[index];
	            } else {
	                throw new Error(strings.Strings.errors.indexOutOfRange(index));
	            }
	        };
	        RichTextBlock.prototype.addInline = function (inline) {
	            if (typeof inline === "string") {
	                this.internalAddInline(new TextRun(inline));
	            } else {
	                this.internalAddInline(inline);
	            }
	        };
	        RichTextBlock.prototype.removeInline = function (inline) {
	            var index = this._inlines.indexOf(inline);
	            if (index >= 0) {
	                this._inlines[index].setParent(undefined);
	                this._inlines.splice(index, 1);
	                return true;
	            }
	            return false;
	        };
	        return RichTextBlock;
	    }(CardElement);
	    exports.RichTextBlock = RichTextBlock;
	    var Fact = /** @class */function (_super) {
	        __extends(Fact, _super);
	        function Fact(name, value) {
	            var _this = _super.call(this) || this;
	            _this.name = name;
	            _this.value = value;
	            return _this;
	        }
	        //#endregion
	        Fact.prototype.getSchemaKey = function () {
	            return "Fact";
	        };
	        //#region Schema
	        Fact.titleProperty = new serialization.StringProperty(serialization.Versions.v1_0, "title");
	        Fact.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        __decorate([serialization.property(Fact.titleProperty)], Fact.prototype, "name", void 0);
	        __decorate([serialization.property(Fact.valueProperty)], Fact.prototype, "value", void 0);
	        return Fact;
	    }(serialization.SerializableObject);
	    exports.Fact = Fact;
	    var FactSet = /** @class */function (_super) {
	        __extends(FactSet, _super);
	        function FactSet() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(FactSet.prototype, "useDefaultSizing", {
	            //#endregion
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        FactSet.prototype.internalRender = function () {
	            var element = undefined;
	            var hostConfig = this.hostConfig;
	            if (this.facts.length > 0) {
	                element = document.createElement("table");
	                element.style.borderWidth = "0px";
	                element.style.borderSpacing = "0px";
	                element.style.borderStyle = "none";
	                element.style.borderCollapse = "collapse";
	                element.style.display = "block";
	                element.style.overflow = "hidden";
	                element.classList.add(hostConfig.makeCssClassName("ac-factset"));
	                element.setAttribute("role", "presentation");
	                for (var i = 0; i < this.facts.length; i++) {
	                    var trElement = document.createElement("tr");
	                    if (i > 0) {
	                        trElement.style.marginTop = hostConfig.factSet.spacing + "px";
	                    }
	                    // Title column
	                    var tdElement = document.createElement("td");
	                    tdElement.style.padding = "0";
	                    tdElement.classList.add(hostConfig.makeCssClassName("ac-fact-title"));
	                    if (hostConfig.factSet.title.maxWidth) {
	                        tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + "px";
	                    }
	                    tdElement.style.verticalAlign = "top";
	                    var textBlock = new TextBlock();
	                    textBlock.setParent(this);
	                    textBlock.text = !this.facts[i].name && this.isDesignMode() ? "Title" : this.facts[i].name;
	                    textBlock.size = hostConfig.factSet.title.size;
	                    textBlock.color = hostConfig.factSet.title.color;
	                    textBlock.isSubtle = hostConfig.factSet.title.isSubtle;
	                    textBlock.weight = hostConfig.factSet.title.weight;
	                    textBlock.wrap = hostConfig.factSet.title.wrap;
	                    textBlock.spacing = enums.Spacing.None;
	                    utils.appendChild(tdElement, textBlock.render());
	                    utils.appendChild(trElement, tdElement);
	                    // Spacer column
	                    tdElement = document.createElement("td");
	                    tdElement.style.width = "10px";
	                    utils.appendChild(trElement, tdElement);
	                    // Value column
	                    tdElement = document.createElement("td");
	                    tdElement.style.padding = "0";
	                    tdElement.style.verticalAlign = "top";
	                    tdElement.classList.add(hostConfig.makeCssClassName("ac-fact-value"));
	                    textBlock = new TextBlock();
	                    textBlock.setParent(this);
	                    textBlock.text = this.facts[i].value;
	                    textBlock.size = hostConfig.factSet.value.size;
	                    textBlock.color = hostConfig.factSet.value.color;
	                    textBlock.isSubtle = hostConfig.factSet.value.isSubtle;
	                    textBlock.weight = hostConfig.factSet.value.weight;
	                    textBlock.wrap = hostConfig.factSet.value.wrap;
	                    textBlock.spacing = enums.Spacing.None;
	                    utils.appendChild(tdElement, textBlock.render());
	                    utils.appendChild(trElement, tdElement);
	                    utils.appendChild(element, trElement);
	                }
	            }
	            return element;
	        };
	        FactSet.prototype.getJsonTypeName = function () {
	            return "FactSet";
	        };
	        //#region Schema
	        FactSet.factsProperty = new serialization.SerializableObjectCollectionProperty(serialization.Versions.v1_0, "facts", Fact);
	        __decorate([serialization.property(FactSet.factsProperty)], FactSet.prototype, "facts", void 0);
	        return FactSet;
	    }(CardElement);
	    exports.FactSet = FactSet;
	    var ImageDimensionProperty = /** @class */function (_super) {
	        __extends(ImageDimensionProperty, _super);
	        function ImageDimensionProperty(targetVersion, name, internalName, fallbackProperty) {
	            var _this = _super.call(this, targetVersion, name) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            _this.internalName = internalName;
	            _this.fallbackProperty = fallbackProperty;
	            return _this;
	        }
	        ImageDimensionProperty.prototype.getInternalName = function () {
	            return this.internalName;
	        };
	        ImageDimensionProperty.prototype.parse = function (sender, source, context) {
	            var result = undefined;
	            var sourceValue = source[this.name];
	            if (sourceValue === undefined) {
	                return this.defaultValue;
	            }
	            var isValid = false;
	            if (typeof sourceValue === "string") {
	                try {
	                    var size = shared.SizeAndUnit.parse(sourceValue, true);
	                    if (size.unit == enums.SizeUnit.Pixel) {
	                        result = size.physicalSize;
	                        isValid = true;
	                    }
	                } catch (_a) {}
	                // Swallow the exception

	                // If the source value isn't valid per this property definition,
	                // check its validity per the fallback property, if specified
	                if (!isValid && this.fallbackProperty) {
	                    isValid = this.fallbackProperty.isValidValue(sourceValue, context);
	                }
	            }
	            if (!isValid) {
	                context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(sourceValue, this.name));
	            }
	            return result;
	        };
	        ImageDimensionProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, typeof value === "number" && !isNaN(value) ? value + "px" : undefined);
	        };
	        return ImageDimensionProperty;
	    }(serialization.PropertyDefinition);
	    var Image = /** @class */function (_super) {
	        __extends(Image, _super);
	        function Image() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.size = enums.Size.Auto;
	            _this.style = enums.ImageStyle.Default;
	            return _this;
	        }
	        Image.prototype.populateSchema = function (schema) {
	            _super.prototype.populateSchema.call(this, schema);
	            schema.remove(CardElement.heightProperty);
	        };
	        //#endregion
	        Image.prototype.applySize = function (element) {
	            if (this.pixelWidth || this.pixelHeight) {
	                if (this.pixelWidth) {
	                    element.style.width = this.pixelWidth + "px";
	                }
	                if (this.pixelHeight) {
	                    element.style.height = this.pixelHeight + "px";
	                }
	            } else {
	                if (this.maxHeight) {
	                    // If the image is constrained in height, we set its height property and
	                    // auto and stretch are ignored (default to medium). THis is necessary for
	                    // ImageSet which uses a maximum image height as opposed to the cards width
	                    // as a constraining dimension
	                    switch (this.size) {
	                        case enums.Size.Small:
	                            element.style.height = this.hostConfig.imageSizes.small + "px";
	                            break;
	                        case enums.Size.Large:
	                            element.style.height = this.hostConfig.imageSizes.large + "px";
	                            break;
	                        default:
	                            element.style.height = this.hostConfig.imageSizes.medium + "px";
	                            break;
	                    }
	                    element.style.maxHeight = this.maxHeight + "px";
	                } else {
	                    switch (this.size) {
	                        case enums.Size.Stretch:
	                            element.style.width = "100%";
	                            break;
	                        case enums.Size.Auto:
	                            element.style.maxWidth = "100%";
	                            break;
	                        case enums.Size.Small:
	                            element.style.width = this.hostConfig.imageSizes.small + "px";
	                            break;
	                        case enums.Size.Large:
	                            element.style.width = this.hostConfig.imageSizes.large + "px";
	                            break;
	                        case enums.Size.Medium:
	                            element.style.width = this.hostConfig.imageSizes.medium + "px";
	                            break;
	                    }
	                    element.style.maxHeight = "100%";
	                }
	            }
	        };
	        Object.defineProperty(Image.prototype, "useDefaultSizing", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Image.prototype.internalRender = function () {
	            var _this = this;
	            var element = undefined;
	            if (this.url) {
	                element = document.createElement("div");
	                element.style.display = "flex";
	                element.style.alignItems = "flex-start";
	                element.onkeypress = function (e) {
	                    if (_this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) {
	                        // enter or space pressed
	                        e.preventDefault();
	                        e.cancelBubble = true;
	                        _this.selectAction.execute();
	                    }
	                };
	                element.onclick = function (e) {
	                    if (_this.selectAction) {
	                        e.preventDefault();
	                        e.cancelBubble = true;
	                        _this.selectAction.execute();
	                    }
	                };
	                switch (this.horizontalAlignment) {
	                    case enums.HorizontalAlignment.Center:
	                        element.style.justifyContent = "center";
	                        break;
	                    case enums.HorizontalAlignment.Right:
	                        element.style.justifyContent = "flex-end";
	                        break;
	                    default:
	                        element.style.justifyContent = "flex-start";
	                        break;
	                }
	                // Cache hostConfig to avoid walking the parent hierarchy multiple times
	                var hostConfig = this.hostConfig;
	                var imageElement = document.createElement("img");
	                imageElement.onload = function (e) {
	                    raiseImageLoadedEvent(_this);
	                };
	                imageElement.onerror = function (e) {
	                    if (_this.renderedElement) {
	                        var card = _this.getRootElement();
	                        _this.renderedElement.innerHTML = "";
	                        if (card && card.designMode) {
	                            var errorElement = document.createElement("div");
	                            errorElement.style.display = "flex";
	                            errorElement.style.alignItems = "center";
	                            errorElement.style.justifyContent = "center";
	                            errorElement.style.backgroundColor = "#EEEEEE";
	                            errorElement.style.color = "black";
	                            errorElement.innerText = ":-(";
	                            errorElement.style.padding = "10px";
	                            _this.applySize(errorElement);
	                            _this.renderedElement.appendChild(errorElement);
	                        }
	                    }
	                    raiseImageLoadedEvent(_this);
	                };
	                imageElement.style.minWidth = "0";
	                imageElement.classList.add(hostConfig.makeCssClassName("ac-image"));
	                if (this.selectAction !== undefined && hostConfig.supportsInteractivity) {
	                    imageElement.tabIndex = 0;
	                    imageElement.setAttribute("role", this.selectAction.getAriaRole());
	                    if (this.selectAction.title) {
	                        imageElement.setAttribute("aria-label", this.selectAction.title);
	                        imageElement.title = this.selectAction.title;
	                    }
	                    imageElement.classList.add(hostConfig.makeCssClassName("ac-selectable"));
	                }
	                this.applySize(imageElement);
	                if (this.style === enums.ImageStyle.Person) {
	                    imageElement.style.borderRadius = "50%";
	                    imageElement.style.backgroundPosition = "50% 50%";
	                    imageElement.style.backgroundRepeat = "no-repeat";
	                }
	                imageElement.style.backgroundColor = utils.stringToCssColor(this.backgroundColor);
	                imageElement.src = this.preProcessPropertyValue(Image.urlProperty);
	                var altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);
	                if (altTextProperty) {
	                    imageElement.alt = altTextProperty;
	                }
	                element.appendChild(imageElement);
	            }
	            return element;
	        };
	        Image.prototype.getJsonTypeName = function () {
	            return "Image";
	        };
	        Image.prototype.getActionById = function (id) {
	            var result = _super.prototype.getActionById.call(this, id);
	            if (!result && this.selectAction) {
	                result = this.selectAction.getActionById(id);
	            }
	            return result;
	        };
	        Image.prototype.getResourceInformation = function () {
	            return this.url ? [{ url: this.url, mimeType: "image" }] : [];
	        };
	        Image.urlProperty = new serialization.StringProperty(serialization.Versions.v1_0, "url");
	        Image.altTextProperty = new serialization.StringProperty(serialization.Versions.v1_0, "altText");
	        Image.backgroundColorProperty = new serialization.StringProperty(serialization.Versions.v1_1, "backgroundColor");
	        Image.styleProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "style", enums.ImageStyle, enums.ImageStyle.Default);
	        Image.sizeProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "size", enums.Size, enums.Size.Auto);
	        Image.pixelWidthProperty = new ImageDimensionProperty(serialization.Versions.v1_1, "width", "pixelWidth");
	        Image.pixelHeightProperty = new ImageDimensionProperty(serialization.Versions.v1_1, "height", "pixelHeight", CardElement.heightProperty);
	        Image.selectActionProperty = new ActionProperty(serialization.Versions.v1_1, "selectAction", ["Action.ShowCard"]);
	        __decorate([serialization.property(Image.urlProperty)], Image.prototype, "url", void 0);
	        __decorate([serialization.property(Image.altTextProperty)], Image.prototype, "altText", void 0);
	        __decorate([serialization.property(Image.backgroundColorProperty)], Image.prototype, "backgroundColor", void 0);
	        __decorate([serialization.property(Image.sizeProperty)], Image.prototype, "size", void 0);
	        __decorate([serialization.property(Image.styleProperty)], Image.prototype, "style", void 0);
	        __decorate([serialization.property(Image.pixelWidthProperty)], Image.prototype, "pixelWidth", void 0);
	        __decorate([serialization.property(Image.pixelHeightProperty)], Image.prototype, "pixelHeight", void 0);
	        __decorate([serialization.property(Image.selectActionProperty)], Image.prototype, "selectAction", void 0);
	        return Image;
	    }(CardElement);
	    exports.Image = Image;
	    var CardElementContainer = /** @class */function (_super) {
	        __extends(CardElementContainer, _super);
	        function CardElementContainer() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.allowVerticalOverflow = false;
	            return _this;
	        }
	        CardElementContainer.prototype.populateSchema = function (schema) {
	            _super.prototype.populateSchema.call(this, schema);
	            if (!this.isSelectable) {
	                schema.remove(CardElementContainer.selectActionProperty);
	            }
	        };
	        //#endregion
	        CardElementContainer.prototype.isElementAllowed = function (element) {
	            return this.hostConfig.supportsInteractivity || !element.isInteractive;
	        };
	        CardElementContainer.prototype.applyPadding = function () {
	            _super.prototype.applyPadding.call(this);
	            if (!this.renderedElement) {
	                return;
	            }
	            var physicalPadding = new shared.SpacingDefinition();
	            if (this.getEffectivePadding()) {
	                physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());
	            }
	            this.renderedElement.style.paddingTop = physicalPadding.top + "px";
	            this.renderedElement.style.paddingRight = physicalPadding.right + "px";
	            this.renderedElement.style.paddingBottom = physicalPadding.bottom + "px";
	            this.renderedElement.style.paddingLeft = physicalPadding.left + "px";
	            this.renderedElement.style.marginRight = "0";
	            this.renderedElement.style.marginLeft = "0";
	        };
	        Object.defineProperty(CardElementContainer.prototype, "isSelectable", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        CardElementContainer.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            for (var i = 0; i < this.getItemCount(); i++) {
	                var item = this.getItemAt(i);
	                if (!this.hostConfig.supportsInteractivity && item.isInteractive) {
	                    context.addFailure(this, enums.ValidationEvent.InteractivityNotAllowed, strings.Strings.errors.interactivityNotAllowed());
	                }
	                if (!this.isElementAllowed(item)) {
	                    context.addFailure(this, enums.ValidationEvent.InteractivityNotAllowed, strings.Strings.errors.elementTypeNotAllowed(item.getJsonTypeName()));
	                }
	                item.internalValidateProperties(context);
	            }
	            if (this._selectAction) {
	                this._selectAction.internalValidateProperties(context);
	            }
	        };
	        CardElementContainer.prototype.render = function () {
	            var _this = this;
	            var element = _super.prototype.render.call(this);
	            if (element) {
	                var hostConfig = this.hostConfig;
	                if (this.allowVerticalOverflow) {
	                    element.style.overflowX = "hidden";
	                    element.style.overflowY = "auto";
	                }
	                if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {
	                    element.classList.add(hostConfig.makeCssClassName("ac-selectable"));
	                    element.tabIndex = 0;
	                    element.setAttribute("role", this._selectAction.getAriaRole());
	                    if (this._selectAction.title) {
	                        element.setAttribute("aria-label", this._selectAction.title);
	                        element.title = this._selectAction.title;
	                    }
	                    element.onclick = function (e) {
	                        if (_this._selectAction !== undefined) {
	                            e.preventDefault();
	                            e.cancelBubble = true;
	                            _this._selectAction.execute();
	                        }
	                    };
	                    element.onkeypress = function (e) {
	                        if (_this._selectAction !== undefined && (e.keyCode == 13 || e.keyCode == 32)) {
	                            // Enter or space pressed
	                            e.preventDefault();
	                            e.cancelBubble = true;
	                            _this._selectAction.execute();
	                        }
	                    };
	                }
	            }
	            return element;
	        };
	        CardElementContainer.prototype.updateLayout = function (processChildren) {
	            if (processChildren === void 0) {
	                processChildren = true;
	            }
	            _super.prototype.updateLayout.call(this, processChildren);
	            if (processChildren) {
	                for (var i = 0; i < this.getItemCount(); i++) {
	                    this.getItemAt(i).updateLayout();
	                }
	            }
	        };
	        CardElementContainer.prototype.getAllInputs = function (processActions) {
	            if (processActions === void 0) {
	                processActions = true;
	            }
	            var result = [];
	            for (var i = 0; i < this.getItemCount(); i++) {
	                result = result.concat(this.getItemAt(i).getAllInputs(processActions));
	            }
	            return result;
	        };
	        CardElementContainer.prototype.getResourceInformation = function () {
	            var result = [];
	            for (var i = 0; i < this.getItemCount(); i++) {
	                result = result.concat(this.getItemAt(i).getResourceInformation());
	            }
	            return result;
	        };
	        CardElementContainer.prototype.getElementById = function (id) {
	            var result = _super.prototype.getElementById.call(this, id);
	            if (!result) {
	                for (var i = 0; i < this.getItemCount(); i++) {
	                    result = this.getItemAt(i).getElementById(id);
	                    if (result) {
	                        break;
	                    }
	                }
	            }
	            return result;
	        };
	        CardElementContainer.selectActionProperty = new ActionProperty(serialization.Versions.v1_1, "selectAction", ["Action.ShowCard"]);
	        __decorate([serialization.property(CardElementContainer.selectActionProperty)], CardElementContainer.prototype, "_selectAction", void 0);
	        return CardElementContainer;
	    }(CardElement);
	    exports.CardElementContainer = CardElementContainer;
	    var ImageSet = /** @class */function (_super) {
	        __extends(ImageSet, _super);
	        function ImageSet() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._images = [];
	            _this.imageSize = enums.ImageSize.Medium;
	            return _this;
	        }
	        //#endregion
	        ImageSet.prototype.internalRender = function () {
	            var element = undefined;
	            if (this._images.length > 0) {
	                element = document.createElement("div");
	                element.style.display = "flex";
	                element.style.flexWrap = "wrap";
	                for (var _i = 0, _a = this._images; _i < _a.length; _i++) {
	                    var image = _a[_i];
	                    switch (this.imageSize) {
	                        case enums.ImageSize.Small:
	                            image.size = enums.Size.Small;
	                            break;
	                        case enums.ImageSize.Large:
	                            image.size = enums.Size.Large;
	                            break;
	                        default:
	                            image.size = enums.Size.Medium;
	                            break;
	                    }
	                    image.maxHeight = this.hostConfig.imageSet.maxImageHeight;
	                    var renderedImage = image.render();
	                    if (renderedImage) {
	                        renderedImage.style.display = "inline-flex";
	                        renderedImage.style.margin = "0px";
	                        renderedImage.style.marginRight = "10px";
	                        utils.appendChild(element, renderedImage);
	                    }
	                }
	            }
	            return element;
	        };
	        ImageSet.prototype.getItemCount = function () {
	            return this._images.length;
	        };
	        ImageSet.prototype.getItemAt = function (index) {
	            return this._images[index];
	        };
	        ImageSet.prototype.getFirstVisibleRenderedItem = function () {
	            return this._images && this._images.length > 0 ? this._images[0] : undefined;
	        };
	        ImageSet.prototype.getLastVisibleRenderedItem = function () {
	            return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : undefined;
	        };
	        ImageSet.prototype.removeItem = function (item) {
	            if (item instanceof Image) {
	                var itemIndex = this._images.indexOf(item);
	                if (itemIndex >= 0) {
	                    this._images.splice(itemIndex, 1);
	                    item.setParent(undefined);
	                    this.updateLayout();
	                    return true;
	                }
	            }
	            return false;
	        };
	        ImageSet.prototype.getJsonTypeName = function () {
	            return "ImageSet";
	        };
	        ImageSet.prototype.addImage = function (image) {
	            if (!image.parent) {
	                this._images.push(image);
	                image.setParent(this);
	            } else {
	                throw new Error("This image already belongs to another ImageSet");
	            }
	        };
	        ImageSet.prototype.indexOf = function (cardElement) {
	            return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;
	        };
	        ImageSet.imagesProperty = new serialization.SerializableObjectCollectionProperty(serialization.Versions.v1_0, "images", Image, function (sender, item) {
	            item.setParent(sender);
	        });
	        ImageSet.imageSizeProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "imageSize", enums.ImageSize, enums.ImageSize.Medium);
	        __decorate([serialization.property(ImageSet.imagesProperty)], ImageSet.prototype, "_images", void 0);
	        __decorate([serialization.property(ImageSet.imageSizeProperty)], ImageSet.prototype, "imageSize", void 0);
	        return ImageSet;
	    }(CardElementContainer);
	    exports.ImageSet = ImageSet;
	    var MediaSource = /** @class */function (_super) {
	        __extends(MediaSource, _super);
	        function MediaSource(url, mimeType) {
	            var _this = _super.call(this) || this;
	            _this.url = url;
	            _this.mimeType = mimeType;
	            return _this;
	        }
	        //#endregion
	        MediaSource.prototype.getSchemaKey = function () {
	            return "MediaSource";
	        };
	        MediaSource.prototype.isValid = function () {
	            return this.mimeType && this.url ? true : false;
	        };
	        MediaSource.prototype.render = function () {
	            var result = undefined;
	            if (this.isValid()) {
	                result = document.createElement("source");
	                result.src = this.url;
	                result.type = this.mimeType;
	            }
	            return result;
	        };
	        //#region Schema
	        MediaSource.mimeTypeProperty = new serialization.StringProperty(serialization.Versions.v1_1, "mimeType");
	        MediaSource.urlProperty = new serialization.StringProperty(serialization.Versions.v1_1, "url");
	        __decorate([serialization.property(MediaSource.mimeTypeProperty)], MediaSource.prototype, "mimeType", void 0);
	        __decorate([serialization.property(MediaSource.urlProperty)], MediaSource.prototype, "url", void 0);
	        return MediaSource;
	    }(serialization.SerializableObject);
	    exports.MediaSource = MediaSource;
	    var Media = /** @class */function (_super) {
	        __extends(Media, _super);
	        function Media() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.sources = [];
	            return _this;
	        }
	        Media.prototype.getPosterUrl = function () {
	            return this.poster ? this.poster : this.hostConfig.media.defaultPoster;
	        };
	        Media.prototype.processSources = function () {
	            this._selectedSources = [];
	            this._selectedMediaType = undefined;
	            for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {
	                var source = _a[_i];
	                var mimeComponents = source.mimeType ? source.mimeType.split('/') : [];
	                if (mimeComponents.length == 2) {
	                    if (!this._selectedMediaType) {
	                        var index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);
	                        if (index >= 0) {
	                            this._selectedMediaType = Media.supportedMediaTypes[index];
	                        }
	                    }
	                    if (mimeComponents[0] == this._selectedMediaType) {
	                        this._selectedSources.push(source);
	                    }
	                }
	            }
	        };
	        Media.prototype.handlePlayButtonInvoke = function (event) {
	            if (this.hostConfig.media.allowInlinePlayback) {
	                event.preventDefault();
	                event.cancelBubble = true;
	                if (this.renderedElement) {
	                    var mediaPlayerElement = this.renderMediaPlayer();
	                    this.renderedElement.innerHTML = "";
	                    this.renderedElement.appendChild(mediaPlayerElement);
	                    mediaPlayerElement.play();
	                }
	            } else {
	                if (Media.onPlay) {
	                    event.preventDefault();
	                    event.cancelBubble = true;
	                    Media.onPlay(this);
	                }
	            }
	        };
	        Media.prototype.renderPoster = function () {
	            var _this = this;
	            var playButtonArrowWidth = 12;
	            var playButtonArrowHeight = 15;
	            var posterRootElement = document.createElement("div");
	            posterRootElement.className = this.hostConfig.makeCssClassName("ac-media-poster");
	            posterRootElement.setAttribute("role", "contentinfo");
	            posterRootElement.setAttribute("aria-label", this.altText ? this.altText : "Media content");
	            posterRootElement.style.position = "relative";
	            posterRootElement.style.display = "flex";
	            var posterUrl = this.getPosterUrl();
	            if (posterUrl) {
	                var posterImageElement_1 = document.createElement("img");
	                posterImageElement_1.style.width = "100%";
	                posterImageElement_1.style.height = "100%";
	                posterImageElement_1.setAttribute("role", "presentation");
	                posterImageElement_1.onerror = function (e) {
	                    if (posterImageElement_1.parentNode) {
	                        posterImageElement_1.parentNode.removeChild(posterImageElement_1);
	                    }
	                    posterRootElement.classList.add("empty");
	                    posterRootElement.style.minHeight = "150px";
	                };
	                posterImageElement_1.src = posterUrl;
	                posterRootElement.appendChild(posterImageElement_1);
	            } else {
	                posterRootElement.classList.add("empty");
	                posterRootElement.style.minHeight = "150px";
	            }
	            if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {
	                var playButtonOuterElement = document.createElement("div");
	                playButtonOuterElement.tabIndex = 0;
	                playButtonOuterElement.setAttribute("role", "button");
	                playButtonOuterElement.setAttribute("aria-label", "Play media");
	                playButtonOuterElement.className = this.hostConfig.makeCssClassName("ac-media-playButton");
	                playButtonOuterElement.style.display = "flex";
	                playButtonOuterElement.style.alignItems = "center";
	                playButtonOuterElement.style.justifyContent = "center";
	                playButtonOuterElement.onclick = function (e) {
	                    _this.handlePlayButtonInvoke(e);
	                };
	                playButtonOuterElement.onkeypress = function (e) {
	                    if (e.keyCode == 13 || e.keyCode == 32) {
	                        // space or enter
	                        _this.handlePlayButtonInvoke(e);
	                    }
	                };
	                var playButtonInnerElement = document.createElement("div");
	                playButtonInnerElement.className = this.hostConfig.makeCssClassName("ac-media-playButton-arrow");
	                playButtonInnerElement.style.width = playButtonArrowWidth + "px";
	                playButtonInnerElement.style.height = playButtonArrowHeight + "px";
	                playButtonInnerElement.style.borderTopWidth = playButtonArrowHeight / 2 + "px";
	                playButtonInnerElement.style.borderBottomWidth = playButtonArrowHeight / 2 + "px";
	                playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + "px";
	                playButtonInnerElement.style.borderRightWidth = "0";
	                playButtonInnerElement.style.borderStyle = "solid";
	                playButtonInnerElement.style.borderTopColor = "transparent";
	                playButtonInnerElement.style.borderRightColor = "transparent";
	                playButtonInnerElement.style.borderBottomColor = "transparent";
	                playButtonInnerElement.style.transform = "translate(" + playButtonArrowWidth / 10 + "px,0px)";
	                playButtonOuterElement.appendChild(playButtonInnerElement);
	                var playButtonContainer = document.createElement("div");
	                playButtonContainer.style.position = "absolute";
	                playButtonContainer.style.left = "0";
	                playButtonContainer.style.top = "0";
	                playButtonContainer.style.width = "100%";
	                playButtonContainer.style.height = "100%";
	                playButtonContainer.style.display = "flex";
	                playButtonContainer.style.justifyContent = "center";
	                playButtonContainer.style.alignItems = "center";
	                playButtonContainer.appendChild(playButtonOuterElement);
	                posterRootElement.appendChild(playButtonContainer);
	            }
	            return posterRootElement;
	        };
	        Media.prototype.renderMediaPlayer = function () {
	            var mediaElement;
	            if (this._selectedMediaType == "video") {
	                var videoPlayer = document.createElement("video");
	                var posterUrl = this.getPosterUrl();
	                if (posterUrl) {
	                    videoPlayer.poster = posterUrl;
	                }
	                mediaElement = videoPlayer;
	            } else {
	                mediaElement = document.createElement("audio");
	            }
	            mediaElement.setAttribute("webkit-playsinline", "");
	            mediaElement.setAttribute("playsinline", "");
	            mediaElement.autoplay = true;
	            mediaElement.controls = true;
	            if (utils.isMobileOS()) {
	                mediaElement.muted = true;
	            }
	            mediaElement.preload = "none";
	            mediaElement.style.width = "100%";
	            for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {
	                var source = _a[_i];
	                var renderedSource = source.render();
	                utils.appendChild(mediaElement, renderedSource);
	            }
	            return mediaElement;
	        };
	        Media.prototype.internalRender = function () {
	            var element = document.createElement("div");
	            element.className = this.hostConfig.makeCssClassName("ac-media");
	            this.processSources();
	            element.appendChild(this.renderPoster());
	            return element;
	        };
	        Media.prototype.getJsonTypeName = function () {
	            return "Media";
	        };
	        Media.prototype.getResourceInformation = function () {
	            var result = [];
	            var posterUrl = this.getPosterUrl();
	            if (posterUrl) {
	                result.push({ url: posterUrl, mimeType: "image" });
	            }
	            for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {
	                var mediaSource = _a[_i];
	                if (mediaSource.isValid()) {
	                    result.push({
	                        url: mediaSource.url,
	                        mimeType: mediaSource.mimeType
	                    });
	                }
	            }
	            return result;
	        };
	        Object.defineProperty(Media.prototype, "selectedMediaType", {
	            get: function get() {
	                return this._selectedMediaType;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Media.sourcesProperty = new serialization.SerializableObjectCollectionProperty(serialization.Versions.v1_1, "sources", MediaSource);
	        Media.posterProperty = new serialization.StringProperty(serialization.Versions.v1_1, "poster");
	        Media.altTextProperty = new serialization.StringProperty(serialization.Versions.v1_1, "altText");
	        //#endregion
	        Media.supportedMediaTypes = ["audio", "video"];
	        __decorate([serialization.property(Media.sourcesProperty)], Media.prototype, "sources", void 0);
	        __decorate([serialization.property(Media.posterProperty)], Media.prototype, "poster", void 0);
	        __decorate([serialization.property(Media.altTextProperty)], Media.prototype, "altText", void 0);
	        return Media;
	    }(CardElement);
	    exports.Media = Media;
	    var Input = /** @class */function (_super) {
	        __extends(Input, _super);
	        function Input() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Input.prototype.getAllLabelIds = function () {
	            var labelIds = [];
	            if (this._renderedLabelElement) {
	                labelIds.push(this._renderedLabelElement.id);
	            }
	            if (this._renderedErrorMessageElement) {
	                labelIds.push(this._renderedErrorMessageElement.id);
	            }
	            return labelIds;
	        };
	        Input.prototype.updateInputControlAriaLabelledBy = function () {
	            if (this._renderedInputControlElement) {
	                var labelIds = this.getAllLabelIds();
	                if (this._renderedLabelElement) {
	                    labelIds.push(this._renderedLabelElement.id);
	                }
	                if (this._renderedErrorMessageElement) {
	                    labelIds.push(this._renderedErrorMessageElement.id);
	                }
	                if (labelIds.length > 0) {
	                    this._renderedInputControlElement.setAttribute("aria-labelledby", labelIds.join(" "));
	                } else {
	                    this._renderedInputControlElement.removeAttribute("aria-labelledby");
	                }
	            }
	        };
	        Object.defineProperty(Input.prototype, "isNullable", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Input.prototype, "renderedInputControlElement", {
	            get: function get() {
	                return this._renderedInputControlElement;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Input.prototype, "inputControlContainerElement", {
	            get: function get() {
	                return this._inputControlContainerElement;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Input.prototype.overrideInternalRender = function () {
	            var hostConfig = this.hostConfig;
	            this._outerContainerElement = document.createElement("div");
	            this._outerContainerElement.style.display = "flex";
	            this._outerContainerElement.style.flexDirection = "column";
	            var renderedInputControlId = utils.generateUniqueId();
	            if (this.label) {
	                var labelRichTextBlock = new RichTextBlock();
	                labelRichTextBlock.setParent(this);
	                labelRichTextBlock.forElementId = renderedInputControlId;
	                var labelInline = new TextRun(this.label);
	                labelRichTextBlock.addInline(labelInline);
	                if (this.isRequired) {
	                    labelInline.init(hostConfig.inputs.label.requiredInputs);
	                    var isRequiredCueInline = new TextRun(hostConfig.inputs.label.requiredInputs.suffix);
	                    isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;
	                    isRequiredCueInline.ariaHidden = true;
	                    labelRichTextBlock.addInline(isRequiredCueInline);
	                } else {
	                    labelInline.init(hostConfig.inputs.label.optionalInputs);
	                }
	                this._renderedLabelElement = labelRichTextBlock.render();
	                if (this._renderedLabelElement) {
	                    this._renderedLabelElement.id = utils.generateUniqueId();
	                    this._renderedLabelElement.style.marginBottom = hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + "px";
	                    this._outerContainerElement.appendChild(this._renderedLabelElement);
	                }
	            }
	            this._inputControlContainerElement = document.createElement("div");
	            this._inputControlContainerElement.className = hostConfig.makeCssClassName("ac-input-container");
	            this._inputControlContainerElement.style.display = "flex";
	            this._renderedInputControlElement = this.internalRender();
	            if (this._renderedInputControlElement) {
	                this._renderedInputControlElement.id = renderedInputControlId;
	                this._renderedInputControlElement.style.minWidth = "0px";
	                if (this.isNullable && this.isRequired) {
	                    this._renderedInputControlElement.setAttribute("aria-required", "true");
	                    this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName("ac-input-required"));
	                }
	                this._inputControlContainerElement.appendChild(this._renderedInputControlElement);
	                this._outerContainerElement.appendChild(this._inputControlContainerElement);
	                this.updateInputControlAriaLabelledBy();
	                return this._outerContainerElement;
	            }
	            return undefined;
	        };
	        Input.prototype.valueChanged = function () {
	            if (this.isValid()) {
	                this.resetValidationFailureCue();
	            }
	            if (this.onValueChanged) {
	                this.onValueChanged(this);
	            }
	            raiseInputValueChangedEvent(this);
	        };
	        Input.prototype.resetValidationFailureCue = function () {
	            if (this.renderedInputControlElement) {
	                this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName("ac-input-validation-failed"));
	                this.updateInputControlAriaLabelledBy();
	                if (this._renderedErrorMessageElement) {
	                    this._outerContainerElement.removeChild(this._renderedErrorMessageElement);
	                    this._renderedErrorMessageElement = undefined;
	                }
	            }
	        };
	        Input.prototype.showValidationErrorMessage = function () {
	            if (this.renderedElement && this.errorMessage && shared.GlobalSettings.displayInputValidationErrors) {
	                var errorMessageTextBlock = new TextBlock();
	                errorMessageTextBlock.setParent(this);
	                errorMessageTextBlock.text = this.errorMessage;
	                errorMessageTextBlock.wrap = true;
	                errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);
	                this._renderedErrorMessageElement = errorMessageTextBlock.render();
	                if (this._renderedErrorMessageElement) {
	                    this._renderedErrorMessageElement.id = utils.generateUniqueId();
	                    this._outerContainerElement.appendChild(this._renderedErrorMessageElement);
	                    this.updateInputControlAriaLabelledBy();
	                }
	            }
	        };
	        Input.prototype.focus = function () {
	            if (this._renderedInputControlElement) {
	                this._renderedInputControlElement.focus();
	            }
	        };
	        Input.prototype.isValid = function () {
	            return true;
	        };
	        Input.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (!this.id) {
	                context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.inputsMustHaveUniqueId());
	            }
	            if (this.isRequired) {
	                if (!this.label) {
	                    context.addFailure(this, enums.ValidationEvent.RequiredInputsShouldHaveLabel, "Required inputs should have a label");
	                }
	                if (!this.errorMessage) {
	                    context.addFailure(this, enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage, "Required inputs should have an error message");
	                }
	            }
	        };
	        Input.prototype.validateValue = function () {
	            this.resetValidationFailureCue();
	            var result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();
	            if (!result && this.renderedInputControlElement) {
	                this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName("ac-input-validation-failed"));
	                this.showValidationErrorMessage();
	            }
	            return result;
	        };
	        Input.prototype.getAllInputs = function (processActions) {
	            return [this];
	        };
	        Object.defineProperty(Input.prototype, "isInteractive", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        Input.labelProperty = new serialization.StringProperty(serialization.Versions.v1_3, "label", true);
	        Input.isRequiredProperty = new serialization.BoolProperty(serialization.Versions.v1_3, "isRequired", false);
	        Input.errorMessageProperty = new serialization.StringProperty(serialization.Versions.v1_3, "errorMessage", true);
	        __decorate([serialization.property(Input.labelProperty)], Input.prototype, "label", void 0);
	        __decorate([serialization.property(Input.isRequiredProperty)], Input.prototype, "isRequired", void 0);
	        __decorate([serialization.property(Input.errorMessageProperty)], Input.prototype, "errorMessage", void 0);
	        return Input;
	    }(CardElement);
	    exports.Input = Input;
	    var TextInput = /** @class */function (_super) {
	        __extends(TextInput, _super);
	        function TextInput() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.isMultiline = false;
	            _this.style = enums.InputTextStyle.Text;
	            return _this;
	        }
	        //#endregion
	        TextInput.prototype.setupInput = function (input) {
	            var _this = this;
	            input.style.flex = "1 1 auto";
	            input.tabIndex = 0;
	            if (this.placeholder) {
	                input.placeholder = this.placeholder;
	                input.setAttribute("aria-label", this.placeholder);
	            }
	            if (this.defaultValue) {
	                input.value = this.defaultValue;
	            }
	            if (this.maxLength && this.maxLength > 0) {
	                input.maxLength = this.maxLength;
	            }
	            input.oninput = function () {
	                _this.valueChanged();
	            };
	            input.onkeypress = function (e) {
	                // Ctrl+Enter pressed
	                if (e.ctrlKey && e.code === "Enter" && _this.inlineAction) {
	                    _this.inlineAction.execute();
	                }
	            };
	        };
	        TextInput.prototype.internalRender = function () {
	            var result;
	            if (this.isMultiline) {
	                result = document.createElement("textarea");
	                result.className = this.hostConfig.makeCssClassName("ac-input", "ac-textInput", "ac-multiline");
	            } else {
	                result = document.createElement("input");
	                result.className = this.hostConfig.makeCssClassName("ac-input", "ac-textInput");
	                result.type = enums.InputTextStyle[this.style].toLowerCase();
	            }
	            this.setupInput(result);
	            return result;
	        };
	        TextInput.prototype.overrideInternalRender = function () {
	            var _this = this;
	            var renderedInputControl = _super.prototype.overrideInternalRender.call(this);
	            if (this.inlineAction) {
	                var button_1 = document.createElement("button");
	                button_1.className = this.hostConfig.makeCssClassName("ac-inlineActionButton");
	                button_1.onclick = function (e) {
	                    e.preventDefault();
	                    e.cancelBubble = true;
	                    if (_this.inlineAction) {
	                        _this.inlineAction.execute();
	                    }
	                };
	                if (this.inlineAction.iconUrl) {
	                    button_1.classList.add("iconOnly");
	                    var icon_1 = document.createElement("img");
	                    icon_1.style.height = "100%";
	                    icon_1.setAttribute("role", "presentation");
	                    // The below trick is necessary as a workaround in Chrome where the icon is initially displayed
	                    // at its native size then resized to 100% of the button's height. This cfreates an unpleasant
	                    // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button
	                    // after the image has loaded and been gicven its final size. The below trick also fixes that.
	                    icon_1.style.display = "none";
	                    icon_1.onload = function () {
	                        icon_1.style.removeProperty("display");
	                    };
	                    icon_1.onerror = function () {
	                        button_1.removeChild(icon_1);
	                        button_1.classList.remove("iconOnly");
	                        button_1.classList.add("textOnly");
	                        button_1.textContent = _this.inlineAction && _this.inlineAction.title ? _this.inlineAction.title : strings.Strings.defaults.inlineActionTitle();
	                    };
	                    icon_1.src = this.inlineAction.iconUrl;
	                    button_1.appendChild(icon_1);
	                    button_1.title = this.inlineAction.title ? this.inlineAction.title : strings.Strings.defaults.inlineActionTitle();
	                } else {
	                    button_1.classList.add("textOnly");
	                    button_1.textContent = this.inlineAction.title ? this.inlineAction.title : strings.Strings.defaults.inlineActionTitle();
	                }
	                button_1.style.marginLeft = "8px";
	                this.inputControlContainerElement.appendChild(button_1);
	            }
	            return renderedInputControl;
	        };
	        TextInput.prototype.getJsonTypeName = function () {
	            return "Input.Text";
	        };
	        TextInput.prototype.getActionById = function (id) {
	            var result = _super.prototype.getActionById.call(this, id);
	            if (!result && this.inlineAction) {
	                result = this.inlineAction.getActionById(id);
	            }
	            return result;
	        };
	        TextInput.prototype.isSet = function () {
	            return this.value ? true : false;
	        };
	        TextInput.prototype.isValid = function () {
	            if (!this.value) {
	                return true;
	            }
	            if (this.regex) {
	                return new RegExp(this.regex, "g").test(this.value);
	            }
	            return true;
	        };
	        Object.defineProperty(TextInput.prototype, "value", {
	            get: function get() {
	                if (this.renderedInputControlElement) {
	                    if (this.isMultiline) {
	                        return this.renderedInputControlElement.value;
	                    } else {
	                        return this.renderedInputControlElement.value;
	                    }
	                } else {
	                    return undefined;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        TextInput.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        TextInput.maxLengthProperty = new serialization.NumProperty(serialization.Versions.v1_0, "maxLength");
	        TextInput.isMultilineProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "isMultiline", false);
	        TextInput.placeholderProperty = new serialization.StringProperty(serialization.Versions.v1_0, "placeholder");
	        TextInput.styleProperty = new serialization.EnumProperty(serialization.Versions.v1_0, "style", enums.InputTextStyle, enums.InputTextStyle.Text);
	        TextInput.inlineActionProperty = new ActionProperty(serialization.Versions.v1_0, "inlineAction", ["Action.ShowCard"]);
	        TextInput.regexProperty = new serialization.StringProperty(serialization.Versions.v1_3, "regex", true);
	        __decorate([serialization.property(TextInput.valueProperty)], TextInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(TextInput.maxLengthProperty)], TextInput.prototype, "maxLength", void 0);
	        __decorate([serialization.property(TextInput.isMultilineProperty)], TextInput.prototype, "isMultiline", void 0);
	        __decorate([serialization.property(TextInput.placeholderProperty)], TextInput.prototype, "placeholder", void 0);
	        __decorate([serialization.property(TextInput.styleProperty)], TextInput.prototype, "style", void 0);
	        __decorate([serialization.property(TextInput.inlineActionProperty)], TextInput.prototype, "inlineAction", void 0);
	        __decorate([serialization.property(TextInput.regexProperty)], TextInput.prototype, "regex", void 0);
	        return TextInput;
	    }(Input);
	    exports.TextInput = TextInput;
	    var ToggleInput = /** @class */function (_super) {
	        __extends(ToggleInput, _super);
	        function ToggleInput() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.valueOn = "true";
	            _this.valueOff = "false";
	            _this.wrap = false;
	            return _this;
	        }
	        ToggleInput.prototype.updateInputControlAriaLabelledBy = function () {
	            if (this._checkboxInputElement) {
	                var joinedLabelIds = this.getAllLabelIds().join(" ");
	                if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {
	                    joinedLabelIds += " " + this._checkboxInputLabelElement.id;
	                }
	                if (joinedLabelIds) {
	                    this._checkboxInputElement.setAttribute("aria-labelledby", joinedLabelIds);
	                } else {
	                    this._checkboxInputElement.removeAttribute("aria-labelledby");
	                }
	            }
	        };
	        ToggleInput.prototype.internalRender = function () {
	            var _this = this;
	            var element = document.createElement("div");
	            element.className = this.hostConfig.makeCssClassName("ac-input", "ac-toggleInput");
	            element.style.width = "100%";
	            element.style.display = "flex";
	            element.style.alignItems = "center";
	            this._checkboxInputElement = document.createElement("input");
	            this._checkboxInputElement.id = utils.generateUniqueId();
	            this._checkboxInputElement.type = "checkbox";
	            this._checkboxInputElement.style.display = "inline-block";
	            this._checkboxInputElement.style.verticalAlign = "middle";
	            this._checkboxInputElement.style.margin = "0";
	            this._checkboxInputElement.style.flex = "0 0 auto";
	            if (this.title) {
	                this._checkboxInputElement.setAttribute("aria-label", this.title);
	            }
	            if (this.isRequired) {
	                this._checkboxInputElement.setAttribute("aria-required", "true");
	            }
	            this._checkboxInputElement.tabIndex = 0;
	            if (this.defaultValue == this.valueOn) {
	                this._checkboxInputElement.checked = true;
	            }
	            this._checkboxInputElement.onchange = function () {
	                _this.valueChanged();
	            };
	            utils.appendChild(element, this._checkboxInputElement);
	            if (this.title || this.isDesignMode()) {
	                var label = new TextBlock();
	                label.setParent(this);
	                label.forElementId = this._checkboxInputElement.id;
	                label.hostConfig = this.hostConfig;
	                label.text = !this.title ? this.getJsonTypeName() : this.title;
	                label.useMarkdown = shared.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;
	                label.wrap = this.wrap;
	                this._checkboxInputLabelElement = label.render();
	                if (this._checkboxInputLabelElement) {
	                    this._checkboxInputLabelElement.id = utils.generateUniqueId();
	                    this._checkboxInputLabelElement.style.display = "inline-block";
	                    this._checkboxInputLabelElement.style.flex = "1 1 auto";
	                    this._checkboxInputLabelElement.style.marginLeft = "6px";
	                    this._checkboxInputLabelElement.style.verticalAlign = "middle";
	                    var spacerElement = document.createElement("div");
	                    spacerElement.style.width = "6px";
	                    utils.appendChild(element, spacerElement);
	                    utils.appendChild(element, this._checkboxInputLabelElement);
	                }
	            }
	            return element;
	        };
	        Object.defineProperty(ToggleInput.prototype, "isNullable", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ToggleInput.prototype.getJsonTypeName = function () {
	            return "Input.Toggle";
	        };
	        ToggleInput.prototype.focus = function () {
	            if (this._checkboxInputElement) {
	                this._checkboxInputElement.focus();
	            }
	        };
	        ToggleInput.prototype.isSet = function () {
	            if (this.isRequired) {
	                return this.value === this.valueOn;
	            }
	            return this.value ? true : false;
	        };
	        Object.defineProperty(ToggleInput.prototype, "value", {
	            get: function get() {
	                if (this._checkboxInputElement) {
	                    return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;
	                } else {
	                    return undefined;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ToggleInput.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        ToggleInput.titleProperty = new serialization.StringProperty(serialization.Versions.v1_0, "title");
	        ToggleInput.valueOnProperty = new serialization.StringProperty(serialization.Versions.v1_0, "valueOn", true, undefined, "true", function (sender) {
	            return "true";
	        });
	        ToggleInput.valueOffProperty = new serialization.StringProperty(serialization.Versions.v1_0, "valueOff", true, undefined, "false", function (sender) {
	            return "false";
	        });
	        ToggleInput.wrapProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "wrap", false);
	        __decorate([serialization.property(ToggleInput.valueProperty)], ToggleInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(ToggleInput.titleProperty)], ToggleInput.prototype, "title", void 0);
	        __decorate([serialization.property(ToggleInput.valueOnProperty)], ToggleInput.prototype, "valueOn", void 0);
	        __decorate([serialization.property(ToggleInput.valueOffProperty)], ToggleInput.prototype, "valueOff", void 0);
	        __decorate([serialization.property(ToggleInput.wrapProperty)], ToggleInput.prototype, "wrap", void 0);
	        return ToggleInput;
	    }(Input);
	    exports.ToggleInput = ToggleInput;
	    var Choice = /** @class */function (_super) {
	        __extends(Choice, _super);
	        function Choice(title, value) {
	            var _this = _super.call(this) || this;
	            _this.title = title;
	            _this.value = value;
	            return _this;
	        }
	        //#endregion
	        Choice.prototype.getSchemaKey = function () {
	            return "Choice";
	        };
	        //#region Schema
	        Choice.titleProperty = new serialization.StringProperty(serialization.Versions.v1_0, "title");
	        Choice.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        __decorate([serialization.property(Choice.titleProperty)], Choice.prototype, "title", void 0);
	        __decorate([serialization.property(Choice.valueProperty)], Choice.prototype, "value", void 0);
	        return Choice;
	    }(serialization.SerializableObject);
	    exports.Choice = Choice;
	    var ChoiceSetInput = /** @class */function (_super) {
	        __extends(ChoiceSetInput, _super);
	        function ChoiceSetInput() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.isMultiSelect = false;
	            _this.wrap = false;
	            _this.choices = [];
	            return _this;
	        }
	        Object.defineProperty(ChoiceSetInput.prototype, "isCompact", {
	            get: function get() {
	                return this.style !== "expanded";
	            },
	            set: function set(value) {
	                this.style = value ? undefined : "expanded";
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ChoiceSetInput.getUniqueCategoryName = function () {
	            var uniqueCategoryName = "__ac-category" + ChoiceSetInput.uniqueCategoryCounter;
	            ChoiceSetInput.uniqueCategoryCounter++;
	            return uniqueCategoryName;
	        };
	        // Make sure `aria-current` is applied to the currently-selected item
	        ChoiceSetInput.prototype.internalApplyAriaCurrent = function () {
	            var options = this._selectElement.options;
	            if (options) {
	                for (var i = 0; i < options.length; i++) {
	                    if (options[i].selected) {
	                        options[i].setAttribute("aria-current", "true");
	                    } else {
	                        options[i].removeAttribute("aria-current");
	                    }
	                }
	            }
	        };
	        ChoiceSetInput.prototype.renderCompoundInput = function (cssClassName, type, defaultValues) {
	            var _this = this;
	            var element = document.createElement("div");
	            element.className = this.hostConfig.makeCssClassName("ac-input", cssClassName);
	            element.style.width = "100%";
	            this._toggleInputs = [];
	            this._labels = [];
	            for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {
	                var choice = _a[_i];
	                var input = document.createElement("input");
	                input.id = utils.generateUniqueId();
	                input.type = type;
	                input.style.margin = "0";
	                input.style.display = "inline-block";
	                input.style.verticalAlign = "middle";
	                input.style.flex = "0 0 auto";
	                input.name = this.id ? this.id : this._uniqueCategoryName;
	                if (this.isRequired) {
	                    input.setAttribute("aria-required", "true");
	                }
	                if (choice.value) {
	                    input.value = choice.value;
	                }
	                if (choice.title) {
	                    input.setAttribute("aria-label", choice.title);
	                }
	                if (defaultValues && choice.value) {
	                    if (defaultValues.indexOf(choice.value) >= 0) {
	                        input.checked = true;
	                    }
	                }
	                input.onchange = function () {
	                    _this.valueChanged();
	                };
	                this._toggleInputs.push(input);
	                var compoundInput = document.createElement("div");
	                compoundInput.style.display = "flex";
	                compoundInput.style.alignItems = "center";
	                utils.appendChild(compoundInput, input);
	                var label = new TextBlock();
	                label.setParent(this);
	                label.forElementId = input.id;
	                label.hostConfig = this.hostConfig;
	                label.text = choice.title ? choice.title : "Choice " + this._toggleInputs.length;
	                label.useMarkdown = shared.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;
	                label.wrap = this.wrap;
	                var labelElement = label.render();
	                this._labels.push(labelElement);
	                if (labelElement) {
	                    labelElement.id = utils.generateUniqueId();
	                    labelElement.style.display = "inline-block";
	                    labelElement.style.flex = "1 1 auto";
	                    labelElement.style.marginLeft = "6px";
	                    labelElement.style.verticalAlign = "middle";
	                    var spacerElement = document.createElement("div");
	                    spacerElement.style.width = "6px";
	                    utils.appendChild(compoundInput, spacerElement);
	                    utils.appendChild(compoundInput, labelElement);
	                }
	                utils.appendChild(element, compoundInput);
	            }
	            return element;
	        };
	        ChoiceSetInput.prototype.updateInputControlAriaLabelledBy = function () {
	            if ((this.isMultiSelect || this.style === "expanded") && this._toggleInputs && this._labels) {
	                var labelIds = this.getAllLabelIds();
	                for (var i = 0; i < this._toggleInputs.length; i++) {
	                    var joinedLabelIds = labelIds.join(" ");
	                    var label = this._labels[i];
	                    if (label && label.id) {
	                        joinedLabelIds += " " + label.id;
	                    }
	                    if (joinedLabelIds) {
	                        this._toggleInputs[i].setAttribute("aria-labelledby", joinedLabelIds);
	                    } else {
	                        this._toggleInputs[i].removeAttribute("aria-labelledby");
	                    }
	                }
	            } else {
	                _super.prototype.updateInputControlAriaLabelledBy.call(this);
	            }
	        };
	        ChoiceSetInput.prototype.internalRender = function () {
	            var _this = this;
	            this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();
	            if (this.isMultiSelect) {
	                // Render as a list of toggle inputs
	                return this.renderCompoundInput("ac-choiceSetInput-multiSelect", "checkbox", this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : undefined);
	            } else {
	                if (this.style === "expanded") {
	                    // Render as a series of radio buttons
	                    return this.renderCompoundInput("ac-choiceSetInput-expanded", "radio", this.defaultValue ? [this.defaultValue] : undefined);
	                } else {
	                    // Render as a combo box
	                    this._selectElement = document.createElement("select");
	                    this._selectElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-multichoiceInput", "ac-choiceSetInput-compact");
	                    this._selectElement.style.width = "100%";
	                    var option = document.createElement("option");
	                    option.selected = true;
	                    option.disabled = true;
	                    option.hidden = true;
	                    option.value = "";
	                    if (this.placeholder) {
	                        option.text = this.placeholder;
	                    }
	                    utils.appendChild(this._selectElement, option);
	                    for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {
	                        var choice = _a[_i];
	                        var option_1 = document.createElement("option");
	                        option_1.value = choice.value;
	                        option_1.text = choice.title;
	                        option_1.setAttribute("aria-label", choice.title);
	                        if (choice.value == this.defaultValue) {
	                            option_1.selected = true;
	                        }
	                        utils.appendChild(this._selectElement, option_1);
	                    }
	                    this._selectElement.onchange = function () {
	                        _this.internalApplyAriaCurrent();
	                        _this.valueChanged();
	                    };
	                    this.internalApplyAriaCurrent();
	                    return this._selectElement;
	                }
	            }
	        };
	        ChoiceSetInput.prototype.getJsonTypeName = function () {
	            return "Input.ChoiceSet";
	        };
	        ChoiceSetInput.prototype.focus = function () {
	            if (this._toggleInputs && (this.isMultiSelect || this.style === "expanded")) {
	                if (this._toggleInputs.length > 0) {
	                    this._toggleInputs[0].focus();
	                }
	            } else {
	                _super.prototype.focus.call(this);
	            }
	        };
	        ChoiceSetInput.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (this.choices.length == 0) {
	                context.addFailure(this, enums.ValidationEvent.CollectionCantBeEmpty, strings.Strings.errors.choiceSetMustHaveAtLeastOneChoice());
	            }
	            for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {
	                var choice = _a[_i];
	                if (!choice.title || !choice.value) {
	                    context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.choiceSetChoicesMustHaveTitleAndValue());
	                }
	            }
	        };
	        ChoiceSetInput.prototype.isSet = function () {
	            return this.value ? true : false;
	        };
	        Object.defineProperty(ChoiceSetInput.prototype, "value", {
	            get: function get() {
	                if (!this.isMultiSelect) {
	                    if (this.isCompact) {
	                        if (this._selectElement) {
	                            return this._selectElement.selectedIndex > 0 ? this._selectElement.value : undefined;
	                        }
	                        return undefined;
	                    } else {
	                        if (!this._toggleInputs || this._toggleInputs.length == 0) {
	                            return undefined;
	                        }
	                        for (var _i = 0, _a = this._toggleInputs; _i < _a.length; _i++) {
	                            var toggleInput = _a[_i];
	                            if (toggleInput.checked) {
	                                return toggleInput.value;
	                            }
	                        }
	                        return undefined;
	                    }
	                } else {
	                    if (!this._toggleInputs || this._toggleInputs.length == 0) {
	                        return undefined;
	                    }
	                    var result = "";
	                    for (var _b = 0, _c = this._toggleInputs; _b < _c.length; _b++) {
	                        var toggleInput = _c[_b];
	                        if (toggleInput.checked) {
	                            if (result != "") {
	                                result += this.hostConfig.choiceSetInputValueSeparator;
	                            }
	                            result += toggleInput.value;
	                        }
	                    }
	                    return result ? result : undefined;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ChoiceSetInput.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        ChoiceSetInput.choicesProperty = new serialization.SerializableObjectCollectionProperty(serialization.Versions.v1_0, "choices", Choice);
	        ChoiceSetInput.styleProperty = new serialization.ValueSetProperty(serialization.Versions.v1_0, "style", [{ value: "compact" }, { value: "expanded" }], "compact");
	        ChoiceSetInput.isMultiSelectProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "isMultiSelect", false);
	        ChoiceSetInput.placeholderProperty = new serialization.StringProperty(serialization.Versions.v1_0, "placeholder");
	        ChoiceSetInput.wrapProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "wrap", false);
	        //#endregion
	        ChoiceSetInput.uniqueCategoryCounter = 0;
	        __decorate([serialization.property(ChoiceSetInput.valueProperty)], ChoiceSetInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(ChoiceSetInput.styleProperty)], ChoiceSetInput.prototype, "style", void 0);
	        __decorate([serialization.property(ChoiceSetInput.isMultiSelectProperty)], ChoiceSetInput.prototype, "isMultiSelect", void 0);
	        __decorate([serialization.property(ChoiceSetInput.placeholderProperty)], ChoiceSetInput.prototype, "placeholder", void 0);
	        __decorate([serialization.property(ChoiceSetInput.wrapProperty)], ChoiceSetInput.prototype, "wrap", void 0);
	        __decorate([serialization.property(ChoiceSetInput.choicesProperty)], ChoiceSetInput.prototype, "choices", void 0);
	        return ChoiceSetInput;
	    }(Input);
	    exports.ChoiceSetInput = ChoiceSetInput;
	    var NumberInput = /** @class */function (_super) {
	        __extends(NumberInput, _super);
	        function NumberInput() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        NumberInput.prototype.internalRender = function () {
	            var _this = this;
	            this._numberInputElement = document.createElement("input");
	            this._numberInputElement.setAttribute("type", "number");
	            if (this.min !== undefined) {
	                this._numberInputElement.setAttribute("min", this.min.toString());
	            }
	            if (this.max !== undefined) {
	                this._numberInputElement.setAttribute("max", this.max.toString());
	            }
	            this._numberInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-numberInput");
	            this._numberInputElement.style.width = "100%";
	            this._numberInputElement.tabIndex = 0;
	            if (this.defaultValue !== undefined) {
	                this._numberInputElement.valueAsNumber = this.defaultValue;
	            }
	            if (this.placeholder) {
	                this._numberInputElement.placeholder = this.placeholder;
	                this._numberInputElement.setAttribute("aria-label", this.placeholder);
	            }
	            this._numberInputElement.oninput = function () {
	                _this.valueChanged();
	            };
	            return this._numberInputElement;
	        };
	        NumberInput.prototype.getJsonTypeName = function () {
	            return "Input.Number";
	        };
	        NumberInput.prototype.isSet = function () {
	            return this.value !== undefined && !isNaN(this.value);
	        };
	        NumberInput.prototype.isValid = function () {
	            if (this.value === undefined) {
	                return !this.isRequired;
	            }
	            var result = true;
	            if (this.min !== undefined) {
	                result = result && this.value >= this.min;
	            }
	            if (this.max !== undefined) {
	                result = result && this.value <= this.max;
	            }
	            return result;
	        };
	        Object.defineProperty(NumberInput.prototype, "value", {
	            get: function get() {
	                return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        NumberInput.valueProperty = new serialization.NumProperty(serialization.Versions.v1_0, "value");
	        NumberInput.placeholderProperty = new serialization.StringProperty(serialization.Versions.v1_0, "placeholder");
	        NumberInput.minProperty = new serialization.NumProperty(serialization.Versions.v1_0, "min");
	        NumberInput.maxProperty = new serialization.NumProperty(serialization.Versions.v1_0, "max");
	        __decorate([serialization.property(NumberInput.valueProperty)], NumberInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(NumberInput.minProperty)], NumberInput.prototype, "min", void 0);
	        __decorate([serialization.property(NumberInput.maxProperty)], NumberInput.prototype, "max", void 0);
	        __decorate([serialization.property(NumberInput.placeholderProperty)], NumberInput.prototype, "placeholder", void 0);
	        return NumberInput;
	    }(Input);
	    exports.NumberInput = NumberInput;
	    var DateInput = /** @class */function (_super) {
	        __extends(DateInput, _super);
	        function DateInput() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        DateInput.prototype.internalRender = function () {
	            var _this = this;
	            this._dateInputElement = document.createElement("input");
	            this._dateInputElement.setAttribute("type", "date");
	            if (this.min) {
	                this._dateInputElement.setAttribute("min", this.min);
	            }
	            if (this.max) {
	                this._dateInputElement.setAttribute("max", this.max);
	            }
	            if (this.placeholder) {
	                this._dateInputElement.placeholder = this.placeholder;
	                this._dateInputElement.setAttribute("aria-label", this.placeholder);
	            }
	            this._dateInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-dateInput");
	            this._dateInputElement.style.width = "100%";
	            this._dateInputElement.oninput = function () {
	                _this.valueChanged();
	            };
	            if (this.defaultValue) {
	                this._dateInputElement.value = this.defaultValue;
	            }
	            return this._dateInputElement;
	        };
	        DateInput.prototype.getJsonTypeName = function () {
	            return "Input.Date";
	        };
	        DateInput.prototype.isSet = function () {
	            return this.value ? true : false;
	        };
	        DateInput.prototype.isValid = function () {
	            if (!this.value) {
	                return !this.isRequired;
	            }
	            var valueAsDate = new Date(this.value);
	            var result = true;
	            if (this.min) {
	                var minDate = new Date(this.min);
	                result = result && valueAsDate >= minDate;
	            }
	            if (this.max) {
	                var maxDate = new Date(this.max);
	                result = result && valueAsDate <= maxDate;
	            }
	            return result;
	        };
	        Object.defineProperty(DateInput.prototype, "value", {
	            get: function get() {
	                return this._dateInputElement ? this._dateInputElement.value : undefined;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        DateInput.valueProperty = new serialization.StringProperty(serialization.Versions.v1_0, "value");
	        DateInput.placeholderProperty = new serialization.StringProperty(serialization.Versions.v1_0, "placeholder");
	        DateInput.minProperty = new serialization.StringProperty(serialization.Versions.v1_0, "min");
	        DateInput.maxProperty = new serialization.StringProperty(serialization.Versions.v1_0, "max");
	        __decorate([serialization.property(DateInput.valueProperty)], DateInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(DateInput.minProperty)], DateInput.prototype, "min", void 0);
	        __decorate([serialization.property(DateInput.maxProperty)], DateInput.prototype, "max", void 0);
	        __decorate([serialization.property(DateInput.placeholderProperty)], DateInput.prototype, "placeholder", void 0);
	        return DateInput;
	    }(Input);
	    exports.DateInput = DateInput;
	    var TimeProperty = /** @class */function (_super) {
	        __extends(TimeProperty, _super);
	        function TimeProperty(targetVersion, name) {
	            var _this = _super.call(this, targetVersion, name, function (sender, property, source, context) {
	                var value = source[property.name];
	                if (typeof value === "string" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {
	                    return value;
	                }
	                return undefined;
	            }, function (sender, property, target, value, context) {
	                context.serializeValue(target, property.name, value);
	            }) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            return _this;
	        }
	        return TimeProperty;
	    }(serialization.CustomProperty);
	    exports.TimeProperty = TimeProperty;
	    var TimeInput = /** @class */function (_super) {
	        __extends(TimeInput, _super);
	        function TimeInput() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        TimeInput.convertTimeStringToDate = function (timeString) {
	            return new Date("1973-09-04T" + timeString + ":00Z");
	        };
	        TimeInput.prototype.internalRender = function () {
	            var _this = this;
	            this._timeInputElement = document.createElement("input");
	            this._timeInputElement.setAttribute("type", "time");
	            this._timeInputElement.setAttribute("min", this.min);
	            this._timeInputElement.setAttribute("max", this.max);
	            this._timeInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-timeInput");
	            this._timeInputElement.style.width = "100%";
	            this._timeInputElement.oninput = function () {
	                _this.valueChanged();
	            };
	            if (this.placeholder) {
	                this._timeInputElement.placeholder = this.placeholder;
	                this._timeInputElement.setAttribute("aria-label", this.placeholder);
	            }
	            if (this.defaultValue) {
	                this._timeInputElement.value = this.defaultValue;
	            }
	            return this._timeInputElement;
	        };
	        TimeInput.prototype.getJsonTypeName = function () {
	            return "Input.Time";
	        };
	        TimeInput.prototype.isSet = function () {
	            return this.value ? true : false;
	        };
	        TimeInput.prototype.isValid = function () {
	            if (!this.value) {
	                return !this.isRequired;
	            }
	            var valueAsDate = TimeInput.convertTimeStringToDate(this.value);
	            var result = true;
	            if (this.min) {
	                var minDate = TimeInput.convertTimeStringToDate(this.min);
	                result = result && valueAsDate >= minDate;
	            }
	            if (this.max) {
	                var maxDate = TimeInput.convertTimeStringToDate(this.max);
	                result = result && valueAsDate <= maxDate;
	            }
	            return result;
	        };
	        Object.defineProperty(TimeInput.prototype, "value", {
	            get: function get() {
	                return this._timeInputElement ? this._timeInputElement.value : undefined;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        TimeInput.valueProperty = new TimeProperty(serialization.Versions.v1_0, "value");
	        TimeInput.placeholderProperty = new serialization.StringProperty(serialization.Versions.v1_0, "placeholder");
	        TimeInput.minProperty = new TimeProperty(serialization.Versions.v1_0, "min");
	        TimeInput.maxProperty = new TimeProperty(serialization.Versions.v1_0, "max");
	        __decorate([serialization.property(TimeInput.valueProperty)], TimeInput.prototype, "defaultValue", void 0);
	        __decorate([serialization.property(TimeInput.minProperty)], TimeInput.prototype, "min", void 0);
	        __decorate([serialization.property(TimeInput.maxProperty)], TimeInput.prototype, "max", void 0);
	        __decorate([serialization.property(TimeInput.placeholderProperty)], TimeInput.prototype, "placeholder", void 0);
	        return TimeInput;
	    }(Input);
	    exports.TimeInput = TimeInput;
	    var ActionButton = /** @class */function () {
	        function ActionButton(action, parentContainerStyle) {
	            this._state = 0 /* Normal */;
	            this.action = action;
	            this._parentContainerStyle = parentContainerStyle;
	        }
	        ActionButton.prototype.updateCssStyle = function () {
	            var _a, _b;
	            if (this.action.parent && this.action.renderedElement) {
	                var hostConfig = this.action.parent.hostConfig;
	                this.action.renderedElement.className = hostConfig.makeCssClassName("ac-pushButton");
	                if (this._parentContainerStyle) {
	                    this.action.renderedElement.classList.add("style-" + this._parentContainerStyle);
	                }
	                this.action.updateActionButtonCssStyle(this.action.renderedElement, this._state);
	                this.action.renderedElement.classList.remove(hostConfig.makeCssClassName("expanded"));
	                this.action.renderedElement.classList.remove(hostConfig.makeCssClassName("subdued"));
	                switch (this._state) {
	                    case 1 /* Expanded */:
	                        this.action.renderedElement.classList.add(hostConfig.makeCssClassName("expanded"));
	                        break;
	                    case 2 /* Subdued */:
	                        this.action.renderedElement.classList.add(hostConfig.makeCssClassName("subdued"));
	                        break;
	                }
	                if (this.action.style) {
	                    if (this.action.style === enums.ActionStyle.Positive) {
	                        (_a = this.action.renderedElement.classList).add.apply(_a, hostConfig.makeCssClassNames("primary", "style-positive"));
	                    } else {
	                        (_b = this.action.renderedElement.classList).add.apply(_b, hostConfig.makeCssClassNames("style-" + this.action.style.toLowerCase()));
	                    }
	                }
	            }
	        };
	        ActionButton.prototype.render = function () {
	            var _this = this;
	            this.action.render();
	            if (this.action.renderedElement) {
	                this.action.renderedElement.onclick = function (e) {
	                    e.preventDefault();
	                    e.cancelBubble = true;
	                    _this.click();
	                };
	                this.updateCssStyle();
	            }
	        };
	        ActionButton.prototype.click = function () {
	            if (this.onClick !== undefined) {
	                this.onClick(this);
	            }
	        };
	        Object.defineProperty(ActionButton.prototype, "state", {
	            get: function get() {
	                return this._state;
	            },
	            set: function set(value) {
	                this._state = value;
	                this.updateCssStyle();
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ActionButton;
	    }();
	    var Action = /** @class */function (_super) {
	        __extends(Action, _super);
	        function Action() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.style = enums.ActionStyle.Default;
	            return _this;
	        }
	        Action.prototype.getDefaultSerializationContext = function () {
	            return new SerializationContext();
	        };
	        Action.prototype.addCssClasses = function (element) {
	            // Do nothing in base implementation
	        };
	        Action.prototype.internalGetReferencedInputs = function () {
	            return {};
	        };
	        Action.prototype.internalPrepareForExecution = function (inputs) {
	            // Do nothing in base implementation
	        };
	        Action.prototype.internalValidateInputs = function (referencedInputs) {
	            var result = [];
	            if (referencedInputs) {
	                for (var _i = 0, _a = Object.keys(referencedInputs); _i < _a.length; _i++) {
	                    var key = _a[_i];
	                    var input = referencedInputs[key];
	                    if (!input.validateValue()) {
	                        result.push(input);
	                    }
	                }
	            }
	            return result;
	        };
	        Action.prototype.shouldSerialize = function (context) {
	            return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;
	        };
	        Action.prototype.raiseExecuteActionEvent = function () {
	            if (this.onExecute) {
	                this.onExecute(this);
	            }
	            raiseExecuteActionEvent(this);
	        };
	        Action.prototype.getHref = function () {
	            return "";
	        };
	        Action.prototype.getAriaRole = function () {
	            return "button";
	        };
	        Action.prototype.updateActionButtonCssStyle = function (actionButtonElement, buttonState) {
	            // Do nothing in base implementation
	        };
	        Action.prototype.parse = function (source, context) {
	            return _super.prototype.parse.call(this, source, context ? context : new SerializationContext());
	        };
	        Action.prototype.render = function (baseCssClass) {
	            // Cache hostConfig for perf
	            var hostConfig = this.hostConfig;
	            var buttonElement = document.createElement("button");
	            this.addCssClasses(buttonElement);
	            if (this.title) {
	                buttonElement.setAttribute("aria-label", this.title);
	            }
	            buttonElement.type = "button";
	            buttonElement.style.display = "flex";
	            buttonElement.style.alignItems = "center";
	            buttonElement.style.justifyContent = "center";
	            buttonElement.setAttribute("role", this.getAriaRole());
	            var titleElement = document.createElement("div");
	            titleElement.style.overflow = "hidden";
	            titleElement.style.textOverflow = "ellipsis";
	            if (!(hostConfig.actions.iconPlacement == enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {
	                titleElement.style.whiteSpace = "nowrap";
	            }
	            if (this.title) {
	                titleElement.innerText = this.title;
	            }
	            if (!this.iconUrl) {
	                buttonElement.classList.add("noIcon");
	                buttonElement.appendChild(titleElement);
	            } else {
	                var iconElement = document.createElement("img");
	                iconElement.src = this.iconUrl;
	                iconElement.style.width = hostConfig.actions.iconSize + "px";
	                iconElement.style.height = hostConfig.actions.iconSize + "px";
	                iconElement.style.flex = "0 0 auto";
	                if (hostConfig.actions.iconPlacement == enums.ActionIconPlacement.AboveTitle) {
	                    buttonElement.classList.add("iconAbove");
	                    buttonElement.style.flexDirection = "column";
	                    if (this.title) {
	                        iconElement.style.marginBottom = "6px";
	                    }
	                } else {
	                    buttonElement.classList.add("iconLeft");
	                    iconElement.style.maxHeight = "100%";
	                    if (this.title) {
	                        iconElement.style.marginRight = "6px";
	                    }
	                }
	                buttonElement.appendChild(iconElement);
	                buttonElement.appendChild(titleElement);
	            }
	            this._renderedElement = buttonElement;
	        };
	        Action.prototype.execute = function () {
	            if (this._actionCollection) {
	                this._actionCollection.actionExecuted(this);
	            }
	            this.raiseExecuteActionEvent();
	        };
	        Action.prototype.prepareForExecution = function () {
	            var referencedInputs = this.getReferencedInputs();
	            var invalidInputs = this.internalValidateInputs(referencedInputs);
	            if (invalidInputs.length > 0) {
	                invalidInputs[0].focus();
	                return false;
	            }
	            this.internalPrepareForExecution(referencedInputs);
	            return true;
	        };
	        Action.prototype.remove = function () {
	            if (this._actionCollection) {
	                return this._actionCollection.removeAction(this);
	            }
	            return false;
	        };
	        Action.prototype.getAllInputs = function (processActions) {
	            return [];
	        };
	        Action.prototype.getResourceInformation = function () {
	            return this.iconUrl ? [{ url: this.iconUrl, mimeType: "image" }] : [];
	        };
	        Action.prototype.getActionById = function (id) {
	            return this.id === id ? this : undefined;
	        };
	        Action.prototype.getReferencedInputs = function () {
	            return this.internalGetReferencedInputs();
	        };
	        /**
	         * Validates the inputs associated with this action.
	         *
	         * @returns A list of inputs that failed validation, or an empty array if no input failed validation.
	         */
	        Action.prototype.validateInputs = function () {
	            return this.internalValidateInputs(this.getReferencedInputs());
	        };
	        Object.defineProperty(Action.prototype, "isPrimary", {
	            get: function get() {
	                return this.style == enums.ActionStyle.Positive;
	            },
	            set: function set(value) {
	                if (value) {
	                    this.style = enums.ActionStyle.Positive;
	                } else {
	                    if (this.style == enums.ActionStyle.Positive) {
	                        this.style = enums.ActionStyle.Default;
	                    }
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Action.prototype, "hostConfig", {
	            get: function get() {
	                return this.parent ? this.parent.hostConfig : hostConfig.defaultHostConfig;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Action.prototype, "parent", {
	            get: function get() {
	                return this._parent;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Action.titleProperty = new serialization.StringProperty(serialization.Versions.v1_0, "title");
	        Action.iconUrlProperty = new serialization.StringProperty(serialization.Versions.v1_1, "iconUrl");
	        Action.styleProperty = new serialization.ValueSetProperty(serialization.Versions.v1_2, "style", [{ value: enums.ActionStyle.Default }, { value: enums.ActionStyle.Positive }, { value: enums.ActionStyle.Destructive }], enums.ActionStyle.Default);
	        __decorate([serialization.property(Action.titleProperty)], Action.prototype, "title", void 0);
	        __decorate([serialization.property(Action.iconUrlProperty)], Action.prototype, "iconUrl", void 0);
	        __decorate([serialization.property(Action.styleProperty)], Action.prototype, "style", void 0);
	        return Action;
	    }(cardObject.CardObject);
	    exports.Action = Action;
	    var SubmitAction = /** @class */function (_super) {
	        __extends(SubmitAction, _super);
	        function SubmitAction() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._isPrepared = false;
	            return _this;
	        }
	        SubmitAction.prototype.internalGetReferencedInputs = function () {
	            var result = {};
	            if (this.associatedInputs !== "none") {
	                var current = this.parent;
	                var inputs = [];
	                while (current) {
	                    inputs = inputs.concat(current.getAllInputs(false));
	                    current = current.parent;
	                }
	                for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
	                    var input = inputs_1[_i];
	                    if (input.id) {
	                        result[input.id] = input;
	                    }
	                }
	            }
	            return result;
	        };
	        SubmitAction.prototype.internalPrepareForExecution = function (inputs) {
	            if (this._originalData) {
	                this._processedData = JSON.parse(JSON.stringify(this._originalData));
	            } else {
	                this._processedData = {};
	            }
	            if (this._processedData && inputs) {
	                for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {
	                    var key = _a[_i];
	                    var input = inputs[key];
	                    if (input.id) {
	                        this._processedData[input.id] = typeof input.value === "string" ? input.value : input.value.toString();
	                    }
	                }
	            }
	            this._isPrepared = true;
	        };
	        SubmitAction.prototype.getJsonTypeName = function () {
	            return SubmitAction.JsonTypeName;
	        };
	        Object.defineProperty(SubmitAction.prototype, "data", {
	            get: function get() {
	                return this._isPrepared ? this._processedData : this._originalData;
	            },
	            set: function set(value) {
	                this._originalData = value;
	                this._isPrepared = false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        SubmitAction.dataProperty = new serialization.PropertyDefinition(serialization.Versions.v1_0, "data");
	        SubmitAction.associatedInputsProperty = new serialization.CustomProperty(serialization.Versions.v1_3, "associatedInputs", function (sender, property, source, context) {
	            var value = source[property.name];
	            if (value !== undefined && typeof value === "string") {
	                return value === "none" ? "none" : "auto";
	            }
	            return undefined;
	        }, function (sender, property, target, value, context) {
	            context.serializeValue(target, property.name, value);
	        });
	        //#endregion
	        // Note the "weird" way this field is declared is to work around a breaking
	        // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        SubmitAction.JsonTypeName = "Action.Submit";
	        __decorate([serialization.property(SubmitAction.dataProperty)], SubmitAction.prototype, "_originalData", void 0);
	        __decorate([serialization.property(SubmitAction.associatedInputsProperty)], SubmitAction.prototype, "associatedInputs", void 0);
	        return SubmitAction;
	    }(Action);
	    exports.SubmitAction = SubmitAction;
	    var OpenUrlAction = /** @class */function (_super) {
	        __extends(OpenUrlAction, _super);
	        function OpenUrlAction() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        OpenUrlAction.prototype.getJsonTypeName = function () {
	            return OpenUrlAction.JsonTypeName;
	        };
	        OpenUrlAction.prototype.getAriaRole = function () {
	            return "link";
	        };
	        OpenUrlAction.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (!this.url) {
	                context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.propertyMustBeSet("url"));
	            }
	        };
	        OpenUrlAction.prototype.getHref = function () {
	            return this.url;
	        };
	        //#region Schema
	        OpenUrlAction.urlProperty = new serialization.StringProperty(serialization.Versions.v1_0, "url");
	        //#endregion
	        // Note the "weird" way this field is declared is to work around a breaking
	        // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        OpenUrlAction.JsonTypeName = "Action.OpenUrl";
	        __decorate([serialization.property(OpenUrlAction.urlProperty)], OpenUrlAction.prototype, "url", void 0);
	        return OpenUrlAction;
	    }(Action);
	    exports.OpenUrlAction = OpenUrlAction;
	    var ToggleVisibilityAction = /** @class */function (_super) {
	        __extends(ToggleVisibilityAction, _super);
	        function ToggleVisibilityAction() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.targetElements = {};
	            return _this;
	        }
	        ToggleVisibilityAction.prototype.updateAriaControlsAttribute = function () {
	            // apply aria labels to make it clear which elements this action will toggle
	            if (this.targetElements) {
	                var elementIds = Object.keys(this.targetElements);
	                if (this._renderedElement) {
	                    if (elementIds.length > 0) {
	                        this._renderedElement.setAttribute("aria-controls", elementIds.join(" "));
	                    } else {
	                        this._renderedElement.removeAttribute("aria-controls");
	                    }
	                }
	            }
	        };
	        ToggleVisibilityAction.prototype.getJsonTypeName = function () {
	            return ToggleVisibilityAction.JsonTypeName;
	        };
	        ToggleVisibilityAction.prototype.render = function (baseCssClass) {
	            if (baseCssClass === void 0) {
	                baseCssClass = "ac-pushButton";
	            }
	            _super.prototype.render.call(this, baseCssClass);
	            this.updateAriaControlsAttribute();
	        };
	        ToggleVisibilityAction.prototype.execute = function () {
	            if (this.parent) {
	                for (var _i = 0, _a = Object.keys(this.targetElements); _i < _a.length; _i++) {
	                    var elementId = _a[_i];
	                    var targetElement = this.parent.getRootElement().getElementById(elementId);
	                    if (targetElement) {
	                        if (typeof this.targetElements[elementId] === "boolean") {
	                            targetElement.isVisible = this.targetElements[elementId];
	                        } else {
	                            targetElement.isVisible = !targetElement.isVisible;
	                        }
	                    }
	                }
	            }
	        };
	        ToggleVisibilityAction.prototype.addTargetElement = function (elementId, isVisible) {
	            if (isVisible === void 0) {
	                isVisible = undefined;
	            }
	            this.targetElements[elementId] = isVisible;
	            this.updateAriaControlsAttribute();
	        };
	        ToggleVisibilityAction.prototype.removeTargetElement = function (elementId) {
	            delete this.targetElements[elementId];
	            this.updateAriaControlsAttribute();
	        };
	        ToggleVisibilityAction.targetElementsProperty = new serialization.CustomProperty(serialization.Versions.v1_2, "targetElements", function (sender, property, source, context) {
	            var result = {};
	            if (Array.isArray(source[property.name])) {
	                for (var _i = 0, _a = source[property.name]; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    if (typeof item === "string") {
	                        result[item] = undefined;
	                    } else if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === "object") {
	                        var elementId = item["elementId"];
	                        if (typeof elementId === "string") {
	                            result[elementId] = utils.parseBool(item["isVisible"]);
	                        }
	                    }
	                }
	            }
	            return result;
	        }, function (sender, property, target, value, context) {
	            var targetElements = [];
	            for (var _i = 0, _a = Object.keys(value); _i < _a.length; _i++) {
	                var id = _a[_i];
	                if (typeof value[id] === "boolean") {
	                    targetElements.push({
	                        elementId: id,
	                        isVisible: value[id]
	                    });
	                } else {
	                    targetElements.push(id);
	                }
	            }
	            context.serializeArray(target, property.name, targetElements);
	        }, {}, function (sender) {
	            return {};
	        });
	        //#endregion
	        // Note the "weird" way this field is declared is to work around a breaking
	        // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        ToggleVisibilityAction.JsonTypeName = "Action.ToggleVisibility";
	        __decorate([serialization.property(ToggleVisibilityAction.targetElementsProperty)], ToggleVisibilityAction.prototype, "targetElements", void 0);
	        return ToggleVisibilityAction;
	    }(Action);
	    exports.ToggleVisibilityAction = ToggleVisibilityAction;
	    var StringWithSubstitutionProperty = /** @class */function (_super) {
	        __extends(StringWithSubstitutionProperty, _super);
	        function StringWithSubstitutionProperty(targetVersion, name) {
	            var _this = _super.call(this, targetVersion, name, undefined, function () {
	                return new shared.StringWithSubstitutions();
	            }) || this;
	            _this.targetVersion = targetVersion;
	            _this.name = name;
	            return _this;
	        }
	        StringWithSubstitutionProperty.prototype.parse = function (sender, source, context) {
	            var result = new shared.StringWithSubstitutions();
	            result.set(utils.parseString(source[this.name]));
	            return result;
	        };
	        StringWithSubstitutionProperty.prototype.toJSON = function (sender, target, value, context) {
	            context.serializeValue(target, this.name, value.getOriginal());
	        };
	        return StringWithSubstitutionProperty;
	    }(serialization.PropertyDefinition);
	    var HttpHeader = /** @class */function (_super) {
	        __extends(HttpHeader, _super);
	        //#endregion
	        function HttpHeader(name, value) {
	            if (name === void 0) {
	                name = "";
	            }
	            if (value === void 0) {
	                value = "";
	            }
	            var _this = _super.call(this) || this;
	            _this.name = name;
	            _this.value = value;
	            return _this;
	        }
	        HttpHeader.prototype.getSchemaKey = function () {
	            return "HttpHeader";
	        };
	        HttpHeader.prototype.getReferencedInputs = function (inputs, referencedInputs) {
	            this._value.getReferencedInputs(inputs, referencedInputs);
	        };
	        HttpHeader.prototype.prepareForExecution = function (inputs) {
	            this._value.substituteInputValues(inputs, shared.ContentTypes.applicationXWwwFormUrlencoded);
	        };
	        Object.defineProperty(HttpHeader.prototype, "value", {
	            get: function get() {
	                return this._value.get();
	            },
	            set: function set(newValue) {
	                this._value.set(newValue);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        HttpHeader.nameProperty = new serialization.StringProperty(serialization.Versions.v1_0, "name");
	        HttpHeader.valueProperty = new StringWithSubstitutionProperty(serialization.Versions.v1_0, "value");
	        __decorate([serialization.property(HttpHeader.nameProperty)], HttpHeader.prototype, "name", void 0);
	        __decorate([serialization.property(HttpHeader.valueProperty)], HttpHeader.prototype, "_value", void 0);
	        return HttpHeader;
	    }(serialization.SerializableObject);
	    exports.HttpHeader = HttpHeader;
	    var HttpAction = /** @class */function (_super) {
	        __extends(HttpAction, _super);
	        function HttpAction() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._ignoreInputValidation = false;
	            return _this;
	        }
	        HttpAction.prototype.internalGetReferencedInputs = function () {
	            var allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];
	            var result = {};
	            this._url.getReferencedInputs(allInputs, result);
	            for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {
	                var header = _a[_i];
	                header.getReferencedInputs(allInputs, result);
	            }
	            this._body.getReferencedInputs(allInputs, result);
	            return result;
	        };
	        HttpAction.prototype.internalPrepareForExecution = function (inputs) {
	            if (inputs) {
	                this._url.substituteInputValues(inputs, shared.ContentTypes.applicationXWwwFormUrlencoded);
	                var contentType = shared.ContentTypes.applicationJson;
	                for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {
	                    var header = _a[_i];
	                    header.prepareForExecution(inputs);
	                    if (header.name && header.name.toLowerCase() == "content-type") {
	                        contentType = header.value;
	                    }
	                }
	                this._body.substituteInputValues(inputs, contentType);
	            }
	        };
	        HttpAction.prototype.getJsonTypeName = function () {
	            return HttpAction.JsonTypeName;
	        };
	        HttpAction.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (!this.url) {
	                context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.propertyMustBeSet("url"));
	            }
	            if (this.headers.length > 0) {
	                for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {
	                    var header = _a[_i];
	                    if (!header.name) {
	                        context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.actionHttpHeadersMustHaveNameAndValue());
	                    }
	                }
	            }
	        };
	        Object.defineProperty(HttpAction.prototype, "ignoreInputValidation", {
	            get: function get() {
	                return this._ignoreInputValidation;
	            },
	            set: function set(value) {
	                this._ignoreInputValidation = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(HttpAction.prototype, "url", {
	            get: function get() {
	                return this._url.get();
	            },
	            set: function set(value) {
	                this._url.set(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(HttpAction.prototype, "body", {
	            get: function get() {
	                return this._body.get();
	            },
	            set: function set(value) {
	                this._body.set(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        HttpAction.urlProperty = new StringWithSubstitutionProperty(serialization.Versions.v1_0, "url");
	        HttpAction.bodyProperty = new StringWithSubstitutionProperty(serialization.Versions.v1_0, "body");
	        HttpAction.methodProperty = new serialization.StringProperty(serialization.Versions.v1_0, "method");
	        HttpAction.headersProperty = new serialization.SerializableObjectCollectionProperty(serialization.Versions.v1_0, "headers", HttpHeader);
	        HttpAction.ignoreInputValidationProperty = new serialization.BoolProperty(serialization.Versions.v1_3, "ignoreInputValidation", false);
	        //#endregion
	        // Note the "weird" way this field is declared is to work around a breaking
	        // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        HttpAction.JsonTypeName = "Action.Http";
	        __decorate([serialization.property(HttpAction.urlProperty)], HttpAction.prototype, "_url", void 0);
	        __decorate([serialization.property(HttpAction.bodyProperty)], HttpAction.prototype, "_body", void 0);
	        __decorate([serialization.property(HttpAction.methodProperty)], HttpAction.prototype, "method", void 0);
	        __decorate([serialization.property(HttpAction.headersProperty)], HttpAction.prototype, "headers", void 0);
	        __decorate([serialization.property(HttpAction.ignoreInputValidationProperty)], HttpAction.prototype, "_ignoreInputValidation", void 0);
	        return HttpAction;
	    }(Action);
	    exports.HttpAction = HttpAction;
	    var ShowCardAction = /** @class */function (_super) {
	        __extends(ShowCardAction, _super);
	        function ShowCardAction() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.card = new InlineAdaptiveCard();
	            return _this;
	        }
	        ShowCardAction.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            var jsonCard = source["card"];
	            if (jsonCard) {
	                this.card.parse(jsonCard, context);
	            } else {
	                context.logParseEvent(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.showCardMustHaveCard());
	            }
	        };
	        ShowCardAction.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            if (this.card) {
	                context.serializeValue(target, "card", this.card.toJSON(context));
	            }
	        };
	        ShowCardAction.prototype.addCssClasses = function (element) {
	            _super.prototype.addCssClasses.call(this, element);
	            if (this.parent) {
	                element.classList.add(this.parent.hostConfig.makeCssClassName("expandable"));
	            }
	        };
	        ShowCardAction.prototype.raiseExecuteActionEvent = function () {
	            if (this.hostConfig.actions.showCard.actionMode === enums.ShowCardActionMode.Popup) {
	                // Only raise the event in Popup mode.
	                _super.prototype.raiseExecuteActionEvent.call(this);
	            }
	        };
	        ShowCardAction.prototype.getJsonTypeName = function () {
	            return ShowCardAction.JsonTypeName;
	        };
	        ShowCardAction.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            this.card.internalValidateProperties(context);
	        };
	        ShowCardAction.prototype.updateActionButtonCssStyle = function (actionButtonElement, buttonState) {
	            if (buttonState === void 0) {
	                buttonState = 0 /* Normal */;
	            }
	            _super.prototype.updateActionButtonCssStyle.call(this, actionButtonElement);
	            if (this.parent) {
	                actionButtonElement.classList.add(this.parent.hostConfig.makeCssClassName("expandable"));
	                actionButtonElement.setAttribute("aria-expanded", (buttonState === 1 /* Expanded */).toString());
	            }
	        };
	        ShowCardAction.prototype.setParent = function (value) {
	            _super.prototype.setParent.call(this, value);
	            this.card.setParent(value);
	        };
	        ShowCardAction.prototype.getAllInputs = function (processActions) {
	            if (processActions === void 0) {
	                processActions = true;
	            }
	            return this.card.getAllInputs(processActions);
	        };
	        ShowCardAction.prototype.getResourceInformation = function () {
	            return _super.prototype.getResourceInformation.call(this).concat(this.card.getResourceInformation());
	        };
	        ShowCardAction.prototype.getActionById = function (id) {
	            var result = _super.prototype.getActionById.call(this, id);
	            if (!result) {
	                result = this.card.getActionById(id);
	            }
	            return result;
	        };
	        // Note the "weird" way this field is declared is to work around a breaking
	        // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE
	        ShowCardAction.JsonTypeName = "Action.ShowCard";
	        return ShowCardAction;
	    }(Action);
	    exports.ShowCardAction = ShowCardAction;
	    var ActionCollection = /** @class */function () {
	        function ActionCollection(owner) {
	            this._renderedActionCount = 0;
	            this.items = [];
	            this.buttons = [];
	            this._owner = owner;
	        }
	        ActionCollection.prototype.isActionAllowed = function (action) {
	            var forbiddenTypes = this._owner.getForbiddenActionTypes();
	            if (forbiddenTypes) {
	                for (var _i = 0, forbiddenTypes_1 = forbiddenTypes; _i < forbiddenTypes_1.length; _i++) {
	                    var forbiddenType = forbiddenTypes_1[_i];
	                    if (action.constructor === forbiddenType) {
	                        return false;
	                    }
	                }
	            }
	            return true;
	        };
	        ActionCollection.prototype.refreshContainer = function () {
	            this._actionCardContainer.innerHTML = "";
	            if (!this._actionCard) {
	                this._actionCardContainer.style.marginTop = "0px";
	                return;
	            }
	            this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + "px" : "0px";
	            var padding = this._owner.getEffectivePadding();
	            this._owner.getImmediateSurroundingPadding(padding);
	            var physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);
	            if (this._actionCard) {
	                this._actionCard.style.paddingLeft = physicalPadding.left + "px";
	                this._actionCard.style.paddingRight = physicalPadding.right + "px";
	                this._actionCard.style.marginLeft = "-" + physicalPadding.left + "px";
	                this._actionCard.style.marginRight = "-" + physicalPadding.right + "px";
	                if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {
	                    this._actionCard.style.paddingBottom = physicalPadding.bottom + "px";
	                    this._actionCard.style.marginBottom = "-" + physicalPadding.bottom + "px";
	                }
	                utils.appendChild(this._actionCardContainer, this._actionCard);
	            }
	        };
	        ActionCollection.prototype.layoutChanged = function () {
	            this._owner.getRootElement().updateLayout();
	        };
	        ActionCollection.prototype.showActionCard = function (action, suppressStyle, raiseEvent) {
	            if (suppressStyle === void 0) {
	                suppressStyle = false;
	            }
	            if (raiseEvent === void 0) {
	                raiseEvent = true;
	            }
	            action.card.suppressStyle = suppressStyle;
	            // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise
	            var renderedCard = action.card.renderedElement && !this._owner.isDesignMode() ? action.card.renderedElement : action.card.render();
	            this._actionCard = renderedCard;
	            this._expandedAction = action;
	            this.refreshContainer();
	            if (raiseEvent) {
	                this.layoutChanged();
	                raiseInlineCardExpandedEvent(action, true);
	            }
	        };
	        ActionCollection.prototype.collapseExpandedAction = function () {
	            for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {
	                var button = _a[_i];
	                button.state = 0 /* Normal */;
	            }
	            var previouslyExpandedAction = this._expandedAction;
	            this._expandedAction = undefined;
	            this._actionCard = undefined;
	            this.refreshContainer();
	            if (previouslyExpandedAction) {
	                this.layoutChanged();
	                raiseInlineCardExpandedEvent(previouslyExpandedAction, false);
	            }
	        };
	        ActionCollection.prototype.expandShowCardAction = function (action, raiseEvent) {
	            for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {
	                var button = _a[_i];
	                if (button.action !== action) {
	                    button.state = 2 /* Subdued */;
	                } else {
	                    button.state = 1 /* Expanded */;
	                }
	            }
	            this.showActionCard(action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), raiseEvent);
	        };
	        ActionCollection.prototype.getParentContainer = function () {
	            if (this._owner instanceof Container) {
	                return this._owner;
	            } else {
	                return this._owner.getParentContainer();
	            }
	        };
	        ActionCollection.prototype.findActionButton = function (action) {
	            for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {
	                var actionButton = _a[_i];
	                if (actionButton.action == action) {
	                    return actionButton;
	                }
	            }
	            return undefined;
	        };
	        ActionCollection.prototype.actionExecuted = function (action) {
	            if (!(action instanceof ShowCardAction)) {
	                this.collapseExpandedAction();
	            } else {
	                if (action === this._expandedAction) {
	                    this.collapseExpandedAction();
	                } else {
	                    this.expandShowCardAction(action, true);
	                }
	            }
	        };
	        ActionCollection.prototype.parse = function (source, context) {
	            this.clear();
	            if (Array.isArray(source)) {
	                for (var _i = 0, source_1 = source; _i < source_1.length; _i++) {
	                    var jsonAction = source_1[_i];
	                    var action = context.parseAction(this._owner, jsonAction, [], !this._owner.isDesignMode());
	                    if (action) {
	                        this.addAction(action);
	                    }
	                }
	            }
	        };
	        ActionCollection.prototype.toJSON = function (target, propertyName, context) {
	            context.serializeArray(target, propertyName, this.items);
	        };
	        ActionCollection.prototype.getActionById = function (id) {
	            var result = undefined;
	            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
	                var item = _a[_i];
	                result = item.getActionById(id);
	                if (result) {
	                    break;
	                }
	            }
	            return result;
	        };
	        ActionCollection.prototype.validateProperties = function (context) {
	            if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {
	                context.addFailure(this._owner, enums.ValidationEvent.TooManyActions, strings.Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions));
	            }
	            if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {
	                context.addFailure(this._owner, enums.ValidationEvent.InteractivityNotAllowed, strings.Strings.errors.interactivityNotAllowed());
	            }
	            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
	                var item = _a[_i];
	                if (!this.isActionAllowed(item)) {
	                    context.addFailure(this._owner, enums.ValidationEvent.ActionTypeNotAllowed, strings.Strings.errors.actionTypeNotAllowed(item.getJsonTypeName()));
	                }
	                item.internalValidateProperties(context);
	            }
	        };
	        ActionCollection.prototype.render = function (orientation, isDesignMode) {
	            // Cache hostConfig for better perf
	            var hostConfig = this._owner.hostConfig;
	            if (!hostConfig.supportsInteractivity) {
	                return undefined;
	            }
	            var element = document.createElement("div");
	            var maxActions = hostConfig.actions.maxActions ? Math.min(hostConfig.actions.maxActions, this.items.length) : this.items.length;
	            this._actionCardContainer = document.createElement("div");
	            this._renderedActionCount = 0;
	            if (hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && this.isActionAllowed(this.items[0])) {
	                this.showActionCard(this.items[0], true);
	                this._renderedActionCount = 1;
	            } else {
	                var buttonStrip = document.createElement("div");
	                buttonStrip.className = hostConfig.makeCssClassName("ac-actionSet");
	                buttonStrip.style.display = "flex";
	                buttonStrip.setAttribute("role", "menubar");
	                if (orientation == enums.Orientation.Horizontal) {
	                    buttonStrip.style.flexDirection = "row";
	                    if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != enums.ActionAlignment.Stretch) {
	                        switch (this._owner.horizontalAlignment) {
	                            case enums.HorizontalAlignment.Center:
	                                buttonStrip.style.justifyContent = "center";
	                                break;
	                            case enums.HorizontalAlignment.Right:
	                                buttonStrip.style.justifyContent = "flex-end";
	                                break;
	                            default:
	                                buttonStrip.style.justifyContent = "flex-start";
	                                break;
	                        }
	                    } else {
	                        switch (hostConfig.actions.actionAlignment) {
	                            case enums.ActionAlignment.Center:
	                                buttonStrip.style.justifyContent = "center";
	                                break;
	                            case enums.ActionAlignment.Right:
	                                buttonStrip.style.justifyContent = "flex-end";
	                                break;
	                            default:
	                                buttonStrip.style.justifyContent = "flex-start";
	                                break;
	                        }
	                    }
	                } else {
	                    buttonStrip.style.flexDirection = "column";
	                    if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != enums.ActionAlignment.Stretch) {
	                        switch (this._owner.horizontalAlignment) {
	                            case enums.HorizontalAlignment.Center:
	                                buttonStrip.style.alignItems = "center";
	                                break;
	                            case enums.HorizontalAlignment.Right:
	                                buttonStrip.style.alignItems = "flex-end";
	                                break;
	                            default:
	                                buttonStrip.style.alignItems = "flex-start";
	                                break;
	                        }
	                    } else {
	                        switch (hostConfig.actions.actionAlignment) {
	                            case enums.ActionAlignment.Center:
	                                buttonStrip.style.alignItems = "center";
	                                break;
	                            case enums.ActionAlignment.Right:
	                                buttonStrip.style.alignItems = "flex-end";
	                                break;
	                            case enums.ActionAlignment.Stretch:
	                                buttonStrip.style.alignItems = "stretch";
	                                break;
	                            default:
	                                buttonStrip.style.alignItems = "flex-start";
	                                break;
	                        }
	                    }
	                }
	                var parentContainer = this.getParentContainer();
	                if (parentContainer) {
	                    var parentContainerStyle = parentContainer.getEffectiveStyle();
	                    var allowedActions = this.items.filter(this.isActionAllowed.bind(this));
	                    for (var i = 0; i < allowedActions.length; i++) {
	                        var actionButton = this.findActionButton(allowedActions[i]);
	                        if (!actionButton) {
	                            actionButton = new ActionButton(allowedActions[i], parentContainerStyle);
	                            actionButton.onClick = function (ab) {
	                                ab.action.execute();
	                            };
	                            this.buttons.push(actionButton);
	                        }
	                        actionButton.render();
	                        if (actionButton.action.renderedElement) {
	                            actionButton.action.renderedElement.setAttribute("aria-posinset", (i + 1).toString());
	                            actionButton.action.renderedElement.setAttribute("aria-setsize", allowedActions.length.toString());
	                            actionButton.action.renderedElement.setAttribute("role", "menuitem");
	                            if (hostConfig.actions.actionsOrientation == enums.Orientation.Horizontal && hostConfig.actions.actionAlignment == enums.ActionAlignment.Stretch) {
	                                actionButton.action.renderedElement.style.flex = "0 1 100%";
	                            } else {
	                                actionButton.action.renderedElement.style.flex = "0 1 auto";
	                            }
	                            buttonStrip.appendChild(actionButton.action.renderedElement);
	                            this._renderedActionCount++;
	                            if (this._renderedActionCount >= hostConfig.actions.maxActions || i == this.items.length - 1) {
	                                break;
	                            } else if (hostConfig.actions.buttonSpacing > 0) {
	                                var spacer = document.createElement("div");
	                                if (orientation === enums.Orientation.Horizontal) {
	                                    spacer.style.flex = "0 0 auto";
	                                    spacer.style.width = hostConfig.actions.buttonSpacing + "px";
	                                } else {
	                                    spacer.style.height = hostConfig.actions.buttonSpacing + "px";
	                                }
	                                utils.appendChild(buttonStrip, spacer);
	                            }
	                        }
	                    }
	                }
	                var buttonStripContainer = document.createElement("div");
	                buttonStripContainer.style.overflow = "hidden";
	                buttonStripContainer.appendChild(buttonStrip);
	                utils.appendChild(element, buttonStripContainer);
	            }
	            utils.appendChild(element, this._actionCardContainer);
	            for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {
	                var button = _a[_i];
	                if (button.state == 1 /* Expanded */) {
	                        this.expandShowCardAction(button.action, false);
	                        break;
	                    }
	            }
	            return this._renderedActionCount > 0 ? element : undefined;
	        };
	        ActionCollection.prototype.addAction = function (action) {
	            if (!action) {
	                throw new Error("The action parameter cannot be null.");
	            }
	            if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {
	                this.items.push(action);
	                if (!action.parent) {
	                    action.setParent(this._owner);
	                }
	                action["_actionCollection"] = this;
	            } else {
	                throw new Error(strings.Strings.errors.actionAlreadyParented());
	            }
	        };
	        ActionCollection.prototype.removeAction = function (action) {
	            if (this.expandedAction && this._expandedAction == action) {
	                this.collapseExpandedAction();
	            }
	            var actionIndex = this.items.indexOf(action);
	            if (actionIndex >= 0) {
	                this.items.splice(actionIndex, 1);
	                action.setParent(undefined);
	                action["_actionCollection"] = undefined;
	                for (var i = 0; i < this.buttons.length; i++) {
	                    if (this.buttons[i].action == action) {
	                        this.buttons.splice(i, 1);
	                        break;
	                    }
	                }
	                return true;
	            }
	            return false;
	        };
	        ActionCollection.prototype.clear = function () {
	            this.items = [];
	            this.buttons = [];
	            this._expandedAction = undefined;
	            this._renderedActionCount = 0;
	        };
	        ActionCollection.prototype.getAllInputs = function (processActions) {
	            if (processActions === void 0) {
	                processActions = true;
	            }
	            var result = [];
	            if (processActions) {
	                for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
	                    var action = _a[_i];
	                    result = result.concat(action.getAllInputs());
	                }
	            }
	            return result;
	        };
	        ActionCollection.prototype.getResourceInformation = function () {
	            var result = [];
	            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
	                var action = _a[_i];
	                result = result.concat(action.getResourceInformation());
	            }
	            return result;
	        };
	        Object.defineProperty(ActionCollection.prototype, "renderedActionCount", {
	            get: function get() {
	                return this._renderedActionCount;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(ActionCollection.prototype, "expandedAction", {
	            get: function get() {
	                return this._expandedAction;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ActionCollection;
	    }();
	    var ActionSet = /** @class */function (_super) {
	        __extends(ActionSet, _super);
	        function ActionSet() {
	            var _this = _super.call(this) || this;
	            _this._actionCollection = new ActionCollection(_this);
	            return _this;
	        }
	        ActionSet.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            this._actionCollection.parse(source["actions"], context);
	        };
	        ActionSet.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            this._actionCollection.toJSON(target, "actions", context);
	        };
	        ActionSet.prototype.internalRender = function () {
	            return this._actionCollection.render(this.orientation !== undefined ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());
	        };
	        ActionSet.prototype.isBleedingAtBottom = function () {
	            if (this._actionCollection.renderedActionCount == 0) {
	                return _super.prototype.isBleedingAtBottom.call(this);
	            } else {
	                if (this._actionCollection.items.length == 1) {
	                    return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;
	                } else {
	                    return this._actionCollection.expandedAction !== undefined;
	                }
	            }
	        };
	        ActionSet.prototype.getJsonTypeName = function () {
	            return "ActionSet";
	        };
	        ActionSet.prototype.getActionCount = function () {
	            return this._actionCollection.items.length;
	        };
	        ActionSet.prototype.getActionAt = function (index) {
	            if (index >= 0 && index < this.getActionCount()) {
	                return this._actionCollection.items[index];
	            } else {
	                return _super.prototype.getActionAt.call(this, index);
	            }
	        };
	        ActionSet.prototype.getActionById = function (id) {
	            var result = this._actionCollection.getActionById(id);
	            return result ? result : _super.prototype.getActionById.call(this, id);
	        };
	        ActionSet.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            this._actionCollection.validateProperties(context);
	        };
	        ActionSet.prototype.addAction = function (action) {
	            this._actionCollection.addAction(action);
	        };
	        ActionSet.prototype.getAllInputs = function (processActions) {
	            if (processActions === void 0) {
	                processActions = true;
	            }
	            return processActions ? this._actionCollection.getAllInputs() : [];
	        };
	        ActionSet.prototype.getResourceInformation = function () {
	            return this._actionCollection.getResourceInformation();
	        };
	        Object.defineProperty(ActionSet.prototype, "isInteractive", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        ActionSet.orientationProperty = new serialization.EnumProperty(serialization.Versions.v1_1, "orientation", enums.Orientation);
	        __decorate([serialization.property(ActionSet.orientationProperty)], ActionSet.prototype, "orientation", void 0);
	        return ActionSet;
	    }(CardElement);
	    exports.ActionSet = ActionSet;
	    var StylableCardElementContainer = /** @class */function (_super) {
	        __extends(StylableCardElementContainer, _super);
	        function StylableCardElementContainer() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._bleed = false;
	            return _this;
	        }
	        Object.defineProperty(StylableCardElementContainer.prototype, "style", {
	            get: function get() {
	                if (this.allowCustomStyle) {
	                    var style = this.getValue(StylableCardElementContainer.styleProperty);
	                    if (style && this.hostConfig.containerStyles.getStyleByName(style)) {
	                        return style;
	                    }
	                }
	                return undefined;
	            },
	            set: function set(value) {
	                this.setValue(StylableCardElementContainer.styleProperty, value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#endregion
	        StylableCardElementContainer.prototype.adjustRenderedElementSize = function (renderedElement) {
	            _super.prototype.adjustRenderedElementSize.call(this, renderedElement);
	            if (this.minPixelHeight) {
	                renderedElement.style.minHeight = this.minPixelHeight + "px";
	            }
	        };
	        StylableCardElementContainer.prototype.applyBackground = function () {
	            if (this.renderedElement) {
	                var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));
	                if (styleDefinition.backgroundColor) {
	                    var bgColor = utils.stringToCssColor(styleDefinition.backgroundColor);
	                    this.renderedElement.style.backgroundColor = bgColor;
	                    this.renderedElement.style.border = "1px solid " + bgColor;
	                }
	            }
	        };
	        StylableCardElementContainer.prototype.applyPadding = function () {
	            _super.prototype.applyPadding.call(this);
	            if (!this.renderedElement) {
	                return;
	            }
	            var physicalPadding = new shared.SpacingDefinition();
	            if (this.getEffectivePadding()) {
	                physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());
	            }
	            this.renderedElement.style.paddingTop = physicalPadding.top + "px";
	            this.renderedElement.style.paddingRight = physicalPadding.right + "px";
	            this.renderedElement.style.paddingBottom = physicalPadding.bottom + "px";
	            this.renderedElement.style.paddingLeft = physicalPadding.left + "px";
	            if (this.isBleeding()) {
	                // Bleed into the first parent that does have padding
	                var padding = new shared.PaddingDefinition();
	                this.getImmediateSurroundingPadding(padding);
	                var surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);
	                this.renderedElement.style.marginRight = "-" + surroundingPadding.right + "px";
	                this.renderedElement.style.marginLeft = "-" + surroundingPadding.left + "px";
	                if (!this.isDesignMode()) {
	                    this.renderedElement.style.marginTop = "-" + surroundingPadding.top + "px";
	                    this.renderedElement.style.marginBottom = "-" + surroundingPadding.bottom + "px";
	                }
	                if (this.separatorElement && this.separatorOrientation == enums.Orientation.Horizontal) {
	                    this.separatorElement.style.marginLeft = "-" + surroundingPadding.left + "px";
	                    this.separatorElement.style.marginRight = "-" + surroundingPadding.right + "px";
	                }
	            } else {
	                this.renderedElement.style.marginRight = "0";
	                this.renderedElement.style.marginLeft = "0";
	                this.renderedElement.style.marginTop = "0";
	                this.renderedElement.style.marginBottom = "0";
	                if (this.separatorElement) {
	                    this.separatorElement.style.marginRight = "0";
	                    this.separatorElement.style.marginLeft = "0";
	                }
	            }
	        };
	        StylableCardElementContainer.prototype.getHasBackground = function () {
	            var currentElement = this.parent;
	            while (currentElement) {
	                var currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;
	                if (currentElement instanceof StylableCardElementContainer) {
	                    if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {
	                        return true;
	                    }
	                }
	                currentElement = currentElement.parent;
	            }
	            return false;
	        };
	        StylableCardElementContainer.prototype.getDefaultPadding = function () {
	            return this.getHasBackground() ? new shared.PaddingDefinition(enums.Spacing.Padding, enums.Spacing.Padding, enums.Spacing.Padding, enums.Spacing.Padding) : _super.prototype.getDefaultPadding.call(this);
	        };
	        StylableCardElementContainer.prototype.getHasExpandedAction = function () {
	            return false;
	        };
	        StylableCardElementContainer.prototype.getBleed = function () {
	            return this._bleed;
	        };
	        StylableCardElementContainer.prototype.setBleed = function (value) {
	            this._bleed = value;
	        };
	        Object.defineProperty(StylableCardElementContainer.prototype, "renderedActionCount", {
	            get: function get() {
	                return 0;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(StylableCardElementContainer.prototype, "hasExplicitStyle", {
	            get: function get() {
	                return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(StylableCardElementContainer.prototype, "allowCustomStyle", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        StylableCardElementContainer.prototype.isBleeding = function () {
	            return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();
	        };
	        StylableCardElementContainer.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            var explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);
	            if (explicitStyle !== undefined) {
	                var styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);
	                if (!styleDefinition) {
	                    context.addFailure(this, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidPropertyValue(explicitStyle, "style"));
	                }
	            }
	        };
	        StylableCardElementContainer.prototype.render = function () {
	            var renderedElement = _super.prototype.render.call(this);
	            if (renderedElement && this.getHasBackground()) {
	                this.applyBackground();
	            }
	            return renderedElement;
	        };
	        StylableCardElementContainer.prototype.getEffectiveStyle = function () {
	            var effectiveStyle = this.style;
	            return effectiveStyle ? effectiveStyle : _super.prototype.getEffectiveStyle.call(this);
	        };
	        StylableCardElementContainer.styleProperty = new serialization.ValueSetProperty(serialization.Versions.v1_0, "style", [{ value: enums.ContainerStyle.Default }, { value: enums.ContainerStyle.Emphasis }, { targetVersion: serialization.Versions.v1_2, value: enums.ContainerStyle.Accent }, { targetVersion: serialization.Versions.v1_2, value: enums.ContainerStyle.Good }, { targetVersion: serialization.Versions.v1_2, value: enums.ContainerStyle.Attention }, { targetVersion: serialization.Versions.v1_2, value: enums.ContainerStyle.Warning }]);
	        StylableCardElementContainer.bleedProperty = new serialization.BoolProperty(serialization.Versions.v1_2, "bleed", false);
	        StylableCardElementContainer.minHeightProperty = new serialization.PixelSizeProperty(serialization.Versions.v1_2, "minHeight");
	        __decorate([serialization.property(StylableCardElementContainer.styleProperty)], StylableCardElementContainer.prototype, "style", null);
	        __decorate([serialization.property(StylableCardElementContainer.bleedProperty)], StylableCardElementContainer.prototype, "_bleed", void 0);
	        __decorate([serialization.property(StylableCardElementContainer.minHeightProperty)], StylableCardElementContainer.prototype, "minPixelHeight", void 0);
	        return StylableCardElementContainer;
	    }(CardElementContainer);
	    exports.StylableCardElementContainer = StylableCardElementContainer;
	    var BackgroundImage = /** @class */function (_super) {
	        __extends(BackgroundImage, _super);
	        function BackgroundImage() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        //#endregion
	        BackgroundImage.prototype.getSchemaKey = function () {
	            return "BackgroundImage";
	        };
	        BackgroundImage.prototype.internalParse = function (source, context) {
	            if (typeof source === "string") {
	                this.resetDefaultValues();
	                this.url = source;
	            } else {
	                return _super.prototype.internalParse.call(this, source, context);
	            }
	        };
	        BackgroundImage.prototype.apply = function (element) {
	            if (this.url && element.renderedElement) {
	                element.renderedElement.style.backgroundImage = "url('" + element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) + "')";
	                switch (this.fillMode) {
	                    case enums.FillMode.Repeat:
	                        element.renderedElement.style.backgroundRepeat = "repeat";
	                        break;
	                    case enums.FillMode.RepeatHorizontally:
	                        element.renderedElement.style.backgroundRepeat = "repeat-x";
	                        break;
	                    case enums.FillMode.RepeatVertically:
	                        element.renderedElement.style.backgroundRepeat = "repeat-y";
	                        break;
	                    case enums.FillMode.Cover:
	                    default:
	                        element.renderedElement.style.backgroundRepeat = "no-repeat";
	                        element.renderedElement.style.backgroundSize = "cover";
	                        break;
	                }
	                switch (this.horizontalAlignment) {
	                    case enums.HorizontalAlignment.Center:
	                        element.renderedElement.style.backgroundPositionX = "center";
	                        break;
	                    case enums.HorizontalAlignment.Right:
	                        element.renderedElement.style.backgroundPositionX = "right";
	                        break;
	                }
	                switch (this.verticalAlignment) {
	                    case enums.VerticalAlignment.Center:
	                        element.renderedElement.style.backgroundPositionY = "center";
	                        break;
	                    case enums.VerticalAlignment.Bottom:
	                        element.renderedElement.style.backgroundPositionY = "bottom";
	                        break;
	                }
	            }
	        };
	        BackgroundImage.prototype.isValid = function () {
	            return this.url ? true : false;
	        };
	        //#region Schema
	        BackgroundImage.urlProperty = new serialization.StringProperty(serialization.Versions.v1_0, "url");
	        BackgroundImage.fillModeProperty = new serialization.EnumProperty(serialization.Versions.v1_2, "fillMode", enums.FillMode, enums.FillMode.Cover);
	        BackgroundImage.horizontalAlignmentProperty = new serialization.EnumProperty(serialization.Versions.v1_2, "horizontalAlignment", enums.HorizontalAlignment, enums.HorizontalAlignment.Left);
	        BackgroundImage.verticalAlignmentProperty = new serialization.EnumProperty(serialization.Versions.v1_2, "verticalAlignment", enums.VerticalAlignment, enums.VerticalAlignment.Top);
	        __decorate([serialization.property(BackgroundImage.urlProperty)], BackgroundImage.prototype, "url", void 0);
	        __decorate([serialization.property(BackgroundImage.fillModeProperty)], BackgroundImage.prototype, "fillMode", void 0);
	        __decorate([serialization.property(BackgroundImage.horizontalAlignmentProperty)], BackgroundImage.prototype, "horizontalAlignment", void 0);
	        __decorate([serialization.property(BackgroundImage.verticalAlignmentProperty)], BackgroundImage.prototype, "verticalAlignment", void 0);
	        return BackgroundImage;
	    }(serialization.SerializableObject);
	    exports.BackgroundImage = BackgroundImage;
	    var Container = /** @class */function (_super) {
	        __extends(Container, _super);
	        function Container() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.verticalContentAlignment = enums.VerticalAlignment.Top;
	            //#endregion
	            _this._items = [];
	            _this._renderedItems = [];
	            return _this;
	        }
	        Object.defineProperty(Container.prototype, "backgroundImage", {
	            get: function get() {
	                return this.getValue(Container.backgroundImageProperty);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Container.prototype.insertItemAt = function (item, index, forceInsert) {
	            if (!item.parent || forceInsert) {
	                if (item.isStandalone) {
	                    if (index < 0 || index >= this._items.length) {
	                        this._items.push(item);
	                    } else {
	                        this._items.splice(index, 0, item);
	                    }
	                    item.setParent(this);
	                } else {
	                    throw new Error(strings.Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));
	                }
	            } else {
	                throw new Error(strings.Strings.errors.elementAlreadyParented());
	            }
	        };
	        Container.prototype.supportsExcplitiHeight = function () {
	            return true;
	        };
	        Container.prototype.getItemsCollectionPropertyName = function () {
	            return "items";
	        };
	        Container.prototype.applyBackground = function () {
	            if (this.backgroundImage.isValid() && this.renderedElement) {
	                this.backgroundImage.apply(this);
	            }
	            _super.prototype.applyBackground.call(this);
	        };
	        Container.prototype.internalRender = function () {
	            this._renderedItems = [];
	            // Cache hostConfig to avoid walking the parent hierarchy several times
	            var hostConfig = this.hostConfig;
	            var element = document.createElement("div");
	            if (this.rtl !== undefined && this.rtl) {
	                element.dir = "rtl";
	            }
	            element.classList.add(hostConfig.makeCssClassName("ac-container"));
	            element.style.display = "flex";
	            element.style.flexDirection = "column";
	            if (shared.GlobalSettings.useAdvancedCardBottomTruncation) {
	                // Forces the container to be at least as tall as its content.
	                //
	                // Fixes a quirk in Chrome where, for nested flex elements, the
	                // inner element's height would never exceed the outer element's
	                // height. This caused overflow truncation to break -- containers
	                // would always be measured as not overflowing, since their heights
	                // were constrained by their parents as opposed to truly reflecting
	                // the height of their content.
	                //
	                // See the "Browser Rendering Notes" section of this answer:
	                // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size
	                element.style.minHeight = '-webkit-min-content';
	            }
	            switch (this.verticalContentAlignment) {
	                case enums.VerticalAlignment.Center:
	                    element.style.justifyContent = "center";
	                    break;
	                case enums.VerticalAlignment.Bottom:
	                    element.style.justifyContent = "flex-end";
	                    break;
	                default:
	                    element.style.justifyContent = "flex-start";
	                    break;
	            }
	            if (this._items.length > 0) {
	                for (var _i = 0, _a = this._items; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    var renderedItem = this.isElementAllowed(item) ? item.render() : undefined;
	                    if (renderedItem) {
	                        if (this._renderedItems.length > 0 && item.separatorElement) {
	                            item.separatorElement.style.flex = "0 0 auto";
	                            utils.appendChild(element, item.separatorElement);
	                        }
	                        utils.appendChild(element, renderedItem);
	                        this._renderedItems.push(item);
	                    }
	                }
	            } else {
	                if (this.isDesignMode()) {
	                    var placeholderElement = this.createPlaceholderElement();
	                    placeholderElement.style.width = "100%";
	                    placeholderElement.style.height = "100%";
	                    element.appendChild(placeholderElement);
	                }
	            }
	            return element;
	        };
	        Container.prototype.truncateOverflow = function (maxHeight) {
	            if (this.renderedElement) {
	                // Add 1 to account for rounding differences between browsers
	                var boundary_1 = this.renderedElement.offsetTop + maxHeight + 1;
	                var handleElement_1 = function handleElement_1(cardElement) {
	                    var elt = cardElement.renderedElement;
	                    if (elt) {
	                        switch (utils.getFitStatus(elt, boundary_1)) {
	                            case enums.ContainerFitStatus.FullyInContainer:
	                                var sizeChanged = cardElement['resetOverflow']();
	                                // If the element's size changed after resetting content,
	                                // we have to check if it still fits fully in the card
	                                if (sizeChanged) {
	                                    handleElement_1(cardElement);
	                                }
	                                break;
	                            case enums.ContainerFitStatus.Overflowing:
	                                var maxHeight_1 = boundary_1 - elt.offsetTop;
	                                cardElement['handleOverflow'](maxHeight_1);
	                                break;
	                            case enums.ContainerFitStatus.FullyOutOfContainer:
	                                cardElement['handleOverflow'](0);
	                                break;
	                        }
	                    }
	                };
	                for (var _i = 0, _a = this._items; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    handleElement_1(item);
	                }
	                return true;
	            }
	            return false;
	        };
	        Container.prototype.undoOverflowTruncation = function () {
	            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {
	                var item = _a[_i];
	                item['resetOverflow']();
	            }
	        };
	        Container.prototype.getHasBackground = function () {
	            return this.backgroundImage.isValid() || _super.prototype.getHasBackground.call(this);
	        };
	        Container.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            this.clear();
	            this.setShouldFallback(false);
	            var jsonItems = source[this.getItemsCollectionPropertyName()];
	            if (Array.isArray(jsonItems)) {
	                for (var _i = 0, jsonItems_1 = jsonItems; _i < jsonItems_1.length; _i++) {
	                    var item = jsonItems_1[_i];
	                    var element = context.parseElement(this, item, !this.isDesignMode());
	                    if (element) {
	                        this.insertItemAt(element, -1, true);
	                    }
	                }
	            }
	        };
	        Container.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            context.serializeArray(target, this.getItemsCollectionPropertyName(), this._items);
	        };
	        Object.defineProperty(Container.prototype, "isSelectable", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Container.prototype.getItemCount = function () {
	            return this._items.length;
	        };
	        Container.prototype.getItemAt = function (index) {
	            return this._items[index];
	        };
	        Container.prototype.getFirstVisibleRenderedItem = function () {
	            if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {
	                for (var _i = 0, _a = this._renderedItems; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    if (item.isVisible) {
	                        return item;
	                    }
	                }
	            }
	            return undefined;
	        };
	        Container.prototype.getLastVisibleRenderedItem = function () {
	            if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {
	                for (var i = this._renderedItems.length - 1; i >= 0; i--) {
	                    if (this._renderedItems[i].isVisible) {
	                        return this._renderedItems[i];
	                    }
	                }
	            }
	            return undefined;
	        };
	        Container.prototype.getJsonTypeName = function () {
	            return "Container";
	        };
	        Container.prototype.isFirstElement = function (element) {
	            var designMode = this.isDesignMode();
	            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {
	                var item = _a[_i];
	                if (item.isVisible || designMode) {
	                    return item == element;
	                }
	            }
	            return false;
	        };
	        Container.prototype.isLastElement = function (element) {
	            var designMode = this.isDesignMode();
	            for (var i = this._items.length - 1; i >= 0; i--) {
	                if (this._items[i].isVisible || designMode) {
	                    return this._items[i] == element;
	                }
	            }
	            return false;
	        };
	        Container.prototype.isRtl = function () {
	            if (this.rtl !== undefined) {
	                return this.rtl;
	            } else {
	                var parentContainer = this.getParentContainer();
	                return parentContainer ? parentContainer.isRtl() : false;
	            }
	        };
	        Container.prototype.isBleedingAtTop = function () {
	            var firstRenderedItem = this.getFirstVisibleRenderedItem();
	            return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);
	        };
	        Container.prototype.isBleedingAtBottom = function () {
	            var lastRenderedItem = this.getLastVisibleRenderedItem();
	            return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);
	        };
	        Container.prototype.indexOf = function (cardElement) {
	            return this._items.indexOf(cardElement);
	        };
	        Container.prototype.addItem = function (item) {
	            this.insertItemAt(item, -1, false);
	        };
	        Container.prototype.insertItemBefore = function (item, insertBefore) {
	            this.insertItemAt(item, this._items.indexOf(insertBefore), false);
	        };
	        Container.prototype.insertItemAfter = function (item, insertAfter) {
	            this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);
	        };
	        Container.prototype.removeItem = function (item) {
	            var itemIndex = this._items.indexOf(item);
	            if (itemIndex >= 0) {
	                this._items.splice(itemIndex, 1);
	                item.setParent(undefined);
	                this.updateLayout();
	                return true;
	            }
	            return false;
	        };
	        Container.prototype.clear = function () {
	            this._items = [];
	            this._renderedItems = [];
	        };
	        Container.prototype.getResourceInformation = function () {
	            var result = _super.prototype.getResourceInformation.call(this);
	            if (this.backgroundImage.isValid()) {
	                result.push({
	                    url: this.backgroundImage.url,
	                    mimeType: "image"
	                });
	            }
	            return result;
	        };
	        Container.prototype.getActionById = function (id) {
	            var result = _super.prototype.getActionById.call(this, id);
	            if (!result) {
	                if (this.selectAction) {
	                    result = this.selectAction.getActionById(id);
	                }
	                if (!result) {
	                    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {
	                        var item = _a[_i];
	                        result = item.getActionById(id);
	                        if (result) {
	                            break;
	                        }
	                    }
	                }
	            }
	            return result;
	        };
	        Object.defineProperty(Container.prototype, "padding", {
	            get: function get() {
	                return this.getPadding();
	            },
	            set: function set(value) {
	                this.setPadding(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Container.prototype, "selectAction", {
	            get: function get() {
	                return this._selectAction;
	            },
	            set: function set(value) {
	                this._selectAction = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Container.prototype, "bleed", {
	            get: function get() {
	                return this.getBleed();
	            },
	            set: function set(value) {
	                this.setBleed(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Container.backgroundImageProperty = new serialization.SerializableObjectProperty(serialization.Versions.v1_0, "backgroundImage", BackgroundImage);
	        Container.verticalContentAlignmentProperty = new serialization.EnumProperty(serialization.Versions.v1_1, "verticalContentAlignment", enums.VerticalAlignment, enums.VerticalAlignment.Top);
	        Container.rtlProperty = new serialization.BoolProperty(serialization.Versions.v1_0, "rtl");
	        __decorate([serialization.property(Container.backgroundImageProperty)], Container.prototype, "backgroundImage", null);
	        __decorate([serialization.property(Container.verticalContentAlignmentProperty)], Container.prototype, "verticalContentAlignment", void 0);
	        __decorate([serialization.property(Container.rtlProperty)], Container.prototype, "rtl", void 0);
	        return Container;
	    }(StylableCardElementContainer);
	    exports.Container = Container;
	    var Column = /** @class */function (_super) {
	        __extends(Column, _super);
	        function Column(width) {
	            if (width === void 0) {
	                width = "stretch";
	            }
	            var _this = _super.call(this) || this;
	            _this.width = "stretch";
	            //#endregion
	            _this._computedWeight = 0;
	            _this.width = width;
	            return _this;
	        }
	        Column.prototype.adjustRenderedElementSize = function (renderedElement) {
	            var minDesignTimeColumnHeight = 20;
	            if (this.isDesignMode()) {
	                renderedElement.style.minWidth = "20px";
	                renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + "px";
	            } else {
	                renderedElement.style.minWidth = "0";
	                if (this.minPixelHeight) {
	                    renderedElement.style.minHeight = this.minPixelHeight + "px";
	                }
	            }
	            if (this.width === "auto") {
	                renderedElement.style.flex = "0 1 auto";
	            } else if (this.width === "stretch") {
	                renderedElement.style.flex = "1 1 50px";
	            } else if (this.width instanceof shared.SizeAndUnit) {
	                if (this.width.unit == enums.SizeUnit.Pixel) {
	                    renderedElement.style.flex = "0 0 auto";
	                    renderedElement.style.width = this.width.physicalSize + "px";
	                } else {
	                    renderedElement.style.flex = "1 1 " + (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) + "%";
	                }
	            }
	        };
	        Column.prototype.shouldSerialize = function (context) {
	            return true;
	        };
	        Object.defineProperty(Column.prototype, "separatorOrientation", {
	            get: function get() {
	                return enums.Orientation.Vertical;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Column.prototype.getJsonTypeName = function () {
	            return "Column";
	        };
	        Object.defineProperty(Column.prototype, "hasVisibleSeparator", {
	            get: function get() {
	                if (this.parent && this.parent instanceof ColumnSet) {
	                    return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);
	                } else {
	                    return false;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(Column.prototype, "isStandalone", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        //#region Schema
	        Column.widthProperty = new serialization.CustomProperty(serialization.Versions.v1_0, "width", function (sender, property, source, context) {
	            var result = property.defaultValue;
	            var value = source[property.name];
	            var invalidWidth = false;
	            if (typeof value === "number" && !isNaN(value)) {
	                result = new shared.SizeAndUnit(value, enums.SizeUnit.Weight);
	            } else if (value === "auto" || value === "stretch") {
	                result = value;
	            } else if (typeof value === "string") {
	                try {
	                    result = shared.SizeAndUnit.parse(value);
	                    if (result.unit === enums.SizeUnit.Pixel && property.targetVersion.compareTo(context.targetVersion) > 0) {
	                        invalidWidth = true;
	                    }
	                } catch (e) {
	                    invalidWidth = true;
	                }
	            } else {
	                invalidWidth = true;
	            }
	            if (invalidWidth) {
	                context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidColumnWidth(value));
	                result = "auto";
	            }
	            return result;
	        }, function (sender, property, target, value, context) {
	            if (value instanceof shared.SizeAndUnit) {
	                if (value.unit === enums.SizeUnit.Pixel) {
	                    context.serializeValue(target, "width", value.physicalSize + "px");
	                } else {
	                    context.serializeNumber(target, "width", value.physicalSize);
	                }
	            } else {
	                context.serializeValue(target, "width", value);
	            }
	        }, "stretch");
	        __decorate([serialization.property(Column.widthProperty)], Column.prototype, "width", void 0);
	        return Column;
	    }(Container);
	    exports.Column = Column;
	    var ColumnSet = /** @class */function (_super) {
	        __extends(ColumnSet, _super);
	        function ColumnSet() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this._columns = [];
	            return _this;
	        }
	        ColumnSet.prototype.createColumnInstance = function (source, context) {
	            return context.parseCardObject(this, source, [], // Forbidden types not supported for elements for now
	            !this.isDesignMode(), function (typeName) {
	                return !typeName || typeName === "Column" ? new Column() : undefined;
	            }, function (typeName, errorType) {
	                context.logParseEvent(undefined, enums.ValidationEvent.ElementTypeNotAllowed, strings.Strings.errors.elementTypeNotAllowed(typeName));
	            });
	        };
	        ColumnSet.prototype.internalRender = function () {
	            this._renderedColumns = [];
	            if (this._columns.length > 0) {
	                // Cache hostConfig to avoid walking the parent hierarchy several times
	                var hostConfig = this.hostConfig;
	                var element = document.createElement("div");
	                element.className = hostConfig.makeCssClassName("ac-columnSet");
	                element.style.display = "flex";
	                if (shared.GlobalSettings.useAdvancedCardBottomTruncation) {
	                    // See comment in Container.internalRender()
	                    element.style.minHeight = '-webkit-min-content';
	                }
	                switch (this.horizontalAlignment) {
	                    case enums.HorizontalAlignment.Center:
	                        element.style.justifyContent = "center";
	                        break;
	                    case enums.HorizontalAlignment.Right:
	                        element.style.justifyContent = "flex-end";
	                        break;
	                    default:
	                        element.style.justifyContent = "flex-start";
	                        break;
	                }
	                var totalWeight = 0;
	                for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                    var column = _a[_i];
	                    if (column.width instanceof shared.SizeAndUnit && column.width.unit == enums.SizeUnit.Weight) {
	                        totalWeight += column.width.physicalSize;
	                    }
	                }
	                for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {
	                    var column = _c[_b];
	                    if (column.width instanceof shared.SizeAndUnit && column.width.unit == enums.SizeUnit.Weight && totalWeight > 0) {
	                        var computedWeight = 100 / totalWeight * column.width.physicalSize;
	                        // Best way to emulate "internal" access I know of
	                        column["_computedWeight"] = computedWeight;
	                    }
	                    var renderedColumn = column.render();
	                    if (renderedColumn) {
	                        if (this._renderedColumns.length > 0 && column.separatorElement) {
	                            column.separatorElement.style.flex = "0 0 auto";
	                            utils.appendChild(element, column.separatorElement);
	                        }
	                        utils.appendChild(element, renderedColumn);
	                        this._renderedColumns.push(column);
	                    }
	                }
	                return this._renderedColumns.length > 0 ? element : undefined;
	            } else {
	                return undefined;
	            }
	        };
	        ColumnSet.prototype.truncateOverflow = function (maxHeight) {
	            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                var column = _a[_i];
	                column['handleOverflow'](maxHeight);
	            }
	            return true;
	        };
	        ColumnSet.prototype.undoOverflowTruncation = function () {
	            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                var column = _a[_i];
	                column['resetOverflow']();
	            }
	        };
	        Object.defineProperty(ColumnSet.prototype, "isSelectable", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ColumnSet.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            this._columns = [];
	            this._renderedColumns = [];
	            var jsonColumns = source["columns"];
	            if (Array.isArray(jsonColumns)) {
	                for (var _i = 0, jsonColumns_1 = jsonColumns; _i < jsonColumns_1.length; _i++) {
	                    var item = jsonColumns_1[_i];
	                    var column = this.createColumnInstance(item, context);
	                    if (column) {
	                        this._columns.push(column);
	                    }
	                }
	            }
	        };
	        ColumnSet.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            context.serializeArray(target, "columns", this._columns);
	        };
	        ColumnSet.prototype.isFirstElement = function (element) {
	            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                var column = _a[_i];
	                if (column.isVisible) {
	                    return column == element;
	                }
	            }
	            return false;
	        };
	        ColumnSet.prototype.isBleedingAtTop = function () {
	            if (this.isBleeding()) {
	                return true;
	            }
	            if (this._renderedColumns && this._renderedColumns.length > 0) {
	                for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                    var column = _a[_i];
	                    if (column.isBleedingAtTop()) {
	                        return true;
	                    }
	                }
	            }
	            return false;
	        };
	        ColumnSet.prototype.isBleedingAtBottom = function () {
	            if (this.isBleeding()) {
	                return true;
	            }
	            if (this._renderedColumns && this._renderedColumns.length > 0) {
	                for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                    var column = _a[_i];
	                    if (column.isBleedingAtBottom()) {
	                        return true;
	                    }
	                }
	            }
	            return false;
	        };
	        ColumnSet.prototype.getItemCount = function () {
	            return this._columns.length;
	        };
	        ColumnSet.prototype.getFirstVisibleRenderedItem = function () {
	            if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {
	                return this._renderedColumns[0];
	            } else {
	                return undefined;
	            }
	        };
	        ColumnSet.prototype.getLastVisibleRenderedItem = function () {
	            if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {
	                return this._renderedColumns[this._renderedColumns.length - 1];
	            } else {
	                return undefined;
	            }
	        };
	        ColumnSet.prototype.getColumnAt = function (index) {
	            return this._columns[index];
	        };
	        ColumnSet.prototype.getItemAt = function (index) {
	            return this.getColumnAt(index);
	        };
	        ColumnSet.prototype.getJsonTypeName = function () {
	            return "ColumnSet";
	        };
	        ColumnSet.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            var weightedColumns = 0;
	            var stretchedColumns = 0;
	            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                var column = _a[_i];
	                if (typeof column.width === "number") {
	                    weightedColumns++;
	                } else if (column.width === "stretch") {
	                    stretchedColumns++;
	                }
	            }
	            if (weightedColumns > 0 && stretchedColumns > 0) {
	                context.addFailure(this, enums.ValidationEvent.Hint, strings.Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet());
	            }
	        };
	        ColumnSet.prototype.addColumn = function (column) {
	            if (!column.parent) {
	                this._columns.push(column);
	                column.setParent(this);
	            } else {
	                throw new Error(strings.Strings.errors.columnAlreadyBelongsToAnotherSet());
	            }
	        };
	        ColumnSet.prototype.removeItem = function (item) {
	            if (item instanceof Column) {
	                var itemIndex = this._columns.indexOf(item);
	                if (itemIndex >= 0) {
	                    this._columns.splice(itemIndex, 1);
	                    item.setParent(undefined);
	                    this.updateLayout();
	                    return true;
	                }
	            }
	            return false;
	        };
	        ColumnSet.prototype.indexOf = function (cardElement) {
	            return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;
	        };
	        ColumnSet.prototype.isLeftMostElement = function (element) {
	            return this._columns.indexOf(element) == 0;
	        };
	        ColumnSet.prototype.isRightMostElement = function (element) {
	            return this._columns.indexOf(element) == this._columns.length - 1;
	        };
	        ColumnSet.prototype.isTopElement = function (element) {
	            return this._columns.indexOf(element) >= 0;
	        };
	        ColumnSet.prototype.isBottomElement = function (element) {
	            return this._columns.indexOf(element) >= 0;
	        };
	        ColumnSet.prototype.getActionById = function (id) {
	            var result = undefined;
	            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {
	                var column = _a[_i];
	                result = column.getActionById(id);
	                if (result) {
	                    break;
	                }
	            }
	            return result;
	        };
	        Object.defineProperty(ColumnSet.prototype, "bleed", {
	            get: function get() {
	                return this.getBleed();
	            },
	            set: function set(value) {
	                this.setBleed(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(ColumnSet.prototype, "padding", {
	            get: function get() {
	                return this.getPadding();
	            },
	            set: function set(value) {
	                this.setPadding(value);
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(ColumnSet.prototype, "selectAction", {
	            get: function get() {
	                return this._selectAction;
	            },
	            set: function set(value) {
	                this._selectAction = value;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ColumnSet;
	    }(StylableCardElementContainer);
	    exports.ColumnSet = ColumnSet;
	    function raiseImageLoadedEvent(image) {
	        var card = image.getRootElement();
	        var onImageLoadedHandler = card && card.onImageLoaded ? card.onImageLoaded : AdaptiveCard.onImageLoaded;
	        if (onImageLoadedHandler) {
	            onImageLoadedHandler(image);
	        }
	    }
	    function raiseAnchorClickedEvent(element, anchor) {
	        var card = element.getRootElement();
	        var onAnchorClickedHandler = card && card.onAnchorClicked ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;
	        return onAnchorClickedHandler !== undefined ? onAnchorClickedHandler(element, anchor) : false;
	    }
	    function raiseExecuteActionEvent(action) {
	        var card = action.parent ? action.parent.getRootElement() : undefined;
	        var onExecuteActionHandler = card && card.onExecuteAction ? card.onExecuteAction : AdaptiveCard.onExecuteAction;
	        if (action.prepareForExecution() && onExecuteActionHandler) {
	            onExecuteActionHandler(action);
	        }
	    }
	    function raiseInlineCardExpandedEvent(action, isExpanded) {
	        var card = action.parent ? action.parent.getRootElement() : undefined;
	        var onInlineCardExpandedHandler = card && card.onInlineCardExpanded ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;
	        if (onInlineCardExpandedHandler) {
	            onInlineCardExpandedHandler(action, isExpanded);
	        }
	    }
	    function raiseInputValueChangedEvent(input) {
	        var card = input.getRootElement();
	        var onInputValueChangedHandler = card && card.onInputValueChanged ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;
	        if (onInputValueChangedHandler) {
	            onInputValueChangedHandler(input);
	        }
	    }
	    function raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {
	        if (shouldUpdateLayout === void 0) {
	            shouldUpdateLayout = true;
	        }
	        var rootElement = element.getRootElement();
	        if (shouldUpdateLayout) {
	            rootElement.updateLayout();
	        }
	        var card = rootElement;
	        var onElementVisibilityChangedHandler = card && card.onElementVisibilityChanged ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;
	        if (onElementVisibilityChangedHandler !== undefined) {
	            onElementVisibilityChangedHandler(element);
	        }
	    }
	    var ContainerWithActions = /** @class */function (_super) {
	        __extends(ContainerWithActions, _super);
	        function ContainerWithActions() {
	            var _this = _super.call(this) || this;
	            _this._actionCollection = new ActionCollection(_this);
	            return _this;
	        }
	        ContainerWithActions.prototype.internalParse = function (source, context) {
	            _super.prototype.internalParse.call(this, source, context);
	            this._actionCollection.parse(source["actions"], context);
	        };
	        ContainerWithActions.prototype.internalToJSON = function (target, context) {
	            _super.prototype.internalToJSON.call(this, target, context);
	            this._actionCollection.toJSON(target, "actions", context);
	        };
	        ContainerWithActions.prototype.internalRender = function () {
	            var element = _super.prototype.internalRender.call(this);
	            if (element) {
	                var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);
	                if (renderedActions) {
	                    utils.appendChild(element, utils.renderSeparation(this.hostConfig, {
	                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)
	                    }, enums.Orientation.Horizontal));
	                    utils.appendChild(element, renderedActions);
	                }
	                if (this.renderIfEmpty) {
	                    return element;
	                } else {
	                    return element.children.length > 0 ? element : undefined;
	                }
	            } else {
	                return undefined;
	            }
	        };
	        ContainerWithActions.prototype.getHasExpandedAction = function () {
	            if (this.renderedActionCount == 0) {
	                return false;
	            } else if (this.renderedActionCount == 1) {
	                return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;
	            } else {
	                return this._actionCollection.expandedAction !== undefined;
	            }
	        };
	        Object.defineProperty(ContainerWithActions.prototype, "renderedActionCount", {
	            get: function get() {
	                return this._actionCollection.renderedActionCount;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(ContainerWithActions.prototype, "renderIfEmpty", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        ContainerWithActions.prototype.getActionCount = function () {
	            return this._actionCollection.items.length;
	        };
	        ContainerWithActions.prototype.getActionAt = function (index) {
	            if (index >= 0 && index < this.getActionCount()) {
	                return this._actionCollection.items[index];
	            } else {
	                return _super.prototype.getActionAt.call(this, index);
	            }
	        };
	        ContainerWithActions.prototype.getActionById = function (id) {
	            var result = this._actionCollection.getActionById(id);
	            return result ? result : _super.prototype.getActionById.call(this, id);
	        };
	        ContainerWithActions.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (this._actionCollection) {
	                this._actionCollection.validateProperties(context);
	            }
	        };
	        ContainerWithActions.prototype.isLastElement = function (element) {
	            return _super.prototype.isLastElement.call(this, element) && this._actionCollection.items.length == 0;
	        };
	        ContainerWithActions.prototype.addAction = function (action) {
	            this._actionCollection.addAction(action);
	        };
	        ContainerWithActions.prototype.clear = function () {
	            _super.prototype.clear.call(this);
	            this._actionCollection.clear();
	        };
	        ContainerWithActions.prototype.getAllInputs = function (processActions) {
	            if (processActions === void 0) {
	                processActions = true;
	            }
	            var result = _super.prototype.getAllInputs.call(this, processActions);
	            if (processActions) {
	                result = result.concat(this._actionCollection.getAllInputs(processActions));
	            }
	            return result;
	        };
	        ContainerWithActions.prototype.getResourceInformation = function () {
	            return _super.prototype.getResourceInformation.call(this).concat(this._actionCollection.getResourceInformation());
	        };
	        ContainerWithActions.prototype.isBleedingAtBottom = function () {
	            if (this._actionCollection.renderedActionCount == 0) {
	                return _super.prototype.isBleedingAtBottom.call(this);
	            } else {
	                if (this._actionCollection.items.length == 1) {
	                    return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;
	                } else {
	                    return this._actionCollection.expandedAction !== undefined;
	                }
	            }
	        };
	        Object.defineProperty(ContainerWithActions.prototype, "isStandalone", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        return ContainerWithActions;
	    }(Container);
	    exports.ContainerWithActions = ContainerWithActions;
	    // @dynamic
	    var AdaptiveCard = /** @class */function (_super) {
	        __extends(AdaptiveCard, _super);
	        function AdaptiveCard() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.designMode = false;
	            return _this;
	        }
	        Object.defineProperty(AdaptiveCard, "processMarkdown", {
	            get: function get() {
	                throw new Error(strings.Strings.errors.processMarkdownEventRemoved());
	            },
	            set: function set(value) {
	                throw new Error(strings.Strings.errors.processMarkdownEventRemoved());
	            },
	            enumerable: false,
	            configurable: true
	        });
	        AdaptiveCard.applyMarkdown = function (text) {
	            var result = {
	                didProcess: false
	            };
	            if (AdaptiveCard.onProcessMarkdown) {
	                AdaptiveCard.onProcessMarkdown(text, result);
	            } else if (window.markdownit) {
	                // Check for markdownit
	                var markdownIt = window.markdownit;
	                result.outputHtml = markdownIt().render(text);
	                result.didProcess = true;
	            } else {
	                console.warn(strings.Strings.errors.markdownProcessingNotEnabled);
	            }
	            return result;
	        };
	        AdaptiveCard.prototype.isVersionSupported = function () {
	            if (this.bypassVersionCheck) {
	                return true;
	            } else {
	                var unsupportedVersion = !this.version || !this.version.isValid || this.maxVersion.major < this.version.major || this.maxVersion.major == this.version.major && this.maxVersion.minor < this.version.minor;
	                return !unsupportedVersion;
	            }
	        };
	        AdaptiveCard.prototype.getDefaultSerializationContext = function () {
	            return new SerializationContext(this.version);
	        };
	        AdaptiveCard.prototype.getItemsCollectionPropertyName = function () {
	            return "body";
	        };
	        AdaptiveCard.prototype.internalParse = function (source, context) {
	            this._fallbackCard = undefined;
	            var fallbackElement = context.parseElement(undefined, source["fallback"], !this.isDesignMode());
	            if (fallbackElement) {
	                this._fallbackCard = new AdaptiveCard();
	                this._fallbackCard.addItem(fallbackElement);
	            }
	            _super.prototype.internalParse.call(this, source, context);
	        };
	        AdaptiveCard.prototype.internalToJSON = function (target, context) {
	            this.setValue(AdaptiveCard.versionProperty, context.targetVersion);
	            _super.prototype.internalToJSON.call(this, target, context);
	        };
	        AdaptiveCard.prototype.internalRender = function () {
	            var renderedElement = _super.prototype.internalRender.call(this);
	            if (shared.GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {
	                // Unlike containers, the root card element should be allowed to
	                // be shorter than its content (otherwise the overflow truncation
	                // logic would never get triggered)
	                renderedElement.style.removeProperty("minHeight");
	            }
	            return renderedElement;
	        };
	        AdaptiveCard.prototype.getHasBackground = function () {
	            return true;
	        };
	        AdaptiveCard.prototype.getDefaultPadding = function () {
	            return new shared.PaddingDefinition(enums.Spacing.Padding, enums.Spacing.Padding, enums.Spacing.Padding, enums.Spacing.Padding);
	        };
	        AdaptiveCard.prototype.shouldSerialize = function (context) {
	            return true;
	        };
	        Object.defineProperty(AdaptiveCard.prototype, "renderIfEmpty", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(AdaptiveCard.prototype, "bypassVersionCheck", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(AdaptiveCard.prototype, "allowCustomStyle", {
	            get: function get() {
	                return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(AdaptiveCard.prototype, "hasBackground", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        AdaptiveCard.prototype.getJsonTypeName = function () {
	            return "AdaptiveCard";
	        };
	        AdaptiveCard.prototype.internalValidateProperties = function (context) {
	            _super.prototype.internalValidateProperties.call(this, context);
	            if (this.getValue(CardElement.typeNameProperty) !== "AdaptiveCard") {
	                context.addFailure(this, enums.ValidationEvent.MissingCardType, strings.Strings.errors.invalidCardType());
	            }
	            if (!this.bypassVersionCheck && !this.version) {
	                context.addFailure(this, enums.ValidationEvent.PropertyCantBeNull, strings.Strings.errors.propertyMustBeSet("version"));
	            } else if (!this.isVersionSupported()) {
	                context.addFailure(this, enums.ValidationEvent.UnsupportedCardVersion, strings.Strings.errors.unsupportedCardVersion(this.version.toString(), this.maxVersion.toString()));
	            }
	        };
	        AdaptiveCard.prototype.render = function (target) {
	            var renderedCard;
	            if (this.shouldFallback() && this._fallbackCard) {
	                this._fallbackCard.hostConfig = this.hostConfig;
	                renderedCard = this._fallbackCard.render();
	            } else {
	                renderedCard = _super.prototype.render.call(this);
	                if (renderedCard) {
	                    renderedCard.classList.add(this.hostConfig.makeCssClassName("ac-adaptiveCard"));
	                    // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.
	                    // However, we've shipped this behavior before, and so can't just turn it off in a point release. For
	                    // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a
	                    // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex
	                    // by default.
	                    if (shared.GlobalSettings.setTabIndexAtCardRoot) {
	                        renderedCard.tabIndex = 0;
	                    }
	                    if (this.speak) {
	                        renderedCard.setAttribute("aria-label", this.speak);
	                    }
	                }
	            }
	            if (target) {
	                utils.appendChild(target, renderedCard);
	                this.updateLayout();
	            }
	            return renderedCard;
	        };
	        AdaptiveCard.prototype.updateLayout = function (processChildren) {
	            if (processChildren === void 0) {
	                processChildren = true;
	            }
	            _super.prototype.updateLayout.call(this, processChildren);
	            if (shared.GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {
	                var padding = this.hostConfig.getEffectiveSpacing(enums.Spacing.Default);
	                this['handleOverflow'](this.renderedElement.offsetHeight - padding);
	            }
	        };
	        AdaptiveCard.prototype.shouldFallback = function () {
	            return _super.prototype.shouldFallback.call(this) || !this.isVersionSupported();
	        };
	        Object.defineProperty(AdaptiveCard.prototype, "hasVisibleSeparator", {
	            get: function get() {
	                return false;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        AdaptiveCard.schemaUrl = "http://adaptivecards.io/schemas/adaptive-card.json";
	        //#region Schema
	        AdaptiveCard.$schemaProperty = new serialization.CustomProperty(serialization.Versions.v1_0, "$schema", function (sender, property, source, context) {
	            return AdaptiveCard.schemaUrl;
	        }, function (sender, property, target, value, context) {
	            context.serializeValue(target, property.name, AdaptiveCard.schemaUrl);
	        });
	        AdaptiveCard.versionProperty = new serialization.CustomProperty(serialization.Versions.v1_0, "version", function (sender, property, source, context) {
	            var version = serialization.Version.parse(source[property.name], context);
	            if (version === undefined) {
	                version = serialization.Versions.latest;
	                context.logParseEvent(sender, enums.ValidationEvent.InvalidPropertyValue, strings.Strings.errors.invalidCardVersion(version.toString()));
	            }
	            return version;
	        }, function (sender, property, target, value, context) {
	            if (value !== undefined) {
	                context.serializeValue(target, property.name, value.toString());
	            }
	        }, serialization.Versions.v1_0);
	        AdaptiveCard.fallbackTextProperty = new serialization.StringProperty(serialization.Versions.v1_0, "fallbackText");
	        AdaptiveCard.speakProperty = new serialization.StringProperty(serialization.Versions.v1_0, "speak");
	        __decorate([serialization.property(AdaptiveCard.versionProperty)], AdaptiveCard.prototype, "version", void 0);
	        __decorate([serialization.property(AdaptiveCard.fallbackTextProperty)], AdaptiveCard.prototype, "fallbackText", void 0);
	        __decorate([serialization.property(AdaptiveCard.speakProperty)], AdaptiveCard.prototype, "speak", void 0);
	        return AdaptiveCard;
	    }(ContainerWithActions);
	    exports.AdaptiveCard = AdaptiveCard;
	    var InlineAdaptiveCard = /** @class */function (_super) {
	        __extends(InlineAdaptiveCard, _super);
	        function InlineAdaptiveCard() {
	            //#region Schema
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.suppressStyle = false;
	            return _this;
	        }
	        InlineAdaptiveCard.prototype.getSchemaKey = function () {
	            return "InlineAdaptiveCard";
	        };
	        InlineAdaptiveCard.prototype.populateSchema = function (schema) {
	            _super.prototype.populateSchema.call(this, schema);
	            schema.remove(AdaptiveCard.$schemaProperty, AdaptiveCard.versionProperty);
	        };
	        //#endregion
	        InlineAdaptiveCard.prototype.getDefaultPadding = function () {
	            return new shared.PaddingDefinition(this.suppressStyle ? enums.Spacing.None : enums.Spacing.Padding, enums.Spacing.Padding, this.suppressStyle ? enums.Spacing.None : enums.Spacing.Padding, enums.Spacing.Padding);
	        };
	        Object.defineProperty(InlineAdaptiveCard.prototype, "bypassVersionCheck", {
	            get: function get() {
	                return true;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        Object.defineProperty(InlineAdaptiveCard.prototype, "defaultStyle", {
	            get: function get() {
	                if (this.suppressStyle) {
	                    return enums.ContainerStyle.Default;
	                } else {
	                    return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : enums.ContainerStyle.Emphasis;
	                }
	            },
	            enumerable: false,
	            configurable: true
	        });
	        InlineAdaptiveCard.prototype.render = function (target) {
	            var renderedCard = _super.prototype.render.call(this, target);
	            if (renderedCard) {
	                renderedCard.setAttribute("aria-live", "polite");
	                renderedCard.removeAttribute("tabindex");
	            }
	            return renderedCard;
	        };
	        return InlineAdaptiveCard;
	    }(AdaptiveCard);
	    var GlobalRegistry = /** @class */function () {
	        function GlobalRegistry() {}
	        GlobalRegistry.populateWithDefaultElements = function (registry) {
	            registry.clear();
	            registry.register("Container", Container);
	            registry.register("TextBlock", TextBlock);
	            registry.register("RichTextBlock", RichTextBlock, serialization.Versions.v1_2);
	            registry.register("TextRun", TextRun, serialization.Versions.v1_2);
	            registry.register("Image", Image);
	            registry.register("ImageSet", ImageSet);
	            registry.register("Media", Media, serialization.Versions.v1_1);
	            registry.register("FactSet", FactSet);
	            registry.register("ColumnSet", ColumnSet);
	            registry.register("ActionSet", ActionSet, serialization.Versions.v1_2);
	            registry.register("Input.Text", TextInput);
	            registry.register("Input.Date", DateInput);
	            registry.register("Input.Time", TimeInput);
	            registry.register("Input.Number", NumberInput);
	            registry.register("Input.ChoiceSet", ChoiceSetInput);
	            registry.register("Input.Toggle", ToggleInput);
	        };
	        GlobalRegistry.populateWithDefaultActions = function (registry) {
	            registry.clear();
	            registry.register(OpenUrlAction.JsonTypeName, OpenUrlAction);
	            registry.register(SubmitAction.JsonTypeName, SubmitAction);
	            registry.register(ShowCardAction.JsonTypeName, ShowCardAction);
	            registry.register(ToggleVisibilityAction.JsonTypeName, ToggleVisibilityAction, serialization.Versions.v1_2);
	        };
	        GlobalRegistry.reset = function () {
	            GlobalRegistry.populateWithDefaultElements(GlobalRegistry.elements);
	            GlobalRegistry.populateWithDefaultActions(GlobalRegistry.actions);
	        };
	        GlobalRegistry.elements = new registry.CardObjectRegistry();
	        GlobalRegistry.actions = new registry.CardObjectRegistry();
	        return GlobalRegistry;
	    }();
	    exports.GlobalRegistry = GlobalRegistry;
	    GlobalRegistry.reset();
	    var SerializationContext = /** @class */function (_super) {
	        __extends(SerializationContext, _super);
	        function SerializationContext() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        SerializationContext.prototype.internalParseCardObject = function (parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent) {
	            var result = undefined;
	            if (source && (typeof source === 'undefined' ? 'undefined' : _typeof(source)) === "object") {
	                var typeName = utils.parseString(source["type"]);
	                if (typeName) {
	                    if (forbiddenTypeNames.indexOf(typeName) >= 0) {
	                        logParseEvent(typeName, 1 /* ForbiddenType */);
	                    } else {
	                        var tryToFallback = false;
	                        result = createInstanceCallback(typeName);
	                        if (!result) {
	                            tryToFallback = shared.GlobalSettings.enableFallback && allowFallback;
	                            logParseEvent(typeName, 0 /* UnknownType */);
	                        } else {
	                            result.setParent(parent);
	                            result.parse(source, this);
	                            tryToFallback = shared.GlobalSettings.enableFallback && allowFallback && result.shouldFallback();
	                        }
	                        if (tryToFallback) {
	                            var fallback = source["fallback"];
	                            if (!fallback && parent) {
	                                parent.setShouldFallback(true);
	                            }
	                            if (typeof fallback === "string" && fallback.toLowerCase() === "drop") {
	                                result = undefined;
	                            } else if ((typeof fallback === 'undefined' ? 'undefined' : _typeof(fallback)) === "object") {
	                                result = this.internalParseCardObject(parent, fallback, forbiddenTypeNames, true, createInstanceCallback, logParseEvent);
	                            }
	                        }
	                    }
	                }
	            }
	            return result;
	        };
	        SerializationContext.prototype.cardObjectParsed = function (o, source) {
	            if (o instanceof Action && this.onParseAction) {
	                this.onParseAction(o, source, this);
	            } else if (o instanceof CardElement && this.onParseElement) {
	                this.onParseElement(o, source, this);
	            }
	        };
	        SerializationContext.prototype.parseCardObject = function (parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent) {
	            var result = this.internalParseCardObject(parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent);
	            if (result !== undefined) {
	                this.cardObjectParsed(result, source);
	            }
	            return result;
	        };
	        SerializationContext.prototype.parseElement = function (parent, source, allowFallback) {
	            var _this = this;
	            return this.parseCardObject(parent, source, [], // Forbidden types not supported for elements for now
	            allowFallback, function (typeName) {
	                return _this.elementRegistry.createInstance(typeName, _this.targetVersion);
	            }, function (typeName, errorType) {
	                if (errorType === 0 /* UnknownType */) {
	                        _this.logParseEvent(undefined, enums.ValidationEvent.UnknownElementType, strings.Strings.errors.unknownElementType(typeName));
	                    } else {
	                    _this.logParseEvent(undefined, enums.ValidationEvent.ElementTypeNotAllowed, strings.Strings.errors.elementTypeNotAllowed(typeName));
	                }
	            });
	        };
	        SerializationContext.prototype.parseAction = function (parent, source, forbiddenActionTypes, allowFallback) {
	            var _this = this;
	            return this.parseCardObject(parent, source, forbiddenActionTypes, allowFallback, function (typeName) {
	                return _this.actionRegistry.createInstance(typeName, _this.targetVersion);
	            }, function (typeName, errorType) {
	                if (errorType == 0 /* UnknownType */) {
	                        _this.logParseEvent(undefined, enums.ValidationEvent.UnknownActionType, strings.Strings.errors.unknownActionType(typeName));
	                    } else {
	                    _this.logParseEvent(undefined, enums.ValidationEvent.ActionTypeNotAllowed, strings.Strings.errors.actionTypeNotAllowed(typeName));
	                }
	            });
	        };
	        Object.defineProperty(SerializationContext.prototype, "elementRegistry", {
	            get: function get() {
	                return this._elementRegistry ? this._elementRegistry : GlobalRegistry.elements;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        // Not using a property setter here because the setter should accept "undefined"
	        // whereas the getter should never return undefined.
	        SerializationContext.prototype.setElementRegistry = function (value) {
	            this._elementRegistry = value;
	        };
	        Object.defineProperty(SerializationContext.prototype, "actionRegistry", {
	            get: function get() {
	                return this._actionRegistry ? this._actionRegistry : GlobalRegistry.actions;
	            },
	            enumerable: false,
	            configurable: true
	        });
	        // Not using a property setter here because the setter should accept "undefined"
	        // whereas the getter should never return undefined.
	        SerializationContext.prototype.setActionRegistry = function (value) {
	            this._actionRegistry = value;
	        };
	        return SerializationContext;
	    }(serialization.BaseSerializationContext);
	    exports.SerializationContext = SerializationContext;
	    
	});

	var adaptivecards = createCommonjsModule(function (module, exports) {

	    var __createBinding = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function (o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        Object.defineProperty(o, k2, { enumerable: true, get: function get() {
	                return m[k];
	            } });
	    } : function (o, m, k, k2) {
	        if (k2 === undefined) k2 = k;
	        o[k2] = m[k];
	    });
	    var __exportStar = commonjsGlobal && commonjsGlobal.__exportStar || function (m, exports) {
	        for (var p in m) {
	            if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
	        }
	    };
	    Object.defineProperty(exports, "__esModule", { value: true });
	    // Copyright (c) Microsoft Corporation. All rights reserved.
	    // Licensed under the MIT License.
	    __exportStar(serialization, exports);
	    __exportStar(registry, exports);
	    __exportStar(cardObject, exports);
	    __exportStar(cardElements, exports);
	    __exportStar(enums, exports);
	    __exportStar(hostConfig, exports);
	    __exportStar(shared, exports);
	    __exportStar(utils, exports);
	    __exportStar(strings, exports);
	    
	});

	/* render plugin
	 * renders the iframe
	 */

	var PluginRender = function () {
	  function PluginRender(jotted, options) {
	    classCallCheck(this, PluginRender);

	    options = extend(options, {});

	    var $resultFrame = jotted.$container.querySelector('.jotted-pane-result textarea');
	    var frameContent = '';

	    // cached content
	    var content = {
	      input: '',
	      template: ''

	      // public
	    };this.jotted = jotted;
	    this.content = content;
	    this.frameContent = frameContent;
	    this.$resultFrame = $resultFrame;
	    this.firstRender = true;

	    // render on each change
	    jotted.on('change', this.change.bind(this), 1);
	  }

	  createClass(PluginRender, [{
	    key: 'template',
	    value: function template() {
	      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

	      var _template = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

	      // need both input and template to show a result
	      if (!input || !_template) {
	        return '';
	      }

	      // calculate the output based on result type
	      var resultType = data(this.$resultFrame, 'jotted-type');

	      if (resultType === 'json') {
	        // use adaptive cards templating tool
	        var cardData, cardTemplate;

	        try {
	          cardData = JSON.parse(input);
	        } catch (e) {
	          console.log("bad json");
	        }

	        try {
	          cardTemplate = JSON.parse(_template);
	        } catch (e) {
	          console.log("bad json");
	        }

	        cardTemplate = new adaptivecardsTemplating.Template(cardTemplate);

	        var card = cardTemplate.expand({
	          $root: cardData
	        });

	        return JSON.stringify(card, null, 4);

	        // for html Rendering

	        // var adaptiveCard = new AdaptiveCards.AdaptiveCard()
	        // adaptiveCard.parse(card)

	        // var renderedCard = adaptiveCard.render()

	        // return adaptiveCard
	      } else if (resultType === 'html') {
	        // do something
	        return '';
	      } else {
	        return '';
	      }
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      // cache manipulated content
	      this.content[params.role] = params.content;

	      // check existing and to-be-rendered content
	      var oldFrameContent = this.frameContent;
	      this.frameContent = this.template(this.content['input'], this.content['template']);

	      // don't render if previous and new frame content are the same.
	      // mostly for the `play` plugin,
	      // so we don't re-render the same content on each change.
	      // unless we set forceRender.
	      if (params.forceRender !== true && this.frameContent === oldFrameContent) {
	        callback(null, params);
	        return;
	      }

	      this.$resultFrame.value = this.frameContent;
	      var editor = this.jotted.plugins.codemirror.editor.result; // get the results pane cmeditor object
	      editor.setValue(this.frameContent); // set the value in the editor

	      this.jotted.trigger('render', this.frameContent);
	    }
	  }]);
	  return PluginRender;
	}();

	/* scriptless plugin
	 * removes script tags from html content
	 */

	var PluginScriptless = function () {
	  function PluginScriptless(jotted, options) {
	    classCallCheck(this, PluginScriptless);

	    options = extend(options, {});

	    // https://html.spec.whatwg.org/multipage/scripting.html
	    var runScriptTypes = ['application/javascript', 'application/ecmascript', 'application/x-ecmascript', 'application/x-javascript', 'text/ecmascript', 'text/javascript', 'text/javascript1.0', 'text/javascript1.1', 'text/javascript1.2', 'text/javascript1.3', 'text/javascript1.4', 'text/javascript1.5', 'text/jscript', 'text/livescript', 'text/x-ecmascript', 'text/x-javascript'];

	    // remove script tags on each change
	    jotted.on('change', this.change.bind(this));

	    // public
	    this.runScriptTypes = runScriptTypes;
	  }

	  createClass(PluginScriptless, [{
	    key: 'change',
	    value: function change(params, callback) {
	      if (params.type !== 'html') {
	        return callback(null, params);
	      }

	      // for IE9 support, remove the script tags from HTML content.
	      // when we stop supporting IE9, we can use the sandbox attribute.
	      var fragment = document.createElement('div');
	      fragment.innerHTML = params.content;

	      var typeAttr = null;

	      // remove all script tags
	      var $scripts = fragment.querySelectorAll('script');
	      for (var i = 0; i < $scripts.length; i++) {
	        typeAttr = $scripts[i].getAttribute('type');

	        // only remove script tags without the type attribute
	        // or with a javascript mime attribute value.
	        // the ones that are run by the browser.
	        if (!typeAttr || this.runScriptTypes.indexOf(typeAttr) !== -1) {
	          $scripts[i].parentNode.removeChild($scripts[i]);
	        }
	      }

	      params.content = fragment.innerHTML;

	      callback(null, params);
	    }
	  }]);
	  return PluginScriptless;
	}();

	/* ace plugin
	 */

	var PluginAce = function () {
	  function PluginAce(jotted, options) {
	    classCallCheck(this, PluginAce);

	    var priority = 1;
	    var i;

	    this.editor = {};
	    this.jotted = jotted;

	    options = extend(options, {});

	    // check if Ace is loaded
	    if (typeof window.ace === 'undefined') {
	      return;
	    }

	    var $editors = jotted.$container.querySelectorAll('.jotted-editor');

	    for (i = 0; i < $editors.length; i++) {
	      var $textarea = $editors[i].querySelector('textarea');
	      var type = data($textarea, 'jotted-type');
	      var file = data($textarea, 'jotted-file');

	      var $aceContainer = document.createElement('div');
	      $editors[i].appendChild($aceContainer);

	      this.editor[type] = window.ace.edit($aceContainer);
	      var editor = this.editor[type];

	      var editorOptions = extend(options);

	      editor.getSession().setMode('ace/mode/' + getMode(type, file));
	      editor.getSession().setOptions(editorOptions);

	      editor.$blockScrolling = Infinity;
	    }

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginAce, [{
	    key: 'editorChange',
	    value: function editorChange(params) {
	      var _this = this;

	      return function () {
	        _this.jotted.trigger('change', params);
	      };
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      var editor = this.editor[params.type];

	      // if the event is not started by the ace change.
	      // triggered only once per editor,
	      // when the textarea is populated/file is loaded.
	      if (!params.aceEditor) {
	        editor.getSession().setValue(params.content);

	        // attach the event only after the file is loaded
	        params.aceEditor = editor;
	        editor.on('change', this.editorChange(params));
	      }

	      // manipulate the params and pass them on
	      params.content = editor.getValue();
	      callback(null, params);
	    }
	  }]);
	  return PluginAce;
	}();

	/* coremirror plugin
	 */

	var PluginCodeMirror = function () {
	  function PluginCodeMirror(jotted, options) {
	    classCallCheck(this, PluginCodeMirror);

	    var priority = 1;
	    var i;

	    this.editor = {};
	    this.jotted = jotted;

	    // custom modemap for codemirror
	    var modemap = {
	      'html': 'htmlmixed'
	    };

	    options = extend(options, {
	      lineNumbers: true
	    });

	    // check if CodeMirror is loaded
	    if (typeof window.CodeMirror === 'undefined') {
	      return;
	    }

	    var $editors = jotted.$container.querySelectorAll('.jotted-editor');

	    for (i = 0; i < $editors.length; i++) {
	      var $textarea = $editors[i].querySelector('textarea');
	      var type = data($textarea, 'jotted-type');
	      var role = data($textarea, 'jotted-role');
	      var file = data($textarea, 'jotted-file');

	      this.editor[role] = window.CodeMirror.fromTextArea($textarea, options);
	      this.editor[role].setOption('mode', getMode(type, file, modemap));

	      if (role === 'result') {
	        this.editor[role].setOption('readOnly', true);
	      }
	    }

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginCodeMirror, [{
	    key: 'editorChange',
	    value: function editorChange(params) {
	      var _this = this;

	      return function () {
	        // trigger a change event
	        _this.jotted.trigger('change', params);
	      };
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      var editor = this.editor[params.role];

	      // if the event is not started by the codemirror change.
	      // triggered only once per editor,
	      // when the textarea is populated/file is loaded.
	      if (!params.cmEditor) {
	        editor.setValue(params.content);

	        // attach the event only after the file is loaded
	        params.cmEditor = editor;
	        editor.on('change', this.editorChange(params));
	      }

	      // manipulate the params and pass them on
	      params.content = editor.getValue();
	      callback(null, params);
	    }
	  }]);
	  return PluginCodeMirror;
	}();

	/* less plugin
	 */

	var PluginLess = function () {
	  function PluginLess(jotted, options) {
	    classCallCheck(this, PluginLess);

	    var priority = 20;

	    options = extend(options, {});

	    // check if less is loaded
	    if (typeof window.less === 'undefined') {
	      return;
	    }

	    // change CSS link label to Less
	    jotted.$container.querySelector('a[data-jotted-type="css"]').innerHTML = 'Less';

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginLess, [{
	    key: 'isLess',
	    value: function isLess(params) {
	      if (params.type !== 'css') {
	        return false;
	      }

	      return params.file.indexOf('.less') !== -1 || params.file === '';
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse .less and blank files
	      if (this.isLess(params)) {
	        window.less.render(params.content, this.options, function (err, res) {
	          if (err) {
	            return callback(err, params);
	          } else {
	            // replace the content with the parsed less
	            params.content = res.css;
	          }

	          callback(null, params);
	        });
	      } else {
	        // make sure we callback either way,
	        // to not break the pubsoup
	        callback(null, params);
	      }
	    }
	  }]);
	  return PluginLess;
	}();

	/* coffeescript plugin
	 */

	var PluginCoffeeScript = function () {
	  function PluginCoffeeScript(jotted, options) {
	    classCallCheck(this, PluginCoffeeScript);

	    var priority = 20;

	    options = extend(options, {});

	    // check if coffeescript is loaded
	    if (typeof window.CoffeeScript === 'undefined') {
	      return;
	    }

	    // change JS link label to Less
	    jotted.$container.querySelector('a[data-jotted-type="js"]').innerHTML = 'CoffeeScript';

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginCoffeeScript, [{
	    key: 'isCoffee',
	    value: function isCoffee(params) {
	      if (params.type !== 'js') {
	        return false;
	      }

	      return params.file.indexOf('.coffee') !== -1 || params.file === '';
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse .less and blank files
	      if (this.isCoffee(params)) {
	        try {
	          params.content = window.CoffeeScript.compile(params.content);
	        } catch (err) {
	          return callback(err, params);
	        }
	      }

	      callback(null, params);
	    }
	  }]);
	  return PluginCoffeeScript;
	}();

	/* stylus plugin
	 */

	var PluginStylus = function () {
	  function PluginStylus(jotted, options) {
	    classCallCheck(this, PluginStylus);

	    var priority = 20;

	    options = extend(options, {});

	    // check if stylus is loaded
	    if (typeof window.stylus === 'undefined') {
	      return;
	    }

	    // change CSS link label to Stylus
	    jotted.$container.querySelector('a[data-jotted-type="css"]').innerHTML = 'Stylus';

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginStylus, [{
	    key: 'isStylus',
	    value: function isStylus(params) {
	      if (params.type !== 'css') {
	        return false;
	      }

	      return params.file.indexOf('.styl') !== -1 || params.file === '';
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse .styl and blank files
	      if (this.isStylus(params)) {
	        window.stylus(params.content, this.options).render(function (err, res) {
	          if (err) {
	            return callback(err, params);
	          } else {
	            // replace the content with the parsed less
	            params.content = res;
	          }

	          callback(null, params);
	        });
	      } else {
	        // make sure we callback either way,
	        // to not break the pubsoup
	        callback(null, params);
	      }
	    }
	  }]);
	  return PluginStylus;
	}();

	/* babel plugin
	 */

	var PluginBabel = function () {
	  function PluginBabel(jotted, options) {
	    classCallCheck(this, PluginBabel);

	    var priority = 20;

	    this.options = extend(options, {});

	    // check if babel is loaded
	    if (typeof window.Babel !== 'undefined') {
	      // using babel-standalone
	      this.babel = window.Babel;
	    } else if (typeof window.babel !== 'undefined') {
	      // using browser.js from babel-core 5.x
	      this.babel = {
	        transform: window.babel
	      };
	    } else {
	      return;
	    }

	    // change js link label
	    jotted.$container.querySelector('a[data-jotted-type="js"]').innerHTML = 'ES2015';

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginBabel, [{
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse js content
	      if (params.type === 'js') {
	        try {
	          params.content = this.babel.transform(params.content, this.options).code;
	        } catch (err) {
	          return callback(err, params);
	        }

	        callback(null, params);
	      } else {
	        // make sure we callback either way,
	        // to not break the pubsoup
	        callback(null, params);
	      }
	    }
	  }]);
	  return PluginBabel;
	}();

	/* markdown plugin
	 */

	var PluginMarkdown = function () {
	  function PluginMarkdown(jotted, options) {
	    classCallCheck(this, PluginMarkdown);

	    var priority = 20;

	    this.options = extend(options, {});

	    // check if marked is loaded
	    if (typeof window.marked === 'undefined') {
	      return;
	    }

	    window.marked.setOptions(options);

	    // change html link label
	    jotted.$container.querySelector('a[data-jotted-type="html"]').innerHTML = 'Markdown';

	    jotted.on('change', this.change.bind(this), priority);
	  }

	  createClass(PluginMarkdown, [{
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse html content
	      if (params.type === 'html') {
	        try {
	          params.content = window.marked(params.content);
	        } catch (err) {
	          return callback(err, params);
	        }

	        callback(null, params);
	      } else {
	        // make sure we callback either way,
	        // to not break the pubsoup
	        callback(null, params);
	      }
	    }
	  }]);
	  return PluginMarkdown;
	}();

	/* console plugin
	 */

	var PluginConsole = function () {
	  function PluginConsole(jotted, options) {
	    classCallCheck(this, PluginConsole);

	    options = extend(options, {
	      autoClear: false
	    });

	    var priority = 30;
	    var history = [];
	    var historyIndex = 0;
	    var logCaptureSnippet = '(' + this.capture.toString() + ')();';
	    var contentCache = {
	      html: '',
	      css: '',
	      js: ''

	      // new tab and pane markup
	    };var $nav = document.createElement('li');
	    addClass($nav, 'jotted-nav-item jotted-nav-item-console');
	    $nav.innerHTML = '<a href="#" data-jotted-type="console">JS Console</a>';

	    var $pane = document.createElement('div');
	    addClass($pane, 'jotted-pane jotted-pane-console');

	    $pane.innerHTML = '\n      <div class="jotted-console-container">\n        <ul class="jotted-console-output"></ul>\n        <form class="jotted-console-input">\n          <input type="text">\n        </form>\n      </div>\n      <button class="jotted-button jotted-console-clear">Clear</button>\n    ';

	    jotted.$container.appendChild($pane);
	    jotted.$container.querySelector('.jotted-nav').appendChild($nav);

	    var $container = jotted.$container.querySelector('.jotted-console-container');
	    var $output = jotted.$container.querySelector('.jotted-console-output');
	    var $input = jotted.$container.querySelector('.jotted-console-input input');
	    var $inputForm = jotted.$container.querySelector('.jotted-console-input');
	    var $clear = jotted.$container.querySelector('.jotted-console-clear');

	    // submit the input form
	    $inputForm.addEventListener('submit', this.submit.bind(this));

	    // console history
	    $input.addEventListener('keydown', this.history.bind(this));

	    // clear button
	    $clear.addEventListener('click', this.clear.bind(this));

	    // clear the console on each change
	    if (options.autoClear === true) {
	      jotted.on('change', this.autoClear.bind(this), priority - 1);
	    }

	    // capture the console on each change
	    jotted.on('change', this.change.bind(this), priority);

	    // get log events from the iframe
	    window.addEventListener('message', this.getMessage.bind(this));

	    // plugin public properties
	    this.$jottedContainer = jotted.$container;
	    this.$container = $container;
	    this.$input = $input;
	    this.$output = $output;
	    this.history = history;
	    this.historyIndex = historyIndex;
	    this.logCaptureSnippet = logCaptureSnippet;
	    this.contentCache = contentCache;
	    this.getIframe = this.getIframe.bind(this);
	  }

	  createClass(PluginConsole, [{
	    key: 'getIframe',
	    value: function getIframe() {
	      return this.$jottedContainer.querySelector('.jotted-pane-result iframe');
	    }
	  }, {
	    key: 'getMessage',
	    value: function getMessage(e) {
	      // only catch messages from the iframe
	      if (e.source !== this.getIframe().contentWindow) {
	        return;
	      }

	      var data = {};
	      try {
	        data = JSON.parse(e.data);
	      } catch (err) {}

	      if (data.type === 'jotted-console-log') {
	        this.log(data.message);
	      }
	    }
	  }, {
	    key: 'autoClear',
	    value: function autoClear(params, callback) {
	      var snippetlessContent = params.content;

	      // remove the snippet from cached js content
	      if (params.type === 'js') {
	        snippetlessContent = snippetlessContent.replace(this.logCaptureSnippet, '');
	      }

	      // for compatibility with the Play plugin,
	      // clear the console only if something has changed or force rendering.
	      if (params.forceRender === true || this.contentCache[params.type] !== snippetlessContent) {
	        this.clear();
	      }

	      // always cache the latest content
	      this.contentCache[params.type] = snippetlessContent;

	      callback(null, params);
	    }
	  }, {
	    key: 'change',
	    value: function change(params, callback) {
	      // only parse js content
	      if (params.type !== 'js') {
	        // make sure we callback either way,
	        // to not break the pubsoup
	        return callback(null, params);
	      }

	      // check if the snippet is already added.
	      // the Play plugin caches the changed params and triggers change
	      // with the cached response, causing the snippet to be inserted
	      // multiple times, on each trigger.
	      if (params.content.indexOf(this.logCaptureSnippet) === -1) {
	        params.content = '' + this.logCaptureSnippet + params.content;
	      }

	      callback(null, params);
	    }

	    // capture the console.log output

	  }, {
	    key: 'capture',
	    value: function capture() {
	      // IE9 with devtools closed
	      if (typeof window.console === 'undefined' || typeof window.console.log === 'undefined') {
	        window.console = {
	          log: function log() {}
	        };
	      }

	      // for IE9 support
	      var oldConsoleLog = Function.prototype.bind.call(window.console.log, window.console);

	      window.console.log = function () {
	        // send log messages to the parent window
	        [].slice.call(arguments).forEach(function (message) {
	          window.parent.postMessage(JSON.stringify({
	            type: 'jotted-console-log',
	            message: message
	          }), '*');
	        });

	        // in IE9, console.log is object instead of function
	        // https://connect.microsoft.com/IE/feedback/details/585896/console-log-typeof-is-object-instead-of-function
	        oldConsoleLog.apply(oldConsoleLog, arguments);
	      };
	    }
	  }, {
	    key: 'log',
	    value: function log() {
	      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	      var type = arguments[1];

	      var $log = document.createElement('li');
	      addClass($log, 'jotted-console-log');

	      if (typeof type !== 'undefined') {
	        addClass($log, 'jotted-console-log-' + type);
	      }

	      $log.innerHTML = message;

	      this.$output.appendChild($log);
	    }
	  }, {
	    key: 'submit',
	    value: function submit(e) {
	      var inputValue = this.$input.value.trim();

	      // if input is blank, do nothing
	      if (inputValue === '') {
	        return e.preventDefault();
	      }

	      // add run to history
	      this.history.push(inputValue);
	      this.historyIndex = this.history.length;

	      // log input value
	      this.log(inputValue, 'history');

	      // add return if it doesn't start with it
	      if (inputValue.indexOf('return') !== 0) {
	        inputValue = 'return ' + inputValue;
	      }

	      // show output or errors
	      try {
	        // run the console input in the iframe context
	        var scriptOutput = this.getIframe().contentWindow.eval('(function() {' + inputValue + '})()');

	        this.log(scriptOutput);
	      } catch (err) {
	        this.log(err, 'error');
	      }

	      // clear the console value
	      this.$input.value = '';

	      // scroll console pane to bottom
	      // to keep the input into view
	      this.$container.scrollTop = this.$container.scrollHeight;

	      e.preventDefault();
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this.$output.innerHTML = '';
	    }
	  }, {
	    key: 'history',
	    value: function history(e) {
	      var UP = 38;
	      var DOWN = 40;
	      var gotHistory = false;
	      var selectionStart = this.$input.selectionStart;

	      // only if we have previous history
	      // and the cursor is at the start
	      if (e.keyCode === UP && this.historyIndex !== 0 && selectionStart === 0) {
	        this.historyIndex--;
	        gotHistory = true;
	      }

	      // only if we have future history
	      // and the cursor is at the end
	      if (e.keyCode === DOWN && this.historyIndex !== this.history.length - 1 && selectionStart === this.$input.value.length) {
	        this.historyIndex++;
	        gotHistory = true;
	      }

	      // only if history changed
	      if (gotHistory) {
	        this.$input.value = this.history[this.historyIndex];
	      }
	    }
	  }]);
	  return PluginConsole;
	}();

	/* play plugin
	 * adds a Run button
	 */

	var PluginPlay = function () {
	  function PluginPlay(jotted, options) {
	    classCallCheck(this, PluginPlay);

	    options = extend(options, {
	      firstRun: true
	    });

	    var priority = 10;
	    // cached code
	    var cache = {};
	    // latest version of the code.
	    // replaces the cache when the run button is pressed.
	    var code = {};

	    // set firstRun=false to start with a blank preview.
	    // run the real content only after the first Run button press.
	    if (options.firstRun === false) {
	      cache = {
	        html: {
	          type: 'html',
	          content: ''
	        },
	        css: {
	          type: 'css',
	          content: ''
	        },
	        js: {
	          type: 'js',
	          content: ''
	        }
	      };
	    }

	    // run button
	    var $button = document.createElement('button');
	    $button.className = 'jotted-button jotted-button-play';
	    $button.innerHTML = 'Run';

	    jotted.$container.appendChild($button);
	    $button.addEventListener('click', this.run.bind(this));

	    // capture the code on each change
	    jotted.on('change', this.change.bind(this), priority);

	    // public
	    this.cache = cache;
	    this.code = code;
	    this.jotted = jotted;
	  }

	  createClass(PluginPlay, [{
	    key: 'change',
	    value: function change(params, callback) {
	      // always cache the latest code
	      this.code[params.type] = extend(params);

	      // replace the params with the latest cache
	      if (typeof this.cache[params.type] !== 'undefined') {
	        callback(null, this.cache[params.type]);

	        // make sure we don't cache forceRender,
	        // and send it with each change.
	        this.cache[params.type].forceRender = null;
	      } else {
	        // cache the first run
	        this.cache[params.type] = extend(params);

	        callback(null, params);
	      }
	    }
	  }, {
	    key: 'run',
	    value: function run() {
	      // trigger change on each type with the latest code
	      for (var type in this.code) {
	        this.cache[type] = extend(this.code[type], {
	          // force rendering on each Run press
	          forceRender: true
	        });

	        // trigger the change
	        this.jotted.trigger('change', this.cache[type]);
	      }
	    }
	  }]);
	  return PluginPlay;
	}();

	/* pen plugin
	 */
	var PluginPen = function () {
	  function PluginPen(jotted, options) {
	    classCallCheck(this, PluginPen);

	    // available panes
	    var panes = {
	      html: { title: 'HTML', classChecker: 'jotted-has-html' },
	      css: { title: 'CSS', classChecker: 'jotted-has-css' },
	      js: { title: 'JavaScript', classChecker: 'jotted-has-js' },
	      console: { title: 'Console', classChecker: 'jotted-plugin-console' }
	    };

	    var $availablePanes = [];
	    for (var p in panes) {
	      if (jotted.$container.classList.contains(panes[p].classChecker)) {
	        $availablePanes.push(jotted.$container.querySelector('.jotted-pane-' + p));
	      }
	    }

	    this.resizablePanes = [];
	    for (var i = 0; i < $availablePanes.length; i++) {
	      var type = void 0;

	      for (var j = 0; j < $availablePanes[i].classList.length; j++) {
	        if ($availablePanes[i].classList[j].indexOf('jotted-pane-') !== -1) {
	          type = $availablePanes[i].classList[j].replace('jotted-pane-', '');
	          break;
	        }
	      }

	      if (!type) {
	        continue;
	      }

	      var $pane = {
	        container: $availablePanes[i],
	        expander: undefined
	      };

	      this.resizablePanes.push($pane);

	      var $paneTitle = document.createElement('div');
	      $paneTitle.classList.add('jotted-pane-title');
	      $paneTitle.innerHTML = panes[type].title || type;

	      var $paneElement = $availablePanes[i].firstElementChild;
	      $paneElement.insertBefore($paneTitle, $paneElement.firstChild);

	      // insert expander element.
	      // only panes which have an expander can be shrunk or expanded
	      // first pane must not have a expander
	      if (i > 0) {
	        $pane.expander = document.createElement('div');
	        $pane.expander.classList.add('jotted-plugin-pen-expander');
	        $pane.expander.addEventListener('mousedown', this.startExpand.bind(this, jotted));

	        $paneElement.insertBefore($pane.expander, $paneTitle);
	      }
	    }
	  }

	  createClass(PluginPen, [{
	    key: 'startExpand',
	    value: function startExpand(jotted, event) {
	      var $pane = this.resizablePanes.filter(function (pane) {
	        return pane.expander === event.target;
	      }).shift();

	      var $previousPane = this.resizablePanes[this.resizablePanes.indexOf($pane) - 1];

	      var $relativePixel = 100 / parseInt(window.getComputedStyle($pane.container.parentNode)['width'], 10);

	      // ugly but reliable & cross-browser way of getting height/width as percentage.
	      $pane.container.parentNode.style.display = 'none';

	      $pane.startX = event.clientX;
	      $pane.startWidth = parseFloat(window.getComputedStyle($pane.container)['width'], 10);
	      $previousPane.startWidth = parseFloat(window.getComputedStyle($previousPane.container)['width'], 10);

	      $pane.container.parentNode.style.display = '';

	      $pane.mousemove = this.doDrag.bind(this, $pane, $previousPane, $relativePixel);
	      $pane.mouseup = this.stopDrag.bind(this, $pane);

	      document.addEventListener('mousemove', $pane.mousemove, false);
	      document.addEventListener('mouseup', $pane.mouseup, false);
	    }
	  }, {
	    key: 'doDrag',
	    value: function doDrag(pane, previousPane, relativePixel, event) {
	      // previous pane new width
	      var ppNewWidth = previousPane.startWidth + (event.clientX - pane.startX) * relativePixel;

	      // current pane new width
	      var cpNewWidth = pane.startWidth - (event.clientX - pane.startX) * relativePixel;

	      // contracting a pane is restricted to a min-size of 10% the container's space.
	      var PANE_MIN_SIZE = 10; // percentage %
	      if (ppNewWidth >= PANE_MIN_SIZE && cpNewWidth >= PANE_MIN_SIZE) {
	        pane.container.style.maxWidth = 'none';
	        previousPane.container.style.maxWidth = 'none';

	        previousPane.container.style.width = ppNewWidth + '%';
	        pane.container.style.width = cpNewWidth + '%';
	      }
	    }
	  }, {
	    key: 'stopDrag',
	    value: function stopDrag(pane, event) {
	      document.removeEventListener('mousemove', pane.mousemove, false);
	      document.removeEventListener('mouseup', pane.mouseup, false);
	    }
	  }]);
	  return PluginPen;
	}();

	/* bundle plugins
	 */

	function BundlePlugins(jotted) {
	  jotted.plugin('render', PluginRender);
	  jotted.plugin('scriptless', PluginScriptless);

	  jotted.plugin('ace', PluginAce);
	  jotted.plugin('codemirror', PluginCodeMirror);
	  jotted.plugin('less', PluginLess);
	  jotted.plugin('coffeescript', PluginCoffeeScript);
	  jotted.plugin('stylus', PluginStylus);
	  jotted.plugin('babel', PluginBabel);
	  jotted.plugin('markdown', PluginMarkdown);
	  jotted.plugin('console', PluginConsole);
	  jotted.plugin('play', PluginPlay);
	  jotted.plugin('pen', PluginPen);
	}

	/* jotted
	 */

	var Jotted = function () {
	  function Jotted($jottedContainer, opts) {
	    var _this = this;

	    classCallCheck(this, Jotted);

	    if (!$jottedContainer) {
	      throw new Error('Can\'t find Jotted container.');
	    }

	    console.log(new adaptivecardsTemplating.Template({}));
	    console.log(new adaptivecards.AdaptiveCard());

	    // private data
	    var _private = {};
	    this._get = function (key) {
	      return _private[key];
	    };
	    this._set = function (key, value) {
	      _private[key] = value;
	      return _private[key];
	    };

	    // options
	    var options = this._set('options', extend(opts, {
	      files: [],
	      showBlank: false,
	      runScripts: true,
	      pane: 'result',
	      debounce: 250,
	      plugins: []
	    }));

	    // the render plugin is mandatory
	    options.plugins.push('render');

	    // use the scriptless plugin if runScripts is false
	    if (options.runScripts === false) {
	      options.plugins.push('scriptless');
	    }

	    // get array of types from the input options and create one pane for each
	    var selectedTypes = [];
	    options.files.forEach(function (file) {
	      selectedTypes.push(file.type);
	    });

	    // based on input (arr[0]) and template (arr[1]) types, calculate result type
	    // json + json = json (or adaptive card)
	    // json + liquid = json (or adaptive card)
	    // markdown + MSON = html
	    this._set('resultType', 'json');

	    // cached content for the change method.
	    this._set('cachedContent', {
	      input: null,
	      template: null
	    });

	    // PubSoup
	    var pubsoup = this._set('pubsoup', new PubSoup());

	    this._set('trigger', this.trigger());
	    this._set('on', function () {
	      pubsoup.subscribe.apply(pubsoup, arguments);
	    });
	    this._set('off', function () {
	      pubsoup.unsubscribe.apply(pubsoup, arguments);
	    });
	    var done = this._set('done', function () {
	      pubsoup.done.apply(pubsoup, arguments);
	    });

	    // after all plugins run
	    // show errors
	    done('change', this.errors.bind(this));

	    // DOM
	    var $container = this._set('$container', $jottedContainer);
	    $container.innerHTML = container(selectedTypes[0], selectedTypes[1], this._get('resultType'));
	    addClass($container, containerClass());

	    // default pane
	    var paneActive = this._set('paneActive', options.pane);
	    addClass($container, paneActiveClass(paneActive));

	    // status nodes
	    this._set('$status', {});

	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	      for (var _iterator = selectedTypes.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var _step$value = slicedToArray(_step.value, 2),
	            index = _step$value[0],
	            _type = _step$value[1];

	        this.markup(index, _type);
	      }

	      // textarea change events.
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }

	    $container.addEventListener('keyup', debounce(this.change.bind(this), options.debounce));
	    $container.addEventListener('change', debounce(this.change.bind(this), options.debounce));

	    // pane change
	    $container.addEventListener('click', this.pane.bind(this));

	    // expose public properties
	    this.$container = this._get('$container');
	    this.on = this._get('on');
	    this.off = this._get('off');
	    this.done = this._get('done');
	    this.trigger = this._get('trigger');
	    this.paneActive = this._get('paneActive');

	    // init plugins
	    this.plugins = this._set('plugins', {});
	    init.call(this);

	    // load files
	    var _iteratorNormalCompletion2 = true;
	    var _didIteratorError2 = false;
	    var _iteratorError2 = undefined;

	    try {
	      for (var _iterator2 = selectedTypes.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	        var _step2$value = slicedToArray(_step2.value, 2),
	            index = _step2$value[0],
	            _type2 = _step2$value[1];

	        this.load(index, _type2);
	      }

	      // show all tabs, even if empty
	    } catch (err) {
	      _didIteratorError2 = true;
	      _iteratorError2 = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion2 && _iterator2.return) {
	          _iterator2.return();
	        }
	      } finally {
	        if (_didIteratorError2) {
	          throw _iteratorError2;
	        }
	      }
	    }

	    if (options.showBlank) {
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;

	      try {
	        for (var _iterator3 = selectedTypes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var type = _step3.value;

	          addClass($container, hasFileClass(type));
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }

	    this.on('change', function (params, callback) {
	      _this._get('cachedContent')[params.role] = params.content;

	      callback(null, params);
	    }, 10);
	  }

	  createClass(Jotted, [{
	    key: 'findFile',
	    value: function findFile(index, type) {
	      var file = {};
	      var options = this._get('options');

	      for (var fileIndex in options.files) {
	        var _file = options.files[fileIndex];
	        if (_file.type === type && parseInt(fileIndex) === index) {
	          return _file;
	        }
	      }

	      return file;
	    }
	  }, {
	    key: 'markup',
	    value: function markup(index, type) {
	      var $container = this._get('$container');
	      var $parent = $container.querySelectorAll('.jotted-pane[data-jotted-type=' + type + ']')[index];
	      // create the markup for an editor
	      var file = this.findFile(index, type);

	      var $editor = document.createElement('div');
	      $editor.innerHTML = editorContent(type, file.role, file.url);
	      $editor.className = editorClass(type);

	      $parent.appendChild($editor);

	      // get the status node
	      this._get('$status')[type] = $parent.querySelector('.jotted-status');

	      // if we have a file for the current type
	      if (typeof file.url !== 'undefined' || typeof file.content !== 'undefined') {
	        // add the has-type class to the container
	        addClass($container, hasFileClass(type));
	      }
	    }
	  }, {
	    key: 'load',
	    value: function load(index, type) {
	      var _this2 = this;

	      // create the markup for an editor
	      var file = this.findFile(index, type);
	      var $textarea = this._get('$container').querySelectorAll('.jotted-pane[data-jotted-type=' + type + ']')[index].querySelector('textarea');

	      // file as string
	      if (typeof file.content !== 'undefined') {
	        this.setValue($textarea, file.content);
	      } else if (typeof file.url !== 'undefined') {
	        // show loading message
	        this.status('loading', [statusLoading(file.url)], {
	          type: type,
	          file: file
	        });

	        // file as url
	        fetch(file.url, function (err, res) {
	          if (err) {
	            // show load errors
	            _this2.status('error', [statusFetchError(err)], {
	              type: type
	            });

	            return;
	          }

	          // clear the loading status
	          _this2.clearStatus('loading', {
	            type: type
	          });

	          _this2.setValue($textarea, res);
	        });
	      } else {
	        // trigger a change event on blank editors,
	        // for editor plugins to catch.
	        // (eg. the codemirror and ace plugins attach the change event
	        // only after the initial change/load event)
	        this.setValue($textarea, '');
	      }
	    }
	  }, {
	    key: 'setValue',
	    value: function setValue($textarea, val) {
	      $textarea.value = val;

	      // trigger change event, for initial render
	      this.change({
	        target: $textarea
	      });
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue(role) {
	      return this._get('cachedContent')[role];
	    }
	  }, {
	    key: 'change',
	    value: function change(e) {
	      var role = data(e.target, 'jotted-role');
	      var type = data(e.target, 'jotted-type');

	      if (!role) {
	        return;
	      }

	      // don't trigger change if the content hasn't changed.
	      // eg. when blurring the textarea.
	      var cachedContent = this._get('cachedContent');
	      if (cachedContent[role] === e.target.value) {
	        return;
	      }

	      // cache latest content
	      cachedContent[role] = e.target.value;

	      // trigger the change event
	      this.trigger('change', {
	        type: type,
	        role: role,
	        file: data(e.target, 'jotted-file'),
	        content: cachedContent[role]
	      });
	    }
	  }, {
	    key: 'errors',
	    value: function errors(errs, params) {
	      this.status('error', errs, params);
	    }
	  }, {
	    key: 'pane',
	    value: function pane(e) {
	      if (!data(e.target, 'jotted-role')) {
	        return;
	      }

	      var $container = this._get('$container');
	      var paneActive = this._get('paneActive');
	      removeClass($container, paneActiveClass(paneActive));

	      paneActive = this._set('paneActive', data(e.target, 'jotted-role'));
	      addClass($container, paneActiveClass(paneActive));

	      e.preventDefault();
	    }
	  }, {
	    key: 'status',
	    value: function status() {
	      var statusType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'error';
	      var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	      if (!messages.length) {
	        return this.clearStatus(statusType, params);
	      }

	      var $status = this._get('$status');

	      // add error/loading class to status
	      addClass($status[params.type], statusClass(statusType));

	      addClass(this._get('$container'), statusActiveClass(params.type));

	      var markup = '';
	      messages.forEach(function (err) {
	        markup += statusMessage(err);
	      });

	      $status[params.type].innerHTML = markup;
	    }
	  }, {
	    key: 'clearStatus',
	    value: function clearStatus(statusType, params) {
	      var $status = this._get('$status');

	      removeClass($status[params.type], statusClass(statusType));
	      removeClass(this._get('$container'), statusActiveClass(params.type));
	      $status[params.type].innerHTML = '';
	    }

	    // debounced trigger method
	    // custom debouncer to use a different timer per type

	  }, {
	    key: 'trigger',
	    value: function trigger() {
	      var options = this._get('options');
	      var pubsoup = this._get('pubsoup');

	      // allow disabling the trigger debouncer.
	      // mostly for testing: when trigger events happen rapidly
	      // multiple events of the same type would be caught once.
	      if (options.debounce === false) {
	        return function () {
	          pubsoup.publish.apply(pubsoup, arguments);
	        };
	      }

	      // cooldown timer
	      var cooldown = {};
	      // multiple calls
	      var multiple = {};

	      return function (topic) {
	        var _arguments = arguments;

	        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	            _ref$type = _ref.type,
	            type = _ref$type === undefined ? 'default' : _ref$type;

	        if (cooldown[type]) {
	          // if we had multiple calls before the cooldown
	          multiple[type] = true;
	        } else {
	          // trigger immediately once cooldown is over
	          pubsoup.publish.apply(pubsoup, arguments);
	        }

	        clearTimeout(cooldown[type]);

	        // set cooldown timer
	        cooldown[type] = setTimeout(function () {
	          // if we had multiple calls before the cooldown,
	          // trigger the function again at the end.
	          if (multiple[type]) {
	            pubsoup.publish.apply(pubsoup, _arguments);
	          }

	          multiple[type] = null;
	          cooldown[type] = null;
	        }, options.debounce);
	      };
	    }
	  }]);
	  return Jotted;
	}();

	// register plugins


	Jotted.plugin = function () {
	  return register.apply(this, arguments);
	};
	BundlePlugins(Jotted);

	return Jotted;

})));
